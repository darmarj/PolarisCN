{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"\u9996\u9875"},{"location":"ConfigManage/ConfigMap/","text":"\u53ef\u53d8\u914d\u7f6e\u7ba1\u7406 - ConfigMap \u00b6 \u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5355\u7eaf\u4f9d\u9760\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd8\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u65e5\u5e38\u9700\u6c42\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u9700\u6c42\u5c31\u662f\u5e94\u7528\u7684\u914d\u7f6e\u7ba1\u7406\u3001\u654f\u611f\u4fe1\u606f\u7684\u5b58\u50a8\u548c\u4f7f\u7528\uff08\u5982\uff1a\u5bc6\u7801\u3001Token \u7b49\uff09\u3001\u5bb9\u5668\u8fd0\u884c\u8d44\u6e90\u7684\u914d\u7f6e\u3001\u5b89\u5168\u7ba1\u63a7\u3001\u8eab\u4efd\u8ba4\u8bc1\u7b49\u7b49\u3002 \u5bf9\u4e8e\u5e94\u7528\u7684\u53ef\u53d8\u914d\u7f6e\u5728 Kubernetes \u4e2d\u662f\u901a\u8fc7\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684 \uff0c\u6211\u4eec\u77e5\u9053\u8bb8\u591a\u5e94\u7528\u7ecf\u5e38\u4f1a\u6709\u4ece\u914d\u7f6e\u6587\u4ef6\u3001\u547d\u4ee4\u884c\u53c2\u6570\u6216\u8005\u73af\u5883\u53d8\u91cf\u4e2d\u8bfb\u53d6\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u76f4\u63a5\u5199\u6b7b\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53bb\u7684\uff0c\u6bd4\u5982\u4f60\u6709\u4e00\u4e2a\u5e94\u7528\u8fde\u63a5\u4e00\u4e2a redis \u670d\u52a1\uff0c\u4e0b\u4e00\u6b21\u60f3\u66f4\u6362\u4e00\u4e2a\uff0c\u8fd8\u5f97\u91cd\u65b0\u53bb\u4fee\u6539\u4ee3\u7801\uff0c\u91cd\u65b0\u5236\u4f5c\u4e00\u4e2a\u955c\u50cf\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u53ef\u53d6\u7684\u3002 \u800c ConfigMap \u5c31\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5411\u5bb9\u5668\u4e2d\u6ce8\u5165\u914d\u7f6e\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u5355\u4e2a\u5c5e\u6027\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6 \u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u7528\u6765\u914d\u7f6e\u4e00\u4e2a redis \u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u6574\u4e2a redis \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e86\u89e3\u4e0b ConfigMap \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u521b\u5efa \u00b6 ConfigMap \u8d44\u6e90\u5bf9\u8c61\u4f7f\u7528 key-value \u5f62\u5f0f\u7684\u952e\u503c\u5bf9\u6765\u914d\u7f6e\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u5728 Pod \u91cc\u9762\u4f7f\u7528\uff0c\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a kind : ConfigMap apiVersion : v1 metadata : name : cm-demo namespace : default data : data.1 : hello data.2 : world config : | property.1=value-1 property.2=value-2 property.3=value-3 \u5176\u4e2d\u914d\u7f6e\u6570\u636e\u5728 data \u5c5e\u6027\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u524d\u4e24\u4e2a\u88ab\u7528\u6765\u4fdd\u5b58\u5355\u4e2a\u5c5e\u6027\uff0c\u540e\u9762\u4e00\u4e2a\u88ab\u7528\u6765\u4fdd\u5b58\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 config \u540e\u9762\u6709\u4e00\u4e2a\u7ad6\u7ebf\u7b26\u201c|\u201d\uff0c\u8fd9\u5728 yaml \u4e2d\u8868\u793a\u4fdd\u7559\u6362\u884c\uff0c\u6bcf\u884c\u7684\u7f29\u8fdb\u548c\u884c\u5c3e\u7a7a\u767d\u90fd\u4f1a\u88ab\u53bb\u6389\uff0c\u800c\u989d\u5916\u7684\u7f29\u8fdb\u4f1a\u88ab\u4fdd\u7559\u3002 li nes : | \u6211\u662f\u7b2c\u4e00\u884c \u6211\u662f\u7b2c\u4e8c\u884c \u6211\u662f\u5434\u5f66\u7956 \u6211\u662f\u7b2c\u56db\u884c \u6211\u662f\u7b2c\u4e94\u884c # JSON { \"lines\" : \"\u6211\u662f\u7b2c\u4e00\u884c\\n\u6211\u662f\u7b2c\u4e8c\u884c\\n \u6211\u662f\u5434\u5f66\u7956\\n \u6211\u662f\u7b2c\u56db\u884c\\n\u6211\u662f\u7b2c\u4e94\u884c\" } \u9664\u4e86\u7ad6\u7ebf\u4e4b\u5916\u8fd8\u53ef\u4ee5\u4f7f\u7528 > \u53f3\u5c16\u62ec\u53f7\uff0c\u7528\u6765\u8868\u793a\u6298\u53e0\u6362\u884c\uff0c\u53ea\u6709**\u7a7a\u767d\u884c\u624d\u4f1a\u88ab\u8bc6\u522b\u4e3a\u6362\u884c**\uff0c\u539f\u6765\u7684\u6362\u884c\u7b26\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210\u7a7a\u683c\u3002 li nes : > \u6211\u662f\u7b2c\u4e00\u884c \u6211\u4e5f\u662f\u7b2c\u4e00\u884c \u6211\u4ecd\u662f\u7b2c\u4e00\u884c \u6211\u4f9d\u65e7\u662f\u7b2c\u4e00\u884c \u6211\u662f\u7b2c\u4e8c\u884c \u8fd9\u4e48\u5de7\u6211\u4e5f\u662f\u7b2c\u4e8c\u884c # JSON { \"lines\" : \"\u6211\u662f\u7b2c\u4e00\u884c \u6211\u4e5f\u662f\u7b2c\u4e00\u884c \u6211\u4ecd\u662f\u7b2c\u4e00\u884c \u6211\u4f9d\u65e7\u662f\u7b2c\u4e00\u884c\\n\u6211\u662f\u7b2c\u4e8c\u884c \u8fd9\u4e48\u5de7\u6211\u4e5f\u662f\u7b2c\u4e8c\u884c\" } \u9664\u4e86\u8fd9\u4e24\u4e2a\u6307\u4ee4\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ad6\u7ebf\u548c\u52a0\u53f7\u6216\u8005\u51cf\u53f7\u8fdb\u884c\u914d\u5408\u4f7f\u7528\uff0c\u201c+\u201d \u8868\u793a\u4fdd\u7559\u6587\u5b57\u5757\u672b\u5c3e\u7684\u6362\u884c\uff0c\u201c-\u201d \u8868\u793a\u5220\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u6362\u884c\u3002 value : | hello # { \"value\" : \"hello\\n\" } value : | - hello # { \"value\" : \"hello\" } value : |+ hello # { \"value\" : \"hello\\n\\n\" } (\u6709\u591a\u5c11\u4e2a\u56de\u8f66\u5c31\u6709\u591a\u5c11\u4e2a\\ n ) \u5f53\u7136\u540c\u6837\u7684\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl create -f xx.yaml \u6765\u521b\u5efa\u4e0a\u9762\u7684 ConfigMap \u5bf9\u8c61\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u521b\u5efa ConfigMap \u7684\u8bdd\uff0c\u4e0d\u8981\u5fd8\u8bb0 kubectl \u662f\u6211\u4eec\u6700\u597d\u7684\u5e2e\u624b\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl create configmap -h \u6765\u67e5\u770b\u5173\u4e8e\u521b\u5efa ConfigMap \u7684\u5e2e\u52a9\u4fe1\u606f\uff1a Examples: # Create a new configmap named my-config based on folder bar kubectl create configmap my-config --from-file = path/to/bar # Create a new configmap named my-config with specified keys instead of file basenames on disk kubectl create configmap my-config --from-file = key1 = /path/to/bar/file1.txt --from-file = key2 = /path/to/bar/file2.txt # Create a new configmap named my-config with key1=config1 and key2=config2 kubectl create configmap my-config --from-literal = key1 = config1 --from-literal = key2 = config2 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684\u76ee\u5f55\u6765\u521b\u5efa\u4e00\u4e2a ConfigMap \u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a testcm \u7684\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u5305\u542b\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0credis \u548c mysql \u7684\u8fde\u63a5\u4fe1\u606f\uff0c\u5982\u4e0b\uff1a \u279c ~ ls testcm redis.conf mysql.conf \u279c ~ cat testcm/redis.conf host = 127 .0.0.1 port = 6379 \u279c ~ cat testcm/mysql.conf host = 127 .0.0.1 port = 3306 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 from-file \u5173\u952e\u5b57\u6765\u521b\u5efa\u5305\u542b\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u6240\u6709 \u914d\u7f6e\u6587\u4ef6\u7684 ConfigMap\uff1a \u279c ~ kubectl create configmap cm-demo1 --from-file = testcm configmap \"cm-demo1\" created \u5176\u4e2d from-file \u53c2\u6570\u6307\u5b9a\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u7528\u5728 ConfigMap \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u952e\u7684\u540d\u5b57\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u503c\u5c31\u662f\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u67e5\u770b ConfigMap \u5217\u8868\uff1a \u279c ~ kubectl get configmap NAME DATA AGE cm-demo1 2 17s \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a cm-demo1 \u7684 ConfigMap \u5bf9\u8c61\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 describe \u547d\u4ee4\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe configmap cm-demo1 Name : cm-demo1 Namespace : default Labels : <none> Annotations : <none> Data ==== mysql.conf : ---- host=127.0.0.1 port=3306 redis.conf : ---- host=127.0.0.1 port=6379 Events : <none> \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a key \u662f testcm \u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5bf9\u5e94\u7684 value \u503c\u5c31\u662f\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5982\u679c\u6587\u4ef6\u91cc\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u5f88\u5927\u7684\u8bdd\uff0cdescribe \u7684\u65f6\u5019\u53ef\u80fd\u4e0d\u4f1a\u663e\u793a\u5bf9\u5e94\u7684\u503c\uff0c\u8981\u67e5\u770b\u5b8c\u6574\u7684\u952e\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a \u279c ~ kubectl get configmap cm-demo1 -o yaml apiVersion : v1 data : mysql.conf : | host=127.0.0.1 port=3306 redis.conf : | host=127.0.0.1 port=6379 kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:24:36Z name : cm-demo1 namespace : default resourceVersion : \"3109975\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo1 uid : 6e0f4d82-6fef-11e8-a101-525400db4df7 \u9664\u4e86\u901a\u8fc7\u6587\u4ef6\u76ee\u5f55\u8fdb\u884c\u521b\u5efa\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u8fdb\u884c\u521b\u5efa ConfigMap\uff0c\u540c\u6837\u7684\uff0c\u4ee5\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u4e3a\u4f8b\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a redis \u7684\u914d\u7f6e\u7684\u4e00\u4e2a\u5355\u72ec ConfigMap \u5bf9\u8c61\uff1a \u279c ~ kubectl create configmap cm-demo2 --from-file=testcm/redis.conf configmap \"cm-demo2\" created \u279c ~ kubectl get configmap cm-demo2 -o yaml apiVersion : v1 data : redis.conf : | host=127.0.0.1 port=6379 kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:34:29Z name : cm-demo2 namespace : default resourceVersion : \"3110758\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo2 uid : cf59675d-6ff0-11e8-a101-525400db4df7 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5173\u8054 redis.conf \u6587\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684 ConfigMap \u5bf9\u8c61\u521b\u5efa\u6210\u529f\u4e86\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f --from-file \u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e24\u6b21\u5206\u522b\u6307\u5b9a redis.conf \u548c mysql.conf \u6587\u4ef6\uff0c\u5c31\u548c\u76f4\u63a5\u6307\u5b9a\u6574\u4e2a\u76ee\u5f55\u662f\u4e00\u6837\u7684\u6548\u679c\u4e86\u3002 \u53e6\u5916\uff0c\u901a\u8fc7\u5e2e\u52a9\u6587\u6863\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fdb\u884c\u521b\u5efa\uff0c\u901a\u8fc7 --from-literal \u53c2\u6570\u4f20\u9012\u914d\u7f6e\u4fe1\u606f\u3002\u540c\u6837, \u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a \u279c ~ kubectl create configmap cm-demo3 --from-literal=db.host=localhost --from-literal=db.port=3306 configmap \"cm-demo3\" created \u279c ~ kubectl get configmap cm-demo3 -o yaml apiVersion : v1 data : db.host : localhost db.port : \"3306\" kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:43:12Z name : cm-demo3 namespace : default resourceVersion : \"3111447\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo3 uid : 06eeec7e-6ff2-11e8-a101-525400db4df7 \u4f7f\u7528 \u00b6 ConfigMap \u521b\u5efa\u6210\u529f\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u5728 Pod \u4e2d\u6765\u4f7f\u7528\u5462\uff1f\u6211\u4eec\u8bf4 ConfigMap \u8fd9\u4e9b\u914d\u7f6e\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u5f88\u591a\u79cd\u65b9\u5f0f\u5728 Pod \u91cc\u4f7f\u7528\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u503c \u5728\u5bb9\u5668\u91cc\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570 \u5728\u6570\u636e\u5377\u91cc\u9762\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6 \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528 ConfigMap \u6765\u586b\u5145\u6211\u4eec\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\u7684 Pod \u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : v1 kind : Pod metadata : name : testcm1-pod spec : containers : - name : testcm1 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : DB_HOST valueFrom : configMapKeyRef : name : cm-demo3 key : db.host - name : DB_PORT valueFrom : configMapKeyRef : name : cm-demo3 key : db.port envFrom : - configMapRef : name : cm-demo1 \u8fd9\u4e2a Pod \u8fd0\u884c\u540e\u4f1a\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u7684\u4fe1\u606f\uff1a \u279c ~ kubectl logs testcm1-pod ...... DB_HOST = localhost DB_PORT = 3306 mysql.conf = host = 127 .0.0.1 port = 3306 redis.conf = host = 127 .0.0.1 port = 6379 ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 DB_HOST \u548c DB_PORT \u90fd\u5df2\u7ecf\u6b63\u5e38\u8f93\u51fa\u4e86\uff0c\u53e6\u5916\u7684\u73af\u5883\u53d8\u91cf\u662f\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u628a cm-demo1 \u7ed9\u6ce8\u5165\u8fdb\u6765\u4e86\uff0c\u6240\u4ee5\u628a\u4ed6\u4eec\u7684\u6574\u4e2a\u952e\u503c\u7ed9\u8f93\u51fa\u51fa\u6765\u4e86\uff0c\u8fd9\u4e5f\u662f\u7b26\u5408\u9884\u671f\u7684\u3002 \u53e6\u5916\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ConfigMap\u6765\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570\uff0cConfigMap \u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u547d\u4ee4\u6216\u8005\u53c2\u6570\u503c\uff0c\u5982\u4e0b Pod: apiVersion : v1 kind : Pod metadata : name : testcm2-pod spec : containers : - name : testcm2 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"echo $(DB_HOST) $(DB_PORT)\" ] env : - name : DB_HOST valueFrom : configMapKeyRef : name : cm-demo3 key : db.host - name : DB_PORT valueFrom : configMapKeyRef : name : cm-demo3 key : db.port \u8fd0\u884c\u8fd9\u4e2a Pod \u540e\u4f1a\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a \u279c ~ kubectl logs testcm2-pod localhost 3306 \u53e6\u5916\u4e00\u79cd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u4f7f\u7528 ConfigMap \u7684\u65b9\u5f0f\uff1a\u901a\u8fc7\u6570\u636e\u5377\u4f7f\u7528\uff0c\u5728\u6570\u636e\u5377\u91cc\u9762\u4f7f\u7528 ConfigMap\uff0c\u5c31\u662f\u5c06\u6587\u4ef6\u586b\u5165\u6570\u636e\u5377\uff0c\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u952e\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u952e\u503c\u5c31\u662f\u6587\u4ef6\u5185\u5bb9\uff0c\u5982\u4e0b\u8d44\u6e90\u5bf9\u8c61\u6240\u793a apiVersion : v1 kind : Pod metadata : name : testcm3-pod spec : volumes : - name : config-volume configMap : name : cm-demo2 containers : - name : testcm3 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"cat /etc/config/redis.conf\" ] volumeMounts : - name : config-volume mountPath : /etc/config \u8fd0\u884c\u8fd9\u4e2a Pod \u7684\uff0c\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs testcm3-pod host = 127 .0.0.1 port = 6379 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 ConfigMap \u503c\u88ab\u6620\u5c04\u7684\u6570\u636e\u5377\u91cc\u53bb\u63a7\u5236\u8def\u5f84\uff0c\u5982\u4e0b Pod \u5b9a\u4e49\uff1a apiVersion : v1 kind : Pod metadata : name : testcm4-pod spec : volumes : - name : config-volume configMap : name : cm-demo1 items : - key : mysql.conf path : path/to/msyql.conf containers : - name : testcm4 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"cat /etc/config/path/to/msyql.conf\" ] volumeMounts : - name : config-volume mountPath : /etc/config \u8fd0\u884c\u8fd9\u4e2aPod\u7684\uff0c\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs testcm4-pod host = 127 .0.0.1 port = 3306 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53 ConfigMap \u4ee5\u6570\u636e\u5377\u7684\u5f62\u5f0f\u6302\u8f7d\u8fdb Pod \u7684\u65f6\uff0c\u8fd9\u65f6\u66f4\u65b0 ConfigMap\uff08\u6216\u5220\u6389\u91cd\u5efaConfigMap\uff09\uff0cPod \u5185\u6302\u8f7d\u7684\u914d\u7f6e\u4fe1\u606f\u4f1a\u70ed\u66f4\u65b0\u3002\u8fd9\u65f6\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u76d1\u6d4b\u914d\u7f6e\u6587\u4ef6\u53d8\u66f4\u7684\u811a\u672c\uff0c\u7136\u540e\u91cd\u52a0\u8f7d\u5bf9\u5e94\u670d\u52a1\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e94\u7528\u7684\u70ed\u66f4\u65b0\u3002 Warning \u53ea\u6709\u901a\u8fc7 Kubernetes API \u521b\u5efa\u7684 Pod \u624d\u80fd\u4f7f\u7528 ConfigMap\uff0c\u5176\u4ed6\u65b9\u5f0f\u521b\u5efa\u7684\uff08\u6bd4\u5982\u9759\u6001 Pod\uff09\u4e0d\u80fd\u4f7f\u7528\uff1bConfigMap \u6587\u4ef6\u5927\u5c0f\u9650\u5236\u4e3a 1MB\uff08ETCD \u7684\u8981\u6c42\uff09\u3002","title":"ConfigMap"},{"location":"ConfigManage/ConfigMap/#-configmap","text":"\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5355\u7eaf\u4f9d\u9760\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd8\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u65e5\u5e38\u9700\u6c42\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u9700\u6c42\u5c31\u662f\u5e94\u7528\u7684\u914d\u7f6e\u7ba1\u7406\u3001\u654f\u611f\u4fe1\u606f\u7684\u5b58\u50a8\u548c\u4f7f\u7528\uff08\u5982\uff1a\u5bc6\u7801\u3001Token \u7b49\uff09\u3001\u5bb9\u5668\u8fd0\u884c\u8d44\u6e90\u7684\u914d\u7f6e\u3001\u5b89\u5168\u7ba1\u63a7\u3001\u8eab\u4efd\u8ba4\u8bc1\u7b49\u7b49\u3002 \u5bf9\u4e8e\u5e94\u7528\u7684\u53ef\u53d8\u914d\u7f6e\u5728 Kubernetes \u4e2d\u662f\u901a\u8fc7\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684 \uff0c\u6211\u4eec\u77e5\u9053\u8bb8\u591a\u5e94\u7528\u7ecf\u5e38\u4f1a\u6709\u4ece\u914d\u7f6e\u6587\u4ef6\u3001\u547d\u4ee4\u884c\u53c2\u6570\u6216\u8005\u73af\u5883\u53d8\u91cf\u4e2d\u8bfb\u53d6\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u76f4\u63a5\u5199\u6b7b\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53bb\u7684\uff0c\u6bd4\u5982\u4f60\u6709\u4e00\u4e2a\u5e94\u7528\u8fde\u63a5\u4e00\u4e2a redis \u670d\u52a1\uff0c\u4e0b\u4e00\u6b21\u60f3\u66f4\u6362\u4e00\u4e2a\uff0c\u8fd8\u5f97\u91cd\u65b0\u53bb\u4fee\u6539\u4ee3\u7801\uff0c\u91cd\u65b0\u5236\u4f5c\u4e00\u4e2a\u955c\u50cf\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u53ef\u53d6\u7684\u3002 \u800c ConfigMap \u5c31\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5411\u5bb9\u5668\u4e2d\u6ce8\u5165\u914d\u7f6e\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u5355\u4e2a\u5c5e\u6027\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6 \u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u7528\u6765\u914d\u7f6e\u4e00\u4e2a redis \u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u6574\u4e2a redis \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e86\u89e3\u4e0b ConfigMap \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"\u53ef\u53d8\u914d\u7f6e\u7ba1\u7406 - ConfigMap"},{"location":"ConfigManage/ConfigMap/#_1","text":"ConfigMap \u8d44\u6e90\u5bf9\u8c61\u4f7f\u7528 key-value \u5f62\u5f0f\u7684\u952e\u503c\u5bf9\u6765\u914d\u7f6e\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u5728 Pod \u91cc\u9762\u4f7f\u7528\uff0c\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a kind : ConfigMap apiVersion : v1 metadata : name : cm-demo namespace : default data : data.1 : hello data.2 : world config : | property.1=value-1 property.2=value-2 property.3=value-3 \u5176\u4e2d\u914d\u7f6e\u6570\u636e\u5728 data \u5c5e\u6027\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u524d\u4e24\u4e2a\u88ab\u7528\u6765\u4fdd\u5b58\u5355\u4e2a\u5c5e\u6027\uff0c\u540e\u9762\u4e00\u4e2a\u88ab\u7528\u6765\u4fdd\u5b58\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 config \u540e\u9762\u6709\u4e00\u4e2a\u7ad6\u7ebf\u7b26\u201c|\u201d\uff0c\u8fd9\u5728 yaml \u4e2d\u8868\u793a\u4fdd\u7559\u6362\u884c\uff0c\u6bcf\u884c\u7684\u7f29\u8fdb\u548c\u884c\u5c3e\u7a7a\u767d\u90fd\u4f1a\u88ab\u53bb\u6389\uff0c\u800c\u989d\u5916\u7684\u7f29\u8fdb\u4f1a\u88ab\u4fdd\u7559\u3002 li nes : | \u6211\u662f\u7b2c\u4e00\u884c \u6211\u662f\u7b2c\u4e8c\u884c \u6211\u662f\u5434\u5f66\u7956 \u6211\u662f\u7b2c\u56db\u884c \u6211\u662f\u7b2c\u4e94\u884c # JSON { \"lines\" : \"\u6211\u662f\u7b2c\u4e00\u884c\\n\u6211\u662f\u7b2c\u4e8c\u884c\\n \u6211\u662f\u5434\u5f66\u7956\\n \u6211\u662f\u7b2c\u56db\u884c\\n\u6211\u662f\u7b2c\u4e94\u884c\" } \u9664\u4e86\u7ad6\u7ebf\u4e4b\u5916\u8fd8\u53ef\u4ee5\u4f7f\u7528 > \u53f3\u5c16\u62ec\u53f7\uff0c\u7528\u6765\u8868\u793a\u6298\u53e0\u6362\u884c\uff0c\u53ea\u6709**\u7a7a\u767d\u884c\u624d\u4f1a\u88ab\u8bc6\u522b\u4e3a\u6362\u884c**\uff0c\u539f\u6765\u7684\u6362\u884c\u7b26\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210\u7a7a\u683c\u3002 li nes : > \u6211\u662f\u7b2c\u4e00\u884c \u6211\u4e5f\u662f\u7b2c\u4e00\u884c \u6211\u4ecd\u662f\u7b2c\u4e00\u884c \u6211\u4f9d\u65e7\u662f\u7b2c\u4e00\u884c \u6211\u662f\u7b2c\u4e8c\u884c \u8fd9\u4e48\u5de7\u6211\u4e5f\u662f\u7b2c\u4e8c\u884c # JSON { \"lines\" : \"\u6211\u662f\u7b2c\u4e00\u884c \u6211\u4e5f\u662f\u7b2c\u4e00\u884c \u6211\u4ecd\u662f\u7b2c\u4e00\u884c \u6211\u4f9d\u65e7\u662f\u7b2c\u4e00\u884c\\n\u6211\u662f\u7b2c\u4e8c\u884c \u8fd9\u4e48\u5de7\u6211\u4e5f\u662f\u7b2c\u4e8c\u884c\" } \u9664\u4e86\u8fd9\u4e24\u4e2a\u6307\u4ee4\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ad6\u7ebf\u548c\u52a0\u53f7\u6216\u8005\u51cf\u53f7\u8fdb\u884c\u914d\u5408\u4f7f\u7528\uff0c\u201c+\u201d \u8868\u793a\u4fdd\u7559\u6587\u5b57\u5757\u672b\u5c3e\u7684\u6362\u884c\uff0c\u201c-\u201d \u8868\u793a\u5220\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u6362\u884c\u3002 value : | hello # { \"value\" : \"hello\\n\" } value : | - hello # { \"value\" : \"hello\" } value : |+ hello # { \"value\" : \"hello\\n\\n\" } (\u6709\u591a\u5c11\u4e2a\u56de\u8f66\u5c31\u6709\u591a\u5c11\u4e2a\\ n ) \u5f53\u7136\u540c\u6837\u7684\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl create -f xx.yaml \u6765\u521b\u5efa\u4e0a\u9762\u7684 ConfigMap \u5bf9\u8c61\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u521b\u5efa ConfigMap \u7684\u8bdd\uff0c\u4e0d\u8981\u5fd8\u8bb0 kubectl \u662f\u6211\u4eec\u6700\u597d\u7684\u5e2e\u624b\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl create configmap -h \u6765\u67e5\u770b\u5173\u4e8e\u521b\u5efa ConfigMap \u7684\u5e2e\u52a9\u4fe1\u606f\uff1a Examples: # Create a new configmap named my-config based on folder bar kubectl create configmap my-config --from-file = path/to/bar # Create a new configmap named my-config with specified keys instead of file basenames on disk kubectl create configmap my-config --from-file = key1 = /path/to/bar/file1.txt --from-file = key2 = /path/to/bar/file2.txt # Create a new configmap named my-config with key1=config1 and key2=config2 kubectl create configmap my-config --from-literal = key1 = config1 --from-literal = key2 = config2 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684\u76ee\u5f55\u6765\u521b\u5efa\u4e00\u4e2a ConfigMap \u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a testcm \u7684\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u5305\u542b\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0credis \u548c mysql \u7684\u8fde\u63a5\u4fe1\u606f\uff0c\u5982\u4e0b\uff1a \u279c ~ ls testcm redis.conf mysql.conf \u279c ~ cat testcm/redis.conf host = 127 .0.0.1 port = 6379 \u279c ~ cat testcm/mysql.conf host = 127 .0.0.1 port = 3306 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 from-file \u5173\u952e\u5b57\u6765\u521b\u5efa\u5305\u542b\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u6240\u6709 \u914d\u7f6e\u6587\u4ef6\u7684 ConfigMap\uff1a \u279c ~ kubectl create configmap cm-demo1 --from-file = testcm configmap \"cm-demo1\" created \u5176\u4e2d from-file \u53c2\u6570\u6307\u5b9a\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u7528\u5728 ConfigMap \u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u952e\u7684\u540d\u5b57\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u503c\u5c31\u662f\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u67e5\u770b ConfigMap \u5217\u8868\uff1a \u279c ~ kubectl get configmap NAME DATA AGE cm-demo1 2 17s \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a cm-demo1 \u7684 ConfigMap \u5bf9\u8c61\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 describe \u547d\u4ee4\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe configmap cm-demo1 Name : cm-demo1 Namespace : default Labels : <none> Annotations : <none> Data ==== mysql.conf : ---- host=127.0.0.1 port=3306 redis.conf : ---- host=127.0.0.1 port=6379 Events : <none> \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a key \u662f testcm \u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5bf9\u5e94\u7684 value \u503c\u5c31\u662f\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5982\u679c\u6587\u4ef6\u91cc\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u5f88\u5927\u7684\u8bdd\uff0cdescribe \u7684\u65f6\u5019\u53ef\u80fd\u4e0d\u4f1a\u663e\u793a\u5bf9\u5e94\u7684\u503c\uff0c\u8981\u67e5\u770b\u5b8c\u6574\u7684\u952e\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a \u279c ~ kubectl get configmap cm-demo1 -o yaml apiVersion : v1 data : mysql.conf : | host=127.0.0.1 port=3306 redis.conf : | host=127.0.0.1 port=6379 kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:24:36Z name : cm-demo1 namespace : default resourceVersion : \"3109975\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo1 uid : 6e0f4d82-6fef-11e8-a101-525400db4df7 \u9664\u4e86\u901a\u8fc7\u6587\u4ef6\u76ee\u5f55\u8fdb\u884c\u521b\u5efa\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u8fdb\u884c\u521b\u5efa ConfigMap\uff0c\u540c\u6837\u7684\uff0c\u4ee5\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u4e3a\u4f8b\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a redis \u7684\u914d\u7f6e\u7684\u4e00\u4e2a\u5355\u72ec ConfigMap \u5bf9\u8c61\uff1a \u279c ~ kubectl create configmap cm-demo2 --from-file=testcm/redis.conf configmap \"cm-demo2\" created \u279c ~ kubectl get configmap cm-demo2 -o yaml apiVersion : v1 data : redis.conf : | host=127.0.0.1 port=6379 kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:34:29Z name : cm-demo2 namespace : default resourceVersion : \"3110758\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo2 uid : cf59675d-6ff0-11e8-a101-525400db4df7 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5173\u8054 redis.conf \u6587\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684 ConfigMap \u5bf9\u8c61\u521b\u5efa\u6210\u529f\u4e86\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f --from-file \u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e24\u6b21\u5206\u522b\u6307\u5b9a redis.conf \u548c mysql.conf \u6587\u4ef6\uff0c\u5c31\u548c\u76f4\u63a5\u6307\u5b9a\u6574\u4e2a\u76ee\u5f55\u662f\u4e00\u6837\u7684\u6548\u679c\u4e86\u3002 \u53e6\u5916\uff0c\u901a\u8fc7\u5e2e\u52a9\u6587\u6863\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fdb\u884c\u521b\u5efa\uff0c\u901a\u8fc7 --from-literal \u53c2\u6570\u4f20\u9012\u914d\u7f6e\u4fe1\u606f\u3002\u540c\u6837, \u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a \u279c ~ kubectl create configmap cm-demo3 --from-literal=db.host=localhost --from-literal=db.port=3306 configmap \"cm-demo3\" created \u279c ~ kubectl get configmap cm-demo3 -o yaml apiVersion : v1 data : db.host : localhost db.port : \"3306\" kind : ConfigMap metadata : creationTimestamp : 2018-06-14T16:43:12Z name : cm-demo3 namespace : default resourceVersion : \"3111447\" selfLink : /api/v1/namespaces/default/configmaps/cm-demo3 uid : 06eeec7e-6ff2-11e8-a101-525400db4df7","title":"\u521b\u5efa"},{"location":"ConfigManage/ConfigMap/#_2","text":"ConfigMap \u521b\u5efa\u6210\u529f\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u5728 Pod \u4e2d\u6765\u4f7f\u7528\u5462\uff1f\u6211\u4eec\u8bf4 ConfigMap \u8fd9\u4e9b\u914d\u7f6e\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u5f88\u591a\u79cd\u65b9\u5f0f\u5728 Pod \u91cc\u4f7f\u7528\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u503c \u5728\u5bb9\u5668\u91cc\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570 \u5728\u6570\u636e\u5377\u91cc\u9762\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6 \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528 ConfigMap \u6765\u586b\u5145\u6211\u4eec\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\u7684 Pod \u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : v1 kind : Pod metadata : name : testcm1-pod spec : containers : - name : testcm1 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : DB_HOST valueFrom : configMapKeyRef : name : cm-demo3 key : db.host - name : DB_PORT valueFrom : configMapKeyRef : name : cm-demo3 key : db.port envFrom : - configMapRef : name : cm-demo1 \u8fd9\u4e2a Pod \u8fd0\u884c\u540e\u4f1a\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u7684\u4fe1\u606f\uff1a \u279c ~ kubectl logs testcm1-pod ...... DB_HOST = localhost DB_PORT = 3306 mysql.conf = host = 127 .0.0.1 port = 3306 redis.conf = host = 127 .0.0.1 port = 6379 ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 DB_HOST \u548c DB_PORT \u90fd\u5df2\u7ecf\u6b63\u5e38\u8f93\u51fa\u4e86\uff0c\u53e6\u5916\u7684\u73af\u5883\u53d8\u91cf\u662f\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u628a cm-demo1 \u7ed9\u6ce8\u5165\u8fdb\u6765\u4e86\uff0c\u6240\u4ee5\u628a\u4ed6\u4eec\u7684\u6574\u4e2a\u952e\u503c\u7ed9\u8f93\u51fa\u51fa\u6765\u4e86\uff0c\u8fd9\u4e5f\u662f\u7b26\u5408\u9884\u671f\u7684\u3002 \u53e6\u5916\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ConfigMap\u6765\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570\uff0cConfigMap \u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u547d\u4ee4\u6216\u8005\u53c2\u6570\u503c\uff0c\u5982\u4e0b Pod: apiVersion : v1 kind : Pod metadata : name : testcm2-pod spec : containers : - name : testcm2 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"echo $(DB_HOST) $(DB_PORT)\" ] env : - name : DB_HOST valueFrom : configMapKeyRef : name : cm-demo3 key : db.host - name : DB_PORT valueFrom : configMapKeyRef : name : cm-demo3 key : db.port \u8fd0\u884c\u8fd9\u4e2a Pod \u540e\u4f1a\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a \u279c ~ kubectl logs testcm2-pod localhost 3306 \u53e6\u5916\u4e00\u79cd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u4f7f\u7528 ConfigMap \u7684\u65b9\u5f0f\uff1a\u901a\u8fc7\u6570\u636e\u5377\u4f7f\u7528\uff0c\u5728\u6570\u636e\u5377\u91cc\u9762\u4f7f\u7528 ConfigMap\uff0c\u5c31\u662f\u5c06\u6587\u4ef6\u586b\u5165\u6570\u636e\u5377\uff0c\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u952e\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u952e\u503c\u5c31\u662f\u6587\u4ef6\u5185\u5bb9\uff0c\u5982\u4e0b\u8d44\u6e90\u5bf9\u8c61\u6240\u793a apiVersion : v1 kind : Pod metadata : name : testcm3-pod spec : volumes : - name : config-volume configMap : name : cm-demo2 containers : - name : testcm3 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"cat /etc/config/redis.conf\" ] volumeMounts : - name : config-volume mountPath : /etc/config \u8fd0\u884c\u8fd9\u4e2a Pod \u7684\uff0c\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs testcm3-pod host = 127 .0.0.1 port = 6379 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 ConfigMap \u503c\u88ab\u6620\u5c04\u7684\u6570\u636e\u5377\u91cc\u53bb\u63a7\u5236\u8def\u5f84\uff0c\u5982\u4e0b Pod \u5b9a\u4e49\uff1a apiVersion : v1 kind : Pod metadata : name : testcm4-pod spec : volumes : - name : config-volume configMap : name : cm-demo1 items : - key : mysql.conf path : path/to/msyql.conf containers : - name : testcm4 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"cat /etc/config/path/to/msyql.conf\" ] volumeMounts : - name : config-volume mountPath : /etc/config \u8fd0\u884c\u8fd9\u4e2aPod\u7684\uff0c\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs testcm4-pod host = 127 .0.0.1 port = 3306 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53 ConfigMap \u4ee5\u6570\u636e\u5377\u7684\u5f62\u5f0f\u6302\u8f7d\u8fdb Pod \u7684\u65f6\uff0c\u8fd9\u65f6\u66f4\u65b0 ConfigMap\uff08\u6216\u5220\u6389\u91cd\u5efaConfigMap\uff09\uff0cPod \u5185\u6302\u8f7d\u7684\u914d\u7f6e\u4fe1\u606f\u4f1a\u70ed\u66f4\u65b0\u3002\u8fd9\u65f6\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u76d1\u6d4b\u914d\u7f6e\u6587\u4ef6\u53d8\u66f4\u7684\u811a\u672c\uff0c\u7136\u540e\u91cd\u52a0\u8f7d\u5bf9\u5e94\u670d\u52a1\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e94\u7528\u7684\u70ed\u66f4\u65b0\u3002 Warning \u53ea\u6709\u901a\u8fc7 Kubernetes API \u521b\u5efa\u7684 Pod \u624d\u80fd\u4f7f\u7528 ConfigMap\uff0c\u5176\u4ed6\u65b9\u5f0f\u521b\u5efa\u7684\uff08\u6bd4\u5982\u9759\u6001 Pod\uff09\u4e0d\u80fd\u4f7f\u7528\uff1bConfigMap \u6587\u4ef6\u5927\u5c0f\u9650\u5236\u4e3a 1MB\uff08ETCD \u7684\u8981\u6c42\uff09\u3002","title":"\u4f7f\u7528"},{"location":"ConfigManage/Kyverno/","text":"Kyverno \u00b6 OPA \u7684 Gatekeeper \u4ee5\u53ca Kyverno \u662f CNCF \u7684\u4e24\u4e2a\u5934\u90e8\u7b56\u7565\u7ba1\u7406\u9879\u76ee\uff0c\u4e24\u4e2a\u4ea7\u54c1\u5404\u6709\u5343\u79cb\uff0c\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 Gatekeeper\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e86\u89e3\u4e0b\u5982\u4f55\u4f7f\u7528 Kyverno\u3002 Kyverno \u662f\u6765\u81ea Nirmata \u7684\u5f00\u6e90\u9879\u76ee\uff0c\u540e\u6765\u4e5f\u6350\u8d60\u7ed9\u4e86 CNCF\u3002\u548c Gatekeeper\u4e00\u6837\uff0cKyverno \u4e5f\u662f\u4e00\u4e2a\u5177\u6709\u9a8c\u8bc1\u548c\u53d8\u5f02\u80fd\u529b\u7684 Kubernetes \u7b56\u7565\u5f15\u64ce\uff0c\u4f46\u662f\u5b83\u8fd8\u6709\u751f\u6210\u8d44\u6e90\u7684\u529f\u80fd\uff0c\u6700\u8fd1\u8fd8\u52a0\u5165\u4e86 API \u5bf9\u8c61\u67e5\u8be2\u7684\u80fd\u529b\u3002\u4e0e Gatekeeper \u4e0d\u540c\uff0cKyverno \u539f\u672c\u5c31\u662f\u4e3a Kubernetes \u7f16\u5199\u7684\u3002\u548c Gatekeeper \u76f8\u6bd4\uff0cKyverno \u9664\u4e86\u5bf9\u8c61\u751f\u6210\u529f\u80fd\u4e4b\u5916\uff0c\u8fd8\u65e0\u9700\u4e13\u7528\u8bed\u8a00\u5373\u53ef\u7f16\u5199\u7b56\u7565\uff0c\u4ece\u5b9e\u73b0\u8bed\u8a00\u7684\u89d2\u5ea6\u4e0a\u6765\u770b\uff0cKyverno \u7684\u6a21\u578b\u66f4\u4e3a\u7b80\u6d01\u3002\u6bd5\u7adf Gatekeeper \u7684 Rego \u8bed\u8a00\u6709\u4e00\u5b9a\u7684\u95e8\u69db\u3002 \u540c\u6837 Kyverno \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u4e5f\u662f\u4f5c\u4e3a\u52a8\u6001\u51c6\u5165\u63a7\u5236\u5668\u8fd0\u884c\u7684\u3002Kyverno \u4ece kube-apiserver \u63a5\u6536\u9a8c\u8bc1\u548c\u4fee\u6539\u51c6\u5165 webhook HTTP \u56de\u8c03\uff0c\u5e76\u5e94\u7528\u5339\u914d\u7b56\u7565\u8fd4\u56de\u6267\u884c\u51c6\u5165\u7b56\u7565\u6216\u62d2\u7edd\u8bf7\u6c42\u7684\u7ed3\u679c\u3002Kyverno \u7b56\u7565\u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90 Kind\u3001name \u548c\u6807\u7b7e\u9009\u62e9\u5668\u5339\u914d\u8d44\u6e90\uff0c\u800c\u4e14\u540d\u79f0\u4e2d\u652f\u6301\u901a\u914d\u7b26\u3002 \u7b56\u7565\u6267\u884c\u662f\u901a\u8fc7 Kubernetes events \u6765\u6355\u83b7\u7684\uff0cKyverno \u8fd8\u62a5\u544a\u73b0\u6709\u8d44\u6e90\u7684\u7b56\u7565\u8fdd\u89c4\u884c\u4e3a\u3002\u4e0b\u56fe\u663e\u793a\u4e86 Kyverno \u7684\u6574\u4f53\u67b6\u6784\uff1a Kyverno \u7684\u9ad8\u53ef\u7528\u5b89\u88c5\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u591a\u4e2a\u526f\u672c\u6765\u5b8c\u6210\uff0c\u5e76\u4e14 Kyverno \u7684\u6bcf\u4e2a\u526f\u672c\u5c06\u5177\u6709\u591a\u4e2a\u6267\u884c\u4e0d\u540c\u529f\u80fd\u7684\u63a7\u5236\u5668\u3002Webhook \u5904\u7406\u6765\u81ea Kubernetes APIServer \u7684 AdmissionReview \u8bf7\u6c42\uff0c\u5176 Monitor \u7ec4\u4ef6\u521b\u5efa\u548c\u7ba1\u7406\u6240\u9700\u7684\u914d\u7f6e\u3002PolicyController watch \u7b56\u7565\u8d44\u6e90\u5e76\u6839\u636e\u914d\u7f6e\u7684\u626b\u63cf\u95f4\u9694\u542f\u52a8\u540e\u53f0\u626b\u63cf\uff0cGenerateController \u7ba1\u7406\u751f\u6210\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u3002 \u5bf9\u6bd4 \u00b6 \u7531\u4e8e Gatekeeper \u4e0e Kyverno \u90fd\u662f\u7b56\u7565\u7ba1\u7406\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u81ea\u7136\u6211\u4eec\u8981\u5bf9\u8fd9\u4e24\u4e2a\u9879\u76ee\u7684\u4f18\u52a3\u52bf\u505a\u4e00\u4e2a\u5bf9\u6bd4\u3002 Gatekeeper \u7684\u4f18\u52bf Gatekeeper \u7684\u52a3\u52bf Kyverno \u7684\u4f18\u52bf Kyverno \u7684\u52a3\u52bf \u80fd\u591f\u8868\u8fbe\u975e\u5e38\u590d\u6742\u7684\u7b56\u7565\uff1b \u793e\u533a\u66f4\u4e3a\u6210\u719f\uff1b \u652f\u6301\u591a\u526f\u672c\u6a21\u5f0f\uff0c\u66f4\u597d\u7684\u53ef\u7528\u6027\u548c\u4f38\u7f29\u6027\u3002 \u9700\u8981\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\uff0c\u8be5\u8bed\u8a00\u7684\u5b66\u4e60\u66f2\u7ebf\u8f83\u4e3a\u9661\u5ced\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u6280\u672f\u503a\uff0c\u5e76\u5ef6\u957f\u4ea4\u4ed8\u65f6\u95f4\uff1b \u6ca1\u6709\u751f\u6210\u80fd\u529b\uff0c\u610f\u5473\u7740\u5b83\u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f\u5c31\u5728\u9a8c\u8bc1\u65b9\u9762\uff1b \u7b56\u7565\u590d\u6742\u5197\u957f\uff0c\u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u534f\u540c\u5b9e\u73b0\u3002 Kubernetes \u98ce\u683c\u7684\u7b56\u7565\u8868\u8fbe\u65b9\u5f0f\uff0c\u975e\u5e38\u6613\u4e8e\u7f16\u5199\uff1b \u6210\u719f\u7684\u53d8\u5f02\u80fd\u529b\uff1b \u72ec\u7279\u7684\u751f\u6210\u548c\u540c\u6b65\u80fd\u529b\uff0c\u6269\u5c55\u4e86\u5e94\u7528\u573a\u666f\uff1b \u5feb\u901f\u4ea4\u4ed8\uff0c\u573a\u666f\u4e30\u5bcc\u3002 \u53d7\u5230\u8bed\u8a00\u80fd\u529b\u7684\u9650\u5236\uff0c\u96be\u4ee5\u5b9e\u73b0\u590d\u6742\u7b56\u7565\uff1b \u8f83\u4e3a\u5e74\u8f7b\uff0c\u793e\u533a\u63a5\u53d7\u5ea6\u4e0d\u9ad8\uff1b API \u5bf9\u8c61\u67e5\u8be2\u80fd\u529b\u8fd8\u5f88\u521d\u7ea7\uff1b \u4ece\u4e0a\u9762\u5bf9\u6bd4\u53ef\u4ee5\u770b\u51fa\u6765 Gatekeeper \u6700\u5927\u7684\u5f31\u70b9\u662f\u5b83\u9700\u8981 Rego \u8fd9\u95e8\u8bed\u8a00\u6765\u5b9e\u73b0\u7b56\u7565\u903b\u8f91\uff0c\u800c\u8fd9\u79cd\u8bed\u8a00\u5728\u5176\u4ed6\u5730\u65b9\u90fd\u65e0\u6cd5\u4f7f\u7528\uff0c\u8fd9\u4e5f\u5927\u5927\u589e\u52a0\u4e86\u95e8\u69db\uff0c\u5f53\u7136\u540c\u6837\u8fd9\u4e5f\u662f\u4e00\u79cd\u4f18\u52bf\uff0c\u56e0\u4e3a\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u5b9e\u73b0\u975e\u5e38\u5f3a\u5927\u7684\u903b\u8f91\u3002\u76f8\u6bd4 Gatekeeper \u6765\u8bf4\uff0cKyverno \u7684\u7b2c\u4e00\u5370\u8c61\u5c31\u662f\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u7684\u6280\u672f\u9700\u6c42\uff0c\u56e0\u4e3a\u5b83\u662f\u4e13\u95e8\u4e3a Kubernetes \u6784\u5efa\u7684\uff0c\u5e76\u4e14\u7528\u58f0\u660e\u5f0f\u7684\u65b9\u6cd5\u6765\u8868\u8fbe\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u7684\u6a21\u578b\u4e0e Kubernetes \u5bf9\u8c61\u7684\u63cf\u8ff0\u548c\u534f\u8c03\u65b9\u5f0f\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u79cd\u6a21\u5f0f\u5bfc\u81f4\u7b56\u7565\u7684\u7f16\u5199\u65b9\u5f0f\u5f97\u5230\u4e86\u6781\u5927\u7684\u7b80\u5316\uff0c\u5168\u9762\u7684\u964d\u4f4e\u4e86\u7b56\u7565\u5f15\u64ce\u7684\u4f7f\u7528\u96be\u5ea6\u3002\u6b64\u5916 Kyverno \u7684\u7f16\u8bd1\u548c\u751f\u6210\u80fd\u529b\uff0c\u4f7f\u5b83\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u51c6\u5165\u63a7\u5236\u5668\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u81ea\u52a8\u5316\u5de5\u5177\u3002\u901a\u8fc7\u7ed3\u5408\u8fd9\u4e09\u79cd\u80fd\u529b\uff0c\u518d\u52a0\u4e0a\u6700\u8fd1\u589e\u52a0\u7684 API \u67e5\u8be2\u80fd\u529b\uff0cKyverno \u80fd\u591f\u6267\u884c Gatekeeper \u6240\u4e0d\u80fd\u6267\u884c\u7684\u4efb\u52a1\u3002\u8fd9\u79cd\u7b80\u5355\u6027\u52a0\u4e0a\u5b83\u7684\u81ea\u52a8\u5316\u80fd\u529b\u548c\u5bf9\u5176\u4ed6\u5de5\u5177\u7684\u6574\u5408\uff0c\u4e3a\u65b0\u7528\u6237\u4ee5\u53ca\u6709\u7ecf\u9a8c\u7684\u7528\u6237\u548c\u64cd\u4f5c\u8005\u5e26\u6765\u4e86\u5de8\u5927\u7684\u4ef7\u503c\u3002 \u5f53\u7136\u5177\u4f53\u9009\u62e9\u54ea\u4e00\u4e2a\u5de5\u5177\uff0c\u8fd8\u662f\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u9650\u5236\u6761\u4ef6\u8fdb\u884c\u8bc4\u4f30\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u662f\u6240\u6709\u751f\u4ea7\u73af\u5883\u7684\u7528\u6237\u90fd\u5e94\u8be5\u8ba1\u5212\u4f7f\u7528\u7b56\u7565\u5f15\u64ce\u6765\u4fdd\u62a4\u96c6\u7fa4\u7684\u5b89\u5168\u5e76\u7b80\u5316 Kubernetes \u7ba1\u7406\u3002 \u5b89\u88c5 \u00b6 \u4f60\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u4ece\u6700\u65b0\u7248\u672c\u7684\u8d44\u6e90\u6e05\u5355\u5b89\u88c5 Kyverno\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c kubectl create -f https://raw.githubusercontent.com/kyverno/kyverno/main/config/install.yaml \u6b64\u5916\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff1a \u279c helm repo add kyverno https://kyverno.github.io/kyverno/ \u279c helm repo update # Install the Kyverno Helm chart into a new namespace called \"kyverno\" \u279c helm install kyverno kyverno/kyverno -n kyverno --create-namespace \u5b89\u88c5\u5b8c\u6210\u4f1a\u521b\u5efa\u4e00\u4e2a kyverno \u547d\u540d\u7a7a\u95f4\uff0c\u540c\u6837\u4e5f\u5305\u542b\u4e00\u4e9b\u76f8\u5173\u7684 CRD\uff1a \u279c kubectl get pods -n kyverno NAME READY STATUS RESTARTS AGE kyverno-69bdfcfc7c-dbtlt 1 /1 Running 0 29m \u279c kubectl get validatingwebhookconfiguration NAME WEBHOOKS AGE kyverno-policy-validating-webhook-cfg 1 14m kyverno-resource-validating-webhook-cfg 2 14m \u279c kubectl get mutatingwebhookconfigurations NAME WEBHOOKS AGE kyverno-policy-mutating-webhook-cfg 1 14m kyverno-resource-mutating-webhook-cfg 2 14m kyverno-verify-mutating-webhook-cfg 1 14m \u279c kubectl get crd | grep kyverno clusterpolicies.kyverno.io 2022 -03-29T07:21:22Z clusterreportchangerequests.kyverno.io 2022 -03-29T07:21:22Z generaterequests.kyverno.io 2022 -03-29T07:21:22Z policies.kyverno.io 2022 -03-29T07:21:22Z reportchangerequests.kyverno.io 2022 -03-29T07:21:23Z \u53ef\u4ee5\u770b\u51fa\u5b89\u88c5\u5b8c\u6210\u540e\u521b\u5efa\u4e86\u51e0\u4e2a validatingwebhookconfiguration \u4e0e mutatingwebhookconfigurations \u5bf9\u8c61\u3002 \u7b56\u7565\u4e0e\u89c4\u5219 \u00b6 \u4f7f\u7528 Kyverno \u5176\u5b9e\u5c31\u662f\u5bf9\u7b56\u7565\u548c\u89c4\u5219\u7684\u5e94\u7528\uff0cKyverno \u7b56\u7565\u662f\u89c4\u5219\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a match \u58f0\u660e\u3001\u4e00\u4e2a\u53ef\u9009\u7684 exclude \u58f0\u660e\u4ee5\u53ca validate\u3001mutate\u3001generate \u6216 verifyImages \u58f0\u660e\u4e4b\u4e00\u7ec4\u6210\uff0c\u6bcf\u4e2a\u89c4\u5219\u53ea\u80fd\u5305\u542b\u4e00\u4e2a validate\u3001mutate\u3001generate \u6216 verifyImages \u5b50\u58f0\u660e\u3002 \u7b56\u7565\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u96c6\u7fa4\u8303\u56f4\u7684\u8d44\u6e90\uff08ClusterPolicy\uff09\u6216\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\u8d44\u6e90\uff08Policy\uff09\u3002 Policy \u5c06\u4ec5\u9002\u7528\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684 namespace \u5185\u7684\u8d44\u6e90 ClusterPolicy \u5e94\u7528\u4e8e\u5339\u914d\u8de8\u6240\u6709 namespace \u7684\u8d44\u6e90 \u7b56\u7565\u5b9a\u4e49 \u00b6 \u7f16\u5199\u7b56\u7565\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49 Policy \u6216\u8005 ClusterPolicy \u5bf9\u8c61\u3002 \u9a8c\u8bc1\u8d44\u6e90 \u00b6 \u9a8c\u8bc1\u89c4\u5219\u57fa\u672c\u4e0a\u662f\u6211\u4eec\u4f7f\u7528\u6700\u5e38\u89c1\u548c\u6700\u5b9e\u7528\u7684\u89c4\u5219\u7c7b\u578b\uff0c\u5f53\u7528\u6237\u6216\u8fdb\u7a0b\u521b\u5efa\u65b0\u8d44\u6e90\u65f6\uff0cKyverno \u5c06\u6839\u636e\u9a8c\u8bc1\u89c4\u5219\u68c0\u67e5\u8be5\u8d44\u6e90\u7684\u5c5e\u6027\uff0c\u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u5219\u5141\u8bb8\u521b\u5efa\u8d44\u6e90\u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u5219\u521b\u5efa\u88ab\u963b\u6b62\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u7b56\u7565\uff0c\u8981\u6c42\u6240\u6709\u7684 pod \u90fd\u5305\u542b\u4e00\u4e2a kyverno \u7684\u6807\u7b7e\uff1a # kyverno-require-label.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : require-label spec : validationFailureAction : enforce rules : - name : check-for-labels match : resources : kinds : - Pod validate : message : \"label 'kyverno' is required\" pattern : metadata : labels : kyverno : \"?*\" \u4e0a\u9762\u7b56\u7565\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a validationFailureAction=[audit, enforce] \u5c5e\u6027\uff1a \u5f53\u5904\u4e8e audit \u6a21\u5f0f\u4e0b \uff0c\u6bcf\u5f53\u521b\u5efa\u8fdd\u53cd\u89c4\u5219\u96c6\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89c4\u5219\u7684\u8d44\u6e90\u65f6\uff0c\u4f1a\u5141\u8bb8 admission review \u8bf7\u6c42\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u62a5\u544a\u4e2d\u3002 \u5f53\u5904\u4e8e enforce \u6a21\u5f0f\u4e0b \uff0c\u8d44\u6e90\u5728\u521b\u5efa\u65f6\u7acb\u5373\u88ab\u963b\u6b62\uff0c\u62a5\u544a\u4e2d\u4e0d\u4f1a\u6709\u3002 \u7136\u540e\u5c31\u662f\u4e0b\u9762\u4f7f\u7528 rules \u5c5e\u6027\u5b9a\u4e49\u7684\u89c4\u5219\u96c6\u5408\uff0cmatch \u7528\u4e8e\u8868\u793a\u5339\u914d\u7684\u8d44\u6e90\u8d44\u6e90\uff0cvalidate \u8868\u793a\u9a8c\u8bc1\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49 kyverno: \"?*\" \u8fd9\u6837\u7684\u6807\u7b7e\u8868\u793a\u5fc5\u987b\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u6807\u7b7e key\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u7b56\u7565\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f kyverno-require-label.yaml clusterpolicy.kyverno.io/require-label created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY require-label true enforce true \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u4e0d\u5e26\u6807\u7b7e kyverno \u7684 Pod\uff1a \u279c kubectl run busybox --image = busybox:1.28.4 --restart = Never -- sleep 1000000 Error from server: admission webhook \"validate.kyverno.svc-fail\" denied the request: resource Pod/default/busybox was blocked due to the following policies require-label: check-for-labels: 'validation error: label ''kyverno'' is required. Rule check-for-labels failed at path /metadata/labels/kyverno/' \u53ef\u4ee5\u770b\u5230\u63d0\u793a\uff0c\u9700\u8981\u4e00\u4e2a kyverno \u6807\u7b7e\uff0c\u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b Events \u4e8b\u4ef6\u6765\u4e86\u89e3\u7b56\u7565\u5e94\u7528\u60c5\u51b5\uff1a \u279c kubectl get events -A -w ...... metallb-system 9m25s Warning PolicyViolation daemonset/speaker policy 'require-label' ( Validation ) rule 'autogen-check-for-labels' failed. validation error: label 'kyverno' is required. Rule autogen-check-for-labels failed at path /spec/template/metadata/labels/kyverno/ default 0s Warning PolicyViolation clusterpolicy/require-label Rule ( s ) 'check-for-labels' failed to apply on resource Pod/default/busybox \u5982\u679c\u521b\u5efa\u7684 Pod \u5e26\u6709 kyverno \u6807\u7b7e\u5219\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\uff1a \u279c kubectl run busybox --image = busybox:1.28.4 --labels kyverno = demo --restart = Never -- sleep 1000000 pod/busybox created \u5982\u679c\u5c06 validationFailureAction \u7684\u503c\u66f4\u6539\u4e3a audit\uff0c\u5219\u5373\u4f7f\u6211\u4eec\u521b\u5efa\u7684 Pod \u4e0d\u5e26\u6709 kyverno \u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u6210\u529f\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728 PolicyReport \u5bf9\u8c61\u4e2d\u770b\u5230\u5bf9\u5e94\u7684\u8fdd\u89c4\u62a5\u544a\uff1a \u279c kubectl get policyreports NAME PASS FAIL WARN ERROR SKIP AGE polr-ns-default 0 2 0 0 0 20m \u279c kubectl describe policyreports |grep \"Result : \\+fail\" -B10 UID : 90d1dfc7-0e42-4133-8a65-4bbf559533a2 Results : Message: validation error : label 'kyverno' is required. Rule autogen-check-for-labels failed at path /spec/template/metadata/labels/kyverno/ Policy : require-label Resources : API Version : apps/v1 Kind : Deployment Name : minio Namespace : default UID : 86ccd8fc-07f6-47a4-a9ed-b9dec665dff3 Result : fail -- Nanos : 0 Seconds : 1648541980 Message : validation error : label 'kyverno' is required. Rule check-for-labels failed at path /metadata/labels/kyverno/ Policy : require-label Resources : API Version : v1 Kind : Pod Name : busybox Namespace : default UID : 7e593177-4366-462b-81cf-1057657ae099 Result : fail \u4ece\u4e0a\u9762\u7684\u62a5\u544a\u8d44\u6e90\u4e2d\u53ef\u4ee5\u770b\u5230\u8fdd\u53cd\u7b56\u7565\u7684\u8d44\u6e90\u5bf9\u8c61\u3002 \u53d8\u66f4\u89c4\u5219 \u53d8\u66f4\u89c4\u5219\u53ef\u4ee5\u7528\u4e8e\u4fee\u6539\u5339\u914d\u5230\u89c4\u5219\u7684\u8d44\u6e90\uff08\u6bd4\u5982\u89c4\u5219\u8bbe\u7f6e\u4e86 metadata \u5b57\u6bb5\u53ef\u4ee5\u548c\u8d44\u6e90\u7684 metadata \u8fdb\u884c\u5408\u5e76\uff09\uff0c\u5c31\u662f\u6839\u636e\u6211\u4eec\u8bbe\u7f6e\u7684\u89c4\u5219\u6765\u4fee\u6539\u5bf9\u5e94\u7684\u8d44\u6e90\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u4e00\u4e2a\u7b56\u7565\uff0c\u7ed9\u6240\u6709\u5305\u542b nginx \u955c\u50cf \u7684 pod \u90fd\u52a0\u4e0a\u4e00\u4e2a\u6807\u7b7e\uff08kyverno=nginx\uff09\uff1a # kyverno-mutate-label.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : nginx-label spec : rules : - name : nginx-label match : resources : kinds : - Pod mutate : patchStrategicMerge : metadata : labels : kyverno : nginx spec : (containers) : - (image) : \"*nginx*\" # \u5bb9\u5668\u955c\u50cf\u5305\u542b nginx \u5373\u53ef \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u8fd9\u4e2a\u7b56\u7565\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f kyverno-mutate-label.yaml clusterpolicy.kyverno.io/nginx-label created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY nginx-label true audit true require-label true enforce true \u73b0\u5728\u6211\u4eec\u4f7f\u7528 nginx \u955c\u50cf\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a Pod\uff1a \u279c kubectl run --image = nginx nginx pod/nginx created \u279c kubectl get pod nginx --show-labels NAME READY STATUS RESTARTS AGE LABELS nginx 1 /1 Running 0 29s kyverno = nginx,run = nginx \u53ef\u4ee5\u770b\u5230 Pod \u521b\u5efa\u6210\u529f\u540e\u5305\u542b\u4e86\u4e00\u4e2a kyverno=nginx \u6807\u7b7e\uff0c\u7531\u4e8e\u6709 kyverno \u6807\u7b7e\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u9a8c\u8bc1\u7b56\u7565\u4e5f\u662f\u901a\u8fc7\u7684\uff0c\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\u3002 \u751f\u6210\u8d44\u6e90 \u00b6 \u751f\u6210\u89c4\u5219\u53ef\u7528\u4e8e\u5728\u521b\u5efa\u65b0\u8d44\u6e90\u6216\u66f4\u65b0\u6e90\u65f6\u521b\u5efa\u5176\u4ed6\u8d44\u6e90\uff0c\u4f8b\u5982\u4e3a\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u65b0 RoleBindings \u6216 Secret \u7b49\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u9700\u6c42\u662f\u5c06\u67d0\u4e2a Secret \u540c\u6b65\u5230\u5176\u4ed6\u547d\u540d\u7a7a\u95f4\u4e2d\u53bb\uff08\u6bd4\u5982 TLS \u5bc6\u94a5\u3001\u955c\u50cf\u4ed3\u5e93\u8ba4\u8bc1\u4fe1\u606f\uff09\uff0c\u624b\u52a8\u590d\u5236\u8fd9\u4e9b Secret \u6bd4\u8f83\u9ebb\u70e6\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Kyverno \u6765\u521b\u5efa\u4e00\u4e2a\u7b56\u7565\u5e2e\u52a9\u6211\u4eec\u540c\u6b65\u8fd9\u4e9b Secret\u3002\u6bd4\u5982\u5728 default \u547d\u540d\u7a7a\u95f4\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a regcred \u7684 Secret \u5bf9\u8c61\uff0c\u9700\u8981\u590d\u5236\u5230\u53e6\u5916\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u6e90 Secret \u53d1\u751f\u66f4\u6539\uff0c\u5b83\u8fd8\u5c06\u5411\u590d\u5236\u7684 Secret \u540c\u6b65\u66f4\u65b0\u3002 # kyverno-generate-secret.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : sync-secrets spec : rules : - name : sync-image-pull-secret match : resources : kinds : - Namespace generate : # \u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 kind : Secret name : regcred namespace : \"{{request.object.metadata.name}}\" # \u83b7\u53d6\u76ee\u6807\u547d\u540d\u7a7a\u95f4 synchronize : true clone : namespace : default name : regcred \u5148\u5728 default \u547d\u540d\u7a7a\u95f4\u4e2d\u51c6\u5907\u6211\u4eec\u7684 Secret \u5bf9\u8c61\uff1a \u279c kubectl create secret docker-registry regcred --docker-server = DOCKER_REGISTRY_SERVER --docker-username = DOCKER_USER --docker-password = DOCKER_PASSWORD --docker-email = DOCKER_EMAIL secret/regcred created \u7136\u540e\u5e94\u7528\u4e0a\u9762\u7684\u540c\u6b65 Secret \u7b56\u7565\uff1a \u279c kubectl apply -f kyverno-generate-secret.yaml clusterpolicy.kyverno.io/sync-secrets created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY nginx-label true audit true require-label true enforce true sync-secrets true audit true \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\uff1a \u279c kubectl create ns test namespace/test created \u279c kubectl get secret -n test NAME TYPE DATA AGE default-token-7b7cv kubernetes.io/service-account-token 3 7s regcred kubernetes.io/dockerconfigjson 1 6s \u53ef\u4ee5\u770b\u5230\u5728\u65b0\u5efa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u591a\u4e86\u4e00\u4e2a regcred \u7684 Secret \u5bf9\u8c61\u3002 \u66f4\u591a\u7684 Kyverno \u7b56\u7565\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5b98\u65b9\u7f51\u7ad9\uff1a https://kyverno.io/policies \uff0c\u53ef\u4ee5\u5728\u8be5\u7f51\u7ad9\u4e0a\u9762\u6839\u636e\u7b56\u7565\u7c7b\u578b\u3001\u5206\u7c7b\u3001\u4e3b\u9898\u7b49\u8fdb\u884c\u7b5b\u9009\u3002Kyverno \u5728\u7075\u6d3b\u3001\u5f3a\u5927\u548c\u6613\u7528\u4e4b\u95f4\u53d6\u5f97\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5e73\u8861\uff0c\u4e0d\u9700\u8981\u592a\u591a\u5b66\u4e60\u65f6\u95f4\uff0c\u5c31\u80fd\u591f\u63d0\u4f9b\u76f8\u5f53\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u5b98\u7f51\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u9488\u5bf9\u5404\u79cd\u573a\u666f\u7684\u6837\u4f8b\uff0c\u975e\u5e38\u503c\u5f97\u4f7f\u7528\u3002","title":"Kyverno"},{"location":"ConfigManage/Kyverno/#kyverno","text":"OPA \u7684 Gatekeeper \u4ee5\u53ca Kyverno \u662f CNCF \u7684\u4e24\u4e2a\u5934\u90e8\u7b56\u7565\u7ba1\u7406\u9879\u76ee\uff0c\u4e24\u4e2a\u4ea7\u54c1\u5404\u6709\u5343\u79cb\uff0c\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 Gatekeeper\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e86\u89e3\u4e0b\u5982\u4f55\u4f7f\u7528 Kyverno\u3002 Kyverno \u662f\u6765\u81ea Nirmata \u7684\u5f00\u6e90\u9879\u76ee\uff0c\u540e\u6765\u4e5f\u6350\u8d60\u7ed9\u4e86 CNCF\u3002\u548c Gatekeeper\u4e00\u6837\uff0cKyverno \u4e5f\u662f\u4e00\u4e2a\u5177\u6709\u9a8c\u8bc1\u548c\u53d8\u5f02\u80fd\u529b\u7684 Kubernetes \u7b56\u7565\u5f15\u64ce\uff0c\u4f46\u662f\u5b83\u8fd8\u6709\u751f\u6210\u8d44\u6e90\u7684\u529f\u80fd\uff0c\u6700\u8fd1\u8fd8\u52a0\u5165\u4e86 API \u5bf9\u8c61\u67e5\u8be2\u7684\u80fd\u529b\u3002\u4e0e Gatekeeper \u4e0d\u540c\uff0cKyverno \u539f\u672c\u5c31\u662f\u4e3a Kubernetes \u7f16\u5199\u7684\u3002\u548c Gatekeeper \u76f8\u6bd4\uff0cKyverno \u9664\u4e86\u5bf9\u8c61\u751f\u6210\u529f\u80fd\u4e4b\u5916\uff0c\u8fd8\u65e0\u9700\u4e13\u7528\u8bed\u8a00\u5373\u53ef\u7f16\u5199\u7b56\u7565\uff0c\u4ece\u5b9e\u73b0\u8bed\u8a00\u7684\u89d2\u5ea6\u4e0a\u6765\u770b\uff0cKyverno \u7684\u6a21\u578b\u66f4\u4e3a\u7b80\u6d01\u3002\u6bd5\u7adf Gatekeeper \u7684 Rego \u8bed\u8a00\u6709\u4e00\u5b9a\u7684\u95e8\u69db\u3002 \u540c\u6837 Kyverno \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u4e5f\u662f\u4f5c\u4e3a\u52a8\u6001\u51c6\u5165\u63a7\u5236\u5668\u8fd0\u884c\u7684\u3002Kyverno \u4ece kube-apiserver \u63a5\u6536\u9a8c\u8bc1\u548c\u4fee\u6539\u51c6\u5165 webhook HTTP \u56de\u8c03\uff0c\u5e76\u5e94\u7528\u5339\u914d\u7b56\u7565\u8fd4\u56de\u6267\u884c\u51c6\u5165\u7b56\u7565\u6216\u62d2\u7edd\u8bf7\u6c42\u7684\u7ed3\u679c\u3002Kyverno \u7b56\u7565\u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90 Kind\u3001name \u548c\u6807\u7b7e\u9009\u62e9\u5668\u5339\u914d\u8d44\u6e90\uff0c\u800c\u4e14\u540d\u79f0\u4e2d\u652f\u6301\u901a\u914d\u7b26\u3002 \u7b56\u7565\u6267\u884c\u662f\u901a\u8fc7 Kubernetes events \u6765\u6355\u83b7\u7684\uff0cKyverno \u8fd8\u62a5\u544a\u73b0\u6709\u8d44\u6e90\u7684\u7b56\u7565\u8fdd\u89c4\u884c\u4e3a\u3002\u4e0b\u56fe\u663e\u793a\u4e86 Kyverno \u7684\u6574\u4f53\u67b6\u6784\uff1a Kyverno \u7684\u9ad8\u53ef\u7528\u5b89\u88c5\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u591a\u4e2a\u526f\u672c\u6765\u5b8c\u6210\uff0c\u5e76\u4e14 Kyverno \u7684\u6bcf\u4e2a\u526f\u672c\u5c06\u5177\u6709\u591a\u4e2a\u6267\u884c\u4e0d\u540c\u529f\u80fd\u7684\u63a7\u5236\u5668\u3002Webhook \u5904\u7406\u6765\u81ea Kubernetes APIServer \u7684 AdmissionReview \u8bf7\u6c42\uff0c\u5176 Monitor \u7ec4\u4ef6\u521b\u5efa\u548c\u7ba1\u7406\u6240\u9700\u7684\u914d\u7f6e\u3002PolicyController watch \u7b56\u7565\u8d44\u6e90\u5e76\u6839\u636e\u914d\u7f6e\u7684\u626b\u63cf\u95f4\u9694\u542f\u52a8\u540e\u53f0\u626b\u63cf\uff0cGenerateController \u7ba1\u7406\u751f\u6210\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u3002","title":"Kyverno"},{"location":"ConfigManage/Kyverno/#_1","text":"\u7531\u4e8e Gatekeeper \u4e0e Kyverno \u90fd\u662f\u7b56\u7565\u7ba1\u7406\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u81ea\u7136\u6211\u4eec\u8981\u5bf9\u8fd9\u4e24\u4e2a\u9879\u76ee\u7684\u4f18\u52a3\u52bf\u505a\u4e00\u4e2a\u5bf9\u6bd4\u3002 Gatekeeper \u7684\u4f18\u52bf Gatekeeper \u7684\u52a3\u52bf Kyverno \u7684\u4f18\u52bf Kyverno \u7684\u52a3\u52bf \u80fd\u591f\u8868\u8fbe\u975e\u5e38\u590d\u6742\u7684\u7b56\u7565\uff1b \u793e\u533a\u66f4\u4e3a\u6210\u719f\uff1b \u652f\u6301\u591a\u526f\u672c\u6a21\u5f0f\uff0c\u66f4\u597d\u7684\u53ef\u7528\u6027\u548c\u4f38\u7f29\u6027\u3002 \u9700\u8981\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\uff0c\u8be5\u8bed\u8a00\u7684\u5b66\u4e60\u66f2\u7ebf\u8f83\u4e3a\u9661\u5ced\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u6280\u672f\u503a\uff0c\u5e76\u5ef6\u957f\u4ea4\u4ed8\u65f6\u95f4\uff1b \u6ca1\u6709\u751f\u6210\u80fd\u529b\uff0c\u610f\u5473\u7740\u5b83\u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f\u5c31\u5728\u9a8c\u8bc1\u65b9\u9762\uff1b \u7b56\u7565\u590d\u6742\u5197\u957f\uff0c\u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u534f\u540c\u5b9e\u73b0\u3002 Kubernetes \u98ce\u683c\u7684\u7b56\u7565\u8868\u8fbe\u65b9\u5f0f\uff0c\u975e\u5e38\u6613\u4e8e\u7f16\u5199\uff1b \u6210\u719f\u7684\u53d8\u5f02\u80fd\u529b\uff1b \u72ec\u7279\u7684\u751f\u6210\u548c\u540c\u6b65\u80fd\u529b\uff0c\u6269\u5c55\u4e86\u5e94\u7528\u573a\u666f\uff1b \u5feb\u901f\u4ea4\u4ed8\uff0c\u573a\u666f\u4e30\u5bcc\u3002 \u53d7\u5230\u8bed\u8a00\u80fd\u529b\u7684\u9650\u5236\uff0c\u96be\u4ee5\u5b9e\u73b0\u590d\u6742\u7b56\u7565\uff1b \u8f83\u4e3a\u5e74\u8f7b\uff0c\u793e\u533a\u63a5\u53d7\u5ea6\u4e0d\u9ad8\uff1b API \u5bf9\u8c61\u67e5\u8be2\u80fd\u529b\u8fd8\u5f88\u521d\u7ea7\uff1b \u4ece\u4e0a\u9762\u5bf9\u6bd4\u53ef\u4ee5\u770b\u51fa\u6765 Gatekeeper \u6700\u5927\u7684\u5f31\u70b9\u662f\u5b83\u9700\u8981 Rego \u8fd9\u95e8\u8bed\u8a00\u6765\u5b9e\u73b0\u7b56\u7565\u903b\u8f91\uff0c\u800c\u8fd9\u79cd\u8bed\u8a00\u5728\u5176\u4ed6\u5730\u65b9\u90fd\u65e0\u6cd5\u4f7f\u7528\uff0c\u8fd9\u4e5f\u5927\u5927\u589e\u52a0\u4e86\u95e8\u69db\uff0c\u5f53\u7136\u540c\u6837\u8fd9\u4e5f\u662f\u4e00\u79cd\u4f18\u52bf\uff0c\u56e0\u4e3a\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u5b9e\u73b0\u975e\u5e38\u5f3a\u5927\u7684\u903b\u8f91\u3002\u76f8\u6bd4 Gatekeeper \u6765\u8bf4\uff0cKyverno \u7684\u7b2c\u4e00\u5370\u8c61\u5c31\u662f\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u7684\u6280\u672f\u9700\u6c42\uff0c\u56e0\u4e3a\u5b83\u662f\u4e13\u95e8\u4e3a Kubernetes \u6784\u5efa\u7684\uff0c\u5e76\u4e14\u7528\u58f0\u660e\u5f0f\u7684\u65b9\u6cd5\u6765\u8868\u8fbe\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u7684\u6a21\u578b\u4e0e Kubernetes \u5bf9\u8c61\u7684\u63cf\u8ff0\u548c\u534f\u8c03\u65b9\u5f0f\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u79cd\u6a21\u5f0f\u5bfc\u81f4\u7b56\u7565\u7684\u7f16\u5199\u65b9\u5f0f\u5f97\u5230\u4e86\u6781\u5927\u7684\u7b80\u5316\uff0c\u5168\u9762\u7684\u964d\u4f4e\u4e86\u7b56\u7565\u5f15\u64ce\u7684\u4f7f\u7528\u96be\u5ea6\u3002\u6b64\u5916 Kyverno \u7684\u7f16\u8bd1\u548c\u751f\u6210\u80fd\u529b\uff0c\u4f7f\u5b83\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u51c6\u5165\u63a7\u5236\u5668\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u81ea\u52a8\u5316\u5de5\u5177\u3002\u901a\u8fc7\u7ed3\u5408\u8fd9\u4e09\u79cd\u80fd\u529b\uff0c\u518d\u52a0\u4e0a\u6700\u8fd1\u589e\u52a0\u7684 API \u67e5\u8be2\u80fd\u529b\uff0cKyverno \u80fd\u591f\u6267\u884c Gatekeeper \u6240\u4e0d\u80fd\u6267\u884c\u7684\u4efb\u52a1\u3002\u8fd9\u79cd\u7b80\u5355\u6027\u52a0\u4e0a\u5b83\u7684\u81ea\u52a8\u5316\u80fd\u529b\u548c\u5bf9\u5176\u4ed6\u5de5\u5177\u7684\u6574\u5408\uff0c\u4e3a\u65b0\u7528\u6237\u4ee5\u53ca\u6709\u7ecf\u9a8c\u7684\u7528\u6237\u548c\u64cd\u4f5c\u8005\u5e26\u6765\u4e86\u5de8\u5927\u7684\u4ef7\u503c\u3002 \u5f53\u7136\u5177\u4f53\u9009\u62e9\u54ea\u4e00\u4e2a\u5de5\u5177\uff0c\u8fd8\u662f\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u9650\u5236\u6761\u4ef6\u8fdb\u884c\u8bc4\u4f30\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u662f\u6240\u6709\u751f\u4ea7\u73af\u5883\u7684\u7528\u6237\u90fd\u5e94\u8be5\u8ba1\u5212\u4f7f\u7528\u7b56\u7565\u5f15\u64ce\u6765\u4fdd\u62a4\u96c6\u7fa4\u7684\u5b89\u5168\u5e76\u7b80\u5316 Kubernetes \u7ba1\u7406\u3002","title":"\u5bf9\u6bd4"},{"location":"ConfigManage/Kyverno/#_2","text":"\u4f60\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u4ece\u6700\u65b0\u7248\u672c\u7684\u8d44\u6e90\u6e05\u5355\u5b89\u88c5 Kyverno\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c kubectl create -f https://raw.githubusercontent.com/kyverno/kyverno/main/config/install.yaml \u6b64\u5916\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff1a \u279c helm repo add kyverno https://kyverno.github.io/kyverno/ \u279c helm repo update # Install the Kyverno Helm chart into a new namespace called \"kyverno\" \u279c helm install kyverno kyverno/kyverno -n kyverno --create-namespace \u5b89\u88c5\u5b8c\u6210\u4f1a\u521b\u5efa\u4e00\u4e2a kyverno \u547d\u540d\u7a7a\u95f4\uff0c\u540c\u6837\u4e5f\u5305\u542b\u4e00\u4e9b\u76f8\u5173\u7684 CRD\uff1a \u279c kubectl get pods -n kyverno NAME READY STATUS RESTARTS AGE kyverno-69bdfcfc7c-dbtlt 1 /1 Running 0 29m \u279c kubectl get validatingwebhookconfiguration NAME WEBHOOKS AGE kyverno-policy-validating-webhook-cfg 1 14m kyverno-resource-validating-webhook-cfg 2 14m \u279c kubectl get mutatingwebhookconfigurations NAME WEBHOOKS AGE kyverno-policy-mutating-webhook-cfg 1 14m kyverno-resource-mutating-webhook-cfg 2 14m kyverno-verify-mutating-webhook-cfg 1 14m \u279c kubectl get crd | grep kyverno clusterpolicies.kyverno.io 2022 -03-29T07:21:22Z clusterreportchangerequests.kyverno.io 2022 -03-29T07:21:22Z generaterequests.kyverno.io 2022 -03-29T07:21:22Z policies.kyverno.io 2022 -03-29T07:21:22Z reportchangerequests.kyverno.io 2022 -03-29T07:21:23Z \u53ef\u4ee5\u770b\u51fa\u5b89\u88c5\u5b8c\u6210\u540e\u521b\u5efa\u4e86\u51e0\u4e2a validatingwebhookconfiguration \u4e0e mutatingwebhookconfigurations \u5bf9\u8c61\u3002","title":"\u5b89\u88c5"},{"location":"ConfigManage/Kyverno/#_3","text":"\u4f7f\u7528 Kyverno \u5176\u5b9e\u5c31\u662f\u5bf9\u7b56\u7565\u548c\u89c4\u5219\u7684\u5e94\u7528\uff0cKyverno \u7b56\u7565\u662f\u89c4\u5219\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a match \u58f0\u660e\u3001\u4e00\u4e2a\u53ef\u9009\u7684 exclude \u58f0\u660e\u4ee5\u53ca validate\u3001mutate\u3001generate \u6216 verifyImages \u58f0\u660e\u4e4b\u4e00\u7ec4\u6210\uff0c\u6bcf\u4e2a\u89c4\u5219\u53ea\u80fd\u5305\u542b\u4e00\u4e2a validate\u3001mutate\u3001generate \u6216 verifyImages \u5b50\u58f0\u660e\u3002 \u7b56\u7565\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u96c6\u7fa4\u8303\u56f4\u7684\u8d44\u6e90\uff08ClusterPolicy\uff09\u6216\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\u8d44\u6e90\uff08Policy\uff09\u3002 Policy \u5c06\u4ec5\u9002\u7528\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684 namespace \u5185\u7684\u8d44\u6e90 ClusterPolicy \u5e94\u7528\u4e8e\u5339\u914d\u8de8\u6240\u6709 namespace \u7684\u8d44\u6e90","title":"\u7b56\u7565\u4e0e\u89c4\u5219"},{"location":"ConfigManage/Kyverno/#_4","text":"\u7f16\u5199\u7b56\u7565\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49 Policy \u6216\u8005 ClusterPolicy \u5bf9\u8c61\u3002","title":"\u7b56\u7565\u5b9a\u4e49"},{"location":"ConfigManage/Kyverno/#_5","text":"\u9a8c\u8bc1\u89c4\u5219\u57fa\u672c\u4e0a\u662f\u6211\u4eec\u4f7f\u7528\u6700\u5e38\u89c1\u548c\u6700\u5b9e\u7528\u7684\u89c4\u5219\u7c7b\u578b\uff0c\u5f53\u7528\u6237\u6216\u8fdb\u7a0b\u521b\u5efa\u65b0\u8d44\u6e90\u65f6\uff0cKyverno \u5c06\u6839\u636e\u9a8c\u8bc1\u89c4\u5219\u68c0\u67e5\u8be5\u8d44\u6e90\u7684\u5c5e\u6027\uff0c\u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u5219\u5141\u8bb8\u521b\u5efa\u8d44\u6e90\u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u5219\u521b\u5efa\u88ab\u963b\u6b62\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u7b56\u7565\uff0c\u8981\u6c42\u6240\u6709\u7684 pod \u90fd\u5305\u542b\u4e00\u4e2a kyverno \u7684\u6807\u7b7e\uff1a # kyverno-require-label.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : require-label spec : validationFailureAction : enforce rules : - name : check-for-labels match : resources : kinds : - Pod validate : message : \"label 'kyverno' is required\" pattern : metadata : labels : kyverno : \"?*\" \u4e0a\u9762\u7b56\u7565\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a validationFailureAction=[audit, enforce] \u5c5e\u6027\uff1a \u5f53\u5904\u4e8e audit \u6a21\u5f0f\u4e0b \uff0c\u6bcf\u5f53\u521b\u5efa\u8fdd\u53cd\u89c4\u5219\u96c6\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u89c4\u5219\u7684\u8d44\u6e90\u65f6\uff0c\u4f1a\u5141\u8bb8 admission review \u8bf7\u6c42\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u62a5\u544a\u4e2d\u3002 \u5f53\u5904\u4e8e enforce \u6a21\u5f0f\u4e0b \uff0c\u8d44\u6e90\u5728\u521b\u5efa\u65f6\u7acb\u5373\u88ab\u963b\u6b62\uff0c\u62a5\u544a\u4e2d\u4e0d\u4f1a\u6709\u3002 \u7136\u540e\u5c31\u662f\u4e0b\u9762\u4f7f\u7528 rules \u5c5e\u6027\u5b9a\u4e49\u7684\u89c4\u5219\u96c6\u5408\uff0cmatch \u7528\u4e8e\u8868\u793a\u5339\u914d\u7684\u8d44\u6e90\u8d44\u6e90\uff0cvalidate \u8868\u793a\u9a8c\u8bc1\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49 kyverno: \"?*\" \u8fd9\u6837\u7684\u6807\u7b7e\u8868\u793a\u5fc5\u987b\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u6807\u7b7e key\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u7b56\u7565\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f kyverno-require-label.yaml clusterpolicy.kyverno.io/require-label created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY require-label true enforce true \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u4e0d\u5e26\u6807\u7b7e kyverno \u7684 Pod\uff1a \u279c kubectl run busybox --image = busybox:1.28.4 --restart = Never -- sleep 1000000 Error from server: admission webhook \"validate.kyverno.svc-fail\" denied the request: resource Pod/default/busybox was blocked due to the following policies require-label: check-for-labels: 'validation error: label ''kyverno'' is required. Rule check-for-labels failed at path /metadata/labels/kyverno/' \u53ef\u4ee5\u770b\u5230\u63d0\u793a\uff0c\u9700\u8981\u4e00\u4e2a kyverno \u6807\u7b7e\uff0c\u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b Events \u4e8b\u4ef6\u6765\u4e86\u89e3\u7b56\u7565\u5e94\u7528\u60c5\u51b5\uff1a \u279c kubectl get events -A -w ...... metallb-system 9m25s Warning PolicyViolation daemonset/speaker policy 'require-label' ( Validation ) rule 'autogen-check-for-labels' failed. validation error: label 'kyverno' is required. Rule autogen-check-for-labels failed at path /spec/template/metadata/labels/kyverno/ default 0s Warning PolicyViolation clusterpolicy/require-label Rule ( s ) 'check-for-labels' failed to apply on resource Pod/default/busybox \u5982\u679c\u521b\u5efa\u7684 Pod \u5e26\u6709 kyverno \u6807\u7b7e\u5219\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\uff1a \u279c kubectl run busybox --image = busybox:1.28.4 --labels kyverno = demo --restart = Never -- sleep 1000000 pod/busybox created \u5982\u679c\u5c06 validationFailureAction \u7684\u503c\u66f4\u6539\u4e3a audit\uff0c\u5219\u5373\u4f7f\u6211\u4eec\u521b\u5efa\u7684 Pod \u4e0d\u5e26\u6709 kyverno \u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u6210\u529f\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728 PolicyReport \u5bf9\u8c61\u4e2d\u770b\u5230\u5bf9\u5e94\u7684\u8fdd\u89c4\u62a5\u544a\uff1a \u279c kubectl get policyreports NAME PASS FAIL WARN ERROR SKIP AGE polr-ns-default 0 2 0 0 0 20m \u279c kubectl describe policyreports |grep \"Result : \\+fail\" -B10 UID : 90d1dfc7-0e42-4133-8a65-4bbf559533a2 Results : Message: validation error : label 'kyverno' is required. Rule autogen-check-for-labels failed at path /spec/template/metadata/labels/kyverno/ Policy : require-label Resources : API Version : apps/v1 Kind : Deployment Name : minio Namespace : default UID : 86ccd8fc-07f6-47a4-a9ed-b9dec665dff3 Result : fail -- Nanos : 0 Seconds : 1648541980 Message : validation error : label 'kyverno' is required. Rule check-for-labels failed at path /metadata/labels/kyverno/ Policy : require-label Resources : API Version : v1 Kind : Pod Name : busybox Namespace : default UID : 7e593177-4366-462b-81cf-1057657ae099 Result : fail \u4ece\u4e0a\u9762\u7684\u62a5\u544a\u8d44\u6e90\u4e2d\u53ef\u4ee5\u770b\u5230\u8fdd\u53cd\u7b56\u7565\u7684\u8d44\u6e90\u5bf9\u8c61\u3002 \u53d8\u66f4\u89c4\u5219 \u53d8\u66f4\u89c4\u5219\u53ef\u4ee5\u7528\u4e8e\u4fee\u6539\u5339\u914d\u5230\u89c4\u5219\u7684\u8d44\u6e90\uff08\u6bd4\u5982\u89c4\u5219\u8bbe\u7f6e\u4e86 metadata \u5b57\u6bb5\u53ef\u4ee5\u548c\u8d44\u6e90\u7684 metadata \u8fdb\u884c\u5408\u5e76\uff09\uff0c\u5c31\u662f\u6839\u636e\u6211\u4eec\u8bbe\u7f6e\u7684\u89c4\u5219\u6765\u4fee\u6539\u5bf9\u5e94\u7684\u8d44\u6e90\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u4e00\u4e2a\u7b56\u7565\uff0c\u7ed9\u6240\u6709\u5305\u542b nginx \u955c\u50cf \u7684 pod \u90fd\u52a0\u4e0a\u4e00\u4e2a\u6807\u7b7e\uff08kyverno=nginx\uff09\uff1a # kyverno-mutate-label.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : nginx-label spec : rules : - name : nginx-label match : resources : kinds : - Pod mutate : patchStrategicMerge : metadata : labels : kyverno : nginx spec : (containers) : - (image) : \"*nginx*\" # \u5bb9\u5668\u955c\u50cf\u5305\u542b nginx \u5373\u53ef \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u8fd9\u4e2a\u7b56\u7565\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f kyverno-mutate-label.yaml clusterpolicy.kyverno.io/nginx-label created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY nginx-label true audit true require-label true enforce true \u73b0\u5728\u6211\u4eec\u4f7f\u7528 nginx \u955c\u50cf\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a Pod\uff1a \u279c kubectl run --image = nginx nginx pod/nginx created \u279c kubectl get pod nginx --show-labels NAME READY STATUS RESTARTS AGE LABELS nginx 1 /1 Running 0 29s kyverno = nginx,run = nginx \u53ef\u4ee5\u770b\u5230 Pod \u521b\u5efa\u6210\u529f\u540e\u5305\u542b\u4e86\u4e00\u4e2a kyverno=nginx \u6807\u7b7e\uff0c\u7531\u4e8e\u6709 kyverno \u6807\u7b7e\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u9a8c\u8bc1\u7b56\u7565\u4e5f\u662f\u901a\u8fc7\u7684\uff0c\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\u3002","title":"\u9a8c\u8bc1\u8d44\u6e90"},{"location":"ConfigManage/Kyverno/#_6","text":"\u751f\u6210\u89c4\u5219\u53ef\u7528\u4e8e\u5728\u521b\u5efa\u65b0\u8d44\u6e90\u6216\u66f4\u65b0\u6e90\u65f6\u521b\u5efa\u5176\u4ed6\u8d44\u6e90\uff0c\u4f8b\u5982\u4e3a\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u65b0 RoleBindings \u6216 Secret \u7b49\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u9700\u6c42\u662f\u5c06\u67d0\u4e2a Secret \u540c\u6b65\u5230\u5176\u4ed6\u547d\u540d\u7a7a\u95f4\u4e2d\u53bb\uff08\u6bd4\u5982 TLS \u5bc6\u94a5\u3001\u955c\u50cf\u4ed3\u5e93\u8ba4\u8bc1\u4fe1\u606f\uff09\uff0c\u624b\u52a8\u590d\u5236\u8fd9\u4e9b Secret \u6bd4\u8f83\u9ebb\u70e6\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Kyverno \u6765\u521b\u5efa\u4e00\u4e2a\u7b56\u7565\u5e2e\u52a9\u6211\u4eec\u540c\u6b65\u8fd9\u4e9b Secret\u3002\u6bd4\u5982\u5728 default \u547d\u540d\u7a7a\u95f4\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a regcred \u7684 Secret \u5bf9\u8c61\uff0c\u9700\u8981\u590d\u5236\u5230\u53e6\u5916\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u6e90 Secret \u53d1\u751f\u66f4\u6539\uff0c\u5b83\u8fd8\u5c06\u5411\u590d\u5236\u7684 Secret \u540c\u6b65\u66f4\u65b0\u3002 # kyverno-generate-secret.yaml apiVersion : kyverno.io/v1 kind : ClusterPolicy metadata : name : sync-secrets spec : rules : - name : sync-image-pull-secret match : resources : kinds : - Namespace generate : # \u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 kind : Secret name : regcred namespace : \"{{request.object.metadata.name}}\" # \u83b7\u53d6\u76ee\u6807\u547d\u540d\u7a7a\u95f4 synchronize : true clone : namespace : default name : regcred \u5148\u5728 default \u547d\u540d\u7a7a\u95f4\u4e2d\u51c6\u5907\u6211\u4eec\u7684 Secret \u5bf9\u8c61\uff1a \u279c kubectl create secret docker-registry regcred --docker-server = DOCKER_REGISTRY_SERVER --docker-username = DOCKER_USER --docker-password = DOCKER_PASSWORD --docker-email = DOCKER_EMAIL secret/regcred created \u7136\u540e\u5e94\u7528\u4e0a\u9762\u7684\u540c\u6b65 Secret \u7b56\u7565\uff1a \u279c kubectl apply -f kyverno-generate-secret.yaml clusterpolicy.kyverno.io/sync-secrets created \u279c kubectl get clusterpolicy NAME BACKGROUND ACTION READY nginx-label true audit true require-label true enforce true sync-secrets true audit true \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\uff1a \u279c kubectl create ns test namespace/test created \u279c kubectl get secret -n test NAME TYPE DATA AGE default-token-7b7cv kubernetes.io/service-account-token 3 7s regcred kubernetes.io/dockerconfigjson 1 6s \u53ef\u4ee5\u770b\u5230\u5728\u65b0\u5efa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u591a\u4e86\u4e00\u4e2a regcred \u7684 Secret \u5bf9\u8c61\u3002 \u66f4\u591a\u7684 Kyverno \u7b56\u7565\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5b98\u65b9\u7f51\u7ad9\uff1a https://kyverno.io/policies \uff0c\u53ef\u4ee5\u5728\u8be5\u7f51\u7ad9\u4e0a\u9762\u6839\u636e\u7b56\u7565\u7c7b\u578b\u3001\u5206\u7c7b\u3001\u4e3b\u9898\u7b49\u8fdb\u884c\u7b5b\u9009\u3002Kyverno \u5728\u7075\u6d3b\u3001\u5f3a\u5927\u548c\u6613\u7528\u4e4b\u95f4\u53d6\u5f97\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5e73\u8861\uff0c\u4e0d\u9700\u8981\u592a\u591a\u5b66\u4e60\u65f6\u95f4\uff0c\u5c31\u80fd\u591f\u63d0\u4f9b\u76f8\u5f53\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u5b98\u7f51\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u9488\u5bf9\u5404\u79cd\u573a\u666f\u7684\u6837\u4f8b\uff0c\u975e\u5e38\u503c\u5f97\u4f7f\u7528\u3002","title":"\u751f\u6210\u8d44\u6e90"},{"location":"ConfigManage/OPA/","text":"OPA \u7b56\u7565\u5f15\u64ce \u00b6 Open Policy Agent \u7b80\u79f0 OPA\uff0c\u662f\u4e00\u79cd\u5f00\u6e90\u7684\u901a\u7528\u7b56\u7565\u4ee3\u7406\u5f15\u64ce\uff0c\u662f CNCF \u6bd5\u4e1a\u7684\u9879\u76ee\u3002OPA \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u7ea7\u58f0\u660e\u5f0f\u8bed\u8a00 Rego\uff0c\u7b80\u5316\u4e86\u7b56\u7565\u89c4\u5219\u7684\u5b9a\u4e49\uff0c\u4ee5\u51cf\u8f7b\u7a0b\u5e8f\u4e2d\u7b56\u7565\u7684\u51b3\u7b56\u8d1f\u62c5\u3002\u5728\u5fae\u670d\u52a1\u3001Kubernetes\u3001CI/CD\u3001API \u7f51\u5173\u7b49\u573a\u666f\u4e2d\u5747\u53ef\u4ee5\u4f7f\u7528 OPA \u6765\u5b9a\u4e49\u7b56\u7565\u3002 \u6211\u4eec\u8fd9\u91cc\u4e3b\u8981\u8bb2\u89e3\u5728 Kubernetes \u4e2d\u5982\u4f55\u96c6\u6210 OPA\uff0c\u5728 Kubernetes \u4e2d OPA \u662f\u901a\u8fc7 Admission Controllers \u6765\u5b9e\u73b0\u5b89\u5168\u7b56\u7565\u7684\u3002\u4e8b\u5b9e\u4e0a\u4f7f\u7528 Pod \u5b89\u5168\u7b56\u7565\uff08\u8981\u5e9f\u5f03\u4e86\uff09\u6765\u6267\u884c\u6211\u4eec\u7684\u5b89\u5168\u7b56\u7565\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u7136\u800c\uff0c\u6839\u636e\u5b9a\u4e49\uff0cPSP \u53ea\u80fd\u5e94\u7528\u4e8e pods\u3002\u5b83\u4eec\u4e0d\u80fd\u5904\u7406\u5176\u4ed6 Kubernetes \u8d44\u6e90\uff0c\u5982 Ingresses\u3001Deployments\u3001Services \u7b49\uff0cOPA \u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u4efb\u4f55 Kubernetes \u8d44\u6e90\u3002OPA \u4f5c\u4e3a\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u90e8\u7f72\u5230 Kubernetes\uff0c\u5b83\u62e6\u622a\u53d1\u9001\u5230 APIServer \u7684 API \u8c03\u7528\uff0c\u5e76\u9a8c\u8bc1\u548c/\u6216\u4fee\u6539\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 OPA \u7b56\u7565\uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u7684\u4e0d\u540c\u7ec4\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f pods\uff0c\u4f8b\u5982\uff0c\u6709\u4e00\u79cd\u7b56\u7565\uff0c\u5f3a\u5236\u7528\u6237\u5728\u5176\u670d\u52a1\u4e2d\u4f7f\u7528\u516c\u53f8\u7684\u57df\uff0c\u5e76\u786e\u4fdd\u7528\u6237\u53ea\u4ece\u516c\u53f8\u7684\u955c\u50cf\u4ed3\u5e93\u4e2d\u62c9\u53d6\u955c\u50cf\u3002 \u6982\u8ff0 \u00b6 OPA \u5c06\u7b56\u7565\u51b3\u7b56\u4e0e\u7b56\u7565\u6267\u884c\u5206\u79bb\uff0c\u5f53\u5e94\u7528\u9700\u8981\u505a\u51fa\u7b56\u7565\u51b3\u7b56\u65f6\uff0c\u5b83\u4f1a\u67e5\u8be2 OPA \u5e76\u63d0\u4f9b\u7ed3\u6784\u5316\u6570\u636e\uff08\u4f8b\u5982 JSON\uff09\u4f5c\u4e3a\u8f93\u5165\uff0cOPA \u63a5\u53d7\u4efb\u610f\u7ed3\u6784\u5316\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u3002 OPA \u901a\u8fc7\u8bc4\u4f30\u67e5\u8be2\u8f93\u5165\u7b56\u7565\u548c\u6570\u636e\u6765\u751f\u6210\u7b56\u7565\u51b3\u7b56\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u7b56\u7565\u4e2d\u63cf\u8ff0\u51e0\u4e4e\u4efb\u4f55\u7684\u4e0d\u53d8\u56e0\u7d20\uff0c\u4f8b\u5982\uff1a \u54ea\u4e9b\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9b\u8d44\u6e90 \u54ea\u4e9b\u5b50\u7f51\u7684\u51fa\u53e3\u6d41\u91cf\u88ab\u5141\u8bb8 \u5de5\u4f5c\u8d1f\u8f7d\u5fc5\u987b\u90e8\u7f72\u5230\u54ea\u4e9b\u96c6\u7fa4 \u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u4ece\u54ea\u91cc\u4e0b\u8f7d \u5bb9\u5668\u53ef\u4ee5\u7528\u54ea\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u80fd\u529b\u6765\u6267\u884c \u7cfb\u7edf\u5728\u4e00\u5929\u4e2d\u7684\u54ea\u4e9b\u65f6\u95f4\u53ef\u4ee5\u88ab\u8bbf\u95ee \u7b56\u7565\u51b3\u5b9a\u4e0d\u9650\u4e8e\u7b80\u5355\u7684\u662f/\u5426\u6216\u5141\u8bb8/\u62d2\u7edd\uff0c\u4e0e\u67e5\u8be2\u8f93\u5165\u4e00\u6837\uff0c\u4f60\u7684\u7b56\u7565\u53ef\u4ee5\u751f\u6210\u4efb\u610f\u7ed3\u6784\u5316\u6570\u636e\u4f5c\u4e3a\u8f93\u51fa\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002OPA \u7684\u7b56\u7565\u662f\u7528\u4e00\u79cd\u53eb\u505a Rego \u7684\u9ad8\u7ea7\u58f0\u660e\u6027\u8bed\u8a00\u6765\u58f0\u660e\u7684\uff0cRego \u662f\u4e13\u95e8\u4e3a\u8868\u8fbe\u590d\u6742\u7684\u5206\u5c42\u6570\u636e\u7ed3\u6784\u7684\u7b56\u7565\u800c\u8bbe\u8ba1\u7684\u3002 \u5728 Kubernetes \u4e2d\uff0c\u51c6\u5165\u63a7\u5236\u5668\u5728\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u671f\u95f4\u5bf9\u5bf9\u8c61\u5b9e\u65bd\u7b56\u7565\u3002\u51c6\u5165\u63a7\u5236\u662f Kubernetes \u4e2d\u7b56\u7565\u6267\u884c\u7684\u57fa\u7840\u3002\u901a\u8fc7\u5c06 OPA \u90e8\u7f72\u4e3a\u51c6\u5165\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\uff1a \u8981\u6c42\u5728\u6240\u6709\u8d44\u6e90\u4e0a\u4f7f\u7528\u7279\u5b9a\u6807\u7b7e \u8981\u6c42\u5bb9\u5668\u955c\u50cf\u6765\u81ea\u4f01\u4e1a\u955c\u50cf\u4ed3\u5e93 \u8981\u6c42\u6240\u6709 Pod \u6307\u5b9a\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236 \u9632\u6b62\u521b\u5efa\u51b2\u7a81\u7684 Ingress \u5bf9\u8c61 ...... Kubernetes APIServer \u914d\u7f6e\u4e3a\u5728\u521b\u5efa\u3001\u66f4\u65b0\u6216\u5220\u9664\u5bf9\u8c61\u65f6\u67e5\u8be2 OPA \u4ee5\u83b7\u53d6\u51c6\u5165\u63a7\u5236\u7b56\u7565\u3002APIServer \u5c06 webhook \u8bf7\u6c42\u4e2d\u7684\u6574\u4e2a\u5bf9\u8c61\u53d1\u9001\u7ed9 OPA\uff0cOPA \u4f7f\u7528\u51c6\u5165\u5ba1\u67e5\u4f5c\u4e3a\u8f93\u5165\u6765\u8bc4\u4f30\u5b83\u5df2\u52a0\u8f7d\u7684\u7b56\u7565\u3002\u8fd9\u4e2a\u5176\u5b9e\u548c\u6211\u4eec\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u662f\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u7f16\u5199\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u7f16\u5199\u7b56\u7565\u89c4\u5219\uff0cOPA \u5c31\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u89c4\u5219\u53bb\u5bf9\u8f93\u5165\u7684\u5bf9\u8c61\u8fdb\u884c\u9a8c\u8bc1\u3002 \u90e8\u7f72 \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e0b\u5982\u4f55\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u96c6\u6210 OPA\uff0c\u7531\u4e8e Kubernetes \u4e2d\u662f\u901a\u8fc7\u51c6\u5165\u63a7\u5236\u5668\u6765\u96c6\u6210 OPA \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u542f\u7528 ValidatingAdmissionWebhook \u8fd9\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a opa \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u8ba9 OPA \u4ece\u8be5\u547d\u540d\u7a7a\u95f4\u4e2d\u7684 ConfigMap \u53bb\u52a0\u8f7d\u7b56\u7565\uff1a \u279c kubectl create namespace opa \u5e76\u5c06\u4e0a\u4e0b\u6587\u66f4\u6539\u4e3a opa \u547d\u540d\u7a7a\u95f4\uff1a \u279c kubectl config current-context kubernetes-admin@kubernetes \u279c kubectl config set-context kubernetes-admin@kubernetes --namespace = opa Context \"kubernetes-admin@kubernetes\" modified. \u279c kubectl get pods No resources found in opa namespace. \u4e3a\u4e86\u4fdd\u62a4 APIServer \u548c OPA \u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e TLS \u8bc1\u4e66\u3002 \u521b\u5efa\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u548c\u5bc6\u94a5\uff1a \u279c openssl genrsa -out ca.key 2048 \u279c openssl req -x509 -new -nodes -key ca.key -days 100000 -out ca.crt -subj \"/CN=admission_ca\" \u4e3a OPA \u751f\u6210\u5bc6\u94a5\u548c\u8bc1\u4e66\uff1a cat >server.conf <<EOF [req] req_extensions = v3_req distinguished_name = req_distinguished_name [req_distinguished_name] [ v3_req ] basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment extendedKeyUsage = clientAuth, serverAuth subjectAltName = @alt_names [ alt_names ] DNS.1 = opa.opa.svc EOF \u279c openssl genrsa -out server.key 2048 \u279c openssl req -new -key server.key -out server.csr -subj \"/CN=opa.opa.svc\" -config server.conf \u279c openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 100000 -extensions v3_req -extfile server.conf \u521b\u5efa\u4e00\u4e2a Kubernetes TLS Secret \u6765\u5b58\u50a8\u6211\u4eec\u7684 OPA \u51ed\u8bc1\uff1a \u279c kubectl create secret tls opa-server --cert = server.crt --key = server.key \u8bc1\u4e66\u51c6\u5907\u597d\u540e\u5c31\u53ef\u4ee5\u90e8\u7f72\u51c6\u5165\u63a7\u5236\u5668\u4e86\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # opa-admission-controller.yaml # Grant OPA/kube-mgmt read-only access to resources. This lets kube-mgmt # replicate resources into OPA so they can be used in policies. kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : opa-viewer roleRef : kind : ClusterRole name : view apiGroup : rbac.authorization.k8s.io subjects : - kind : Group name : system:serviceaccounts:opa apiGroup : rbac.authorization.k8s.io --- # Define role for OPA/kube-mgmt to update configmaps with policy status. kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : namespace : opa name : configmap-modifier rules : - apiGroups : [ \"\" ] resources : [ \"configmaps\" ] verbs : [ \"update\" , \"patch\" ] --- # Grant OPA/kube-mgmt role defined above. kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : namespace : opa name : opa-configmap-modifier roleRef : kind : Role name : configmap-modifier apiGroup : rbac.authorization.k8s.io subjects : - kind : Group name : system:serviceaccounts:opa apiGroup : rbac.authorization.k8s.io --- kind : Service apiVersion : v1 metadata : name : opa namespace : opa spec : selector : app : opa ports : - name : https protocol : TCP port : 443 targetPort : 443 --- apiVersion : apps/v1 kind : Deployment metadata : name : opa namespace : opa spec : selector : matchLabels : app : opa template : metadata : labels : app : opa spec : containers : - name : opa image : openpolicyagent/opa:latest args : - \"run\" - \"--server\" - \"--tls-cert-file=/certs/tls.crt\" - \"--tls-private-key-file=/certs/tls.key\" - \"--addr=0.0.0.0:443\" - \"--addr=http://127.0.0.1:8181\" - \"--log-level=debug\" - \"--log-format=json-pretty\" volumeMounts : - readOnly : true mountPath : /certs name : opa-server readinessProbe : httpGet : path : /health scheme : HTTPS port : 443 initialDelaySeconds : 5 periodSeconds : 10 livenessProbe : httpGet : path : /health scheme : HTTPS port : 443 initialDelaySeconds : 10 periodSeconds : 15 - name : kube-mgmt image : openpolicyagent/kube-mgmt:4.0.0 args : - --replicate-cluster=v1/namespaces - --replicate=networking.k8s.io/v1/ingresses - --opa-url=http://127.0.0.1:8181/v1 - --enable-data=true - --enable-policies=true - --policies=opa - --require-policy-label=true volumes : - name : opa-server secret : secretName : opa-server --- kind : ConfigMap apiVersion : v1 metadata : name : opa-default-system-main namespace : opa labels : openpolicyagent.org/policy : rego data : main : | package system import data.kubernetes.admission main = { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"response\": response, } default uid = \"\" uid = input.request.uid response = { \"allowed\": false, \"uid\": uid, \"status\": { \"message\": reason, }, } { reason = concat(\", \", admission.deny) reason != \"\" } else = {\"allowed\": true, \"uid\": uid} \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a kube-mgmt \u7684 Sidecar \u5bb9\u5668\uff0c\u8be5\u5bb9\u5668\u53ef\u4ee5\u5c06 ConfigMap \u5bf9\u8c61\u4e2d\u7684\u7b56\u7565\u52a8\u6001\u52a0\u8f7d\u5230 OPA \u4e2d\uff0ckube-mgmt \u5bb9\u5668\u8fd8\u53ef\u4ee5\u5c06\u4efb\u4f55\u5176\u4ed6 Kubernetes \u5bf9\u8c61\u4f5c\u4e3a JSON \u6570\u636e\u52a0\u8f7d\u5230 OPA \u4e2d\u3002 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f Service \u7684\u540d\u79f0\uff08opa\uff09\u5fc5\u987b\u4e0e\u6211\u4eec\u8bc1\u4e66\u914d\u7f6e\u7684 CN \u5339\u914d\uff0c\u5426\u5219 TLS \u901a\u4fe1\u4f1a\u5931\u8d25\u3002\u5728 kube-mgmt \u5bb9\u5668\u4e2d\u8fd8\u6307\u5b9a\u4e86\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\uff1a Parameters --replicate-cluster=v1/namespaces --replicate=networking.k8s.io/v1/ingresses --enable-policies=true --policies=opa --require-policy-label=true \u524d\u4e24\u4e2a\u53c2\u6570\u5141\u8bb8 sidecar \u5bb9\u5668\u590d\u5236\u547d\u540d\u7a7a\u95f4\u3001Ingress \u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230 OPA \u5f15\u64ce\u4e2d\uff0cenable-policies=true \u8868\u793a\u4f1a\u901a\u8fc7 Configmap \u52a0\u8f7d OPA \u7b56\u7565\uff0c\u4e0b\u9762\u7684 --policies=opa \u8868\u793a\u4ece opa \u547d\u540d\u7a7a\u95f4\u4e2d\u7684 Configmap \u6765\u52a0\u8f7d\u7b56\u7565\uff0c\u5982\u679c\u8fd8\u914d\u7f6e\u4e86 --require-policy-label=true \u53c2\u6570\uff0c\u5219\u9700\u8981 Configmap \u4e2d\u5e26\u6709 openpolicyagent.org/policy=rego \u8fd9\u4e2a\u6807\u7b7e\u624d\u4f1a\u88ab\u81ea\u52a8\u52a0\u8f7d\u3002 \u73b0\u5728\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\uff1a \u279c kubectl apply -f opa-admission-controller.yaml \u279c kubectl get pods NAME READY STATUS RESTARTS AGE opa-6cd68f74f-s9zcv 2 /2 Running 0 5m28s \u4e3a\u4e86\u8ba9\u51c6\u5165\u63a7\u5236\u5668\u5de5\u4f5c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u51c6\u5165 webhook \u6765\u63a5\u6536\u51c6\u5165 HTTP \u56de\u8c03\u5e76\u6267\u884c\u5b83\u4eec\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 webhook \u914d\u7f6e\u6587\u4ef6\uff1a \u279c cat > webhook-configuration.yaml <<EOF kind : ValidatingWebhookConfiguration apiVersion : admissionregistration.k8s.io/v1 metadata : name : opa-validating-webhook webhooks : - name : validating-webhook.openpolicyagent.org admissionReviewVersions : [ \"v1\" , \"v1beta1\" ] namespaceSelector : matchExpressions : - key : openpolicyagent.org/webhook operator : NotIn values : - ignore failurePolicy : Ignore rules : - apiGroups : - '*' apiVersions : - '*' operations : - '*' resources : - '*' sideEffects : None clientConfig : caBundle : $(cat ca.crt | base64 | tr -d '\\n') service : namespace : opa name : opa EOF \u4e0a\u9762\u7684 webhook \u4e2d\u914d\u7f6e\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u4e0d\u4f1a\u76d1\u542c\u6765\u81ea\u5e26\u6709 openpolicyagent.org/webhook=ignore \u6807\u7b7e\u7684\u547d\u540d\u7a7a\u95f4\u7684\u64cd\u4f5c \u4f1a\u76d1\u542c\u6240\u6709\u8d44\u6e90\u4e0a\u7684 CREATE \u548c UPDATE \u64cd\u4f5c \u5b83\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684 CA \u8bc1\u4e66\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0e OPA \u901a\u4fe1 \u73b0\u5728\uff0c\u5728\u4f7f\u7528\u914d\u7f6e\u4e4b\u524d\uff0c\u6211\u4eec\u6807\u8bb0 kube-system \u548c opa \u547d\u540d\u7a7a\u95f4\uff0c\u4f7f\u5b83\u4eec\u4e0d\u5728 webhook \u8303\u56f4\u5185\uff1a \u279c kubectl label ns kube-system openpolicyagent.org/webhook = ignore \u279c kubectl label ns opa openpolicyagent.org/webhook = ignore \u7136\u540e\u5e94\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u5bf9\u8c61\u5c06 OPA \u6ce8\u518c\u4e3a\u51c6\u5165\u63a7\u5236\u5668\uff1a \u279c kubectl apply -f webhook-configuration.yaml \u279c kubectl get pods NAME READY STATUS RESTARTS AGE opa-6cd68f74f-s9zcv 2 /2 Running 0 72m \u279c kubectl get validatingwebhookconfiguration NAME WEBHOOKS AGE opa-validating-webhook 1 2m14s \u7b56\u7565\u793a\u4f8b \u00b6 OPA \u4f7f\u7528 Rego \u8bed\u8a00\u6765\u63cf\u8ff0\u7b56\u7565\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5b98\u65b9\u6587\u6863\u4e2d\u63d0\u5230\u7684\u793a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u521b\u5efa\u4e00\u4e2a\u9650\u5236 Ingress \u53ef\u4ee5\u4f7f\u7528\u7684\u4e3b\u673a\u540d\u7b56\u7565\uff0c\u53ea\u5141\u8bb8\u5339\u914d\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e3b\u673a\u540d\u3002 \u521b\u5efa\u5982\u4e0b\u6240\u793a\u540d\u4e3a ingress-allowlist.rego \u7684\u7b56\u7565\u6587\u4ef6\uff1a < ! -- \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u58f0\u660e\u89c4\u5219\u5c5e\u4e8e\u4ec0\u4e48\u5305\uff0c\u8fd9\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5305\u88c5\u7c7b\u4f3c\uff0c\u662f\u5c06\u7c7b\u4f3c\u89c4\u5219\u5f52\u5165\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u79cd\u65b9\u5f0f\u3002 --> package kubernetes . admission import data . kubernetes . namespaces operations = { \"CREATE\" , \"UPDATE\" } deny [ msg ] { input . request . kind . kind == \"Ingress\" operations [ input . request . operation ] host := input . request . object . spec . rules [ _ ]. host not fqdn_matches_any ( host , valid_ingress_hosts ) msg := sprintf ( \"invalid ingress host %q\" , [ host ]) } valid_ingress_hosts = { host | allowlist := namespaces [ input . request . namespace ]. metadata . annotations [ \"ingress-allowlist\" ] hosts := split ( allowlist , \",\" ) host := hosts [ _ ] } fqdn_matches_any ( str , patterns ) { fqdn_matches ( str , patterns [ _ ]) } fqdn_matches ( str , pattern ) { pattern_parts := split ( pattern , \".\" ) pattern_parts [ 0 ] == \"*\" str_parts := split ( str , \".\" ) n_pattern_parts := count ( pattern_parts ) n_str_parts := count ( str_parts ) suffix := trim ( pattern , \"*.\" ) endswith ( str , suffix ) } fqdn_matches ( str , pattern ) { not contains ( pattern , \"*\" ) str == pattern } \u5982\u679c\u4f60\u662f Rego \u65b0\u624b\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u770b\u4e0a\u53bb\u53ef\u80fd\u6709\u70b9\u964c\u751f\uff0c\u4f46 Rego \u8ba9\u5b9a\u4e49\u7b56\u7565\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e0b\u8fd9\u4e2a\u7b56\u7565\u662f\u5982\u4f55\u4f7f\u7528\u767d\u540d\u5355\u4e2d\u7684 Ingress \u547d\u540d\u7a7a\u95f4\u5f3a\u5236\u6267\u884c\u7684\uff1a Row Description 1\uff1a package \u7684\u4f7f\u7528\u65b9\u5f0f\u4e0e\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\u662f\u4e00\u6837\u7684 5\uff1a \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u4e24\u9879\u64cd\u4f5c\u7684\u6570\u636e\u96c6\uff1aCREATE \u548c UPDATE 7\uff1a \u8fd9\u662f\u7b56\u7565\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u4ee5 deny \u5f00\u5934\uff0c\u7136\u540e\u662f\u7b56\u7565\u6b63\u6587\u3002\u5982\u679c\u6b63\u6587\u4e2d\u7684\u8bed\u53e5\u7ec4\u5408\u8bc4\u4f30\u4e3a\u771f\uff0c\u5219\u8fdd\u53cd\u7b56\u7565\uff0c\u4fbf\u4f1a\u963b\u6b62\u64cd\u4f5c\uff0c\u5e76\u5c06\u6d88\u606f\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u8bf4\u660e\u64cd\u4f5c\u88ab\u963b\u6b62\u7684\u539f\u56e0 8\uff1a \u6307\u5b9a\u8f93\u5165\u5bf9\u8c61\uff0c\u53d1\u9001\u5230 OPA \u7684\u4efb\u4f55 JSON \u6d88\u606f\u90fd\u662f\u4ece\u8f93\u5165\u5bf9\u8c61\u7684\u6839\u90e8\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u904d\u5386 JSON \u5bf9\u8c61\uff0c\u76f4\u5230\u627e\u5230\u6709\u95ee\u9898\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u662f Ingress \u624d\u80fd\u5e94\u7528\u8be5\u7b56\u7565 9\uff1a \u6211\u4eec\u9700\u8981\u5e94\u7528\u7b56\u7565\u6765\u521b\u5efa\u6216\u66f4\u65b0\u8d44\u6e90\uff0c\u5728 Rego \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 operations[input.requset.operations] \u6765\u5b9e\u73b0\uff0c\u65b9\u62ec\u53f7\u5185\u7684\u4ee3\u7801\u4f1a\u63d0\u53d6\u8bf7\u6c42\u4e2d\u6307\u5b9a\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u5b83\u4e0e\u7b2c5\u884c\u7684\u64cd\u4f5c\u96c6\u4e2d\u5b9a\u4e49\u7684\u5143\u7d20\u76f8\u5339\u914d\uff0c\u5219\u8be5\u8bed\u53e5\u4e3a\u771f 10\uff1a \u4e3a\u4e86\u63d0\u53d6 Ingress \u5bf9\u8c61\u7684 host \u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u8fed\u4ee3 JSON \u5bf9\u8c61\u7684 rules \u6570\u7ec4\uff0c\u540c\u6837 Rego \u63d0\u4f9b\u4e86 _ \u5b57\u7b26\u6765\u5faa\u73af\u6d4f\u89c8\u6570\u7ec4\uff0c\u5e76\u5c06\u6240\u6709\u5143\u7d20\u8fd4\u56de\u5230 host \u53d8\u91cf\u4e2d 11\uff1a \u73b0\u5728\u6211\u4eec\u6709\u4e86 host \u53d8\u91cf\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5b83\u4e0d\u662f\u5217\u5165\u767d\u540d\u5355\u7684\u4e3b\u673a\uff0c\u8981\u8bb0\u4f4f\uff0c\u53ea\u6709\u5728\u8bc4\u4f30\u4e3a true \u65f6\u624d\u4f1a\u8fdd\u53cd\u8be5\u7b56\u7565\uff0c\u4e3a\u4e86\u68c0\u67e5\u4e3b\u673a\u662f\u5426\u6709\u6548\uff0c\u6211\u4eec\u4f7f\u7528\u7b2c21\u884c\u4e2d\u5b9a\u4e49\u7684 fqdn_matches_any \u51fd\u6570 12\uff1a \u5b9a\u4e49\u5e94\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u6d88\u606f\uff0c\u8bf4\u660e\u65e0\u6cd5\u521b\u5efa Ingress \u5bf9\u8c61\u7684\u539f\u56e0 15-19\uff1a \u8fd9\u90e8\u5206\u4ece Ingress \u547d\u540d\u7a7a\u95f4\u7684 annotations \u4e2d\u63d0\u53d6\u5217\u5165\u767d\u540d\u5355\u7684\u4e3b\u673a\u540d\uff0c\u4e3b\u673a\u540d\u6dfb\u52a0\u5728\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u4e2d\uff0c\u4f7f\u7528 split \u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u5c06\u5176\u8f6c\u6362\u4e3a\u5217\u8868\u3002\u6700\u540e\uff0c_ \u7528\u4e8e\u904d\u5386\u6240\u6709\u63d0\u53d6\u7684\u4e3b\u673a\u5217\u8868\uff0c\u5c06\u7ed3\u679c\u901a\u8fc7 21\uff1a \u8be5\u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u4e00\u4e2a patterns \u5217\u8868\u4e2d\u641c\u7d22\u5b83\uff0c\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\u662f\u8c03\u7528\u7684\u4e0b\u65b9\u7684 fqdn_matches \u51fd\u6570\u6765\u5b9e\u73b0\u7684\u3002\u5728 Rego \u4e2d\uff0c\u53ef\u4ee5\u5b9a\u4e49\u5177\u6709\u591a\u4e2a\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\uff0c\u53ea\u8981\u5b83\u4eec\u90fd\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5f53\u8c03\u7528\u591a\u6b21\u5b9a\u4e49\u7684\u51fd\u6570\u65f6\uff0c\u5c06\u8c03\u7528\u8be5\u51fd\u6570\u7684\u6240\u6709\u5b9e\u4f8b 25-33\uff1a \u7b2c\u4e00\u4e2a fqdn_matches \u51fd\u6570\u7684\u5b9a\u4e49\u3002 \u9996\u5148\u5b83\u901a\u8fc7\u70b9 . \u5c06 pattern \u8fdb\u884c\u62c6\u5206\uff0c\u6bd4\u5982 *.example.com \u4f1a\u5206\u5272\u6210 *\u3001example \u548c com \u63a5\u4e0b\u6765\u786e\u4fdd pattern \u7684\u7b2c\u4e00\u4e2a\u6807\u8bb0\u662f\u661f\u53f7\uff0c\u540c\u6837\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6309\u7167 . \u8fdb\u884c\u62c6\u5206 \u5220\u9664 pattern \u4e2d\u7684 * . \u6700\u540e\u8bc4\u4f30\u8f93\u5165\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u540e\u7f00\u7ed3\u5c3e\uff0c\u6bd4\u5982\u5982\u679c\u5141\u8bb8\u7684\u6a21\u5f0f\u5b57\u7b26\u4e32\u662f *.mydomain.com\uff0c\u88ab\u8bc4\u4f30\u7684\u5b57\u7b26\u4e32\u662f www.example.com \uff0c\u5219\u8fdd\u53cd\u4e86\u8be5\u7b56\u7565\uff0c\u56e0\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f mydomain.com \u7684\u4e00\u90e8\u5206 35-38\uff1a \u7b2c\u4e8c\u4e2a\u9a8c\u8bc1\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u9a8c\u8bc1\u4e0d\u4f7f\u7528\u901a\u914d\u7b26\u7684\u6a21\u5f0f\uff0c\u4f8b\u5982\uff0c\u5f53\u6a21\u5f0f\u5199\u4e3a mycompany.mydomain.com \u7684\u65f6\u5019 \u9996\u5148\uff0c\u9700\u8981\u786e\u4fdd\u63d0\u4f9b\u7684\u6a21\u5f0f\u4e0d\u5305\u542b\u901a\u914d\u7b26\uff0c\u5426\u5219\uff0c\u8be5\u8bed\u53e5\u5c06\u8bc4\u4f30\u4e3a false \u5e76\u4e14\u51fd\u6570\u5c06\u4e0d\u4f1a\u7ee7\u7eed \u5982\u679c\u6a21\u5f0f\u6307\u7684\u662f\u7279\u5b9a\u7684\u57df\u540d\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd fqdn \u4e0e\u8be5\u6a21\u5f0f\u5339\u914d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6a21\u5f0f\u662f mycompany.mydomain.com\uff0c\u90a3\u4e48\u4e3b\u673a\u7684 fqdn \u4e5f\u5fc5\u987b\u662f mycompany.mydomain.com \u6211\u4eec\u4e4b\u6240\u4ee5\u6709\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\uff0c\u662f\u56e0\u4e3a Rego \u8bed\u8a00\u7684\u4e00\u4e2a\u9650\u5236\uff0c\u5b83\u4f1a\u963b\u6b62\u51fd\u6570\u4ea7\u751f\u4e00\u4e2a\u4ee5\u4e0a\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u6240\u4ee5\uff0c\u8981\u60f3\u5728\u540c\u4e00\u65f6\u95f4\u7528\u4e0d\u540c\u7684\u903b\u8f91\u8fdb\u884c\u591a\u4e2a\u9a8c\u8bc1\uff0c\u5fc5\u987b\u4f7f\u7528\u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u3002 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5728\u5c06 Rego \u4ee3\u7801\u5e94\u7528\u5230\u96c6\u7fa4\u4e4b\u524d\u4e00\u5b9a\u8981\u8fdb\u884c\u5168\u65b9\u4f4d\u6d4b\u8bd5\uff0c\u6bd4\u5982\u53ef\u4ee5\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 Rego Playground \u6765\u5bf9\u4ee3\u7801\u8fdb\u884c\u9a8c\u8bc1\u3002 \u8981\u5c06\u8be5\u7b56\u7565\u5e94\u7528\u4e8e\u96c6\u7fa4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e0a\u9762\u7684 Rego \u6587\u4ef6\u4ee5 Configmap \u7684\u5f62\u5f0f\u5e94\u7528\u5230 opa \u547d\u540d\u7a7a\u95f4\u4e2d\uff1a \u279c kubectl create configmap ingress-allowlist --from-file = ingress-allowlist.rego \u279c kubectl label configmap ingress-allowlist openpolicyagent.org/policy = rego \u7531\u4e8e\u6211\u4eec\u5f00\u542f\u4e86 --require-policy-label \u53c2\u6570\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5e26\u4e0a\u5bf9\u5e94\u7684\u6807\u7b7e\u3002\u521b\u5efa\u5b8c\u6210\u540e\u6700\u597d\u68c0\u67e5\u4e0b\u6211\u4eec\u7684\u7b56\u7565\u662f\u5426\u88ab OPA \u83b7\u53d6\u4e86\uff0c\u5e76\u4e14\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 ConfigMap \u7684\u72b6\u6001\u6765\u5224\u65ad\uff1a \u279c kubectl get cm ingress-allowlist -o json | jq '.metadata.annotations' { \"openpolicyagent.org/policy-status\" : \"{\\\"status\\\":\\\"ok\\\"}\" } \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u4e00\u4e2a\u7528\u4e8e QA \u73af\u5883\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u3002\u8981\u6ce8\u610f\u5b83\u4eec\u90fd\u5305\u542b ingress-allowlist \u6ce8\u89e3\uff0c\u5176\u4e2d\u5305\u542b Ingress \u4e3b\u673a\u540d\u5e94\u8be5\u5339\u914d\u7684\u6a21\u5f0f\u3002 # qa-namespace.yaml apiVersion : v1 kind : Namespace metadata : annotations : ingress-allowlist : \"*.qa.qikqiak.com,*.internal.qikqiak.com\" name : qa --- # production-namespace.yaml apiVersion : v1 kind : Namespace metadata : annotations : ingress-allowlist : \"*.qikqiak.com\" name : production \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u4e24\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5373\u53ef\uff1a \u279c kubectl apply -f qa-namespace.yaml -f production-namespace.yaml \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u88ab\u7b56\u7565\u5141\u8bb8\u7684 Ingress \u5bf9\u8c61\uff1a \u279c kubectl apply -f - <<EOT apiVersion : networking.k8s.io/v1 kind : Ingress metadata : name : ingress-ok namespace : production spec : ingressClassName : nginx rules : - host : prod.qikqiak.com http : paths : - backend : service : name : nginx port : number : 80 path : / pathType : Prefix EOT \u6b63\u5e38\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u53ef\u4ee5\u521b\u5efa\uff1a \u279c kubectl get ing -n production NAME CLASS HOSTS ADDRESS PORTS AGE ingress-ok nginx prod.qikqiak.com 80 17s \u63a5\u7740\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0d\u7b26\u5408\u7b56\u7565\u7684 Ingress \u5bf9\u8c61\uff1a \u279c kubectl apply -f - <<EOT apiVersion : networking.k8s.io/v1 kind : Ingress metadata : name : ingress-bad namespace : qa spec : ingressClassName : nginx rules : - host : opa.k8s.local http : paths : - backend : service : name : nginx port : number : 80 path : / pathType : Prefix EOT Error from server : error when creating \"test.yaml\" : admission webhook \"validating-webhook.openpolicyagent.org\" denied the request : invalid ingress host \"opa.k8s.local\" \u4ece\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cAPIServer \u62d2\u7edd\u521b\u5efa Ingress \u5bf9\u8c61\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u5bf9\u8c61\u8fdd\u53cd\u4e86\u6211\u4eec\u7684 OPA \u7b56\u7565\u89c4\u5219\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7406\u7531 OPA \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u5b9e\u65bd\u51c6\u5165\u63a7\u5236\u7b56\u7565\uff0c\u800c\u65e0\u9700\u4fee\u6539\u6216\u91cd\u65b0\u7f16\u8bd1\u4efb\u4f55 Kubernetes \u7ec4\u4ef6\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 OPA \u7684 Bundle \u529f\u80fd\u7b56\u7565\uff0c\u53ef\u4ee5\u5b9a\u671f\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0b\u8f7d\u4ee5\u6ee1\u8db3\u4e0d\u65ad\u53d8\u5316\u7684\u64cd\u4f5c\u8981\u6c42\u3002 gatekeeper \u00b6 \u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u4f7f\u7528 kube-mgmt \u8fd9\u4e2a sidecar \u5bb9\u5668\u6765\u5b8c\u6210 OPA \u7b56\u7565\u7684\u81ea\u52a8\u540c\u6b65\uff0c\u6b64\u5916\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u66f4\u52a0\u9ad8\u7ea7\u7684\u5de5\u5177 Gatekeeper\uff0c\u76f8\u6bd4\u4e8e\u4e4b\u524d\u7684\u6a21\u5f0f\uff0cGatekeeper(v3.0) \u51c6\u5165\u63a7\u5236\u5668\u96c6\u6210\u4e86 OPA Constraint Framework\uff0c\u4ee5\u6267\u884c\u57fa\u4e8e CRD \u7684\u7b56\u7565\uff0c\u5e76\u5141\u8bb8\u58f0\u660e\u5f0f\u914d\u7f6e\u7684\u7b56\u7565\u53ef\u9760\u5730\u5171\u4eab\uff0c\u4f7f\u7528 kubebuilder \u6784\u5efa\uff0c\u5b83\u63d0\u4f9b\u4e86\u9a8c\u8bc1\u548c\u4fee\u6539\u51c6\u5165\u63a7\u5236\u548c\u5ba1\u8ba1\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u4e3a Rego \u7b56\u7565\u521b\u5efa\u7b56\u7565\u6a21\u677f\uff0c\u5c06\u7b56\u7565\u521b\u5efa\u4e3a CRD\uff0c\u5e76\u5728\u7b56\u7565 CRD \u4e0a\u5b58\u50a8\u5ba1\u8ba1\u7ed3\u679c\uff0c\u8fd9\u4e2a\u9879\u76ee\u662f\u8c37\u6b4c\u3001\u5fae\u8f6f\u3001\u7ea2\u5e3d\u548c Styra \u4e00\u8d77\u5408\u4f5c\u5b9e\u73b0\u7684\u3002 \u76f4\u63a5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u5b89\u88c5 Gatekeeper\uff1a \u279c kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/release-3.7/deploy/gatekeeper.yaml \u9ed8\u8ba4\u4f1a\u5c06 Gatekeeper \u5b89\u88c5\u5230 gatekeeper-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u540c\u6837\u4f1a\u5b89\u88c5\u51e0\u4e2a\u76f8\u5173\u7684 CRD\uff1a \u279c kubectl get pods -n gatekeeper-system NAME READY STATUS RESTARTS AGE gatekeeper-audit-5cf4b9686-glndv 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-dvkvp 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-gk4gr 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-mt5wn 1 /1 Running 0 2m2s \u279c kubectl get crd | grep gate assign.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z assignmetadata.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z configs.config.gatekeeper.sh 2022 -03-27T06:47:24Z constraintpodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:24Z constrainttemplatepodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:24Z constrainttemplates.templates.gatekeeper.sh 2022 -03-27T06:47:24Z modifyset.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z mutatorpodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:25Z providers.externaldata.gatekeeper.sh 2022 -03-27T06:47:25Z Gatekeeper \u4f7f\u7528 OPA \u7ea6\u675f\u6846\u67b6\u6765\u63cf\u8ff0\u548c\u6267\u884c\u7b56\u7565\uff0c\u5728\u5b9a\u4e49\u7ea6\u675f\u4e4b\u524d\u5fc5\u987b\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a ConstraintTemplate \u5bf9\u8c61\uff0c\u5b83\u63cf\u8ff0\u4e86\u5f3a\u5236\u6267\u884c\u7ea6\u675f\u7684 Rego \u548c\u7ea6\u675f\u7684\u6a21\u5f0f\u3002\u7ea6\u675f\u7684\u6a21\u5f0f\u5141\u8bb8\u7ba1\u7406\u5458\u5bf9\u7ea6\u675f\u7684\u884c\u4e3a\u8fdb\u884c\u5fae\u8c03\uff0c\u5c31\u50cf\u51fd\u6570\u7684\u53c2\u6570\u4e00\u6837\u3002 \u5982\u4e0b\u6240\u793a\u662f\u4e00\u4e2a\u7ea6\u675f\u6a21\u677f\uff0c\u63cf\u8ff0\u4e86\u9a8c\u8bc1\u7684\u5bf9\u8c61\u5fc5\u987b\u8981\u6709\u6807\u7b7e\u5b58\u5728\uff1a # k8srequiredlabels_template.yaml apiVersion : templates.gatekeeper.sh/v1 kind : ConstraintTemplate metadata : name : k8srequiredlabels spec : crd : spec : names : kind : K8sRequiredLabels validation : openAPIV3Schema : # Schema for the `parameters` field type : object description : Describe K8sRequiredLabels crd parameters properties : labels : type : array items : type : string description : A label string targets : - target : admission.k8s.gatekeeper.sh rego : | package k8srequiredlabels violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.review.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := sprintf(\"you must provide labels: %v\", [missing]) } \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684 ConstraintTemplate \u8d44\u6e90\u6e05\u5355\uff1a \u279c kubectl apply -f k8srequiredlabels_template.yaml constrainttemplate.templates.gatekeeper.sh/k8srequiredlabels created \u279c kubectl get ConstraintTemplate NAME AGE k8srequiredlabels 68s \u4e0a\u9762\u6211\u4eec\u7684\u5b9a\u4e49\u7684 ConstraintTemplate \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u5176\u4e2d\u7684 crd \u90e8\u5206\u63cf\u8ff0\u4e86\u6211\u4eec\u5b9a\u4e49\u7684 CRD \u6a21\u677f\uff0c\u6bd4\u5982\u7c7b\u578b\u53eb K8sRequiredLabels\uff0c\u9700\u8981\u548c\u6a21\u677f\u7684\u540d\u79f0\u4fdd\u6301\u4e00\u81f4\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u7684 validation \u5b9a\u4e49\u4e86\u6211\u4eec\u7684 CRD \u7684\u5c5e\u6027 Schema\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a labels \u7684\u5c5e\u6027\u53c2\u6570\uff0c\u7c7b\u4f3c\u662f\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\uff1a crd : spec : names : kind : K8sRequiredLabels validation : openAPIV3Schema : # Schema for the `parameters` field type : object description : Describe K8sRequiredLabels crd parameters properties : labels : type : array items : type : string description : A label string \u7136\u540e\u4e0b\u9762\u7684 targets \u90e8\u5206\u5c31\u662f\u5b9a\u4e49\u7684\u7ea6\u675f\u76ee\u6807\uff0c\u4f7f\u7528 Rego \u8fdb\u884c\u7f16\u5199\u3002 \u9996\u5148\u901a\u8fc7 provided := {label | input.review.object.metadata.labels[label]} \u83b7\u53d6\u5230\u521b\u5efa\u5bf9\u8c61\u7684\u6240\u6709 label \u6807\u7b7e \u7136\u540e\u901a\u8fc7 required := {label | label := input.parameters.labels[_]} \u83b7\u53d6\u5230\u9700\u8981\u63d0\u4f9b\u7684 label \u6807\u7b7e \u5c06\u4e0a\u9762\u4e24\u4e2a\u6807\u7b7e\u96c6\u5408\u76f8\u51cf\uff08rego\u8bed\u8a00\u652f\u6301\u8be5\u64cd\u4f5c\uff09\uff0c\u5f97\u5230\u672a\u6ee1\u8db3\u7684 label \u65ad\u8a00\u672a\u6ee1\u8db3\u7684label\u6570\u91cf>0\uff0c\u5982\u679c\u5927\u4e8e0\uff0c\u8bf4\u660e\u6761\u4ef6\u6ee1\u8db3\uff0cviolation \u4e3a true\uff0c\u8bf4\u660e\u8fdd\u53cd\u4e86\u7ea6\u675f\uff0c\u8fd4\u56de\u9519\u8bef \u4e0a\u9762\u7684\u7ea6\u675f\u6a21\u677f\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u7684 K8sRequiredLabels \u5bf9\u8c61\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u5c5e\u6027\u4f4d\u4e8e spec.parameters \u5c5e\u6027\u4e0b\u9762\uff1a \u279c kubectl get K8sRequiredLabels No resources found \u279c kubectl explain K8sRequiredLabels.spec.parameters.labels KIND: K8sRequiredLabels VERSION: constraints.gatekeeper.sh/v1beta1 FIELD: labels < [] string> DESCRIPTION: A label string \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684 K8sRequiredLabels \u8fd9\u4e2a\u7ea6\u675f\u6a21\u677f\u6765\u5b9a\u4e49\u7b56\u7565\u4e86\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u6c42\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e0a\u90fd\u5b9a\u4e49\u4e00\u4e2a gatekeeper \u7684\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a # all_ns_must_have_gatekeeper.yaml apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sRequiredLabels metadata : name : ns-must-have-gk spec : match : kinds : - apiGroups : [ \"\" ] kinds : [ \"Namespace\" ] # \u8868\u793a\u8fd9\u4e2a\u7ea6\u675f\u4f1a\u5728\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u7684\u65f6\u5019\u88ab\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 namespaceSelector\u3001namespaces\u7b49\u8fdb\u884c\u8fc7\u6ee4 parameters : labels : [ \"gatekeeper\" ] # \u6839\u636eschema\u89c4\u8303\u5b9a\u4e49 \u6ce8\u610f match \u5b57\u6bb5\uff0c\u5b83\u5b9a\u4e49\u4e86\u5c06\u5e94\u7528\u7ed9\u5b9a\u7ea6\u675f\u7684\u5bf9\u8c61\u7684\u8303\u56f4\uff0c\u5176\u4e2d kinds: [\"Namespace\"] \u8868\u793a\u8fd9\u4e2a\u7ea6\u675f\u4f1a\u5728\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u7684\u65f6\u5019\u88ab\u5e94\u7528\uff0c\u6b64\u5916\u5b83\u8fd8\u652f\u6301\u5176\u4ed6\u5339\u914d\u5668\uff1a kind \u63a5\u53d7\u5e26\u6709 apiGroups \u548c kind \u5b57\u6bb5\u7684\u5bf9\u8c61\u5217\u8868\uff0c\u8fd9\u4e9b\u5b57\u6bb5\u5217\u51fa\u4e86\u7ea6\u675f\u5c06\u5e94\u7528\u5230\u7684\u5bf9\u8c61\u7684\u7ec4/\u79cd\u7c7b\u3002\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a\u7ec4/\u79cd\u7c7b\u5bf9\u8c61\uff0c\u5219\u8d44\u6e90\u5728\u8303\u56f4\u5185\u53ea\u9700\u8981\u4e00\u4e2a\u5339\u914d\u9879\u3002 scope \u63a5\u53d7 \u3001Cluster \u6216 Namespaced \u51b3\u5b9a\u662f\u5426\u9009\u62e9\u96c6\u7fa4\u8303\u56f4\u548c/\u6216\u547d\u540d\u7a7a\u95f4\u8303\u56f4\u7684\u8d44\u6e90\u3002\uff08\u9ed8\u8ba4\u4e3a\uff09 namespaces \u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u7684\u5217\u8868\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u7ea6\u675f\u4ec5\u9002\u7528\u4e8e\u5217\u51fa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\u3002\u547d\u540d\u7a7a\u95f4\u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\u3002\u4f8b\u5982\uff0c namespaces: [kube-*] \u5339\u914d kube-system \u548c kube-public\u3002 excludeNamespaces \u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u7684\u5217\u8868\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u7ea6\u675f\u4ec5\u9002\u7528\u4e8e\u4e0d\u5728\u5217\u51fa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\u3002ExcludedNamespaces \u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\uff0c\u4f8b\u5982\uff0c excludedNamespaces: [kube-*] \u5339\u914d kube-system \u548c kube-public\u3002 labelSelector \u662f\u6807\u51c6\u7684 Kubernetes \u6807\u7b7e\u9009\u62e9\u5668\u3002 namespaceSelector \u662f\u9488\u5bf9\u5bf9\u8c61\u7684\u5305\u542b\u540d\u79f0\u7a7a\u95f4\u6216\u5bf9\u8c61\u672c\u8eab\u7684\u6807\u7b7e\u9009\u62e9\u5668\uff0c\u5982\u679c\u5bf9\u8c61\u662f\u540d\u79f0\u7a7a\u95f4\u3002name \u662f\u5bf9\u8c61\u7684\u540d\u79f0\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5339\u914d\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u5bf9\u8c61\u3002Name \u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\u3002\u4f8b\u5982\uff0c\u540d\u79f0\uff1apod-* \u5339\u914d pod-a \u548c pod-b\u3002 \u4e0b\u9762\u7684 parameters.labels \u5c31\u662f\u6839\u636e\u4e0a\u9762\u7684 CRD \u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u8be5\u503c\u662f\u4f20\u9012\u7ed9 opa \u7684\u53c2\u6570\uff0c\u6b64\u5904\u8868\u793a\u4e00\u4e2a key \u4e3a labels\uff0cvalue \u4e3a\u4e00\u4e2a\u5217\u8868\u7684\u5b57\u5178\uff0c\u4e0e ConstraintTemplate \u91cc\u7684 properties \u8981\u5339\u914d\u4e0a\uff0c\u6b64\u5904\u8868\u793a\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u9700\u8981\u542b\u6709 gatekeeper \u7684 label\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f all_ns_must_have_gatekeeper.yaml k8srequiredlabels.constraints.gatekeeper.sh/ns-must-have-gk created \u521b\u5efa\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b\u5230\u8fd9\u4e2a constraints \u5bf9\u8c61\uff1a \u279c kubectl get k8srequiredlabels NAME AGE ns-must-have-gk 73s \u279c kubectl get constraints # \u548c\u4e0a\u9762\u5bf9\u8c61\u4e00\u6837 NAME AGE ns-must-have-gk 81s \u7531\u4e8e Gatekeeper \u5177\u6709\u5ba1\u8ba1\u529f\u80fd\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u4e2d\u6267\u884c\u7684\u7ea6\u675f\u6761\u4ef6\u5bf9\u8d44\u6e90\u8fdb\u884c\u5b9a\u671f\u8bc4\u4f30\uff0c\u4ee5\u68c0\u6d4b\u9884\u5148\u5b58\u5728\u7684\u9519\u8bef\u914d\u7f6e\uff0cGatekeeper \u5c06\u5ba1\u8ba1\u7ed3\u679c\u5b58\u50a8\u4e3a\u76f8\u5173\u7ea6\u675f\u6761\u4ef6\u7684 status \u5b57\u6bb5\u4e2d\u5217\u51fa\u8fdd\u89c4\u884c\u4e3a\u3002\u6211\u4eec\u53ef\u4ee5\u67e5\u770b K8sRequiredLabels \u5bf9\u8c61\u7684 status \u5b57\u6bb5\u6765\u67e5\u770b\u4e0d\u7b26\u5408\u7ea6\u675f\u7684\u884c\u4e3a\uff1a \u279c kubectl get constraints ns-must-have-gk -o yaml apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sRequiredLabels ...... status : auditTimestamp : \"2022-03-27T07:42:38Z\" ...... totalViolations : 11 violations : - enforcementAction : deny kind : Namespace message : 'you must provide labels: {\"gatekeeper\"}' name : apisix - enforcementAction : deny kind : Namespace message : 'you must provide labels: {\"gatekeeper\"}' name : default ...... \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Namespace\uff1a # test-namespace.yaml apiVersion : v1 kind : Namespace metadata : name : ns-test labels : a : b #gatekeeper: abc \u6b64\u65f6\u4e0d\u7ed9\u547d\u540d\u7a7a\u95f4\u6dfb\u52a0 key \u4e3a gatekeeper \u7684 label\uff0c\u521b\u5efa\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u9519\uff1a Error from server ([ ns-must-have-gk ] you must provide labels: { \"gatekeeper\" }) : error when creating \"test-namespace.yaml\" : admission webhook \"validation.gatekeeper.sh\" denied the request: [ ns-must-have-gk ] you must provide labels: { \"gatekeeper\" } \u7136\u540e\u628a gatekeeper: abc \u8fd9\u884c\u7684\u6ce8\u91ca\u6253\u5f00\uff0c\u5219\u80fd\u6210\u529f\u521b\u5efa\u4e86\uff0c\u8fd9\u5c31\u662f Gatekeeper \u7684\u57fa\u672c\u7528\u6cd5\u3002 \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5b9a\u4e49\u7ea6\u675f\u6a21\u677f\u7684\u7b56\u7565\u4f1a\u7ecf\u5e38\u4ece input \u5bf9\u8c61\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u9700\u8981\u521b\u5efa\u81ea\u5df1\u7684\u7ea6\u675f\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4f20\u5165\u7684\u53c2\u6570\u5373 input \u662f\u4ec0\u4e48\uff0c\u6709\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u62d2\u7edd\u6240\u6709\u8bf7\u6c42\u5e76\u5c06\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e3a\u5176\u62d2\u7edd\u6d88\u606f\u8f93\u51fa\u7684\u7ea6\u675f/\u6a21\u677f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u521b\u5efa\u6a21\u677f\u65f6\u5728 violation \u4e2d\u53ea\u4fdd\u7559\u4e00\u884c msg := sprintf(\"input: %v\", [input])\uff0c\u6b64\u65f6\u521b\u5efa\u5bf9\u8c61\u65f6\u5fc5\u5b9a\u4f1a\u5931\u8d25\uff0c\u7136\u540e\u83b7\u53d6\u5230\u8f93\u51fa\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u91cc\u9762\u5373\u5305\u542b\u6240\u6709 input \u4fe1\u606f\uff0c\u4e4b\u540e\u518d\u901a\u8fc7 Rego \u8bed\u6cd5\u53bb\u83b7\u53d6\u9700\u8981\u7684\u6570\u636e\u5373\u53ef\u3002 apiVersion : templates.gatekeeper.sh/v1 kind : ConstraintTemplate metadata : name : k8sdenyall spec : crd : spec : names : kind : K8sDenyAll targets : - target : admission.k8s.gatekeeper.sh rego : | package k8sdenyall violation[{\"msg\": msg}] { msg := sprintf(\"input: %v\", [input]) } --- apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sDenyAll metadata : name : deny-all-namespaces spec : match : kinds : - apiGroups : [ \"\" ] kinds : [ \"Namespace\" ] \u7531\u4e8e\u7ea6\u675f\u6a21\u677f\u6216\u8005\u8bf4\u7b56\u7565\u5e93\u5177\u6709\u4e00\u5b9a\u7684\u901a\u7528\u6027\uff0c\u6240\u4ee5 OPA Gatekeeper \u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u7b56\u7565\u5e93\uff1a https://github.com/open-policy-agent/gatekeeper-library \uff0c\u8be5\u4ed3\u5e93\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u901a\u7528\u7684\u7ea6\u675f\u6a21\u677f\u3002 \u6bcf\u4e2a\u6a21\u677f\u5e93\u4e0b\u9762\u90fd\u5305\u542b\u4e00\u4e2a template.yaml \u6587\u4ef6\u7528\u6765\u63cf\u8ff0\u7ea6\u675f\u6a21\u677f\uff0csamples \u76ee\u5f55\u4e0b\u9762\u5c31\u5305\u542b\u5177\u4f53\u7684\u7ea6\u675f\u5bf9\u8c61\u548c\u793a\u4f8b\u8d44\u6e90\u6e05\u5355\uff0c\u8fd9\u4e9b\u7b56\u7565\u4e5f\u662f\u6211\u4eec\u53bb\u5b66\u4e60 Rego \u8bed\u8a00\u7684\u5f88\u597d\u7684\u6848\u4f8b\u3002 Rego \u00b6 \u4e0a\u9762\u7684\u793a\u4f8b\u4e3a\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 OPA \u6765\u914d\u7f6e\u6211\u4eec\u7684\u7b56\u7565\u89c4\u5219\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5c31\u662f\u4f7f\u7528 Rego \u7f16\u5199\u7684\u7b56\u7565\u89c4\u5219\uff0cRego \u662f\u4e13\u95e8\u4e3a\u8868\u8fbe\u590d\u6742\u7684\u5206\u5c42\u6570\u636e\u7ed3\u6784\u7684\u7b56\u7565\u800c\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u8981\u638c\u63e1 OPA \u7684\u4f7f\u7528\u5bf9 Rego \u7684\u4e86\u89e3\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002","title":"OPA"},{"location":"ConfigManage/OPA/#opa","text":"Open Policy Agent \u7b80\u79f0 OPA\uff0c\u662f\u4e00\u79cd\u5f00\u6e90\u7684\u901a\u7528\u7b56\u7565\u4ee3\u7406\u5f15\u64ce\uff0c\u662f CNCF \u6bd5\u4e1a\u7684\u9879\u76ee\u3002OPA \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u7ea7\u58f0\u660e\u5f0f\u8bed\u8a00 Rego\uff0c\u7b80\u5316\u4e86\u7b56\u7565\u89c4\u5219\u7684\u5b9a\u4e49\uff0c\u4ee5\u51cf\u8f7b\u7a0b\u5e8f\u4e2d\u7b56\u7565\u7684\u51b3\u7b56\u8d1f\u62c5\u3002\u5728\u5fae\u670d\u52a1\u3001Kubernetes\u3001CI/CD\u3001API \u7f51\u5173\u7b49\u573a\u666f\u4e2d\u5747\u53ef\u4ee5\u4f7f\u7528 OPA \u6765\u5b9a\u4e49\u7b56\u7565\u3002 \u6211\u4eec\u8fd9\u91cc\u4e3b\u8981\u8bb2\u89e3\u5728 Kubernetes \u4e2d\u5982\u4f55\u96c6\u6210 OPA\uff0c\u5728 Kubernetes \u4e2d OPA \u662f\u901a\u8fc7 Admission Controllers \u6765\u5b9e\u73b0\u5b89\u5168\u7b56\u7565\u7684\u3002\u4e8b\u5b9e\u4e0a\u4f7f\u7528 Pod \u5b89\u5168\u7b56\u7565\uff08\u8981\u5e9f\u5f03\u4e86\uff09\u6765\u6267\u884c\u6211\u4eec\u7684\u5b89\u5168\u7b56\u7565\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u7136\u800c\uff0c\u6839\u636e\u5b9a\u4e49\uff0cPSP \u53ea\u80fd\u5e94\u7528\u4e8e pods\u3002\u5b83\u4eec\u4e0d\u80fd\u5904\u7406\u5176\u4ed6 Kubernetes \u8d44\u6e90\uff0c\u5982 Ingresses\u3001Deployments\u3001Services \u7b49\uff0cOPA \u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u4efb\u4f55 Kubernetes \u8d44\u6e90\u3002OPA \u4f5c\u4e3a\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u90e8\u7f72\u5230 Kubernetes\uff0c\u5b83\u62e6\u622a\u53d1\u9001\u5230 APIServer \u7684 API \u8c03\u7528\uff0c\u5e76\u9a8c\u8bc1\u548c/\u6216\u4fee\u6539\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 OPA \u7b56\u7565\uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u7684\u4e0d\u540c\u7ec4\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f pods\uff0c\u4f8b\u5982\uff0c\u6709\u4e00\u79cd\u7b56\u7565\uff0c\u5f3a\u5236\u7528\u6237\u5728\u5176\u670d\u52a1\u4e2d\u4f7f\u7528\u516c\u53f8\u7684\u57df\uff0c\u5e76\u786e\u4fdd\u7528\u6237\u53ea\u4ece\u516c\u53f8\u7684\u955c\u50cf\u4ed3\u5e93\u4e2d\u62c9\u53d6\u955c\u50cf\u3002","title":"OPA \u7b56\u7565\u5f15\u64ce"},{"location":"ConfigManage/OPA/#_1","text":"OPA \u5c06\u7b56\u7565\u51b3\u7b56\u4e0e\u7b56\u7565\u6267\u884c\u5206\u79bb\uff0c\u5f53\u5e94\u7528\u9700\u8981\u505a\u51fa\u7b56\u7565\u51b3\u7b56\u65f6\uff0c\u5b83\u4f1a\u67e5\u8be2 OPA \u5e76\u63d0\u4f9b\u7ed3\u6784\u5316\u6570\u636e\uff08\u4f8b\u5982 JSON\uff09\u4f5c\u4e3a\u8f93\u5165\uff0cOPA \u63a5\u53d7\u4efb\u610f\u7ed3\u6784\u5316\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u3002 OPA \u901a\u8fc7\u8bc4\u4f30\u67e5\u8be2\u8f93\u5165\u7b56\u7565\u548c\u6570\u636e\u6765\u751f\u6210\u7b56\u7565\u51b3\u7b56\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u7b56\u7565\u4e2d\u63cf\u8ff0\u51e0\u4e4e\u4efb\u4f55\u7684\u4e0d\u53d8\u56e0\u7d20\uff0c\u4f8b\u5982\uff1a \u54ea\u4e9b\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9b\u8d44\u6e90 \u54ea\u4e9b\u5b50\u7f51\u7684\u51fa\u53e3\u6d41\u91cf\u88ab\u5141\u8bb8 \u5de5\u4f5c\u8d1f\u8f7d\u5fc5\u987b\u90e8\u7f72\u5230\u54ea\u4e9b\u96c6\u7fa4 \u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u4ece\u54ea\u91cc\u4e0b\u8f7d \u5bb9\u5668\u53ef\u4ee5\u7528\u54ea\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u80fd\u529b\u6765\u6267\u884c \u7cfb\u7edf\u5728\u4e00\u5929\u4e2d\u7684\u54ea\u4e9b\u65f6\u95f4\u53ef\u4ee5\u88ab\u8bbf\u95ee \u7b56\u7565\u51b3\u5b9a\u4e0d\u9650\u4e8e\u7b80\u5355\u7684\u662f/\u5426\u6216\u5141\u8bb8/\u62d2\u7edd\uff0c\u4e0e\u67e5\u8be2\u8f93\u5165\u4e00\u6837\uff0c\u4f60\u7684\u7b56\u7565\u53ef\u4ee5\u751f\u6210\u4efb\u610f\u7ed3\u6784\u5316\u6570\u636e\u4f5c\u4e3a\u8f93\u51fa\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002OPA \u7684\u7b56\u7565\u662f\u7528\u4e00\u79cd\u53eb\u505a Rego \u7684\u9ad8\u7ea7\u58f0\u660e\u6027\u8bed\u8a00\u6765\u58f0\u660e\u7684\uff0cRego \u662f\u4e13\u95e8\u4e3a\u8868\u8fbe\u590d\u6742\u7684\u5206\u5c42\u6570\u636e\u7ed3\u6784\u7684\u7b56\u7565\u800c\u8bbe\u8ba1\u7684\u3002 \u5728 Kubernetes \u4e2d\uff0c\u51c6\u5165\u63a7\u5236\u5668\u5728\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u671f\u95f4\u5bf9\u5bf9\u8c61\u5b9e\u65bd\u7b56\u7565\u3002\u51c6\u5165\u63a7\u5236\u662f Kubernetes \u4e2d\u7b56\u7565\u6267\u884c\u7684\u57fa\u7840\u3002\u901a\u8fc7\u5c06 OPA \u90e8\u7f72\u4e3a\u51c6\u5165\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\uff1a \u8981\u6c42\u5728\u6240\u6709\u8d44\u6e90\u4e0a\u4f7f\u7528\u7279\u5b9a\u6807\u7b7e \u8981\u6c42\u5bb9\u5668\u955c\u50cf\u6765\u81ea\u4f01\u4e1a\u955c\u50cf\u4ed3\u5e93 \u8981\u6c42\u6240\u6709 Pod \u6307\u5b9a\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236 \u9632\u6b62\u521b\u5efa\u51b2\u7a81\u7684 Ingress \u5bf9\u8c61 ...... Kubernetes APIServer \u914d\u7f6e\u4e3a\u5728\u521b\u5efa\u3001\u66f4\u65b0\u6216\u5220\u9664\u5bf9\u8c61\u65f6\u67e5\u8be2 OPA \u4ee5\u83b7\u53d6\u51c6\u5165\u63a7\u5236\u7b56\u7565\u3002APIServer \u5c06 webhook \u8bf7\u6c42\u4e2d\u7684\u6574\u4e2a\u5bf9\u8c61\u53d1\u9001\u7ed9 OPA\uff0cOPA \u4f7f\u7528\u51c6\u5165\u5ba1\u67e5\u4f5c\u4e3a\u8f93\u5165\u6765\u8bc4\u4f30\u5b83\u5df2\u52a0\u8f7d\u7684\u7b56\u7565\u3002\u8fd9\u4e2a\u5176\u5b9e\u548c\u6211\u4eec\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u662f\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u7f16\u5199\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u7f16\u5199\u7b56\u7565\u89c4\u5219\uff0cOPA \u5c31\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u89c4\u5219\u53bb\u5bf9\u8f93\u5165\u7684\u5bf9\u8c61\u8fdb\u884c\u9a8c\u8bc1\u3002","title":"\u6982\u8ff0"},{"location":"ConfigManage/OPA/#_2","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e0b\u5982\u4f55\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u96c6\u6210 OPA\uff0c\u7531\u4e8e Kubernetes \u4e2d\u662f\u901a\u8fc7\u51c6\u5165\u63a7\u5236\u5668\u6765\u96c6\u6210 OPA \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u542f\u7528 ValidatingAdmissionWebhook \u8fd9\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a opa \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u8ba9 OPA \u4ece\u8be5\u547d\u540d\u7a7a\u95f4\u4e2d\u7684 ConfigMap \u53bb\u52a0\u8f7d\u7b56\u7565\uff1a \u279c kubectl create namespace opa \u5e76\u5c06\u4e0a\u4e0b\u6587\u66f4\u6539\u4e3a opa \u547d\u540d\u7a7a\u95f4\uff1a \u279c kubectl config current-context kubernetes-admin@kubernetes \u279c kubectl config set-context kubernetes-admin@kubernetes --namespace = opa Context \"kubernetes-admin@kubernetes\" modified. \u279c kubectl get pods No resources found in opa namespace. \u4e3a\u4e86\u4fdd\u62a4 APIServer \u548c OPA \u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e TLS \u8bc1\u4e66\u3002 \u521b\u5efa\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u548c\u5bc6\u94a5\uff1a \u279c openssl genrsa -out ca.key 2048 \u279c openssl req -x509 -new -nodes -key ca.key -days 100000 -out ca.crt -subj \"/CN=admission_ca\" \u4e3a OPA \u751f\u6210\u5bc6\u94a5\u548c\u8bc1\u4e66\uff1a cat >server.conf <<EOF [req] req_extensions = v3_req distinguished_name = req_distinguished_name [req_distinguished_name] [ v3_req ] basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment extendedKeyUsage = clientAuth, serverAuth subjectAltName = @alt_names [ alt_names ] DNS.1 = opa.opa.svc EOF \u279c openssl genrsa -out server.key 2048 \u279c openssl req -new -key server.key -out server.csr -subj \"/CN=opa.opa.svc\" -config server.conf \u279c openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 100000 -extensions v3_req -extfile server.conf \u521b\u5efa\u4e00\u4e2a Kubernetes TLS Secret \u6765\u5b58\u50a8\u6211\u4eec\u7684 OPA \u51ed\u8bc1\uff1a \u279c kubectl create secret tls opa-server --cert = server.crt --key = server.key \u8bc1\u4e66\u51c6\u5907\u597d\u540e\u5c31\u53ef\u4ee5\u90e8\u7f72\u51c6\u5165\u63a7\u5236\u5668\u4e86\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # opa-admission-controller.yaml # Grant OPA/kube-mgmt read-only access to resources. This lets kube-mgmt # replicate resources into OPA so they can be used in policies. kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : opa-viewer roleRef : kind : ClusterRole name : view apiGroup : rbac.authorization.k8s.io subjects : - kind : Group name : system:serviceaccounts:opa apiGroup : rbac.authorization.k8s.io --- # Define role for OPA/kube-mgmt to update configmaps with policy status. kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : namespace : opa name : configmap-modifier rules : - apiGroups : [ \"\" ] resources : [ \"configmaps\" ] verbs : [ \"update\" , \"patch\" ] --- # Grant OPA/kube-mgmt role defined above. kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : namespace : opa name : opa-configmap-modifier roleRef : kind : Role name : configmap-modifier apiGroup : rbac.authorization.k8s.io subjects : - kind : Group name : system:serviceaccounts:opa apiGroup : rbac.authorization.k8s.io --- kind : Service apiVersion : v1 metadata : name : opa namespace : opa spec : selector : app : opa ports : - name : https protocol : TCP port : 443 targetPort : 443 --- apiVersion : apps/v1 kind : Deployment metadata : name : opa namespace : opa spec : selector : matchLabels : app : opa template : metadata : labels : app : opa spec : containers : - name : opa image : openpolicyagent/opa:latest args : - \"run\" - \"--server\" - \"--tls-cert-file=/certs/tls.crt\" - \"--tls-private-key-file=/certs/tls.key\" - \"--addr=0.0.0.0:443\" - \"--addr=http://127.0.0.1:8181\" - \"--log-level=debug\" - \"--log-format=json-pretty\" volumeMounts : - readOnly : true mountPath : /certs name : opa-server readinessProbe : httpGet : path : /health scheme : HTTPS port : 443 initialDelaySeconds : 5 periodSeconds : 10 livenessProbe : httpGet : path : /health scheme : HTTPS port : 443 initialDelaySeconds : 10 periodSeconds : 15 - name : kube-mgmt image : openpolicyagent/kube-mgmt:4.0.0 args : - --replicate-cluster=v1/namespaces - --replicate=networking.k8s.io/v1/ingresses - --opa-url=http://127.0.0.1:8181/v1 - --enable-data=true - --enable-policies=true - --policies=opa - --require-policy-label=true volumes : - name : opa-server secret : secretName : opa-server --- kind : ConfigMap apiVersion : v1 metadata : name : opa-default-system-main namespace : opa labels : openpolicyagent.org/policy : rego data : main : | package system import data.kubernetes.admission main = { \"apiVersion\": \"admission.k8s.io/v1\", \"kind\": \"AdmissionReview\", \"response\": response, } default uid = \"\" uid = input.request.uid response = { \"allowed\": false, \"uid\": uid, \"status\": { \"message\": reason, }, } { reason = concat(\", \", admission.deny) reason != \"\" } else = {\"allowed\": true, \"uid\": uid} \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a kube-mgmt \u7684 Sidecar \u5bb9\u5668\uff0c\u8be5\u5bb9\u5668\u53ef\u4ee5\u5c06 ConfigMap \u5bf9\u8c61\u4e2d\u7684\u7b56\u7565\u52a8\u6001\u52a0\u8f7d\u5230 OPA \u4e2d\uff0ckube-mgmt \u5bb9\u5668\u8fd8\u53ef\u4ee5\u5c06\u4efb\u4f55\u5176\u4ed6 Kubernetes \u5bf9\u8c61\u4f5c\u4e3a JSON \u6570\u636e\u52a0\u8f7d\u5230 OPA \u4e2d\u3002 \u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f Service \u7684\u540d\u79f0\uff08opa\uff09\u5fc5\u987b\u4e0e\u6211\u4eec\u8bc1\u4e66\u914d\u7f6e\u7684 CN \u5339\u914d\uff0c\u5426\u5219 TLS \u901a\u4fe1\u4f1a\u5931\u8d25\u3002\u5728 kube-mgmt \u5bb9\u5668\u4e2d\u8fd8\u6307\u5b9a\u4e86\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\uff1a Parameters --replicate-cluster=v1/namespaces --replicate=networking.k8s.io/v1/ingresses --enable-policies=true --policies=opa --require-policy-label=true \u524d\u4e24\u4e2a\u53c2\u6570\u5141\u8bb8 sidecar \u5bb9\u5668\u590d\u5236\u547d\u540d\u7a7a\u95f4\u3001Ingress \u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230 OPA \u5f15\u64ce\u4e2d\uff0cenable-policies=true \u8868\u793a\u4f1a\u901a\u8fc7 Configmap \u52a0\u8f7d OPA \u7b56\u7565\uff0c\u4e0b\u9762\u7684 --policies=opa \u8868\u793a\u4ece opa \u547d\u540d\u7a7a\u95f4\u4e2d\u7684 Configmap \u6765\u52a0\u8f7d\u7b56\u7565\uff0c\u5982\u679c\u8fd8\u914d\u7f6e\u4e86 --require-policy-label=true \u53c2\u6570\uff0c\u5219\u9700\u8981 Configmap \u4e2d\u5e26\u6709 openpolicyagent.org/policy=rego \u8fd9\u4e2a\u6807\u7b7e\u624d\u4f1a\u88ab\u81ea\u52a8\u52a0\u8f7d\u3002 \u73b0\u5728\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\uff1a \u279c kubectl apply -f opa-admission-controller.yaml \u279c kubectl get pods NAME READY STATUS RESTARTS AGE opa-6cd68f74f-s9zcv 2 /2 Running 0 5m28s \u4e3a\u4e86\u8ba9\u51c6\u5165\u63a7\u5236\u5668\u5de5\u4f5c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u51c6\u5165 webhook \u6765\u63a5\u6536\u51c6\u5165 HTTP \u56de\u8c03\u5e76\u6267\u884c\u5b83\u4eec\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 webhook \u914d\u7f6e\u6587\u4ef6\uff1a \u279c cat > webhook-configuration.yaml <<EOF kind : ValidatingWebhookConfiguration apiVersion : admissionregistration.k8s.io/v1 metadata : name : opa-validating-webhook webhooks : - name : validating-webhook.openpolicyagent.org admissionReviewVersions : [ \"v1\" , \"v1beta1\" ] namespaceSelector : matchExpressions : - key : openpolicyagent.org/webhook operator : NotIn values : - ignore failurePolicy : Ignore rules : - apiGroups : - '*' apiVersions : - '*' operations : - '*' resources : - '*' sideEffects : None clientConfig : caBundle : $(cat ca.crt | base64 | tr -d '\\n') service : namespace : opa name : opa EOF \u4e0a\u9762\u7684 webhook \u4e2d\u914d\u7f6e\u4e86\u4ee5\u4e0b\u5c5e\u6027\uff1a \u4e0d\u4f1a\u76d1\u542c\u6765\u81ea\u5e26\u6709 openpolicyagent.org/webhook=ignore \u6807\u7b7e\u7684\u547d\u540d\u7a7a\u95f4\u7684\u64cd\u4f5c \u4f1a\u76d1\u542c\u6240\u6709\u8d44\u6e90\u4e0a\u7684 CREATE \u548c UPDATE \u64cd\u4f5c \u5b83\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684 CA \u8bc1\u4e66\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0e OPA \u901a\u4fe1 \u73b0\u5728\uff0c\u5728\u4f7f\u7528\u914d\u7f6e\u4e4b\u524d\uff0c\u6211\u4eec\u6807\u8bb0 kube-system \u548c opa \u547d\u540d\u7a7a\u95f4\uff0c\u4f7f\u5b83\u4eec\u4e0d\u5728 webhook \u8303\u56f4\u5185\uff1a \u279c kubectl label ns kube-system openpolicyagent.org/webhook = ignore \u279c kubectl label ns opa openpolicyagent.org/webhook = ignore \u7136\u540e\u5e94\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u5bf9\u8c61\u5c06 OPA \u6ce8\u518c\u4e3a\u51c6\u5165\u63a7\u5236\u5668\uff1a \u279c kubectl apply -f webhook-configuration.yaml \u279c kubectl get pods NAME READY STATUS RESTARTS AGE opa-6cd68f74f-s9zcv 2 /2 Running 0 72m \u279c kubectl get validatingwebhookconfiguration NAME WEBHOOKS AGE opa-validating-webhook 1 2m14s","title":"\u90e8\u7f72"},{"location":"ConfigManage/OPA/#_3","text":"OPA \u4f7f\u7528 Rego \u8bed\u8a00\u6765\u63cf\u8ff0\u7b56\u7565\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5b98\u65b9\u6587\u6863\u4e2d\u63d0\u5230\u7684\u793a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u521b\u5efa\u4e00\u4e2a\u9650\u5236 Ingress \u53ef\u4ee5\u4f7f\u7528\u7684\u4e3b\u673a\u540d\u7b56\u7565\uff0c\u53ea\u5141\u8bb8\u5339\u914d\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e3b\u673a\u540d\u3002 \u521b\u5efa\u5982\u4e0b\u6240\u793a\u540d\u4e3a ingress-allowlist.rego \u7684\u7b56\u7565\u6587\u4ef6\uff1a < ! -- \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u58f0\u660e\u89c4\u5219\u5c5e\u4e8e\u4ec0\u4e48\u5305\uff0c\u8fd9\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5305\u88c5\u7c7b\u4f3c\uff0c\u662f\u5c06\u7c7b\u4f3c\u89c4\u5219\u5f52\u5165\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u79cd\u65b9\u5f0f\u3002 --> package kubernetes . admission import data . kubernetes . namespaces operations = { \"CREATE\" , \"UPDATE\" } deny [ msg ] { input . request . kind . kind == \"Ingress\" operations [ input . request . operation ] host := input . request . object . spec . rules [ _ ]. host not fqdn_matches_any ( host , valid_ingress_hosts ) msg := sprintf ( \"invalid ingress host %q\" , [ host ]) } valid_ingress_hosts = { host | allowlist := namespaces [ input . request . namespace ]. metadata . annotations [ \"ingress-allowlist\" ] hosts := split ( allowlist , \",\" ) host := hosts [ _ ] } fqdn_matches_any ( str , patterns ) { fqdn_matches ( str , patterns [ _ ]) } fqdn_matches ( str , pattern ) { pattern_parts := split ( pattern , \".\" ) pattern_parts [ 0 ] == \"*\" str_parts := split ( str , \".\" ) n_pattern_parts := count ( pattern_parts ) n_str_parts := count ( str_parts ) suffix := trim ( pattern , \"*.\" ) endswith ( str , suffix ) } fqdn_matches ( str , pattern ) { not contains ( pattern , \"*\" ) str == pattern } \u5982\u679c\u4f60\u662f Rego \u65b0\u624b\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u770b\u4e0a\u53bb\u53ef\u80fd\u6709\u70b9\u964c\u751f\uff0c\u4f46 Rego \u8ba9\u5b9a\u4e49\u7b56\u7565\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e0b\u8fd9\u4e2a\u7b56\u7565\u662f\u5982\u4f55\u4f7f\u7528\u767d\u540d\u5355\u4e2d\u7684 Ingress \u547d\u540d\u7a7a\u95f4\u5f3a\u5236\u6267\u884c\u7684\uff1a Row Description 1\uff1a package \u7684\u4f7f\u7528\u65b9\u5f0f\u4e0e\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\u662f\u4e00\u6837\u7684 5\uff1a \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u4e24\u9879\u64cd\u4f5c\u7684\u6570\u636e\u96c6\uff1aCREATE \u548c UPDATE 7\uff1a \u8fd9\u662f\u7b56\u7565\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u4ee5 deny \u5f00\u5934\uff0c\u7136\u540e\u662f\u7b56\u7565\u6b63\u6587\u3002\u5982\u679c\u6b63\u6587\u4e2d\u7684\u8bed\u53e5\u7ec4\u5408\u8bc4\u4f30\u4e3a\u771f\uff0c\u5219\u8fdd\u53cd\u7b56\u7565\uff0c\u4fbf\u4f1a\u963b\u6b62\u64cd\u4f5c\uff0c\u5e76\u5c06\u6d88\u606f\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u8bf4\u660e\u64cd\u4f5c\u88ab\u963b\u6b62\u7684\u539f\u56e0 8\uff1a \u6307\u5b9a\u8f93\u5165\u5bf9\u8c61\uff0c\u53d1\u9001\u5230 OPA \u7684\u4efb\u4f55 JSON \u6d88\u606f\u90fd\u662f\u4ece\u8f93\u5165\u5bf9\u8c61\u7684\u6839\u90e8\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u904d\u5386 JSON \u5bf9\u8c61\uff0c\u76f4\u5230\u627e\u5230\u6709\u95ee\u9898\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u662f Ingress \u624d\u80fd\u5e94\u7528\u8be5\u7b56\u7565 9\uff1a \u6211\u4eec\u9700\u8981\u5e94\u7528\u7b56\u7565\u6765\u521b\u5efa\u6216\u66f4\u65b0\u8d44\u6e90\uff0c\u5728 Rego \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 operations[input.requset.operations] \u6765\u5b9e\u73b0\uff0c\u65b9\u62ec\u53f7\u5185\u7684\u4ee3\u7801\u4f1a\u63d0\u53d6\u8bf7\u6c42\u4e2d\u6307\u5b9a\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u5b83\u4e0e\u7b2c5\u884c\u7684\u64cd\u4f5c\u96c6\u4e2d\u5b9a\u4e49\u7684\u5143\u7d20\u76f8\u5339\u914d\uff0c\u5219\u8be5\u8bed\u53e5\u4e3a\u771f 10\uff1a \u4e3a\u4e86\u63d0\u53d6 Ingress \u5bf9\u8c61\u7684 host \u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u8fed\u4ee3 JSON \u5bf9\u8c61\u7684 rules \u6570\u7ec4\uff0c\u540c\u6837 Rego \u63d0\u4f9b\u4e86 _ \u5b57\u7b26\u6765\u5faa\u73af\u6d4f\u89c8\u6570\u7ec4\uff0c\u5e76\u5c06\u6240\u6709\u5143\u7d20\u8fd4\u56de\u5230 host \u53d8\u91cf\u4e2d 11\uff1a \u73b0\u5728\u6211\u4eec\u6709\u4e86 host \u53d8\u91cf\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5b83\u4e0d\u662f\u5217\u5165\u767d\u540d\u5355\u7684\u4e3b\u673a\uff0c\u8981\u8bb0\u4f4f\uff0c\u53ea\u6709\u5728\u8bc4\u4f30\u4e3a true \u65f6\u624d\u4f1a\u8fdd\u53cd\u8be5\u7b56\u7565\uff0c\u4e3a\u4e86\u68c0\u67e5\u4e3b\u673a\u662f\u5426\u6709\u6548\uff0c\u6211\u4eec\u4f7f\u7528\u7b2c21\u884c\u4e2d\u5b9a\u4e49\u7684 fqdn_matches_any \u51fd\u6570 12\uff1a \u5b9a\u4e49\u5e94\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u6d88\u606f\uff0c\u8bf4\u660e\u65e0\u6cd5\u521b\u5efa Ingress \u5bf9\u8c61\u7684\u539f\u56e0 15-19\uff1a \u8fd9\u90e8\u5206\u4ece Ingress \u547d\u540d\u7a7a\u95f4\u7684 annotations \u4e2d\u63d0\u53d6\u5217\u5165\u767d\u540d\u5355\u7684\u4e3b\u673a\u540d\uff0c\u4e3b\u673a\u540d\u6dfb\u52a0\u5728\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u4e2d\uff0c\u4f7f\u7528 split \u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u5c06\u5176\u8f6c\u6362\u4e3a\u5217\u8868\u3002\u6700\u540e\uff0c_ \u7528\u4e8e\u904d\u5386\u6240\u6709\u63d0\u53d6\u7684\u4e3b\u673a\u5217\u8868\uff0c\u5c06\u7ed3\u679c\u901a\u8fc7 21\uff1a \u8be5\u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u4e00\u4e2a patterns \u5217\u8868\u4e2d\u641c\u7d22\u5b83\uff0c\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\u662f\u8c03\u7528\u7684\u4e0b\u65b9\u7684 fqdn_matches \u51fd\u6570\u6765\u5b9e\u73b0\u7684\u3002\u5728 Rego \u4e2d\uff0c\u53ef\u4ee5\u5b9a\u4e49\u5177\u6709\u591a\u4e2a\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\uff0c\u53ea\u8981\u5b83\u4eec\u90fd\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5f53\u8c03\u7528\u591a\u6b21\u5b9a\u4e49\u7684\u51fd\u6570\u65f6\uff0c\u5c06\u8c03\u7528\u8be5\u51fd\u6570\u7684\u6240\u6709\u5b9e\u4f8b 25-33\uff1a \u7b2c\u4e00\u4e2a fqdn_matches \u51fd\u6570\u7684\u5b9a\u4e49\u3002 \u9996\u5148\u5b83\u901a\u8fc7\u70b9 . \u5c06 pattern \u8fdb\u884c\u62c6\u5206\uff0c\u6bd4\u5982 *.example.com \u4f1a\u5206\u5272\u6210 *\u3001example \u548c com \u63a5\u4e0b\u6765\u786e\u4fdd pattern \u7684\u7b2c\u4e00\u4e2a\u6807\u8bb0\u662f\u661f\u53f7\uff0c\u540c\u6837\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6309\u7167 . \u8fdb\u884c\u62c6\u5206 \u5220\u9664 pattern \u4e2d\u7684 * . \u6700\u540e\u8bc4\u4f30\u8f93\u5165\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u540e\u7f00\u7ed3\u5c3e\uff0c\u6bd4\u5982\u5982\u679c\u5141\u8bb8\u7684\u6a21\u5f0f\u5b57\u7b26\u4e32\u662f *.mydomain.com\uff0c\u88ab\u8bc4\u4f30\u7684\u5b57\u7b26\u4e32\u662f www.example.com \uff0c\u5219\u8fdd\u53cd\u4e86\u8be5\u7b56\u7565\uff0c\u56e0\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f mydomain.com \u7684\u4e00\u90e8\u5206 35-38\uff1a \u7b2c\u4e8c\u4e2a\u9a8c\u8bc1\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u9a8c\u8bc1\u4e0d\u4f7f\u7528\u901a\u914d\u7b26\u7684\u6a21\u5f0f\uff0c\u4f8b\u5982\uff0c\u5f53\u6a21\u5f0f\u5199\u4e3a mycompany.mydomain.com \u7684\u65f6\u5019 \u9996\u5148\uff0c\u9700\u8981\u786e\u4fdd\u63d0\u4f9b\u7684\u6a21\u5f0f\u4e0d\u5305\u542b\u901a\u914d\u7b26\uff0c\u5426\u5219\uff0c\u8be5\u8bed\u53e5\u5c06\u8bc4\u4f30\u4e3a false \u5e76\u4e14\u51fd\u6570\u5c06\u4e0d\u4f1a\u7ee7\u7eed \u5982\u679c\u6a21\u5f0f\u6307\u7684\u662f\u7279\u5b9a\u7684\u57df\u540d\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd fqdn \u4e0e\u8be5\u6a21\u5f0f\u5339\u914d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6a21\u5f0f\u662f mycompany.mydomain.com\uff0c\u90a3\u4e48\u4e3b\u673a\u7684 fqdn \u4e5f\u5fc5\u987b\u662f mycompany.mydomain.com \u6211\u4eec\u4e4b\u6240\u4ee5\u6709\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\uff0c\u662f\u56e0\u4e3a Rego \u8bed\u8a00\u7684\u4e00\u4e2a\u9650\u5236\uff0c\u5b83\u4f1a\u963b\u6b62\u51fd\u6570\u4ea7\u751f\u4e00\u4e2a\u4ee5\u4e0a\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u6240\u4ee5\uff0c\u8981\u60f3\u5728\u540c\u4e00\u65f6\u95f4\u7528\u4e0d\u540c\u7684\u903b\u8f91\u8fdb\u884c\u591a\u4e2a\u9a8c\u8bc1\uff0c\u5fc5\u987b\u4f7f\u7528\u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u3002 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5728\u5c06 Rego \u4ee3\u7801\u5e94\u7528\u5230\u96c6\u7fa4\u4e4b\u524d\u4e00\u5b9a\u8981\u8fdb\u884c\u5168\u65b9\u4f4d\u6d4b\u8bd5\uff0c\u6bd4\u5982\u53ef\u4ee5\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 Rego Playground \u6765\u5bf9\u4ee3\u7801\u8fdb\u884c\u9a8c\u8bc1\u3002 \u8981\u5c06\u8be5\u7b56\u7565\u5e94\u7528\u4e8e\u96c6\u7fa4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e0a\u9762\u7684 Rego \u6587\u4ef6\u4ee5 Configmap \u7684\u5f62\u5f0f\u5e94\u7528\u5230 opa \u547d\u540d\u7a7a\u95f4\u4e2d\uff1a \u279c kubectl create configmap ingress-allowlist --from-file = ingress-allowlist.rego \u279c kubectl label configmap ingress-allowlist openpolicyagent.org/policy = rego \u7531\u4e8e\u6211\u4eec\u5f00\u542f\u4e86 --require-policy-label \u53c2\u6570\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5e26\u4e0a\u5bf9\u5e94\u7684\u6807\u7b7e\u3002\u521b\u5efa\u5b8c\u6210\u540e\u6700\u597d\u68c0\u67e5\u4e0b\u6211\u4eec\u7684\u7b56\u7565\u662f\u5426\u88ab OPA \u83b7\u53d6\u4e86\uff0c\u5e76\u4e14\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 ConfigMap \u7684\u72b6\u6001\u6765\u5224\u65ad\uff1a \u279c kubectl get cm ingress-allowlist -o json | jq '.metadata.annotations' { \"openpolicyagent.org/policy-status\" : \"{\\\"status\\\":\\\"ok\\\"}\" } \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u4e00\u4e2a\u7528\u4e8e QA \u73af\u5883\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u3002\u8981\u6ce8\u610f\u5b83\u4eec\u90fd\u5305\u542b ingress-allowlist \u6ce8\u89e3\uff0c\u5176\u4e2d\u5305\u542b Ingress \u4e3b\u673a\u540d\u5e94\u8be5\u5339\u914d\u7684\u6a21\u5f0f\u3002 # qa-namespace.yaml apiVersion : v1 kind : Namespace metadata : annotations : ingress-allowlist : \"*.qa.qikqiak.com,*.internal.qikqiak.com\" name : qa --- # production-namespace.yaml apiVersion : v1 kind : Namespace metadata : annotations : ingress-allowlist : \"*.qikqiak.com\" name : production \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u4e24\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5373\u53ef\uff1a \u279c kubectl apply -f qa-namespace.yaml -f production-namespace.yaml \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u88ab\u7b56\u7565\u5141\u8bb8\u7684 Ingress \u5bf9\u8c61\uff1a \u279c kubectl apply -f - <<EOT apiVersion : networking.k8s.io/v1 kind : Ingress metadata : name : ingress-ok namespace : production spec : ingressClassName : nginx rules : - host : prod.qikqiak.com http : paths : - backend : service : name : nginx port : number : 80 path : / pathType : Prefix EOT \u6b63\u5e38\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u53ef\u4ee5\u521b\u5efa\uff1a \u279c kubectl get ing -n production NAME CLASS HOSTS ADDRESS PORTS AGE ingress-ok nginx prod.qikqiak.com 80 17s \u63a5\u7740\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0d\u7b26\u5408\u7b56\u7565\u7684 Ingress \u5bf9\u8c61\uff1a \u279c kubectl apply -f - <<EOT apiVersion : networking.k8s.io/v1 kind : Ingress metadata : name : ingress-bad namespace : qa spec : ingressClassName : nginx rules : - host : opa.k8s.local http : paths : - backend : service : name : nginx port : number : 80 path : / pathType : Prefix EOT Error from server : error when creating \"test.yaml\" : admission webhook \"validating-webhook.openpolicyagent.org\" denied the request : invalid ingress host \"opa.k8s.local\" \u4ece\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cAPIServer \u62d2\u7edd\u521b\u5efa Ingress \u5bf9\u8c61\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u5bf9\u8c61\u8fdd\u53cd\u4e86\u6211\u4eec\u7684 OPA \u7b56\u7565\u89c4\u5219\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7406\u7531 OPA \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u5b9e\u65bd\u51c6\u5165\u63a7\u5236\u7b56\u7565\uff0c\u800c\u65e0\u9700\u4fee\u6539\u6216\u91cd\u65b0\u7f16\u8bd1\u4efb\u4f55 Kubernetes \u7ec4\u4ef6\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 OPA \u7684 Bundle \u529f\u80fd\u7b56\u7565\uff0c\u53ef\u4ee5\u5b9a\u671f\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0b\u8f7d\u4ee5\u6ee1\u8db3\u4e0d\u65ad\u53d8\u5316\u7684\u64cd\u4f5c\u8981\u6c42\u3002","title":"\u7b56\u7565\u793a\u4f8b"},{"location":"ConfigManage/OPA/#gatekeeper","text":"\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u4f7f\u7528 kube-mgmt \u8fd9\u4e2a sidecar \u5bb9\u5668\u6765\u5b8c\u6210 OPA \u7b56\u7565\u7684\u81ea\u52a8\u540c\u6b65\uff0c\u6b64\u5916\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u66f4\u52a0\u9ad8\u7ea7\u7684\u5de5\u5177 Gatekeeper\uff0c\u76f8\u6bd4\u4e8e\u4e4b\u524d\u7684\u6a21\u5f0f\uff0cGatekeeper(v3.0) \u51c6\u5165\u63a7\u5236\u5668\u96c6\u6210\u4e86 OPA Constraint Framework\uff0c\u4ee5\u6267\u884c\u57fa\u4e8e CRD \u7684\u7b56\u7565\uff0c\u5e76\u5141\u8bb8\u58f0\u660e\u5f0f\u914d\u7f6e\u7684\u7b56\u7565\u53ef\u9760\u5730\u5171\u4eab\uff0c\u4f7f\u7528 kubebuilder \u6784\u5efa\uff0c\u5b83\u63d0\u4f9b\u4e86\u9a8c\u8bc1\u548c\u4fee\u6539\u51c6\u5165\u63a7\u5236\u548c\u5ba1\u8ba1\u529f\u80fd\u3002\u8fd9\u5141\u8bb8\u4e3a Rego \u7b56\u7565\u521b\u5efa\u7b56\u7565\u6a21\u677f\uff0c\u5c06\u7b56\u7565\u521b\u5efa\u4e3a CRD\uff0c\u5e76\u5728\u7b56\u7565 CRD \u4e0a\u5b58\u50a8\u5ba1\u8ba1\u7ed3\u679c\uff0c\u8fd9\u4e2a\u9879\u76ee\u662f\u8c37\u6b4c\u3001\u5fae\u8f6f\u3001\u7ea2\u5e3d\u548c Styra \u4e00\u8d77\u5408\u4f5c\u5b9e\u73b0\u7684\u3002 \u76f4\u63a5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u5b89\u88c5 Gatekeeper\uff1a \u279c kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/release-3.7/deploy/gatekeeper.yaml \u9ed8\u8ba4\u4f1a\u5c06 Gatekeeper \u5b89\u88c5\u5230 gatekeeper-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u540c\u6837\u4f1a\u5b89\u88c5\u51e0\u4e2a\u76f8\u5173\u7684 CRD\uff1a \u279c kubectl get pods -n gatekeeper-system NAME READY STATUS RESTARTS AGE gatekeeper-audit-5cf4b9686-glndv 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-dvkvp 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-gk4gr 1 /1 Running 0 2m2s gatekeeper-controller-manager-77b7dc99fb-mt5wn 1 /1 Running 0 2m2s \u279c kubectl get crd | grep gate assign.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z assignmetadata.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z configs.config.gatekeeper.sh 2022 -03-27T06:47:24Z constraintpodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:24Z constrainttemplatepodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:24Z constrainttemplates.templates.gatekeeper.sh 2022 -03-27T06:47:24Z modifyset.mutations.gatekeeper.sh 2022 -03-27T06:47:24Z mutatorpodstatuses.status.gatekeeper.sh 2022 -03-27T06:47:25Z providers.externaldata.gatekeeper.sh 2022 -03-27T06:47:25Z Gatekeeper \u4f7f\u7528 OPA \u7ea6\u675f\u6846\u67b6\u6765\u63cf\u8ff0\u548c\u6267\u884c\u7b56\u7565\uff0c\u5728\u5b9a\u4e49\u7ea6\u675f\u4e4b\u524d\u5fc5\u987b\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a ConstraintTemplate \u5bf9\u8c61\uff0c\u5b83\u63cf\u8ff0\u4e86\u5f3a\u5236\u6267\u884c\u7ea6\u675f\u7684 Rego \u548c\u7ea6\u675f\u7684\u6a21\u5f0f\u3002\u7ea6\u675f\u7684\u6a21\u5f0f\u5141\u8bb8\u7ba1\u7406\u5458\u5bf9\u7ea6\u675f\u7684\u884c\u4e3a\u8fdb\u884c\u5fae\u8c03\uff0c\u5c31\u50cf\u51fd\u6570\u7684\u53c2\u6570\u4e00\u6837\u3002 \u5982\u4e0b\u6240\u793a\u662f\u4e00\u4e2a\u7ea6\u675f\u6a21\u677f\uff0c\u63cf\u8ff0\u4e86\u9a8c\u8bc1\u7684\u5bf9\u8c61\u5fc5\u987b\u8981\u6709\u6807\u7b7e\u5b58\u5728\uff1a # k8srequiredlabels_template.yaml apiVersion : templates.gatekeeper.sh/v1 kind : ConstraintTemplate metadata : name : k8srequiredlabels spec : crd : spec : names : kind : K8sRequiredLabels validation : openAPIV3Schema : # Schema for the `parameters` field type : object description : Describe K8sRequiredLabels crd parameters properties : labels : type : array items : type : string description : A label string targets : - target : admission.k8s.gatekeeper.sh rego : | package k8srequiredlabels violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.review.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := sprintf(\"you must provide labels: %v\", [missing]) } \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684 ConstraintTemplate \u8d44\u6e90\u6e05\u5355\uff1a \u279c kubectl apply -f k8srequiredlabels_template.yaml constrainttemplate.templates.gatekeeper.sh/k8srequiredlabels created \u279c kubectl get ConstraintTemplate NAME AGE k8srequiredlabels 68s \u4e0a\u9762\u6211\u4eec\u7684\u5b9a\u4e49\u7684 ConstraintTemplate \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u5176\u4e2d\u7684 crd \u90e8\u5206\u63cf\u8ff0\u4e86\u6211\u4eec\u5b9a\u4e49\u7684 CRD \u6a21\u677f\uff0c\u6bd4\u5982\u7c7b\u578b\u53eb K8sRequiredLabels\uff0c\u9700\u8981\u548c\u6a21\u677f\u7684\u540d\u79f0\u4fdd\u6301\u4e00\u81f4\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u7684 validation \u5b9a\u4e49\u4e86\u6211\u4eec\u7684 CRD \u7684\u5c5e\u6027 Schema\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a labels \u7684\u5c5e\u6027\u53c2\u6570\uff0c\u7c7b\u4f3c\u662f\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\uff1a crd : spec : names : kind : K8sRequiredLabels validation : openAPIV3Schema : # Schema for the `parameters` field type : object description : Describe K8sRequiredLabels crd parameters properties : labels : type : array items : type : string description : A label string \u7136\u540e\u4e0b\u9762\u7684 targets \u90e8\u5206\u5c31\u662f\u5b9a\u4e49\u7684\u7ea6\u675f\u76ee\u6807\uff0c\u4f7f\u7528 Rego \u8fdb\u884c\u7f16\u5199\u3002 \u9996\u5148\u901a\u8fc7 provided := {label | input.review.object.metadata.labels[label]} \u83b7\u53d6\u5230\u521b\u5efa\u5bf9\u8c61\u7684\u6240\u6709 label \u6807\u7b7e \u7136\u540e\u901a\u8fc7 required := {label | label := input.parameters.labels[_]} \u83b7\u53d6\u5230\u9700\u8981\u63d0\u4f9b\u7684 label \u6807\u7b7e \u5c06\u4e0a\u9762\u4e24\u4e2a\u6807\u7b7e\u96c6\u5408\u76f8\u51cf\uff08rego\u8bed\u8a00\u652f\u6301\u8be5\u64cd\u4f5c\uff09\uff0c\u5f97\u5230\u672a\u6ee1\u8db3\u7684 label \u65ad\u8a00\u672a\u6ee1\u8db3\u7684label\u6570\u91cf>0\uff0c\u5982\u679c\u5927\u4e8e0\uff0c\u8bf4\u660e\u6761\u4ef6\u6ee1\u8db3\uff0cviolation \u4e3a true\uff0c\u8bf4\u660e\u8fdd\u53cd\u4e86\u7ea6\u675f\uff0c\u8fd4\u56de\u9519\u8bef \u4e0a\u9762\u7684\u7ea6\u675f\u6a21\u677f\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a\u7684 K8sRequiredLabels \u5bf9\u8c61\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u5c5e\u6027\u4f4d\u4e8e spec.parameters \u5c5e\u6027\u4e0b\u9762\uff1a \u279c kubectl get K8sRequiredLabels No resources found \u279c kubectl explain K8sRequiredLabels.spec.parameters.labels KIND: K8sRequiredLabels VERSION: constraints.gatekeeper.sh/v1beta1 FIELD: labels < [] string> DESCRIPTION: A label string \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684 K8sRequiredLabels \u8fd9\u4e2a\u7ea6\u675f\u6a21\u677f\u6765\u5b9a\u4e49\u7b56\u7565\u4e86\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u6c42\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e0a\u90fd\u5b9a\u4e49\u4e00\u4e2a gatekeeper \u7684\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a # all_ns_must_have_gatekeeper.yaml apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sRequiredLabels metadata : name : ns-must-have-gk spec : match : kinds : - apiGroups : [ \"\" ] kinds : [ \"Namespace\" ] # \u8868\u793a\u8fd9\u4e2a\u7ea6\u675f\u4f1a\u5728\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u7684\u65f6\u5019\u88ab\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 namespaceSelector\u3001namespaces\u7b49\u8fdb\u884c\u8fc7\u6ee4 parameters : labels : [ \"gatekeeper\" ] # \u6839\u636eschema\u89c4\u8303\u5b9a\u4e49 \u6ce8\u610f match \u5b57\u6bb5\uff0c\u5b83\u5b9a\u4e49\u4e86\u5c06\u5e94\u7528\u7ed9\u5b9a\u7ea6\u675f\u7684\u5bf9\u8c61\u7684\u8303\u56f4\uff0c\u5176\u4e2d kinds: [\"Namespace\"] \u8868\u793a\u8fd9\u4e2a\u7ea6\u675f\u4f1a\u5728\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u7684\u65f6\u5019\u88ab\u5e94\u7528\uff0c\u6b64\u5916\u5b83\u8fd8\u652f\u6301\u5176\u4ed6\u5339\u914d\u5668\uff1a kind \u63a5\u53d7\u5e26\u6709 apiGroups \u548c kind \u5b57\u6bb5\u7684\u5bf9\u8c61\u5217\u8868\uff0c\u8fd9\u4e9b\u5b57\u6bb5\u5217\u51fa\u4e86\u7ea6\u675f\u5c06\u5e94\u7528\u5230\u7684\u5bf9\u8c61\u7684\u7ec4/\u79cd\u7c7b\u3002\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a\u7ec4/\u79cd\u7c7b\u5bf9\u8c61\uff0c\u5219\u8d44\u6e90\u5728\u8303\u56f4\u5185\u53ea\u9700\u8981\u4e00\u4e2a\u5339\u914d\u9879\u3002 scope \u63a5\u53d7 \u3001Cluster \u6216 Namespaced \u51b3\u5b9a\u662f\u5426\u9009\u62e9\u96c6\u7fa4\u8303\u56f4\u548c/\u6216\u547d\u540d\u7a7a\u95f4\u8303\u56f4\u7684\u8d44\u6e90\u3002\uff08\u9ed8\u8ba4\u4e3a\uff09 namespaces \u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u7684\u5217\u8868\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u7ea6\u675f\u4ec5\u9002\u7528\u4e8e\u5217\u51fa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\u3002\u547d\u540d\u7a7a\u95f4\u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\u3002\u4f8b\u5982\uff0c namespaces: [kube-*] \u5339\u914d kube-system \u548c kube-public\u3002 excludeNamespaces \u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u7684\u5217\u8868\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u7ea6\u675f\u4ec5\u9002\u7528\u4e8e\u4e0d\u5728\u5217\u51fa\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\u3002ExcludedNamespaces \u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\uff0c\u4f8b\u5982\uff0c excludedNamespaces: [kube-*] \u5339\u914d kube-system \u548c kube-public\u3002 labelSelector \u662f\u6807\u51c6\u7684 Kubernetes \u6807\u7b7e\u9009\u62e9\u5668\u3002 namespaceSelector \u662f\u9488\u5bf9\u5bf9\u8c61\u7684\u5305\u542b\u540d\u79f0\u7a7a\u95f4\u6216\u5bf9\u8c61\u672c\u8eab\u7684\u6807\u7b7e\u9009\u62e9\u5668\uff0c\u5982\u679c\u5bf9\u8c61\u662f\u540d\u79f0\u7a7a\u95f4\u3002name \u662f\u5bf9\u8c61\u7684\u540d\u79f0\u3002\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5339\u914d\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u5bf9\u8c61\u3002Name \u8fd8\u652f\u6301\u57fa\u4e8e\u524d\u7f00\u7684 glob\u3002\u4f8b\u5982\uff0c\u540d\u79f0\uff1apod-* \u5339\u914d pod-a \u548c pod-b\u3002 \u4e0b\u9762\u7684 parameters.labels \u5c31\u662f\u6839\u636e\u4e0a\u9762\u7684 CRD \u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u8be5\u503c\u662f\u4f20\u9012\u7ed9 opa \u7684\u53c2\u6570\uff0c\u6b64\u5904\u8868\u793a\u4e00\u4e2a key \u4e3a labels\uff0cvalue \u4e3a\u4e00\u4e2a\u5217\u8868\u7684\u5b57\u5178\uff0c\u4e0e ConstraintTemplate \u91cc\u7684 properties \u8981\u5339\u914d\u4e0a\uff0c\u6b64\u5904\u8868\u793a\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u9700\u8981\u542b\u6709 gatekeeper \u7684 label\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl apply -f all_ns_must_have_gatekeeper.yaml k8srequiredlabels.constraints.gatekeeper.sh/ns-must-have-gk created \u521b\u5efa\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b\u5230\u8fd9\u4e2a constraints \u5bf9\u8c61\uff1a \u279c kubectl get k8srequiredlabels NAME AGE ns-must-have-gk 73s \u279c kubectl get constraints # \u548c\u4e0a\u9762\u5bf9\u8c61\u4e00\u6837 NAME AGE ns-must-have-gk 81s \u7531\u4e8e Gatekeeper \u5177\u6709\u5ba1\u8ba1\u529f\u80fd\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u4e2d\u6267\u884c\u7684\u7ea6\u675f\u6761\u4ef6\u5bf9\u8d44\u6e90\u8fdb\u884c\u5b9a\u671f\u8bc4\u4f30\uff0c\u4ee5\u68c0\u6d4b\u9884\u5148\u5b58\u5728\u7684\u9519\u8bef\u914d\u7f6e\uff0cGatekeeper \u5c06\u5ba1\u8ba1\u7ed3\u679c\u5b58\u50a8\u4e3a\u76f8\u5173\u7ea6\u675f\u6761\u4ef6\u7684 status \u5b57\u6bb5\u4e2d\u5217\u51fa\u8fdd\u89c4\u884c\u4e3a\u3002\u6211\u4eec\u53ef\u4ee5\u67e5\u770b K8sRequiredLabels \u5bf9\u8c61\u7684 status \u5b57\u6bb5\u6765\u67e5\u770b\u4e0d\u7b26\u5408\u7ea6\u675f\u7684\u884c\u4e3a\uff1a \u279c kubectl get constraints ns-must-have-gk -o yaml apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sRequiredLabels ...... status : auditTimestamp : \"2022-03-27T07:42:38Z\" ...... totalViolations : 11 violations : - enforcementAction : deny kind : Namespace message : 'you must provide labels: {\"gatekeeper\"}' name : apisix - enforcementAction : deny kind : Namespace message : 'you must provide labels: {\"gatekeeper\"}' name : default ...... \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Namespace\uff1a # test-namespace.yaml apiVersion : v1 kind : Namespace metadata : name : ns-test labels : a : b #gatekeeper: abc \u6b64\u65f6\u4e0d\u7ed9\u547d\u540d\u7a7a\u95f4\u6dfb\u52a0 key \u4e3a gatekeeper \u7684 label\uff0c\u521b\u5efa\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u9519\uff1a Error from server ([ ns-must-have-gk ] you must provide labels: { \"gatekeeper\" }) : error when creating \"test-namespace.yaml\" : admission webhook \"validation.gatekeeper.sh\" denied the request: [ ns-must-have-gk ] you must provide labels: { \"gatekeeper\" } \u7136\u540e\u628a gatekeeper: abc \u8fd9\u884c\u7684\u6ce8\u91ca\u6253\u5f00\uff0c\u5219\u80fd\u6210\u529f\u521b\u5efa\u4e86\uff0c\u8fd9\u5c31\u662f Gatekeeper \u7684\u57fa\u672c\u7528\u6cd5\u3002 \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5b9a\u4e49\u7ea6\u675f\u6a21\u677f\u7684\u7b56\u7565\u4f1a\u7ecf\u5e38\u4ece input \u5bf9\u8c61\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u9700\u8981\u521b\u5efa\u81ea\u5df1\u7684\u7ea6\u675f\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4f20\u5165\u7684\u53c2\u6570\u5373 input \u662f\u4ec0\u4e48\uff0c\u6709\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u62d2\u7edd\u6240\u6709\u8bf7\u6c42\u5e76\u5c06\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e3a\u5176\u62d2\u7edd\u6d88\u606f\u8f93\u51fa\u7684\u7ea6\u675f/\u6a21\u677f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u521b\u5efa\u6a21\u677f\u65f6\u5728 violation \u4e2d\u53ea\u4fdd\u7559\u4e00\u884c msg := sprintf(\"input: %v\", [input])\uff0c\u6b64\u65f6\u521b\u5efa\u5bf9\u8c61\u65f6\u5fc5\u5b9a\u4f1a\u5931\u8d25\uff0c\u7136\u540e\u83b7\u53d6\u5230\u8f93\u51fa\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u91cc\u9762\u5373\u5305\u542b\u6240\u6709 input \u4fe1\u606f\uff0c\u4e4b\u540e\u518d\u901a\u8fc7 Rego \u8bed\u6cd5\u53bb\u83b7\u53d6\u9700\u8981\u7684\u6570\u636e\u5373\u53ef\u3002 apiVersion : templates.gatekeeper.sh/v1 kind : ConstraintTemplate metadata : name : k8sdenyall spec : crd : spec : names : kind : K8sDenyAll targets : - target : admission.k8s.gatekeeper.sh rego : | package k8sdenyall violation[{\"msg\": msg}] { msg := sprintf(\"input: %v\", [input]) } --- apiVersion : constraints.gatekeeper.sh/v1beta1 kind : K8sDenyAll metadata : name : deny-all-namespaces spec : match : kinds : - apiGroups : [ \"\" ] kinds : [ \"Namespace\" ] \u7531\u4e8e\u7ea6\u675f\u6a21\u677f\u6216\u8005\u8bf4\u7b56\u7565\u5e93\u5177\u6709\u4e00\u5b9a\u7684\u901a\u7528\u6027\uff0c\u6240\u4ee5 OPA Gatekeeper \u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u7b56\u7565\u5e93\uff1a https://github.com/open-policy-agent/gatekeeper-library \uff0c\u8be5\u4ed3\u5e93\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u901a\u7528\u7684\u7ea6\u675f\u6a21\u677f\u3002 \u6bcf\u4e2a\u6a21\u677f\u5e93\u4e0b\u9762\u90fd\u5305\u542b\u4e00\u4e2a template.yaml \u6587\u4ef6\u7528\u6765\u63cf\u8ff0\u7ea6\u675f\u6a21\u677f\uff0csamples \u76ee\u5f55\u4e0b\u9762\u5c31\u5305\u542b\u5177\u4f53\u7684\u7ea6\u675f\u5bf9\u8c61\u548c\u793a\u4f8b\u8d44\u6e90\u6e05\u5355\uff0c\u8fd9\u4e9b\u7b56\u7565\u4e5f\u662f\u6211\u4eec\u53bb\u5b66\u4e60 Rego \u8bed\u8a00\u7684\u5f88\u597d\u7684\u6848\u4f8b\u3002","title":"gatekeeper"},{"location":"ConfigManage/OPA/#rego","text":"\u4e0a\u9762\u7684\u793a\u4f8b\u4e3a\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 OPA \u6765\u914d\u7f6e\u6211\u4eec\u7684\u7b56\u7565\u89c4\u5219\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5c31\u662f\u4f7f\u7528 Rego \u7f16\u5199\u7684\u7b56\u7565\u89c4\u5219\uff0cRego \u662f\u4e13\u95e8\u4e3a\u8868\u8fbe\u590d\u6742\u7684\u5206\u5c42\u6570\u636e\u7ed3\u6784\u7684\u7b56\u7565\u800c\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u8981\u638c\u63e1 OPA \u7684\u4f7f\u7528\u5bf9 Rego \u7684\u4e86\u89e3\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002","title":"Rego"},{"location":"ConfigManage/RBAC/","text":"\u6743\u9650\u63a7\u5236 - RBAC \u00b6 \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7 APIServer \u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u96c6\u7fa4\u662f\u600e\u6837\u77e5\u9053\u6211\u4eec\u7684\u8bf7\u6c42\u5c31\u662f\u5408\u6cd5\u7684\u8bf7\u6c42\u5462\uff1f\u8fd9\u4e2a\u5c31\u9700\u8981\u4e86\u89e3 Kubernetes \u4e2d\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u77e5\u8bc6\u70b9\u4e86\uff1a RBAC \uff08\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236\uff09\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7 Kubernetes API \u52a8\u6001\u914d\u7f6e\u7b56\u7565\u6765\u542f\u7528RBAC\uff0c\u9700\u8981\u5728 kube-apiserver \u4e2d\u6dfb\u52a0\u53c2\u6570 --authorization-mode = RBAC \uff0c\u5982\u679c\u4f7f\u7528\u7684 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u90a3\u4e48\u662f\u9ed8\u8ba4\u5f00\u542f\u4e86 RBAC \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b Master \u8282\u70b9\u4e0a apiserver \u7684\u9759\u6001 Pod \u5b9a\u4e49\u6587\u4ef6\uff1a \u279c ~ cat /etc/kubernetes/manifests/kube-apiserver.yaml ... - --authorization-mode = Node,RBAC ... \u5982\u679c\u662f\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u642d\u5efa\u7684\u96c6\u7fa4\uff0c\u6dfb\u52a0\u8fd9\u4e2a\u53c2\u6570\u8fc7\u540e\uff0c\u8bb0\u5f97\u8981\u91cd\u542f kube-apiserver \u670d\u52a1\u3002 API \u5bf9\u8c61 \u00b6 \u5728\u5b66\u4e60 RBAC \u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u518d\u53bb\u7406\u89e3\u4e0b Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0cKubernetes \u5bf9\u8c61\u662f\u6211\u4eec\u6301\u4e45\u5316\u7684\u5b9e\u4f53\uff0c\u5c31\u662f\u6700\u7ec8\u5b58\u5165 etcd \u4e2d\u7684\u6570\u636e\uff0c\u96c6\u7fa4\u4e2d\u901a\u8fc7\u8fd9\u4e9b\u5b9e\u4f53\u6765\u8868\u793a\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\u3002\u524d\u9762\u6211\u4eec\u90fd\u76f4\u63a5\u7f16\u5199\u7684 YAML \u6587\u4ef6\uff0c\u901a\u8fc7 kubectl \u6765\u63d0\u4ea4\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa\u7684\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b83\u7a76\u7adf\u662f\u5982\u4f55\u5c06\u6211\u4eec\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a API \u5bf9\u8c61\u7684\u5462\uff1f \u8fd9\u4e2a\u5c31\u9700\u8981\u53bb\u4e86\u89e3\u4e0b \u58f0\u660e\u5f0f API \u7684\u8bbe\u8ba1\uff0cKubernetes API \u662f\u4e00\u4e2a\u4ee5 JSON \u4e3a\u4e3b\u8981\u5e8f\u5217\u5316\u65b9\u5f0f\u7684 HTTP \u670d\u52a1\uff0c\u9664\u6b64\u4e4b\u5916\u4e5f\u652f\u6301 Protocol Buffers \u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4e3b\u8981\u7528\u4e8e\u96c6\u7fa4\u5185\u90e8\u7ec4\u4ef6\u95f4\u7684\u901a\u4fe1\u3002\u4e3a\u4e86\u53ef\u6269\u5c55\u6027\uff0cKubernetes \u5728\u4e0d\u540c\u7684 API \u8def\u5f84\uff08\u6bd4\u5982/api/v1 \u6216\u8005 /apis/batch\uff09\u4e0b\u9762\u652f\u6301\u4e86\u591a\u4e2a API \u7248\u672c\uff0c\u4e0d\u540c\u7684 API \u7248\u672c\u610f\u5473\u7740\u4e0d\u540c\u7ea7\u522b\u7684\u7a33\u5b9a\u6027\u548c\u652f\u6301\uff1a Alpha \u7ea7\u522b\uff0c\u4f8b\u5982 v1alpha1 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u88ab\u7981\u7528\u7684\uff0c\u53ef\u4ee5\u968f\u65f6\u5220\u9664\u5bf9\u529f\u80fd\u7684\u652f\u6301\uff0c\u6240\u4ee5\u8981\u614e\u7528 Beta \u7ea7\u522b\uff0c\u4f8b\u5982 v2beta1 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u8868\u793a\u4ee3\u7801\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u5f88\u597d\u7684\u6d4b\u8bd5\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u8bed\u4e49\u53ef\u80fd\u4f1a\u5728\u968f\u540e\u7684\u7248\u672c\u4e2d\u4ee5\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539 \u7a33\u5b9a\u7ea7\u522b\uff0c\u6bd4\u5982 v1 \u8868\u793a\u5df2\u7ecf\u662f\u7a33\u5b9a\u7248\u672c\u4e86\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5728\u540e\u7eed\u7684\u5f88\u591a\u7248\u672c\u4e2d\u3002 \u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u4e00\u4e2a API \u5bf9\u8c61\u5728 Etcd \u91cc\u7684\u5b8c\u6574\u8d44\u6e90\u8def\u5f84\uff0c\u662f\u7531\uff1a Group\uff08API \u7ec4\uff09\u3001Version\uff08API \u7248\u672c\uff09\u548c Resource\uff08API \u8d44\u6e90\u7c7b\u578b\uff09 \u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u6574\u4e2a Kubernetes \u91cc\u7684\u6240\u6709 API \u5bf9\u8c61\uff0c\u5b9e\u9645\u4e0a\u5c31\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765\uff1a \u4ece\u4e0a\u56fe\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa Kubernetes \u7684 API \u5bf9\u8c61\u7684\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5728\u9876\u5c42\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u6838\u5fc3\u7ec4\uff08\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u662f /api/v1 \u4e0b\u7684\u6240\u6709\u5185\u5bb9\u800c\u4e0d\u662f\u5728 /apis/core/v1 \u4e0b\u9762\uff09\u548c\u547d\u540d\u7ec4\uff08\u8def\u5f84 /apis/$NAME/$VERSION \uff09\u548c\u7cfb\u7edf\u8303\u56f4\u5185\u7684\u5b9e\u4f53\uff0c\u6bd4\u5982 /metrics\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b\u96c6\u7fa4\u4e2d\u7684 API \u7ec4\u7ec7\u5f62\u5f0f\uff1a \u279c ~ kubectl get --raw / { \"paths\" : [ \"/api\" , \"/api/v1\" , \"/apis\" , \"/apis/\" , ...... \"/version\" ] } \u6bd4\u5982\u6211\u4eec\u6765\u67e5\u770b\u6279\u5904\u7406\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5728\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u7248\u672c\u4e2d\u5b58\u5728 v1\u8fd9\u4e2a\u7248\u672c \u7684\u64cd\u4f5c\uff1a /apis/batch/v1 \uff0c\u66b4\u9732\u4e86\u53ef\u4ee5\u67e5\u8be2\u548c\u64cd\u4f5c\u7684\u4e0d\u540c\u5b9e\u4f53\u96c6\u5408\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7 kubectl \u6765\u67e5\u8be2\u5bf9\u5e94\u5bf9\u8c61\u4e0b\u9762\u7684\u6570\u636e\uff1a \u279c ~ kubectl get --raw /apis/batch/v1 | python -m json.tool { \"apiVersion\" : \"v1\" , \"groupVersion\" : \"batch/v1\" , \"kind\" : \"APIResourceList\" , \"resources\" : [ { \"categories\" : [ \"all\" ], \"kind\" : \"CronJob\" , \"name\" : \"cronjobs\" , \"namespaced\" : true , \"shortNames\" : [ \"cj\" ], \"singularName\" : \"\" , \"storageVersionHash\" : \"sd5LIXh4Fjs=\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ] }, { \"kind\" : \"CronJob\" , \"name\" : \"cronjobs/status\" , \"namespaced\" : true , \"singularName\" : \"\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] }, { \"categories\" : [ \"all\" ], \"kind\" : \"Job\" , \"name\" : \"jobs\" , \"namespaced\" : true , \"singularName\" : \"\" , \"storageVersionHash\" : \"mudhfqk/qZY=\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ] }, { \"kind\" : \"Job\" , \"name\" : \"jobs/status\" , \"namespaced\" : true , \"singularName\" : \"\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] } ] } \u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u548c\u6211\u4eec\u5e73\u65f6\u64cd\u4f5c HTTP \u670d\u52a1\u7684\u65b9\u5f0f\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl proxy \u547d\u4ee4\u6765\u5f00\u542f\u5bf9 apiserver \u7684\u8bbf\u95ee\uff1a \u279c ~ kubectl proxy Starting to serve on 127 .0.0.1:8001 \u7136\u540e\u91cd\u65b0\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u8bbf\u95ee\u6279\u5904\u7406\u7684 API \u670d\u52a1\uff1a \u279c ~ curl http://127.0.0.1:8001/apis/batch/v1 { \"kind\" : \"APIResourceList\" , \"apiVersion\" : \"v1\" , \"groupVersion\" : \"batch/v1\" , \"resources\" : [ { \"name\" : \"jobs\" , \"singularName\" : \"\" , \"namespaced\" : true , \"kind\" : \"Job\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ], \"categories\" : [ \"all\" ], \"storageVersionHash\" : \"mudhfqk/qZY=\" }, { \"name\" : \"jobs/status\" , \"singularName\" : \"\" , \"namespaced\" : true , \"kind\" : \"Job\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] } ] } \u901a\u5e38\uff0cKubernetes API \u652f\u6301\u901a\u8fc7\u6807\u51c6 HTTP POST\u3001PUT\u3001DELETE \u548c GET \u5728\u6307\u5b9a PATH \u8def\u5f84\u4e0a\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u548c\u68c0\u7d22\u64cd\u4f5c\uff0c\u5e76\u4f7f\u7528 JSON \u4f5c\u4e3a\u9ed8\u8ba4\u7684\u6570\u636e\u4ea4\u4e92\u683c\u5f0f\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a Deployment \u5bf9\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u7684 YAML \u6587\u4ef6\u7684\u58f0\u660e\u5c31\u9700\u8981\u600e\u4e48\u5199\uff1a apiVersion : apps/v1 kind : Deployment \u5176\u4e2d Deployment \u5c31\u662f\u8fd9\u4e2a API \u5bf9\u8c61\u7684\u8d44\u6e90\u7c7b\u578b\uff08 Resource \uff09\uff0capps \u5c31\u662f\u5b83\u7684\u7ec4\uff08 Group \uff09\uff0cv1 \u5c31\u662f\u5b83\u7684\u7248\u672c\uff08 Version \uff09\u3002API Group\u3001Version \u548c \u8d44\u6e90\u5c31\u552f\u4e00\u5b9a\u4e49\u4e86\u4e00\u4e2a HTTP \u8def\u5f84\uff0c\u7136\u540e\u5728 kube-apiserver \u7aef\u5bf9\u8fd9\u4e2a url \u8fdb\u884c\u4e86\u76d1\u542c\uff0c\u7136\u540e\u628a\u5bf9\u5e94\u7684\u8bf7\u6c42\u4f20\u9012\u7ed9\u4e86\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u8fdb\u884c\u5904\u7406\u800c\u5df2\uff0c\u5f53\u7136\u5728 Kuberentes \u4e2d\u7684\u5b9e\u73b0\u8fc7\u7a0b\u662f\u975e\u5e38\u590d\u6742\u7684\u3002 RBAC \u00b6 \u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Kubernetes \u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u90fd\u662f\u6a21\u578b\u5316\u7684 API \u5bf9\u8c61\uff0c\u5141\u8bb8\u6267\u884c CRUD ( Create \u3001 Read \u3001 Update \u3001 Delete ) \u64cd\u4f5c(\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c)\u3002 \u8d44\u6e90\u5bf9\u8c61\u53ca\u5176\u5bf9\u5e94\u7684\u64cd\u4f5c\u6709: Workloads Verbs Pods create ConfigMaps get Deployments delete Nodes list Secrets update Namespaces edit ...... watch exec patch \u5728\u66f4\u4e0a\u5c42\uff0c\u8fd9\u4e9b\u8d44\u6e90\u548c API Group \u8fdb\u884c\u5173\u8054\uff0c\u6bd4\u5982 Pods \u5c5e\u4e8e Core API Group\uff0c\u800c Deployments \u5c5e\u4e8e apps API Group\uff0c\u73b0\u5728\u6211\u4eec\u8981\u5728 Kubernetes \u4e2d\u901a\u8fc7 RBAC \u6765\u5bf9\u8d44\u6e90\u8fdb\u884c\u6743\u9650\u7ba1\u7406\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u8fd9\u4e9b\u8d44\u6e90\u548c\u64cd\u4f5c\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e86\u89e3\u53e6\u5916\u51e0\u4e2a\u6982\u5ff5\uff1a Rule \uff1a\u89c4\u5219\uff0c\u4e00\u7ec4\u5c5e\u4e8e\u4e0d\u540c API Group \u8d44\u6e90\u4e0a\u7684\u4e00\u7ec4\u64cd\u4f5c\u96c6\u5408\u3002 Role \u548c ClusterRole \uff1a\u89d2\u8272\u548c\u96c6\u7fa4\u89d2\u8272\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u90fd\u5305\u542b\u4e0a\u9762\u7684 Rules \u5143\u7d20\u3002 \u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728 Role \u4e2d\uff0c\u5b9a\u4e49\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u548c namespace \u5173\u8054\u7684\uff0c\u800c ClusterRole \u662f\u96c6\u7fa4\u8303\u56f4\u5185\u7684\uff0c\u56e0\u6b64\u5b9a\u4e49\u7684\u89c4\u5219\u4e0d\u53d7\u547d\u540d\u7a7a\u95f4\u7684\u7ea6\u675f\u3002\u53e6\u5916 Role \u548c ClusterRole \u5728Kubernetes \u4e2d\u90fd\u88ab\u5b9a\u4e49\u4e3a\u96c6\u7fa4\u5185\u90e8\u7684 API \u8d44\u6e90\uff0c\u548c\u6211\u4eec\u524d\u9762\u5b66\u4e60\u8fc7\u7684 Pod\u3001Deployment \u8fd9\u4e9b\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u90fd\u662f\u6211\u4eec\u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u540c\u6837\u7684\u53ef\u4ee5\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u63cf\u8ff0\uff0c\u7528 kubectl \u5de5\u5177\u6765\u7ba1\u7406 Subject \uff1a\u4e3b\u9898\uff0c\u5bf9\u5e94\u96c6\u7fa4\u4e2d\u5c1d\u8bd5\u64cd\u4f5c\u7684\u5bf9\u8c61\uff0c\u96c6\u7fa4\u4e2d\u5b9a\u4e49\u4e863\u79cd\u7c7b\u578b\u7684\u4e3b\u9898\u8d44\u6e90\uff1a User Account \uff1a\u7528\u6237\uff0c\u8fd9\u662f\u6709 \u5916\u90e8\u72ec\u7acb\u670d\u52a1 \u8fdb\u884c\u7ba1\u7406\u7684\uff0c\u7ba1\u7406\u5458\u8fdb\u884c\u79c1\u94a5\u7684\u5206\u914d\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 KeyStone \u6216\u8005 Goolge \u5e10\u53f7\uff0c\u751a\u81f3\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u5217\u8868\u4e5f\u53ef\u4ee5\u3002\u5bf9\u4e8e\u7528\u6237\u7684\u7ba1\u7406\u96c6\u7fa4\u5185\u90e8\u6ca1\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u7528\u6237\u4e0d\u80fd\u901a\u8fc7\u96c6\u7fa4\u5185\u90e8\u7684 API \u6765\u8fdb\u884c\u7ba1\u7406 Group \uff1a\u7ec4\uff0c\u8fd9\u662f\u7528\u6765 \u5173\u8054\u591a\u4e2a\u8d26\u6237\u7684 \uff0c\u96c6\u7fa4\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u521b\u5efa\u7684\u7ec4\uff0c\u6bd4\u5982 cluster-admin Service Account \uff1a\u670d\u52a1\u5e10\u53f7\uff0c\u901a\u8fc7 Kubernetes API \u6765\u7ba1\u7406\u7684\u4e00\u4e9b\u7528\u6237\u5e10\u53f7\uff0c \u548c namespace \u8fdb\u884c\u5173\u8054\u7684\uff0c\u9002\u7528\u4e8e\u96c6\u7fa4\u5185\u90e8\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f \u3002\u9700\u8981\u901a\u8fc7 API \u6765\u5b8c\u6210\u6743\u9650\u8ba4\u8bc1\uff0c\u6240\u4ee5\u5728\u96c6\u7fa4\u5185\u90e8\u8fdb\u884c\u6743\u9650\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u9700\u8981\u4f7f\u7528\u5230 ServiceAccount\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u8fd9\u8282\u8bfe\u7684\u91cd\u70b9 RoleBinding \u548c ClusterRoleBinding \uff1a\u89d2\u8272\u7ed1\u5b9a\u548c\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u628a\u58f0\u660e\u7684 Subject \u548c\u6211\u4eec\u7684 Role \u8fdb\u884c\u7ed1\u5b9a\u7684\u8fc7\u7a0b\uff08\u7ed9\u67d0\u4e2a\u7528\u6237\u7ed1\u5b9a\u4e0a\u64cd\u4f5c\u7684\u6743\u9650\uff09\uff0c\u4e8c\u8005\u7684\u533a\u522b\u4e5f\u662f\u4f5c\u7528\u8303\u56f4\u7684\u533a\u522b\uff1aRoleBinding \u53ea\u4f1a\u5f71\u54cd\u5230\u5f53\u524d namespace \u4e0b\u9762\u7684\u8d44\u6e90\u64cd\u4f5c\u6743\u9650\uff0c\u800c ClusterRoleBinding \u4f1a\u5f71\u54cd\u5230\u96c6\u7fa4\u7ea7\u522b\u7684 namespace\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6765\u5b66\u4e60\u4e0b\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u5982\u4f55\u4f7f\u7528 RBAC\u3002 \u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a namespace \u7684\u666e\u901a\u7528\u6237 \u00b6 \u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a User Account\uff0c\u53ea\u80fd\u8bbf\u95ee kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff1a username : cnych group : youdianzhishi \u521b\u5efa\u7528\u6237\u51ed\u8bc1 \u00b6 \u6211\u4eec\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cKubernetes \u6ca1\u6709 User Account \u7684 API \u5bf9\u8c61\uff0c\u4e0d\u8fc7\u8981\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u5e10\u53f7\u7684\u8bdd\u4e5f\u662f\u633a\u7b80\u5355\u7684\uff0c\u5229\u7528\u7ba1\u7406\u5458\u5206\u914d\u7ed9\u4f60\u7684\u4e00\u4e2a\u79c1\u94a5\u5c31\u53ef\u4ee5\u521b\u5efa\u4e86\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6211\u4eec\u6765\u4f7f\u7528 OpenSSL \u8bc1\u4e66\u6765\u521b\u5efa\u4e00\u4e2a User\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684 cfssl\u5de5\u5177\u6765\u521b\u5efa\uff1a \u7ed9\u7528\u6237 cnych \u521b\u5efa\u4e00\u4e2a\u79c1\u94a5\uff0c\u547d\u540d\u6210 cnych.key\uff1a \u279c ~ openssl genrsa -out cnych.key 2048 Generating RSA private key, 2048 bit long modulus ..............................................................................+++ ..............................................................................................................................................+++ e is 65537 ( 0x10001 ) \u4f7f\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u79c1\u94a5\u521b\u5efa\u4e00\u4e2a\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\u6587\u4ef6\uff1acnych.csr\uff0c\u8981\u6ce8\u610f\u9700\u8981\u786e\u4fdd\u5728 -subj \u53c2\u6570\u4e2d\u6307\u5b9a\u7528\u6237\u540d\u548c\u7ec4(CN\u8868\u793a\u7528\u6237\u540d\uff0cO\u8868\u793a\u7ec4)\uff1a \u279c ~ openssl req -new -key cnych.key -out cnych.csr -subj \"/CN=cnych/O=youdianzhishi\" \u7136\u540e\u627e\u5230\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u7684 CA \u8bc1\u4e66\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\uff0cCA \u76f8\u5173\u8bc1\u4e66\u4f4d\u4e8e /etc/kubernetes/pki/ \u76ee\u5f55\u4e0b\u9762\uff0c\u5982\u679c\u4f60\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u642d\u5efa\u7684\uff0c\u4f60\u5e94\u8be5\u5728\u6700\u5f00\u59cb\u642d\u5efa\u96c6\u7fa4\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u6307\u5b9a\u597d\u4e86 CA \u7684\u76ee\u5f55\uff0c \u6211\u4eec\u4f1a\u5229\u7528\u8be5\u76ee\u5f55\u4e0b\u9762\u7684 ca.crt \u548c ca.key\u4e24\u4e2a\u6587\u4ef6\u6765\u6279\u51c6\u4e0a\u9762\u7684\u8bc1\u4e66\u8bf7\u6c42 \u3002\u751f\u6210\u6700\u7ec8\u7684\u8bc1\u4e66\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e\u8bc1\u4e66\u7684\u6709\u6548\u671f\u4e3a 500 \u5929\uff1a \u279c ~ openssl x509 -req -in cnych.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out cnych.crt -days 500 Signature ok subject = /CN = cnych/O = youdianzhishi Getting CA Private Key \u73b0\u5728\u67e5\u770b\u6211\u4eec\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u9762\u662f\u5426\u751f\u6210\u4e86\u4e00\u4e2a\u8bc1\u4e66\u6587\u4ef6\uff1a \u279c ~ ls cnych.crt cnych.csr cnych.key \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u521a\u521a\u521b\u5efa\u7684\u8bc1\u4e66\u6587\u4ef6\u548c\u79c1\u94a5\u6587\u4ef6\u5728\u96c6\u7fa4\u4e2d\u521b\u5efa\u65b0\u7684\u51ed\u8bc1\u548c\u4e0a\u4e0b\u6587(Context): \u279c ~ kubectl config set-credentials cnych --client-certificate = cnych.crt --client-key = cnych.key User \"cnych\" set. \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7528\u6237 cnych \u521b\u5efa\u4e86\uff0c\u7136\u540e\u4e3a\u8fd9\u4e2a\u7528\u6237\u8bbe\u7f6e\u65b0\u7684 Context\uff0c\u6211\u4eec\u8fd9\u91cc\u6307\u5b9a\u7279\u5b9a\u7684\u4e00\u4e2a namespace\uff1a \u279c ~ kubectl config set-context cnych-context --cluster = kubernetes --namespace = kube-system --user = cnych Context \"cnych-context\" created. \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u7528\u6237 cnych \u5c31\u5df2\u7ecf\u521b\u5efa\u6210\u529f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5f53\u524d\u7684\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u64cd\u4f5c kubectl \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u4e3a\u8be5\u7528\u6237\u5b9a\u4e49\u4efb\u4f55\u64cd\u4f5c\u7684\u6743\u9650\u5462\uff1a \u279c ~ kubectl get pods --context = cnych-context Error from server ( Forbidden ) : pods is forbidden: User \"cnych\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-system\" \u521b\u5efa\u89d2\u8272 \u00b6 \u7528\u6237\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u7ed9\u8be5\u7528\u6237\u6dfb\u52a0\u64cd\u4f5c\u6743\u9650\uff0c\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a YAML \u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a\u5141\u8bb8\u7528\u6237\u64cd\u4f5c Deployment\u3001Pod\u3001ReplicaSets \u7684\u89d2\u8272\uff0c\u5982\u4e0b\u5b9a\u4e49\uff1a # cnych-role.yaml apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : name : cnych-role namespace : kube-system rules : - apiGroups : [ \"\" , \"apps\" ] resources : [ \"deployments\" , \"replicasets\" , \"pods\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] # \u4e5f\u53ef\u4ee5\u4f7f\u7528['*'] \u5176\u4e2d Pod \u5c5e\u4e8e core \u8fd9\u4e2a API Group\uff0c\u5728 YAML \u4e2d\u7528 \u7a7a\u5b57\u7b26 \u5c31\u53ef\u4ee5\uff0c\u800c Deployment \u548c ReplicaSet \u73b0\u5728\u90fd\u5c5e\u4e8e apps \u8fd9\u4e2a API Group\uff08\u5982\u679c\u4e0d\u77e5\u9053\u5219\u53ef\u4ee5\u7528 kubectl explain \u547d\u4ee4\u67e5\u770b\uff09\uff0c\u6240\u4ee5 rules \u4e0b\u9762\u7684 apiGroups \u5c31\u7efc\u5408\u4e86\u8fd9\u51e0\u4e2a\u8d44\u6e90\u7684 API Group\uff1a [\"\", \"apps\"] \uff0c\u5176\u4e2d verbs \u5c31\u662f\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u6240\u6709\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ['*'] \u6765\u4ee3\u66ff\uff0c\u7136\u540e\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a Role\uff1a \u279c ~ kubectl create -f cnych-role.yaml role.rbac.authorization.k8s.io/cnych-role created \u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4e0a\u9762\u7684 cnych-context \u8fd9\u4e2a\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u6682\u65f6\u8fd8\u6728\u6709\u6743\u9650\u3002 \u521b\u5efa\u89d2\u8272\u6743\u9650\u7ed1\u5b9a \u00b6 Role \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u5f88\u660e\u663e\u73b0\u5728\u6211\u4eec\u8fd9\u4e2a Role \u548c\u6211\u4eec\u7684\u7528\u6237 cnych \u8fd8\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5bf9\u5427\uff1f\u8fd9\u91cc\u5c31\u9700\u8981\u521b\u5efa\u4e00\u4e2a RoleBinding \u5bf9\u8c61\uff0c\u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5c06\u4e0a\u9762\u7684 cnych-role \u89d2\u8272\u548c\u7528\u6237 cnych \u8fdb\u884c\u7ed1\u5b9a\uff1a # cnych-rolebinding.yaml apiVersion : rbac.authorization.k8s.io/v1 kind : RoleBinding metadata : name : cnych-rolebinding namespace : kube-system subjects : - kind : User name : cnych apiGroup : \"\" roleRef : kind : Role name : cnych-role apiGroup : rbac.authorization.k8s.io # \u7559\u7a7a\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u7684apiGroup \u4e0a\u9762\u7684 YAML \u6587\u4ef6\u4e2d\u6211\u4eec\u770b\u5230\u4e86 subjects \u5b57\u6bb5\uff0c\u8fd9\u91cc\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u7528\u6765\u5c1d\u8bd5\u64cd\u4f5c\u96c6\u7fa4\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5bf9\u5e94\u4e0a\u9762\u7684 User \u5e10\u53f7 cnych\uff0c\u4f7f\u7528kubectl \u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl create -f cnych-rolebinding.yaml rolebinding.rbac.authorization.k8s.io/cnych-rolebinding created \u6d4b\u8bd5 \u00b6 \u73b0\u5728\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u4e0a\u9762\u7684 cnych-context \u4e0a\u4e0b\u6587\u6765\u64cd\u4f5c\u96c6\u7fa4\u4e86\uff1a \u279c ~ kubectl get pods --context = cnych-context NAME READY STATUS RESTARTS AGE coredns-7568f67dbd-7std5 1 /1 Running 25 ( 3h5m ago ) 29d coredns-7568f67dbd-wpjpf 1 /1 Running 25 ( 3h5m ago ) 29d etcd-master1 1 /1 Running 31 ( 3h5m ago ) 30d kube-apiserver-master1 1 /1 Running 27 ( 3h5m ago ) 30d kube-controller-manager-master1 1 /1 Running 27 ( 3h5m ago ) 30d ...... \u279c ~ kubectl --context = cnych-context get rs,deploy NAME DESIRED CURRENT READY AGE replicaset.apps/coredns-7568f67dbd 2 2 2 30d replicaset.apps/metrics-server-6f667d74b6 0 0 0 9d replicaset.apps/metrics-server-85499dc4f5 1 1 1 9d NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/coredns 2 /2 2 2 30d deployment.apps/metrics-server 1 /1 1 1 9d \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4f7f\u7528 kubectl \u7684\u4f7f\u7528\u5e76\u6ca1\u6709\u6307\u5b9a namespace\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u8fd9\u4e2a Context \u7684\u65f6\u5019\u5c31\u7ed1\u5b9a\u5728\u4e86 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u5982\u679c\u6211\u4eec\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a -n default \u8bd5\u770b\u770b\u5462\uff1f \u279c ~ kubectl --context = cnych-context get pods --namespace = default Error from server ( Forbidden ) : pods is forbidden: User \"cnych\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\" \u5982\u679c\u53bb\u83b7\u53d6\u5176\u4ed6\u7684\u8d44\u6e90\u5bf9\u8c61\u5462\uff1a \u279c ~ kubectl --context = cnych-context get svc Error from server ( Forbidden ) : services is forbidden: User \"cnych\" cannot list resource \"services\" in API group \"\" in the namespace \"kube-system\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6ca1\u6709\u6743\u9650\u83b7\u53d6\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u6ca1\u6709\u4e3a\u5f53\u524d\u64cd\u4f5c\u7528\u6237\u6307\u5b9a\u5176\u4ed6\u5bf9\u8c61\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u662f\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u7684\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u6709\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\u8bbf\u95ee\u6743\u9650\u7684\u666e\u901a User \u3002 \u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a namespace \u7684 ServiceAccount \u00b6 \u4e0a\u9762\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u666e\u901a\u7528\u6237\uff0c\u6211\u4eec\u524d\u9762\u4e5f\u63d0\u5230\u8fc7 subjects \u4e0b\u9762\u8fd8\u6709\u4e00\u79cd\u7c7b\u578b\u7684\u4e3b\u9898\u8d44\u6e90\uff1a ServiceAccount \uff0c\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\u5185\u90e8\u7684\u7528\u6237\u53ea\u80fd\u64cd\u4f5c kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684 pods \u548c deployments \uff0c\u9996\u5148\u6765\u521b\u5efa\u4e00\u4e2a ServiceAccount \u5bf9\u8c61\uff1a \u279c ~ kubectl create sa cnych-sa -n kube-system \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u6210 YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa\uff1a apiVersion : v1 kind : ServiceAccount metadata : name : cnych-sa namespace : kube-system \u7136\u540e\u65b0\u5efa\u4e00\u4e2a Role \u5bf9\u8c61\uff1a(cnych-sa-role.yaml) apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : name : cnych-sa-role namespace : kube-system rules : - apiGroups : [ \"\" ] resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] - apiGroups : [ \"apps\" ] resources : [ \"deployments\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u89d2\u8272\u6ca1\u6709\u521b\u5efa\u3001\u5220\u9664\u3001\u66f4\u65b0 Pod \u7684\u6743\u9650\uff0c\u5f85\u4f1a\u6211\u4eec\u53ef\u4ee5\u91cd\u70b9\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u521b\u5efa\u8be5 Role \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f cnych-sa-role.yaml \u7136\u540e\u521b\u5efa\u4e00\u4e2a RoleBinding \u5bf9\u8c61\uff0c\u5c06\u4e0a\u9762\u7684 cnych-sa \u548c\u89d2\u8272 haimaxy-sa-role \u8fdb\u884c\u7ed1\u5b9a\uff1a(haimaxy-sa-rolebinding.yaml) kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : cnych-sa-rolebinding namespace : kube-system subjects : - kind : ServiceAccount name : cnych-sa namespace : kube-system roleRef : kind : Role name : cnych-sa-role apiGroup : rbac.authorization.k8s.io \u6dfb\u52a0\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl create -f cnych-sa-rolebinding.yaml \u7136\u540e\u6211\u4eec\u600e\u4e48\u53bb\u9a8c\u8bc1\u8fd9\u4e2a ServiceAccount \u5462\uff1f\u6211\u4eec\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u662f\u4e0d\u662f\u63d0\u5230\u8fc7\u4e00\u4e2a ServiceAccount \u4f1a\u751f\u6210\u4e00\u4e2a Secret \u5bf9\u8c61\u548c\u5b83\u8fdb\u884c\u6620\u5c04\uff0c\u8fd9\u4e2a Secret \u91cc\u9762\u5305\u542b\u4e00\u4e2a token\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a token \u53bb\u767b\u5f55 Dashboard\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Dashboard \u4e2d\u6765\u9a8c\u8bc1\u6211\u4eec\u7684\u529f\u80fd\u662f\u5426\u7b26\u5408\u9884\u671f\u4e86\uff1a \u279c ~ kubectl get secret -n kube-system | grep cnych-sa cnych-sa-token-nxgqx kubernetes.io/service-account-token 3 47m \u279c ~ kubectl get secret cnych-sa-token-nxgqx -o jsonpath ={ .data.token } -n kube-system | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u4f7f\u7528\u8fd9\u91cc\u7684 token \u53bb Dashboard \u9875\u9762\u8fdb\u884c\u767b\u5f55\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u63d0\u793a\u4fe1\u606f\u8bf4\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u8fd9\u4e2a ServiceAccount \u6ca1\u6709\u6743\u9650\u83b7\u53d6\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u767b\u5f55\u8fdb\u6765\u540e\u9ed8\u8ba4\u8df3\u8f6c\u5230 default \u547d\u540d\u7a7a\u95f4\uff0c\u6211\u4eec\u5207\u6362\u5230 kube-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5c31\u53ef\u4ee5\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u8bbf\u95ee pod \u5217\u8868\u4e86\uff0c\u4f46\u662f\u4e5f\u4f1a\u6709\u4e00\u4e9b\u5176\u4ed6\u989d\u5916\u7684\u63d0\u793a\uff1a events is forbidden: User \u201csystem:serviceaccount:kube-system:cnych-sa\u201d cannot list events in the namespace \u201ckube-system\u201d \uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u767b\u5f55\u7528\u53ea\u88ab\u6388\u6743\u4e86\u8bbf\u95ee pod \u548c deployment \u7684\u6743\u9650\u3002 \u518d\u8bbf\u95ee\u4e0bdeployment\u770b\u770b\u53ef\u4ee5\u4e86\u5417\uff1f \u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u5bf9\u8bbf\u95ee\u7528\u6237\u7684\u6743\u9650\u8fdb\u884c\u9650\u5236\uff0c\u53ef\u4ee5\u81ea\u5df1\u901a\u8fc7 Role \u5b9a\u4e49\u66f4\u52a0\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u5185\u7f6e\u7684\u4e00\u4e9b\u6743\u9650\u2026\u2026 \u53ef\u4ee5\u5168\u5c40\u8bbf\u95ee\u7684 ServiceAccount \u00b6 \u521a\u521a\u6211\u4eec\u521b\u5efa\u7684 cnych-sa \u8fd9\u4e2a ServiceAccount \u548c\u4e00\u4e2a Role \u89d2\u8272\u8fdb\u884c\u7ed1\u5b9a\u7684\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 ServiceAccount \uff0c\u9700\u8981\u4ed6\u64cd\u4f5c\u7684\u6743\u9650\u4f5c\u7528\u4e8e\u6240\u6709\u7684 namespace\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 ClusterRole \u548c ClusterRoleBinding \u8fd9\u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002\u540c\u6837\uff0c\u9996\u5148\u65b0\u5efa\u4e00\u4e2a ServiceAcount \u5bf9\u8c61\uff1a(cnych-sa2.yaml) apiVersion : v1 kind : ServiceAccount metadata : name : cnych-sa2 namespace : kube-system \u521b\u5efa\uff1a \u279c ~ kubectl create -f cnych-sa2.yaml \u7136\u540e\u521b\u5efa\u4e00\u4e2a ClusterRoleBinding \u5bf9\u8c61\uff08cnych-clusterolebinding.yaml\uff09: kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : cnych-sa2-clusterrolebinding subjects : - kind : ServiceAccount name : cnych-sa2 namespace : kube-system roleRef : kind : ClusterRole name : cluster-admin apiGroup : rbac.authorization.k8s.io \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u4e3a\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u58f0\u660e namespace\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a ClusterRoleBinding \u8d44\u6e90\u5bf9\u8c61\uff0c\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u96c6\u7fa4\u6765\u8bf4\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a ClusterRole \u5bf9\u8c61\uff0c\u800c\u662f\u4f7f\u7528\u7684 cluster-admin \u8fd9\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u662f Kubernetes \u96c6\u7fa4\u5185\u7f6e\u7684 ClusterRole \u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl get clusterrole \u548c kubectl get clusterrolebinding \u67e5\u770b\u7cfb\u7edf\u5185\u7f6e\u7684\u4e00\u4e9b\u96c6\u7fa4\u89d2\u8272\u548c\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684 cluster-admin \u8fd9\u4e2a\u96c6\u7fa4\u89d2\u8272\u662f\u62e5\u6709\u6700\u9ad8\u6743\u9650\u7684\u96c6\u7fa4\u89d2\u8272\uff0c\u6240\u4ee5\u4e00\u822c\u9700\u8981\u8c28\u614e\u4f7f\u7528\u8be5\u96c6\u7fa4\u89d2\u8272\u3002 \u521b\u5efa\u4e0a\u9762\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\u8d44\u6e90\u5bf9\u8c61\uff0c\u521b\u5efa\u5b8c\u6210\u540e\u540c\u6837\u4f7f\u7528 ServiceAccount \u5bf9\u5e94\u7684 token \u53bb\u767b\u5f55 Dashboard \u9a8c\u8bc1\u4e0b\uff1a \u279c ~ kubectl create -f cnych-clusterolebinding.yaml \u279c ~ kubectl get secret -n kube-system | grep cnych-sa2 cnych-sa2-token-nxgqx kubernetes.io/service-account-token 3 47m \u279c ~ kubectl get secret cnych-sa2-token-nxgqx -o jsonpath ={ .data.token } -n kube-system | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u6211\u4eec\u5728\u6700\u5f00\u59cb\u63a5\u89e6\u5230 RBAC \u8ba4\u8bc1\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4e0d\u592a\u719f\u6089\uff0c\u7279\u522b\u662f\u4e0d\u77e5\u9053\u5e94\u8be5\u600e\u4e48\u53bb\u7f16\u5199 rules \u89c4\u5219\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u5206\u6790\u7cfb\u7edf\u81ea\u5e26\u7684 clusterrole\u3001clusterrolebinding \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u7684\u7f16\u5199\u65b9\u6cd5\uff0c\u600e\u4e48\u5206\u6790\uff1f\u8fd8\u662f\u5229\u7528 kubectl \u7684 get\u3001describe\u3001 -o yaml \u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6240\u4ee5 kubectl \u6700\u57fa\u672c\u7684\u64cd\u4f5c\u7528\u6237\u4e00\u5b9a\u8981\u638c\u63e1\u597d\u3002","title":"RBAC"},{"location":"ConfigManage/RBAC/#-rbac","text":"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e00\u4e9b\u5e38\u7528\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u8d44\u6e90\u5bf9\u8c61\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7 APIServer \u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u96c6\u7fa4\u662f\u600e\u6837\u77e5\u9053\u6211\u4eec\u7684\u8bf7\u6c42\u5c31\u662f\u5408\u6cd5\u7684\u8bf7\u6c42\u5462\uff1f\u8fd9\u4e2a\u5c31\u9700\u8981\u4e86\u89e3 Kubernetes \u4e2d\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u77e5\u8bc6\u70b9\u4e86\uff1a RBAC \uff08\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236\uff09\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7 Kubernetes API \u52a8\u6001\u914d\u7f6e\u7b56\u7565\u6765\u542f\u7528RBAC\uff0c\u9700\u8981\u5728 kube-apiserver \u4e2d\u6dfb\u52a0\u53c2\u6570 --authorization-mode = RBAC \uff0c\u5982\u679c\u4f7f\u7528\u7684 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u90a3\u4e48\u662f\u9ed8\u8ba4\u5f00\u542f\u4e86 RBAC \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b Master \u8282\u70b9\u4e0a apiserver \u7684\u9759\u6001 Pod \u5b9a\u4e49\u6587\u4ef6\uff1a \u279c ~ cat /etc/kubernetes/manifests/kube-apiserver.yaml ... - --authorization-mode = Node,RBAC ... \u5982\u679c\u662f\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u642d\u5efa\u7684\u96c6\u7fa4\uff0c\u6dfb\u52a0\u8fd9\u4e2a\u53c2\u6570\u8fc7\u540e\uff0c\u8bb0\u5f97\u8981\u91cd\u542f kube-apiserver \u670d\u52a1\u3002","title":"\u6743\u9650\u63a7\u5236 - RBAC"},{"location":"ConfigManage/RBAC/#api","text":"\u5728\u5b66\u4e60 RBAC \u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u518d\u53bb\u7406\u89e3\u4e0b Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0cKubernetes \u5bf9\u8c61\u662f\u6211\u4eec\u6301\u4e45\u5316\u7684\u5b9e\u4f53\uff0c\u5c31\u662f\u6700\u7ec8\u5b58\u5165 etcd \u4e2d\u7684\u6570\u636e\uff0c\u96c6\u7fa4\u4e2d\u901a\u8fc7\u8fd9\u4e9b\u5b9e\u4f53\u6765\u8868\u793a\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\u3002\u524d\u9762\u6211\u4eec\u90fd\u76f4\u63a5\u7f16\u5199\u7684 YAML \u6587\u4ef6\uff0c\u901a\u8fc7 kubectl \u6765\u63d0\u4ea4\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa\u7684\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b83\u7a76\u7adf\u662f\u5982\u4f55\u5c06\u6211\u4eec\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a API \u5bf9\u8c61\u7684\u5462\uff1f \u8fd9\u4e2a\u5c31\u9700\u8981\u53bb\u4e86\u89e3\u4e0b \u58f0\u660e\u5f0f API \u7684\u8bbe\u8ba1\uff0cKubernetes API \u662f\u4e00\u4e2a\u4ee5 JSON \u4e3a\u4e3b\u8981\u5e8f\u5217\u5316\u65b9\u5f0f\u7684 HTTP \u670d\u52a1\uff0c\u9664\u6b64\u4e4b\u5916\u4e5f\u652f\u6301 Protocol Buffers \u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4e3b\u8981\u7528\u4e8e\u96c6\u7fa4\u5185\u90e8\u7ec4\u4ef6\u95f4\u7684\u901a\u4fe1\u3002\u4e3a\u4e86\u53ef\u6269\u5c55\u6027\uff0cKubernetes \u5728\u4e0d\u540c\u7684 API \u8def\u5f84\uff08\u6bd4\u5982/api/v1 \u6216\u8005 /apis/batch\uff09\u4e0b\u9762\u652f\u6301\u4e86\u591a\u4e2a API \u7248\u672c\uff0c\u4e0d\u540c\u7684 API \u7248\u672c\u610f\u5473\u7740\u4e0d\u540c\u7ea7\u522b\u7684\u7a33\u5b9a\u6027\u548c\u652f\u6301\uff1a Alpha \u7ea7\u522b\uff0c\u4f8b\u5982 v1alpha1 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u88ab\u7981\u7528\u7684\uff0c\u53ef\u4ee5\u968f\u65f6\u5220\u9664\u5bf9\u529f\u80fd\u7684\u652f\u6301\uff0c\u6240\u4ee5\u8981\u614e\u7528 Beta \u7ea7\u522b\uff0c\u4f8b\u5982 v2beta1 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u8868\u793a\u4ee3\u7801\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u5f88\u597d\u7684\u6d4b\u8bd5\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u8bed\u4e49\u53ef\u80fd\u4f1a\u5728\u968f\u540e\u7684\u7248\u672c\u4e2d\u4ee5\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539 \u7a33\u5b9a\u7ea7\u522b\uff0c\u6bd4\u5982 v1 \u8868\u793a\u5df2\u7ecf\u662f\u7a33\u5b9a\u7248\u672c\u4e86\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5728\u540e\u7eed\u7684\u5f88\u591a\u7248\u672c\u4e2d\u3002 \u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u4e00\u4e2a API \u5bf9\u8c61\u5728 Etcd \u91cc\u7684\u5b8c\u6574\u8d44\u6e90\u8def\u5f84\uff0c\u662f\u7531\uff1a Group\uff08API \u7ec4\uff09\u3001Version\uff08API \u7248\u672c\uff09\u548c Resource\uff08API \u8d44\u6e90\u7c7b\u578b\uff09 \u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u6574\u4e2a Kubernetes \u91cc\u7684\u6240\u6709 API \u5bf9\u8c61\uff0c\u5b9e\u9645\u4e0a\u5c31\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u6811\u5f62\u7ed3\u6784\u8868\u793a\u51fa\u6765\uff1a \u4ece\u4e0a\u56fe\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa Kubernetes \u7684 API \u5bf9\u8c61\u7684\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5728\u9876\u5c42\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u6838\u5fc3\u7ec4\uff08\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u662f /api/v1 \u4e0b\u7684\u6240\u6709\u5185\u5bb9\u800c\u4e0d\u662f\u5728 /apis/core/v1 \u4e0b\u9762\uff09\u548c\u547d\u540d\u7ec4\uff08\u8def\u5f84 /apis/$NAME/$VERSION \uff09\u548c\u7cfb\u7edf\u8303\u56f4\u5185\u7684\u5b9e\u4f53\uff0c\u6bd4\u5982 /metrics\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b\u96c6\u7fa4\u4e2d\u7684 API \u7ec4\u7ec7\u5f62\u5f0f\uff1a \u279c ~ kubectl get --raw / { \"paths\" : [ \"/api\" , \"/api/v1\" , \"/apis\" , \"/apis/\" , ...... \"/version\" ] } \u6bd4\u5982\u6211\u4eec\u6765\u67e5\u770b\u6279\u5904\u7406\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5728\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u7248\u672c\u4e2d\u5b58\u5728 v1\u8fd9\u4e2a\u7248\u672c \u7684\u64cd\u4f5c\uff1a /apis/batch/v1 \uff0c\u66b4\u9732\u4e86\u53ef\u4ee5\u67e5\u8be2\u548c\u64cd\u4f5c\u7684\u4e0d\u540c\u5b9e\u4f53\u96c6\u5408\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7 kubectl \u6765\u67e5\u8be2\u5bf9\u5e94\u5bf9\u8c61\u4e0b\u9762\u7684\u6570\u636e\uff1a \u279c ~ kubectl get --raw /apis/batch/v1 | python -m json.tool { \"apiVersion\" : \"v1\" , \"groupVersion\" : \"batch/v1\" , \"kind\" : \"APIResourceList\" , \"resources\" : [ { \"categories\" : [ \"all\" ], \"kind\" : \"CronJob\" , \"name\" : \"cronjobs\" , \"namespaced\" : true , \"shortNames\" : [ \"cj\" ], \"singularName\" : \"\" , \"storageVersionHash\" : \"sd5LIXh4Fjs=\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ] }, { \"kind\" : \"CronJob\" , \"name\" : \"cronjobs/status\" , \"namespaced\" : true , \"singularName\" : \"\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] }, { \"categories\" : [ \"all\" ], \"kind\" : \"Job\" , \"name\" : \"jobs\" , \"namespaced\" : true , \"singularName\" : \"\" , \"storageVersionHash\" : \"mudhfqk/qZY=\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ] }, { \"kind\" : \"Job\" , \"name\" : \"jobs/status\" , \"namespaced\" : true , \"singularName\" : \"\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] } ] } \u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u548c\u6211\u4eec\u5e73\u65f6\u64cd\u4f5c HTTP \u670d\u52a1\u7684\u65b9\u5f0f\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl proxy \u547d\u4ee4\u6765\u5f00\u542f\u5bf9 apiserver \u7684\u8bbf\u95ee\uff1a \u279c ~ kubectl proxy Starting to serve on 127 .0.0.1:8001 \u7136\u540e\u91cd\u65b0\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u8bbf\u95ee\u6279\u5904\u7406\u7684 API \u670d\u52a1\uff1a \u279c ~ curl http://127.0.0.1:8001/apis/batch/v1 { \"kind\" : \"APIResourceList\" , \"apiVersion\" : \"v1\" , \"groupVersion\" : \"batch/v1\" , \"resources\" : [ { \"name\" : \"jobs\" , \"singularName\" : \"\" , \"namespaced\" : true , \"kind\" : \"Job\" , \"verbs\" : [ \"create\" , \"delete\" , \"deletecollection\" , \"get\" , \"list\" , \"patch\" , \"update\" , \"watch\" ], \"categories\" : [ \"all\" ], \"storageVersionHash\" : \"mudhfqk/qZY=\" }, { \"name\" : \"jobs/status\" , \"singularName\" : \"\" , \"namespaced\" : true , \"kind\" : \"Job\" , \"verbs\" : [ \"get\" , \"patch\" , \"update\" ] } ] } \u901a\u5e38\uff0cKubernetes API \u652f\u6301\u901a\u8fc7\u6807\u51c6 HTTP POST\u3001PUT\u3001DELETE \u548c GET \u5728\u6307\u5b9a PATH \u8def\u5f84\u4e0a\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u548c\u68c0\u7d22\u64cd\u4f5c\uff0c\u5e76\u4f7f\u7528 JSON \u4f5c\u4e3a\u9ed8\u8ba4\u7684\u6570\u636e\u4ea4\u4e92\u683c\u5f0f\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a Deployment \u5bf9\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u7684 YAML \u6587\u4ef6\u7684\u58f0\u660e\u5c31\u9700\u8981\u600e\u4e48\u5199\uff1a apiVersion : apps/v1 kind : Deployment \u5176\u4e2d Deployment \u5c31\u662f\u8fd9\u4e2a API \u5bf9\u8c61\u7684\u8d44\u6e90\u7c7b\u578b\uff08 Resource \uff09\uff0capps \u5c31\u662f\u5b83\u7684\u7ec4\uff08 Group \uff09\uff0cv1 \u5c31\u662f\u5b83\u7684\u7248\u672c\uff08 Version \uff09\u3002API Group\u3001Version \u548c \u8d44\u6e90\u5c31\u552f\u4e00\u5b9a\u4e49\u4e86\u4e00\u4e2a HTTP \u8def\u5f84\uff0c\u7136\u540e\u5728 kube-apiserver \u7aef\u5bf9\u8fd9\u4e2a url \u8fdb\u884c\u4e86\u76d1\u542c\uff0c\u7136\u540e\u628a\u5bf9\u5e94\u7684\u8bf7\u6c42\u4f20\u9012\u7ed9\u4e86\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u8fdb\u884c\u5904\u7406\u800c\u5df2\uff0c\u5f53\u7136\u5728 Kuberentes \u4e2d\u7684\u5b9e\u73b0\u8fc7\u7a0b\u662f\u975e\u5e38\u590d\u6742\u7684\u3002","title":"API \u5bf9\u8c61"},{"location":"ConfigManage/RBAC/#rbac","text":"\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Kubernetes \u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u90fd\u662f\u6a21\u578b\u5316\u7684 API \u5bf9\u8c61\uff0c\u5141\u8bb8\u6267\u884c CRUD ( Create \u3001 Read \u3001 Update \u3001 Delete ) \u64cd\u4f5c(\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c)\u3002 \u8d44\u6e90\u5bf9\u8c61\u53ca\u5176\u5bf9\u5e94\u7684\u64cd\u4f5c\u6709: Workloads Verbs Pods create ConfigMaps get Deployments delete Nodes list Secrets update Namespaces edit ...... watch exec patch \u5728\u66f4\u4e0a\u5c42\uff0c\u8fd9\u4e9b\u8d44\u6e90\u548c API Group \u8fdb\u884c\u5173\u8054\uff0c\u6bd4\u5982 Pods \u5c5e\u4e8e Core API Group\uff0c\u800c Deployments \u5c5e\u4e8e apps API Group\uff0c\u73b0\u5728\u6211\u4eec\u8981\u5728 Kubernetes \u4e2d\u901a\u8fc7 RBAC \u6765\u5bf9\u8d44\u6e90\u8fdb\u884c\u6743\u9650\u7ba1\u7406\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u8fd9\u4e9b\u8d44\u6e90\u548c\u64cd\u4f5c\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e86\u89e3\u53e6\u5916\u51e0\u4e2a\u6982\u5ff5\uff1a Rule \uff1a\u89c4\u5219\uff0c\u4e00\u7ec4\u5c5e\u4e8e\u4e0d\u540c API Group \u8d44\u6e90\u4e0a\u7684\u4e00\u7ec4\u64cd\u4f5c\u96c6\u5408\u3002 Role \u548c ClusterRole \uff1a\u89d2\u8272\u548c\u96c6\u7fa4\u89d2\u8272\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u90fd\u5305\u542b\u4e0a\u9762\u7684 Rules \u5143\u7d20\u3002 \u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728 Role \u4e2d\uff0c\u5b9a\u4e49\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u548c namespace \u5173\u8054\u7684\uff0c\u800c ClusterRole \u662f\u96c6\u7fa4\u8303\u56f4\u5185\u7684\uff0c\u56e0\u6b64\u5b9a\u4e49\u7684\u89c4\u5219\u4e0d\u53d7\u547d\u540d\u7a7a\u95f4\u7684\u7ea6\u675f\u3002\u53e6\u5916 Role \u548c ClusterRole \u5728Kubernetes \u4e2d\u90fd\u88ab\u5b9a\u4e49\u4e3a\u96c6\u7fa4\u5185\u90e8\u7684 API \u8d44\u6e90\uff0c\u548c\u6211\u4eec\u524d\u9762\u5b66\u4e60\u8fc7\u7684 Pod\u3001Deployment \u8fd9\u4e9b\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u90fd\u662f\u6211\u4eec\u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u540c\u6837\u7684\u53ef\u4ee5\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u63cf\u8ff0\uff0c\u7528 kubectl \u5de5\u5177\u6765\u7ba1\u7406 Subject \uff1a\u4e3b\u9898\uff0c\u5bf9\u5e94\u96c6\u7fa4\u4e2d\u5c1d\u8bd5\u64cd\u4f5c\u7684\u5bf9\u8c61\uff0c\u96c6\u7fa4\u4e2d\u5b9a\u4e49\u4e863\u79cd\u7c7b\u578b\u7684\u4e3b\u9898\u8d44\u6e90\uff1a User Account \uff1a\u7528\u6237\uff0c\u8fd9\u662f\u6709 \u5916\u90e8\u72ec\u7acb\u670d\u52a1 \u8fdb\u884c\u7ba1\u7406\u7684\uff0c\u7ba1\u7406\u5458\u8fdb\u884c\u79c1\u94a5\u7684\u5206\u914d\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 KeyStone \u6216\u8005 Goolge \u5e10\u53f7\uff0c\u751a\u81f3\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u5217\u8868\u4e5f\u53ef\u4ee5\u3002\u5bf9\u4e8e\u7528\u6237\u7684\u7ba1\u7406\u96c6\u7fa4\u5185\u90e8\u6ca1\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u7528\u6237\u4e0d\u80fd\u901a\u8fc7\u96c6\u7fa4\u5185\u90e8\u7684 API \u6765\u8fdb\u884c\u7ba1\u7406 Group \uff1a\u7ec4\uff0c\u8fd9\u662f\u7528\u6765 \u5173\u8054\u591a\u4e2a\u8d26\u6237\u7684 \uff0c\u96c6\u7fa4\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u521b\u5efa\u7684\u7ec4\uff0c\u6bd4\u5982 cluster-admin Service Account \uff1a\u670d\u52a1\u5e10\u53f7\uff0c\u901a\u8fc7 Kubernetes API \u6765\u7ba1\u7406\u7684\u4e00\u4e9b\u7528\u6237\u5e10\u53f7\uff0c \u548c namespace \u8fdb\u884c\u5173\u8054\u7684\uff0c\u9002\u7528\u4e8e\u96c6\u7fa4\u5185\u90e8\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f \u3002\u9700\u8981\u901a\u8fc7 API \u6765\u5b8c\u6210\u6743\u9650\u8ba4\u8bc1\uff0c\u6240\u4ee5\u5728\u96c6\u7fa4\u5185\u90e8\u8fdb\u884c\u6743\u9650\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u9700\u8981\u4f7f\u7528\u5230 ServiceAccount\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u8fd9\u8282\u8bfe\u7684\u91cd\u70b9 RoleBinding \u548c ClusterRoleBinding \uff1a\u89d2\u8272\u7ed1\u5b9a\u548c\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u628a\u58f0\u660e\u7684 Subject \u548c\u6211\u4eec\u7684 Role \u8fdb\u884c\u7ed1\u5b9a\u7684\u8fc7\u7a0b\uff08\u7ed9\u67d0\u4e2a\u7528\u6237\u7ed1\u5b9a\u4e0a\u64cd\u4f5c\u7684\u6743\u9650\uff09\uff0c\u4e8c\u8005\u7684\u533a\u522b\u4e5f\u662f\u4f5c\u7528\u8303\u56f4\u7684\u533a\u522b\uff1aRoleBinding \u53ea\u4f1a\u5f71\u54cd\u5230\u5f53\u524d namespace \u4e0b\u9762\u7684\u8d44\u6e90\u64cd\u4f5c\u6743\u9650\uff0c\u800c ClusterRoleBinding \u4f1a\u5f71\u54cd\u5230\u96c6\u7fa4\u7ea7\u522b\u7684 namespace\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6765\u5b66\u4e60\u4e0b\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u5982\u4f55\u4f7f\u7528 RBAC\u3002","title":"RBAC"},{"location":"ConfigManage/RBAC/#namespace","text":"\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a User Account\uff0c\u53ea\u80fd\u8bbf\u95ee kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff1a username : cnych group : youdianzhishi","title":"\u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a namespace \u7684\u666e\u901a\u7528\u6237"},{"location":"ConfigManage/RBAC/#_1","text":"\u6211\u4eec\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0cKubernetes \u6ca1\u6709 User Account \u7684 API \u5bf9\u8c61\uff0c\u4e0d\u8fc7\u8981\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u5e10\u53f7\u7684\u8bdd\u4e5f\u662f\u633a\u7b80\u5355\u7684\uff0c\u5229\u7528\u7ba1\u7406\u5458\u5206\u914d\u7ed9\u4f60\u7684\u4e00\u4e2a\u79c1\u94a5\u5c31\u53ef\u4ee5\u521b\u5efa\u4e86\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6211\u4eec\u6765\u4f7f\u7528 OpenSSL \u8bc1\u4e66\u6765\u521b\u5efa\u4e00\u4e2a User\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684 cfssl\u5de5\u5177\u6765\u521b\u5efa\uff1a \u7ed9\u7528\u6237 cnych \u521b\u5efa\u4e00\u4e2a\u79c1\u94a5\uff0c\u547d\u540d\u6210 cnych.key\uff1a \u279c ~ openssl genrsa -out cnych.key 2048 Generating RSA private key, 2048 bit long modulus ..............................................................................+++ ..............................................................................................................................................+++ e is 65537 ( 0x10001 ) \u4f7f\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u79c1\u94a5\u521b\u5efa\u4e00\u4e2a\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\u6587\u4ef6\uff1acnych.csr\uff0c\u8981\u6ce8\u610f\u9700\u8981\u786e\u4fdd\u5728 -subj \u53c2\u6570\u4e2d\u6307\u5b9a\u7528\u6237\u540d\u548c\u7ec4(CN\u8868\u793a\u7528\u6237\u540d\uff0cO\u8868\u793a\u7ec4)\uff1a \u279c ~ openssl req -new -key cnych.key -out cnych.csr -subj \"/CN=cnych/O=youdianzhishi\" \u7136\u540e\u627e\u5230\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u7684 CA \u8bc1\u4e66\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\uff0cCA \u76f8\u5173\u8bc1\u4e66\u4f4d\u4e8e /etc/kubernetes/pki/ \u76ee\u5f55\u4e0b\u9762\uff0c\u5982\u679c\u4f60\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u642d\u5efa\u7684\uff0c\u4f60\u5e94\u8be5\u5728\u6700\u5f00\u59cb\u642d\u5efa\u96c6\u7fa4\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u6307\u5b9a\u597d\u4e86 CA \u7684\u76ee\u5f55\uff0c \u6211\u4eec\u4f1a\u5229\u7528\u8be5\u76ee\u5f55\u4e0b\u9762\u7684 ca.crt \u548c ca.key\u4e24\u4e2a\u6587\u4ef6\u6765\u6279\u51c6\u4e0a\u9762\u7684\u8bc1\u4e66\u8bf7\u6c42 \u3002\u751f\u6210\u6700\u7ec8\u7684\u8bc1\u4e66\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e\u8bc1\u4e66\u7684\u6709\u6548\u671f\u4e3a 500 \u5929\uff1a \u279c ~ openssl x509 -req -in cnych.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out cnych.crt -days 500 Signature ok subject = /CN = cnych/O = youdianzhishi Getting CA Private Key \u73b0\u5728\u67e5\u770b\u6211\u4eec\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u9762\u662f\u5426\u751f\u6210\u4e86\u4e00\u4e2a\u8bc1\u4e66\u6587\u4ef6\uff1a \u279c ~ ls cnych.crt cnych.csr cnych.key \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u521a\u521a\u521b\u5efa\u7684\u8bc1\u4e66\u6587\u4ef6\u548c\u79c1\u94a5\u6587\u4ef6\u5728\u96c6\u7fa4\u4e2d\u521b\u5efa\u65b0\u7684\u51ed\u8bc1\u548c\u4e0a\u4e0b\u6587(Context): \u279c ~ kubectl config set-credentials cnych --client-certificate = cnych.crt --client-key = cnych.key User \"cnych\" set. \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7528\u6237 cnych \u521b\u5efa\u4e86\uff0c\u7136\u540e\u4e3a\u8fd9\u4e2a\u7528\u6237\u8bbe\u7f6e\u65b0\u7684 Context\uff0c\u6211\u4eec\u8fd9\u91cc\u6307\u5b9a\u7279\u5b9a\u7684\u4e00\u4e2a namespace\uff1a \u279c ~ kubectl config set-context cnych-context --cluster = kubernetes --namespace = kube-system --user = cnych Context \"cnych-context\" created. \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u7528\u6237 cnych \u5c31\u5df2\u7ecf\u521b\u5efa\u6210\u529f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5f53\u524d\u7684\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u64cd\u4f5c kubectl \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u4e3a\u8be5\u7528\u6237\u5b9a\u4e49\u4efb\u4f55\u64cd\u4f5c\u7684\u6743\u9650\u5462\uff1a \u279c ~ kubectl get pods --context = cnych-context Error from server ( Forbidden ) : pods is forbidden: User \"cnych\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-system\"","title":"\u521b\u5efa\u7528\u6237\u51ed\u8bc1"},{"location":"ConfigManage/RBAC/#_2","text":"\u7528\u6237\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u7ed9\u8be5\u7528\u6237\u6dfb\u52a0\u64cd\u4f5c\u6743\u9650\uff0c\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e2a YAML \u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a\u5141\u8bb8\u7528\u6237\u64cd\u4f5c Deployment\u3001Pod\u3001ReplicaSets \u7684\u89d2\u8272\uff0c\u5982\u4e0b\u5b9a\u4e49\uff1a # cnych-role.yaml apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : name : cnych-role namespace : kube-system rules : - apiGroups : [ \"\" , \"apps\" ] resources : [ \"deployments\" , \"replicasets\" , \"pods\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] # \u4e5f\u53ef\u4ee5\u4f7f\u7528['*'] \u5176\u4e2d Pod \u5c5e\u4e8e core \u8fd9\u4e2a API Group\uff0c\u5728 YAML \u4e2d\u7528 \u7a7a\u5b57\u7b26 \u5c31\u53ef\u4ee5\uff0c\u800c Deployment \u548c ReplicaSet \u73b0\u5728\u90fd\u5c5e\u4e8e apps \u8fd9\u4e2a API Group\uff08\u5982\u679c\u4e0d\u77e5\u9053\u5219\u53ef\u4ee5\u7528 kubectl explain \u547d\u4ee4\u67e5\u770b\uff09\uff0c\u6240\u4ee5 rules \u4e0b\u9762\u7684 apiGroups \u5c31\u7efc\u5408\u4e86\u8fd9\u51e0\u4e2a\u8d44\u6e90\u7684 API Group\uff1a [\"\", \"apps\"] \uff0c\u5176\u4e2d verbs \u5c31\u662f\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u6240\u6709\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ['*'] \u6765\u4ee3\u66ff\uff0c\u7136\u540e\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a Role\uff1a \u279c ~ kubectl create -f cnych-role.yaml role.rbac.authorization.k8s.io/cnych-role created \u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4e0a\u9762\u7684 cnych-context \u8fd9\u4e2a\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u6682\u65f6\u8fd8\u6728\u6709\u6743\u9650\u3002","title":"\u521b\u5efa\u89d2\u8272"},{"location":"ConfigManage/RBAC/#_3","text":"Role \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u5f88\u660e\u663e\u73b0\u5728\u6211\u4eec\u8fd9\u4e2a Role \u548c\u6211\u4eec\u7684\u7528\u6237 cnych \u8fd8\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5bf9\u5427\uff1f\u8fd9\u91cc\u5c31\u9700\u8981\u521b\u5efa\u4e00\u4e2a RoleBinding \u5bf9\u8c61\uff0c\u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5c06\u4e0a\u9762\u7684 cnych-role \u89d2\u8272\u548c\u7528\u6237 cnych \u8fdb\u884c\u7ed1\u5b9a\uff1a # cnych-rolebinding.yaml apiVersion : rbac.authorization.k8s.io/v1 kind : RoleBinding metadata : name : cnych-rolebinding namespace : kube-system subjects : - kind : User name : cnych apiGroup : \"\" roleRef : kind : Role name : cnych-role apiGroup : rbac.authorization.k8s.io # \u7559\u7a7a\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u7684apiGroup \u4e0a\u9762\u7684 YAML \u6587\u4ef6\u4e2d\u6211\u4eec\u770b\u5230\u4e86 subjects \u5b57\u6bb5\uff0c\u8fd9\u91cc\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u7528\u6765\u5c1d\u8bd5\u64cd\u4f5c\u96c6\u7fa4\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5bf9\u5e94\u4e0a\u9762\u7684 User \u5e10\u53f7 cnych\uff0c\u4f7f\u7528kubectl \u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl create -f cnych-rolebinding.yaml rolebinding.rbac.authorization.k8s.io/cnych-rolebinding created","title":"\u521b\u5efa\u89d2\u8272\u6743\u9650\u7ed1\u5b9a"},{"location":"ConfigManage/RBAC/#_4","text":"\u73b0\u5728\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u4e0a\u9762\u7684 cnych-context \u4e0a\u4e0b\u6587\u6765\u64cd\u4f5c\u96c6\u7fa4\u4e86\uff1a \u279c ~ kubectl get pods --context = cnych-context NAME READY STATUS RESTARTS AGE coredns-7568f67dbd-7std5 1 /1 Running 25 ( 3h5m ago ) 29d coredns-7568f67dbd-wpjpf 1 /1 Running 25 ( 3h5m ago ) 29d etcd-master1 1 /1 Running 31 ( 3h5m ago ) 30d kube-apiserver-master1 1 /1 Running 27 ( 3h5m ago ) 30d kube-controller-manager-master1 1 /1 Running 27 ( 3h5m ago ) 30d ...... \u279c ~ kubectl --context = cnych-context get rs,deploy NAME DESIRED CURRENT READY AGE replicaset.apps/coredns-7568f67dbd 2 2 2 30d replicaset.apps/metrics-server-6f667d74b6 0 0 0 9d replicaset.apps/metrics-server-85499dc4f5 1 1 1 9d NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/coredns 2 /2 2 2 30d deployment.apps/metrics-server 1 /1 1 1 9d \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4f7f\u7528 kubectl \u7684\u4f7f\u7528\u5e76\u6ca1\u6709\u6307\u5b9a namespace\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u8fd9\u4e2a Context \u7684\u65f6\u5019\u5c31\u7ed1\u5b9a\u5728\u4e86 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u5982\u679c\u6211\u4eec\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a -n default \u8bd5\u770b\u770b\u5462\uff1f \u279c ~ kubectl --context = cnych-context get pods --namespace = default Error from server ( Forbidden ) : pods is forbidden: User \"cnych\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\" \u5982\u679c\u53bb\u83b7\u53d6\u5176\u4ed6\u7684\u8d44\u6e90\u5bf9\u8c61\u5462\uff1a \u279c ~ kubectl --context = cnych-context get svc Error from server ( Forbidden ) : services is forbidden: User \"cnych\" cannot list resource \"services\" in API group \"\" in the namespace \"kube-system\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6ca1\u6709\u6743\u9650\u83b7\u53d6\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u6ca1\u6709\u4e3a\u5f53\u524d\u64cd\u4f5c\u7528\u6237\u6307\u5b9a\u5176\u4ed6\u5bf9\u8c61\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u662f\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u7684\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u6709\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\u8bbf\u95ee\u6743\u9650\u7684\u666e\u901a User \u3002","title":"\u6d4b\u8bd5"},{"location":"ConfigManage/RBAC/#namespace-serviceaccount","text":"\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u666e\u901a\u7528\u6237\uff0c\u6211\u4eec\u524d\u9762\u4e5f\u63d0\u5230\u8fc7 subjects \u4e0b\u9762\u8fd8\u6709\u4e00\u79cd\u7c7b\u578b\u7684\u4e3b\u9898\u8d44\u6e90\uff1a ServiceAccount \uff0c\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\u5185\u90e8\u7684\u7528\u6237\u53ea\u80fd\u64cd\u4f5c kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684 pods \u548c deployments \uff0c\u9996\u5148\u6765\u521b\u5efa\u4e00\u4e2a ServiceAccount \u5bf9\u8c61\uff1a \u279c ~ kubectl create sa cnych-sa -n kube-system \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u6210 YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa\uff1a apiVersion : v1 kind : ServiceAccount metadata : name : cnych-sa namespace : kube-system \u7136\u540e\u65b0\u5efa\u4e00\u4e2a Role \u5bf9\u8c61\uff1a(cnych-sa-role.yaml) apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : name : cnych-sa-role namespace : kube-system rules : - apiGroups : [ \"\" ] resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] - apiGroups : [ \"apps\" ] resources : [ \"deployments\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u89d2\u8272\u6ca1\u6709\u521b\u5efa\u3001\u5220\u9664\u3001\u66f4\u65b0 Pod \u7684\u6743\u9650\uff0c\u5f85\u4f1a\u6211\u4eec\u53ef\u4ee5\u91cd\u70b9\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u521b\u5efa\u8be5 Role \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f cnych-sa-role.yaml \u7136\u540e\u521b\u5efa\u4e00\u4e2a RoleBinding \u5bf9\u8c61\uff0c\u5c06\u4e0a\u9762\u7684 cnych-sa \u548c\u89d2\u8272 haimaxy-sa-role \u8fdb\u884c\u7ed1\u5b9a\uff1a(haimaxy-sa-rolebinding.yaml) kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : cnych-sa-rolebinding namespace : kube-system subjects : - kind : ServiceAccount name : cnych-sa namespace : kube-system roleRef : kind : Role name : cnych-sa-role apiGroup : rbac.authorization.k8s.io \u6dfb\u52a0\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl create -f cnych-sa-rolebinding.yaml \u7136\u540e\u6211\u4eec\u600e\u4e48\u53bb\u9a8c\u8bc1\u8fd9\u4e2a ServiceAccount \u5462\uff1f\u6211\u4eec\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u662f\u4e0d\u662f\u63d0\u5230\u8fc7\u4e00\u4e2a ServiceAccount \u4f1a\u751f\u6210\u4e00\u4e2a Secret \u5bf9\u8c61\u548c\u5b83\u8fdb\u884c\u6620\u5c04\uff0c\u8fd9\u4e2a Secret \u91cc\u9762\u5305\u542b\u4e00\u4e2a token\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a token \u53bb\u767b\u5f55 Dashboard\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Dashboard \u4e2d\u6765\u9a8c\u8bc1\u6211\u4eec\u7684\u529f\u80fd\u662f\u5426\u7b26\u5408\u9884\u671f\u4e86\uff1a \u279c ~ kubectl get secret -n kube-system | grep cnych-sa cnych-sa-token-nxgqx kubernetes.io/service-account-token 3 47m \u279c ~ kubectl get secret cnych-sa-token-nxgqx -o jsonpath ={ .data.token } -n kube-system | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u4f7f\u7528\u8fd9\u91cc\u7684 token \u53bb Dashboard \u9875\u9762\u8fdb\u884c\u767b\u5f55\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u63d0\u793a\u4fe1\u606f\u8bf4\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u8fd9\u4e2a ServiceAccount \u6ca1\u6709\u6743\u9650\u83b7\u53d6\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u767b\u5f55\u8fdb\u6765\u540e\u9ed8\u8ba4\u8df3\u8f6c\u5230 default \u547d\u540d\u7a7a\u95f4\uff0c\u6211\u4eec\u5207\u6362\u5230 kube-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5c31\u53ef\u4ee5\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u8bbf\u95ee pod \u5217\u8868\u4e86\uff0c\u4f46\u662f\u4e5f\u4f1a\u6709\u4e00\u4e9b\u5176\u4ed6\u989d\u5916\u7684\u63d0\u793a\uff1a events is forbidden: User \u201csystem:serviceaccount:kube-system:cnych-sa\u201d cannot list events in the namespace \u201ckube-system\u201d \uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u767b\u5f55\u7528\u53ea\u88ab\u6388\u6743\u4e86\u8bbf\u95ee pod \u548c deployment \u7684\u6743\u9650\u3002 \u518d\u8bbf\u95ee\u4e0bdeployment\u770b\u770b\u53ef\u4ee5\u4e86\u5417\uff1f \u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u5bf9\u8bbf\u95ee\u7528\u6237\u7684\u6743\u9650\u8fdb\u884c\u9650\u5236\uff0c\u53ef\u4ee5\u81ea\u5df1\u901a\u8fc7 Role \u5b9a\u4e49\u66f4\u52a0\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u5185\u7f6e\u7684\u4e00\u4e9b\u6743\u9650\u2026\u2026","title":"\u53ea\u80fd\u8bbf\u95ee\u67d0\u4e2a namespace \u7684 ServiceAccount"},{"location":"ConfigManage/RBAC/#serviceaccount","text":"\u521a\u521a\u6211\u4eec\u521b\u5efa\u7684 cnych-sa \u8fd9\u4e2a ServiceAccount \u548c\u4e00\u4e2a Role \u89d2\u8272\u8fdb\u884c\u7ed1\u5b9a\u7684\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 ServiceAccount \uff0c\u9700\u8981\u4ed6\u64cd\u4f5c\u7684\u6743\u9650\u4f5c\u7528\u4e8e\u6240\u6709\u7684 namespace\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 ClusterRole \u548c ClusterRoleBinding \u8fd9\u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002\u540c\u6837\uff0c\u9996\u5148\u65b0\u5efa\u4e00\u4e2a ServiceAcount \u5bf9\u8c61\uff1a(cnych-sa2.yaml) apiVersion : v1 kind : ServiceAccount metadata : name : cnych-sa2 namespace : kube-system \u521b\u5efa\uff1a \u279c ~ kubectl create -f cnych-sa2.yaml \u7136\u540e\u521b\u5efa\u4e00\u4e2a ClusterRoleBinding \u5bf9\u8c61\uff08cnych-clusterolebinding.yaml\uff09: kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : cnych-sa2-clusterrolebinding subjects : - kind : ServiceAccount name : cnych-sa2 namespace : kube-system roleRef : kind : ClusterRole name : cluster-admin apiGroup : rbac.authorization.k8s.io \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u4e3a\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u58f0\u660e namespace\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a ClusterRoleBinding \u8d44\u6e90\u5bf9\u8c61\uff0c\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u96c6\u7fa4\u6765\u8bf4\uff0c\u6211\u4eec\u4e5f\u6ca1\u6709\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a ClusterRole \u5bf9\u8c61\uff0c\u800c\u662f\u4f7f\u7528\u7684 cluster-admin \u8fd9\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u662f Kubernetes \u96c6\u7fa4\u5185\u7f6e\u7684 ClusterRole \u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl get clusterrole \u548c kubectl get clusterrolebinding \u67e5\u770b\u7cfb\u7edf\u5185\u7f6e\u7684\u4e00\u4e9b\u96c6\u7fa4\u89d2\u8272\u548c\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684 cluster-admin \u8fd9\u4e2a\u96c6\u7fa4\u89d2\u8272\u662f\u62e5\u6709\u6700\u9ad8\u6743\u9650\u7684\u96c6\u7fa4\u89d2\u8272\uff0c\u6240\u4ee5\u4e00\u822c\u9700\u8981\u8c28\u614e\u4f7f\u7528\u8be5\u96c6\u7fa4\u89d2\u8272\u3002 \u521b\u5efa\u4e0a\u9762\u96c6\u7fa4\u89d2\u8272\u7ed1\u5b9a\u8d44\u6e90\u5bf9\u8c61\uff0c\u521b\u5efa\u5b8c\u6210\u540e\u540c\u6837\u4f7f\u7528 ServiceAccount \u5bf9\u5e94\u7684 token \u53bb\u767b\u5f55 Dashboard \u9a8c\u8bc1\u4e0b\uff1a \u279c ~ kubectl create -f cnych-clusterolebinding.yaml \u279c ~ kubectl get secret -n kube-system | grep cnych-sa2 cnych-sa2-token-nxgqx kubernetes.io/service-account-token 3 47m \u279c ~ kubectl get secret cnych-sa2-token-nxgqx -o jsonpath ={ .data.token } -n kube-system | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u6211\u4eec\u5728\u6700\u5f00\u59cb\u63a5\u89e6\u5230 RBAC \u8ba4\u8bc1\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4e0d\u592a\u719f\u6089\uff0c\u7279\u522b\u662f\u4e0d\u77e5\u9053\u5e94\u8be5\u600e\u4e48\u53bb\u7f16\u5199 rules \u89c4\u5219\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u5206\u6790\u7cfb\u7edf\u81ea\u5e26\u7684 clusterrole\u3001clusterrolebinding \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u7684\u7f16\u5199\u65b9\u6cd5\uff0c\u600e\u4e48\u5206\u6790\uff1f\u8fd8\u662f\u5229\u7528 kubectl \u7684 get\u3001describe\u3001 -o yaml \u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6240\u4ee5 kubectl \u6700\u57fa\u672c\u7684\u64cd\u4f5c\u7528\u6237\u4e00\u5b9a\u8981\u638c\u63e1\u597d\u3002","title":"\u53ef\u4ee5\u5168\u5c40\u8bbf\u95ee\u7684 ServiceAccount"},{"location":"ConfigManage/Secret/","text":"\u654f\u611f\u4fe1\u606f\u914d\u7f6e\u7ba1\u7406 - Secret \u00b6 \u524d\u9762\u6211\u4eec\u5b66\u4e60 ConfigMap \u7684\u65f6\u5019\uff0c\u6211\u4eec\u8bf4 ConfigMap \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u662f Kubernetes \u5f53\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff0c \u4e00\u822c\u60c5\u51b5\u4e0b ConfigMap \u662f\u7528\u6765\u5b58\u50a8\u4e00\u4e9b\u975e\u5b89\u5168\u7684\u914d\u7f6e\u4fe1\u606f \uff0c\u5982\u679c\u6d89\u53ca\u5230\u4e00\u4e9b\u5b89\u5168\u76f8\u5173\u7684\u6570\u636e\u7684\u8bdd\u7528 ConfigMap \u5c31\u975e\u5e38\u4e0d\u59a5\u4e86\uff0c\u56e0\u4e3a ConfigMap \u662f\u660e\u6587\u5b58\u50a8\u7684 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 \u53e6\u5916\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff1aSecret\uff0cSecret\u7528\u6765\u4fdd\u5b58\u654f\u611f\u4fe1\u606f \u3002\u4f8b\u5982\u5bc6\u7801\u3001OAuth \u4ee4\u724c\u548c ssh key \u7b49\u7b49\uff0c\u5c06\u8fd9\u4e9b\u4fe1\u606f\u653e\u5728 Secret \u4e2d\u6bd4\u653e\u5728 Pod \u7684\u5b9a\u4e49\u4e2d\u6216\u8005 Docker \u955c\u50cf\u4e2d\u8981\u66f4\u52a0\u5b89\u5168\u548c\u7075\u6d3b\u3002 Secret \u4e3b\u8981\u4f7f\u7528\u7684\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u7c7b\u578b\uff0c\u5176\u4e2d\u4e3b\u8981\u4f7f\u7528\u524d\u4e09\u79cd\uff1a Opaque \uff1abase64 \u7f16\u7801\u683c\u5f0f\u7684 Secret\uff0c\u7528\u6765\u5b58\u50a8\u5bc6\u7801\u3001\u5bc6\u94a5\u7b49\uff1b\u4f46\u6570\u636e\u4e5f\u53ef\u4ee5\u901a\u8fc7 base64 \u2013decode \u89e3\u7801\u5f97\u5230\u539f\u59cb\u6570\u636e\uff0c\u6240\u6709**\u52a0\u5bc6\u6027\u5f88\u5f31**\u3002 kubernetes.io/dockercfg : ~/.dockercfg \u6587\u4ef6\u7684\u5e8f\u5217\u5316\u5f62\u5f0f kubernetes.io/dockerconfigjson \uff1a\u7528\u6765\u5b58\u50a8\u79c1\u6709docker registry\u7684\u8ba4\u8bc1\u4fe1\u606f\uff0c~/.docker/config.json \u6587\u4ef6\u7684\u5e8f\u5217\u5316\u5f62\u5f0f kubernetes.io/service-account-token \uff1a\u7528\u4e8e ServiceAccount, ServiceAccount \u521b\u5efa\u65f6Kubernetes \u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\uff0cPod \u5982\u679c\u4f7f\u7528\u4e86 ServiceAccount\uff0c\u5bf9\u5e94\u7684 Secret \u4f1a\u81ea\u52a8\u6302\u8f7d\u5230 Pod \u76ee\u5f55 /run/secrets/kubernetes.io/serviceaccount \u4e2d kubernetes.io/ssh-auth \uff1a\u7528\u4e8e SSH \u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e kubernetes.io/basic-auth \uff1a\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e bootstrap.kubernetes.io/token \uff1a\u7528\u4e8e\u8282\u70b9\u63a5\u5165\u96c6\u7fa4\u7684\u6821\u9a8c\u7684 Secret Warning \u4ee5\u4e0a\u662f Secret \u5bf9\u8c61\u5185\u7f6e\u652f\u6301\u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u901a\u8fc7\u4e3a Secret \u5bf9\u8c61\u7684 type \u5b57\u6bb5\u8bbe\u7f6e\u4e00\u4e2a**\u975e\u7a7a**\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5e76\u4f7f\u7528\u81ea\u5df1 Secret \u7c7b\u578b\u3002\u5982\u679c type \u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u88ab\u89c6\u4e3a Opaque \u7c7b\u578b\u3002Kubernetes \u5e76\u4e0d\u5bf9\u7c7b\u578b\u7684\u540d\u79f0\u4f5c\u4efb\u4f55\u9650\u5236\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u8981\u4f7f\u7528\u5185\u7f6e\u7c7b\u578b\u4e4b\u4e00\uff0c \u5219\u4f60\u5fc5\u987b\u6ee1\u8db3\u4e3a\u8be5\u7c7b\u578b\u6240\u5b9a\u4e49\u7684\u6240\u6709\u8981\u6c42\u3002 Opaque Secret \u00b6 Secret \u8d44\u6e90\u5305\u542b2\u4e2a\u952e\u503c\u5bf9\uff1a data \u548c stringData \uff0cdata \u5b57\u6bb5\u7528\u6765\u5b58\u50a8 base64 \u7f16\u7801\u7684\u4efb\u610f\u6570\u636e\uff0c\u63d0\u4f9b stringData \u5b57\u6bb5\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5b83\u5141\u8bb8 Secret \u4f7f\u7528\u672a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002 data \u548c stringData \u7684\u952e\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001-\uff0c_ \u6216 . \u7ec4\u6210 \u3002 \u6bd4\u5982\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u540d\u4e3a admin\uff0c\u5bc6\u7801\u4e3a admin321 \u7684 Secret \u5bf9\u8c61\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u628a\u7528\u6237\u540d\u548c\u5bc6\u7801\u505a base64 \u7f16\u7801\uff1a \u279c ~ echo -n \"admin\" | base64 YWRtaW4 = \u279c ~ echo -n \"admin321\" | base64 YWRtaW4zMjE = \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7f16\u7801\u8fc7\u540e\u7684\u6570\u636e\u6765\u7f16\u5199\u4e00\u4e2a YAML \u6587\u4ef6\uff1a(secret-demo.yaml) apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque data : username : YWRtaW4= password : YWRtaW4zMjE= \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u6765\u521b\u5efa\u4e86\uff1a \u279c ~ kubectl apply -f secret-demo.yaml secret \"mysecret\" created \u5229\u7528 get secret \u547d\u4ee4\u67e5\u770b\uff1a \u279c ~ kubectl get secret NAME TYPE DATA AGE default-token-n9w2d kubernetes.io/service-account-token 3 33d mysecret Opaque 2 40s \u5176\u4e2d default-token-n9w2d \u4e3a\u521b\u5efa\u96c6\u7fa4\u65f6\u9ed8\u8ba4\u521b\u5efa\u7684 Secret\uff0c\u88ab serviceacount/default \u5f15\u7528\u3002 \u73b0\u5728\u6211\u4eec\u4f7f\u7528 describe \u547d\u4ee4\u67e5\u770b\u65b0\u521b\u5efa\u7684secret\u8be6\u60c5\uff1a \u279c ~ kubectl describe secret mysecret Name : mysecret Namespace : default Labels : <none> Annotations : <none> Type : Opaque Data ==== password : 8 bytes username : 5 bytes \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5229\u7528 describe \u547d\u4ee4\u67e5\u770b\u5230\u7684 Data \u6ca1\u6709\u76f4\u63a5\u663e\u793a\u51fa\u6765\uff0c\u5982\u679c\u60f3\u770b\u5230 Data \u91cc\u9762\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u8f93\u51fa\u6210YAML \u6587\u4ef6\u8fdb\u884c\u67e5\u770b\uff1a \u279c ~ kubectl get secret mysecret -o yaml apiVersion : v1 data : password : YWRtaW4zMjE= username : YWRtaW4= kind : Secret metadata : creationTimestamp : 2018-06-19T15:27:06Z name : mysecret namespace : default resourceVersion : \"3694084\" selfLink : /api/v1/namespaces/default/secrets/mysecret uid : 39c139f5-73d5-11e8-a101-525400db4df7 type : Opaque \u5bf9\u4e8e\u67d0\u4e9b\u573a\u666f\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 stringData \u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u53ef\u4ee5\u5c06\u4e00\u4e2a\u975e base64 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u653e\u5165 Secret \u4e2d\uff0c \u5f53\u521b\u5efa\u6216\u66f4\u65b0\u8be5 Secret \u65f6\uff0c\u6b64\u5b57\u6bb5\u5c06\u88ab\u7f16\u7801\u3002 \u6bd4\u5982\u5f53\u6211\u4eec\u90e8\u7f72\u5e94\u7528\u65f6\uff0c\u4f7f\u7528 Secret \u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c \u4f60\u5e0c\u671b\u5728\u90e8\u7f72\u8fc7\u7a0b\u4e2d\uff0c\u586b\u5165\u90e8\u5206\u5185\u5bb9\u5230\u8be5\u914d\u7f6e\u6587\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\u6587\u4ef6: apiUrl : \"https://my.api.com/api/v1\" username : \"<user>\" password : \"<password>\" \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5b9a\u4e49\u5c06\u5176\u5b58\u50a8\u5728 Secret \u4e2d: apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque stringData : config.yaml : | apiUrl: \"https://my.api.com/api/v1\" username: <user> password: <password> \u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u5bf9\u8c61\u540e\u91cd\u65b0\u83b7\u53d6\u5bf9\u8c61\u7684\u8bdd config.yaml \u7684\u503c\u4f1a\u88ab\u7f16\u7801\uff1a \u279c ~ kubectl get secret mysecret -o yaml apiVersion : v1 data : config.yaml : YXBpVXJsOiAiaHR0cHM6Ly9teS5hcGkuY29tL2FwaS92MSIKdXNlcm5hbWU6IDx1c2VyPgpwYXNzd29yZDogPHBhc3N3b3JkPgo= kind : Secret metadata : annotations : kubectl.kubernetes.io/last-applied-configuration : | {\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"annotations\":{},\"name\":\"mysecret\",\"namespace\":\"default\"},\"stringData\":{\"config.yaml\":\"apiUrl: \\\"https://my.api.com/api/v1\\\"\\nusername: \\u003cuser\\u003e\\npassword: \\u003cpassword\\u003e\\n\"},\"type\":\"Opaque\"} creationTimestamp : \"2021-11-21T10:42:25Z\" managedFields : - apiVersion : v1 fieldsType : FieldsV1 fieldsV1 : f:data : . : {} f:config.yaml : {} f:metadata : f:annotations : . : {} f:kubectl.kubernetes.io/last-applied-configuration : {} f:type : {} manager : kubectl operation : Update time : \"2021-11-21T10:42:25Z\" name : mysecret namespace : default resourceVersion : \"857340\" uid : 5a28d296-5f53-4e4c-92f3-c1d7c952ace2 type : Opaque \u521b\u5efa\u597d Secret\u5bf9\u8c61\u540e\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u4f7f\u7528\u5b83\uff1a \u4ee5\u73af\u5883\u53d8\u91cf\u7684\u5f62\u5f0f \u4ee5Volume\u7684\u5f62\u5f0f\u6302\u8f7d \u73af\u5883\u53d8\u91cf \u00b6 \u9996\u5148\u6211\u4eec\u6765\u6d4b\u8bd5\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u6765\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 busybox \u955c\u50cf\u6765\u6d4b\u8bd5\u4e0b:(secret1-pod.yaml) apiVersion : v1 kind : Pod metadata : name : secret1-pod spec : containers : - name : secret1 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : USERNAME valueFrom : secretKeyRef : name : mysecret key : username - name : PASSWORD valueFrom : secretKeyRef : name : mysecret key : password \u4e3b\u8981\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u73af\u5883\u53d8\u91cf\u4e2d\u5b9a\u4e49\u7684 secretKeyRef \u5b57\u6bb5\uff0c\u548c\u6211\u4eec\u524d\u6587\u7684 configMapKeyRef \u7c7b\u4f3c\uff0c\u4e00\u4e2a\u662f\u4ece Secret \u5bf9\u8c61\u4e2d\u83b7\u53d6\uff0c\u4e00\u4e2a\u662f\u4ece ConfigMap \u5bf9\u8c61\u4e2d\u83b7\u53d6\uff0c\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl create -f secret1-pod.yaml pod \"secret1-pod\" created \u7136\u540e\u6211\u4eec\u67e5\u770bPod\u7684\u65e5\u5fd7\u8f93\u51fa\uff1a \u279c ~ kubectl logs secret1-pod ... USERNAME = admin PASSWORD = admin321 ... \u53ef\u4ee5\u770b\u5230\u6709 USERNAME \u548c PASSWORD \u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u8f93\u51fa\u51fa\u6765\u3002 Volume \u6302\u8f7d \u00b6 \u540c\u6837\u7684\u6211\u4eec\u7528\u4e00\u4e2a Pod \u6765\u9a8c\u8bc1\u4e0b Volume \u6302\u8f7d\uff0c\u521b\u5efa\u4e00\u4e2a Pod \u6587\u4ef6\uff1a(secret2-pod.yaml) apiVersion : v1 kind : Pod metadata : name : secret2-pod spec : containers : - name : secret2 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"ls /etc/secrets\" ] volumeMounts : - name : secrets mountPath : /etc/secrets volumes : - name : secrets secret : secretName : mysecret \u521b\u5efa Pod\uff0c\u7136\u540e\u67e5\u770b\u8f93\u51fa\u65e5\u5fd7\uff1a \u279c ~ kubectl create -f secret-pod2.yaml pod \"secret2-pod\" created \u279c ~ kubectl logs secret2-pod password username \u53ef\u4ee5\u770b\u5230 Secret \u628a\u4e24\u4e2a key \u6302\u8f7d\u6210\u4e86\u4e24\u4e2a\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u5f53\u7136\u5982\u679c\u60f3\u8981\u6302\u8f7d\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u4e0a\u9762\uff0c\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u8282\u8bfe\u7684\u65b9\u6cd5\uff1a\u5728 secretName \u4e0b\u9762\u6dfb\u52a0 items \u6307\u5b9a key \u548c path\uff0c\u8fd9\u4e2a\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0a\u8282\u8bfe ConfigMap \u4e2d\u7684\u65b9\u6cd5\u53bb\u6d4b\u8bd5\u4e0b\u3002 kubernetes.io/dockerconfigjson \u00b6 \u9664\u4e86\u4e0a\u9762\u7684 Opaque \u8fd9\u79cd\u7c7b\u578b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6765\u521b\u5efa\u7528\u6237 docker registry \u8ba4\u8bc1\u7684 Secret\uff0c\u76f4\u63a5\u4f7f\u7528kubectl create \u547d\u4ee4\u521b\u5efa\u5373\u53ef\uff0c\u5982\u4e0b\uff1a \u279c ~ kubectl create secret docker-registry myregistry --docker-server = DOCKER_SERVER --docker-username = DOCKER_USER --docker-password = DOCKER_PASSWORD --docker-email = DOCKER_EMAIL secret \"myregistry\" created \u9664\u4e86\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u955c\u50cf\u4ed3\u5e93\u8ba4\u8bc1\u4fe1\u606f\uff0c\u9700\u8981\u6ce8\u610f\u5bf9\u5e94\u7684 KEY \u548c TYPE\uff1a kubectl create secret generic myregistry --from-file = .dockerconfigjson = /root/.docker/config.json --type = kubernetes.io/dockerconfigjson \u7136\u540e\u67e5\u770b Secret \u5217\u8868\uff1a \u279c ~ kubectl get secret NAME TYPE DATA AGE default-token-n9w2d kubernetes.io/service-account-token 3 33d myregistry kubernetes.io/dockerconfigjson 1 15s mysecret Opaque 2 34m \u6ce8\u610f\u770b\u4e0a\u9762\u7684 TYPE \u7c7b\u578b\uff0cmyregistry \u5bf9\u5e94\u7684\u662f kubernetes.io/dockerconfigjson \uff0c\u540c\u6837\u7684\u53ef\u4ee5\u4f7f\u7528 describe \u547d\u4ee4\u6765\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe secret myregistry Name: myregistry Namespace: default Labels: <none> Annotations: <none> Type: kubernetes.io/dockerconfigjson Data ==== .dockerconfigjson: 152 bytes \u540c\u6837\u7684\u53ef\u4ee5\u770b\u5230 Data \u533a\u57df\u6ca1\u6709\u76f4\u63a5\u5c55\u793a\u51fa\u6765\uff0c\u5982\u679c\u60f3\u67e5\u770b\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 -o yaml \u6765\u8f93\u51fa\u5c55\u793a\u51fa\u6765\uff1a \u279c ~ kubectl get secret myregistry -o yaml apiVersion : v1 data : .dockerconfigjson : eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0= kind : Secret metadata : creationTimestamp : 2018-06-19T16:01:05Z name : myregistry namespace : default resourceVersion : \"3696966\" selfLink : /api/v1/namespaces/default/secrets/myregistry uid : f91db707-73d9-11e8-a101-525400db4df7 type : kubernetes.io/dockerconfigjson \u53ef\u4ee5\u628a\u4e0a\u9762\u7684 data.dockerconfigjson \u4e0b\u9762\u7684\u6570\u636e\u505a\u4e00\u4e2a base64 \u89e3\u7801\uff0c\u770b\u770b\u91cc\u9762\u7684\u6570\u636e\u662f\u600e\u6837\u7684\u5462\uff1f \u279c ~ echo eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0 = | base64 -d { \"auths\" : { \"DOCKER_SERVER\" : { \"username\" : \"DOCKER_USER\" , \"password\" : \"DOCKER_PASSWORD\" , \"email\" : \"DOCKER_EMAIL\" , \"auth\" : \"RE9DS0VSX1VTRVI6RE9DS0VSX1BBU1NXT1JE\" }}} \u5982\u679c\u6211\u4eec\u9700\u8981\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u4e2d\u7684 Docker \u955c\u50cf\u7684\u8bdd\u5c31\u9700\u8981\u4f7f\u7528\u5230\u4e0a\u9762\u7684 myregistry \u8fd9\u4e2a Secret\uff1a apiVersion : v1 kind : Pod metadata : name : foo spec : containers : - name : foo image : 192.168.1.100:5000/test:v1 imagePullSecrets : - name : myregistry Info ImagePullSecrets \u4e0e Secrets \u4e0d\u540c\uff0c\u56e0\u4e3a Secrets \u53ef\u4ee5\u6302\u8f7d\u5230 Pod \u4e2d\uff0c\u4f46\u662f ImagePullSecrets \u53ea\u80fd\u7531 Kubelet \u8bbf\u95ee\u3002 \u6211\u4eec\u9700\u8981\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u955c\u50cf 192.168.1.100:5000/test:v1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u9488\u5bf9\u8be5\u79c1\u6709\u4ed3\u5e93\u6765\u521b\u5efa\u4e00\u4e2a\u5982\u4e0a\u7684 Secret\uff0c\u7136\u540e\u5728 Pod \u4e2d\u6307\u5b9a imagePullSecrets\u3002 \u9664\u4e86\u8bbe\u7f6e Pod.spec.imagePullSecrets \u8fd9\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u79c1\u6709\u955c\u50cf\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728 ServiceAccount \u4e2d\u8bbe\u7f6e imagePullSecrets\uff0c\u7136\u540e\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4f7f\u7528\u8be5 SA \u7684 Pod \u6ce8\u5165 imagePullSecrets \u4fe1\u606f\uff1a # kubectl edit ServiceAccountk edit apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2019-11-08T12:00:04Z\" name: default namespace: default resourceVersion: \"332\" selfLink: /api/v1/namespaces/default/serviceaccounts/default uid: cc37a719-c4fe-4ebf-92da-e92c3e24d5d0 secrets: - name: default-token-5tsh4 imagePullSecrets: - name: myregistry kubernetes.io/basic-auth \u00b6 \u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6240\u9700\u7684\u51ed\u636e\u4fe1\u606f\uff0c\u4f7f\u7528\u8fd9\u79cd Secret \u7c7b\u578b\u65f6\uff0cSecret \u7684 data \u5b57\u6bb5\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u4e24\u4e2a\u952e\uff08\u76f8\u5f53\u4e8e\u662f\u7ea6\u5b9a\u4fd7\u6210\u7684\u4e00\u4e2a\u89c4\u5b9a\uff09\uff0c\u5373\u975e\u5fc5\u987b\uff1a username : \u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u7528\u6237\u540d password : \u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u5bc6\u7801\u6216\u4ee4\u724c Info # kubectl explain secret.data KIND: Secret VERSION: v1 FIELD: data <map [ string ] string> DESCRIPTION: Data contains the secret data. Each key must consist of alphanumeric characters, '-' , '_' or '.' . The serialized form of the secret data is a base64 encoded string, representing the arbitrary ( possibly non-string ) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4 \u4ee5\u4e0a\u4e24\u4e2a\u952e\u7684\u952e\u503c\u90fd\u662f base64 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002 \u7136\u800c\u4f60\u4e5f\u53ef\u4ee5\u5728\u521b\u5efa Secret \u65f6\u4f7f\u7528 stringData \u5b57\u6bb5\u6765\u63d0\u4f9b\u660e\u6587\u5f62\u5f0f\u7684\u5185\u5bb9\u3002\u4e0b\u9762\u7684 YAML \u662f\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1 Secret \u7684\u4e00\u4e2a\u793a\u4f8b\u6e05\u5355\uff1a apiVersion : v1 kind : Secret metadata : name : secret-basic-auth type : kubernetes.io/basic-auth stringData : username : admin password : admin321 \u63d0\u4f9b\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7c7b\u578b\u7684 Secret \u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e\uff0c\u4e0d\u8fc7\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002 kubernetes.io/ssh-auth \u00b6 \u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e SSH \u8eab\u4efd\u8ba4\u8bc1\u4e2d\u6240\u9700\u8981\u7684\u51ed\u636e\uff0c\u4f7f\u7528\u8fd9\u79cd Secret \u7c7b\u578b\u65f6\uff0c\u4f60\u5c31\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5728\u5176 data\uff08\u6216 stringData\uff09\u5b57\u6bb5\u4e2d\u63d0\u4f9b\u4e00\u4e2a ssh-privatekey \u952e\u503c\u5bf9\uff0c\u4f5c\u4e3a\u8981\u4f7f\u7528\u7684 SSH \u51ed\u636e\u3002 \u5982\u4e0b\u6240\u793a\u662f\u4e00\u4e2a SSH \u8eab\u4efd\u8ba4\u8bc1 Secret \u7684\u914d\u7f6e\u793a\u4f8b\uff1a apiVersion : v1 kind : Secret metadata : name : secret-ssh-auth type : kubernetes.io/ssh-auth data : ssh-privatekey : | MIIEpQIBAAKCAQEAulqb/Y ... \u540c\u6837\u63d0\u4f9b SSH \u8eab\u4efd\u8ba4\u8bc1\u7c7b\u578b\u7684 Secret \u4e5f\u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e SSH \u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e\uff0c\u53ea\u662f\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002 kubernetes.io/tls \u00b6 \u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e\u8bc1\u4e66\u53ca\u5176\u76f8\u5173\u5bc6\u94a5\uff08\u901a\u5e38\u7528\u5728 TLS \u573a\u5408\uff09\u3002\u6b64\u7c7b\u6570\u636e\u4e3b\u8981\u63d0\u4f9b\u7ed9 Ingress \u8d44\u6e90\uff0c\u7528\u4ee5\u6821\u9a8c TLS \u94fe\u63a5\uff0c\u5f53\u4f7f\u7528\u6b64\u7c7b\u578b\u7684 Secret \u65f6\uff0cSecret \u914d\u7f6e\u4e2d\u7684 data \uff08\u6216 stringData\uff09\u5b57\u6bb5\u5fc5\u987b\u5305\u542b tls.key \u548c tls.crt \u4e3b\u952e\u3002\u4e0b\u9762\u7684 YAML \u5305\u542b\u4e00\u4e2a TLS Secret \u7684\u914d\u7f6e\u793a\u4f8b\uff1a apiVersion : v1 kind : Secret metadata : name : secret-tls type : kubernetes.io/tls data : tls.crt : | MIIC2DCCAcCgAwIBAgIBATANBgkqh ... tls.key : | MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ... \u63d0\u4f9b TLS \u7c7b\u578b\u7684 Secret \u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e TLS \u670d\u52a1\u5668\u4e0e/\u6216\u5ba2\u6237\u7aef\u7684\u51ed\u636e\u3002\u4e0d\u8fc7\uff0c\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5316\u5904\u7406\u3002\u5f53\u4f7f\u7528 kubectl \u6765\u521b\u5efa TLS Secret \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0b\u9762\u7684\u4f8b\u5b50\u4e00\u6837\u4f7f\u7528 tls \u5b50\u547d\u4ee4\uff1a \u279c ~ kubectl create secret tls my-tls-secret \\ --cert = path/to/cert/file \\ --key = path/to/key/file \u9700\u8981\u6ce8\u610f\u7684\u662f\u7528\u4e8e --cert \u7684\u516c\u94a5\u8bc1\u4e66\u5fc5\u987b\u662f .PEM \u7f16\u7801\u7684 \uff08Base64 \u7f16\u7801\u7684 DER \u683c\u5f0f\uff09\uff0c\u4e14\u4e0e --key \u6240\u7ed9\u5b9a\u7684\u79c1\u94a5\u5339\u914d\uff0c\u79c1\u94a5\u5fc5\u987b\u662f\u901a\u5e38\u6240\u8bf4\u7684 PEM \u79c1\u94a5\u683c\u5f0f\uff0c\u4e14\u672a\u52a0\u5bc6 \u3002\u5bf9\u8fd9\u4e24\u4e2a\u6587\u4ef6\u800c\u8a00\uff0cPEM \u683c\u5f0f\u6570\u636e\u7684\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\uff08\u4f8b\u5982\uff0c\u8bc1\u4e66\u6240\u5bf9\u5e94\u7684 --------BEGIN CERTIFICATE----- \u548c -------END CERTIFICATE---- \uff09\u90fd\u4e0d\u4f1a\u5305\u542b\u5728\u5176\u4e2d\u3002 kubernetes.io/service-account-token \u00b6 \u53e6\u5916\u4e00\u79cd Secret \u7c7b\u578b\u5c31\u662f kubernetes . io / service-account-token \uff0c\u7528\u4e8e\u88ab ServiceAccount \u5f15\u7528\u3002ServiceAccout \u521b\u5efa\u65f6 Kubernetes \u4f1a\u9ed8\u8ba4\u521b\u5efa\u5bf9\u5e94\u7684 Secret\uff0c\u5982\u4e0b\u6240\u793a\u6211\u4eec\u968f\u610f\u521b\u5efa\u4e00\u4e2a Pod\uff1a \u279c ~ kubectl run secret-pod3 --image nginx:1.7.9 deployment.apps \"secret-pod3\" created \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE ... secret-pod3-78c8c76db8-7zmqm 1 /1 Running 0 13s ... \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u8fd9\u4e2a Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a volumeMounts : - mountPath : /var/run/secrets/kubernetes.io/serviceaccount name : kube-api-access-lvhfb readOnly : true ...... serviceAccount : default serviceAccountName : default volumes : - name : kube-api-access-lvhfb projected : defaultMode : 420 sources : - serviceAccountToken : expirationSeconds : 3607 path : token - configMap : items : - key : ca.crt path : ca.crt name : kube-root-ca.crt - downwardAPI : items : - fieldRef : apiVersion : v1 fieldPath : metadata.namespace path : namespace \u5f53\u521b\u5efa Pod \u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a ServiceAccount\uff0cPod \u5219\u4f1a\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u4e2d\u540d\u4e3a default \u7684 ServiceAccount\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 spec.serviceAccountName \u5b57\u6bb5\u5df2\u7ecf\u88ab\u81ea\u52a8\u8bbe\u7f6e\u4e86\u3002 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a projected \u7c7b\u578b\u7684 Volume \u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u7684\u76ee\u5f55\u4e2d\uff0cprojected \u7c7b\u578b\u7684 Volume \u53ef\u4ee5\u540c\u65f6\u6302\u8f7d\u591a\u4e2a\u6765\u6e90\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u6302\u8f7d\u4e86\u4e00\u4e2a downwardAPI \u6765\u83b7\u53d6 namespace\uff0c\u901a\u8fc7 ConfigMap \u6765\u83b7\u53d6 ca.crt \u8bc1\u4e66\uff0c\u7136\u540e\u8fd8\u6709\u4e00\u4e2a serviceAccountToken \u7c7b\u578b\u7684\u6570\u636e\u6e90\u3002 \u5728\u4e4b\u524d\u7684\u7248\u672c\uff08v1.20\uff09\u4e2d\uff0c\u662f\u76f4\u63a5\u5c06 default\uff08\u81ea\u52a8\u521b\u5efa\u7684\uff09\u7684 ServiceAccount \u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\u901a\u8fc7 Volume \u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u7684\u76ee\u5f55\u4e2d\u7684\uff0c\u73b0\u5728\u7684\u7248\u672c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86 expirationSeconds \u548c path \u4e24\u4e2a\u5c5e\u6027\u3002 \u524d\u9762\u6211\u4eec\u4e5f\u63d0\u5230\u4e86\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5f53\u524d namespace \u4e0b\u9762\u7684 Pod \u4f1a\u9ed8\u8ba4\u4f7f\u7528 default \u8fd9\u4e2a ServiceAccount\uff0c\u5bf9\u5e94\u7684 Secret \u4f1a\u81ea\u52a8\u6302\u8f7d\u5230 Pod \u7684 /var/run/secrets/kubernetes.io/serviceaccount/ \u76ee\u5f55\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Pod \u91cc\u9762\u83b7\u53d6\u5230\u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u4fe1\u606f\u4e86\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u6302\u8f7d\u7ed9 Pod \u7684 ServiceAccount \u51ed\u636e\u8bbf\u95ee API\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728 ServiceAccount \u4e0a\u8bbe\u7f6e automountServiceAccountToken : false \u6765\u5b9e\u73b0\u4e0d\u7ed9 ServiceAccount \u81ea\u52a8\u6302\u8f7d API \u51ed\u636e\uff1a apiVersion : v1 kind : ServiceAccount metadata : name : build-robot automountServiceAccountToken : false ... \u6b64\u5916\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u7ed9\u7279\u5b9a Pod \u81ea\u52a8\u6302\u8f7d API \u51ed\u636e\uff1a apiVersion : v1 kind : Pod metadata : name : my-pod spec : serviceAccountName : build-robot automountServiceAccountToken : false ... \u5982\u679c Pod \u548c ServiceAccount \u90fd\u6307\u5b9a\u4e86 automountServiceAccountToken \u503c\uff0c\u5219 Pod \u7684 spec \u4f18\u5148\u4e8e ServiceAccount\u3002 ServiceAccount Token \u6295\u5f71 \u00b6 ServiceAccount \u662f Pod \u548c\u96c6\u7fa4 apiserver \u901a\u8baf\u7684\u8bbf\u95ee\u51ed\u8bc1\uff0c\u4f20\u7edf\u65b9\u5f0f\u4e0b\uff0c\u5728 Pod \u4e2d\u4f7f\u7528 ServiceAccount \u53ef\u80fd\u4f1a\u9047\u5230\u5982\u4e0b\u7684\u5b89\u5168\u6311\u6218\uff1a ServiceAccount \u4e2d\u7684 JSON Web Token (JWT) \u6ca1\u6709\u7ed1\u5b9a audience \u8eab\u4efd\uff0c\u56e0\u6b64\u6240\u6709 ServiceAccount \u7684\u4f7f\u7528\u8005\u90fd\u53ef\u4ee5\u5f7c\u6b64\u626e\u6f14\uff0c\u5b58\u5728\u4f2a\u88c5\u653b\u51fb\u7684\u53ef\u80fd \u4f20\u7edf\u65b9\u5f0f\u4e0b\u6bcf\u4e00\u4e2a ServiceAccount \u90fd\u9700\u8981\u5b58\u50a8\u5728\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u4e2d\uff0c\u5e76\u4e14\u4f1a\u4ee5\u6587\u4ef6\u5f62\u5f0f\u5b58\u50a8\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u8282\u70b9\u4e0a\uff0c\u800c\u96c6\u7fa4\u7684\u7cfb\u7edf\u7ec4\u4ef6\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9b\u6743\u9650\u5f88\u9ad8\u7684 ServiceAccount\uff0c\u5176\u589e\u5927\u4e86\u96c6\u7fa4\u7ba1\u63a7\u5e73\u9762\u7684\u653b\u51fb\u9762\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u8fd9\u4e9b\u7ba1\u63a7\u7ec4\u4ef6\u4f7f\u7528\u7684 ServiceAccount \u975e\u6cd5\u63d0\u6743 ServiceAccount \u4e2d\u7684 JWT token \u6ca1\u6709\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u4e0a\u8ff0 ServiceAccount \u6cc4\u9732\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u53ea\u80fd\u901a\u8fc7\u8f6e\u8f6c ServiceAccount \u7684\u7b7e\u53d1\u79c1\u94a5\u6765\u8fdb\u884c\u9632\u8303 \u6bcf\u4e00\u4e2a ServiceAccount \u90fd\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684 Secret\uff0c\u5728\u5927\u89c4\u6a21\u7684\u5e94\u7528\u90e8\u7f72\u4e0b\u5b58\u5728\u5f39\u6027\u548c\u5bb9\u91cf\u98ce\u9669 \u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 Kubernetes \u63d0\u4f9b\u4e86 ServiceAccount Token \u6295\u5f71\u7279\u6027\u7528\u4e8e\u589e\u5f3a ServiceAccount \u7684\u5b89\u5168\u6027\uff0cServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u53ef\u4f7f Pod \u652f\u6301\u4ee5\u5377\u6295\u5f71\u7684\u5f62\u5f0f\u5c06 ServiceAccount \u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u4ece\u800c\u907f\u514d\u4e86\u5bf9 Secret \u7684\u4f9d\u8d56\u3002 \u901a\u8fc7 ServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u53ef\u7528\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u7684 ServiceAccount \u4ee4\u724c\u662f\u53d7\u65f6\u95f4\u9650\u5236\uff0c\u53d7 audience \u7ea6\u675f\u7684\uff0c \u5e76\u4e14\u4e0d\u4e0e Secret \u5bf9\u8c61\u5173\u8054\u3002\u5982\u679c\u5220\u9664\u4e86 Pod \u6216\u5220\u9664\u4e86 ServiceAccount\uff0c\u5219\u8fd9\u4e9b\u4ee4\u724c\u5c06\u65e0\u6548\uff0c\u4ece\u800c\u53ef\u4ee5\u9632\u6b62\u4efb\u4f55\u8bef\u7528\uff0cKubelet \u8fd8\u4f1a\u5728\u4ee4\u724c\u5373\u5c06\u5230\u671f\u65f6\u81ea\u52a8\u65cb\u8f6c\u4ee4\u724c\uff0c\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5e0c\u671b\u6b64\u4ee4\u724c\u53ef\u7528\u7684\u8def\u5f84\u3002 \u4e3a\u4e86\u542f\u7528\u4ee4\u724c\u8bf7\u6c42\u6295\u5c04\uff08\u6b64\u529f\u80fd\u5728 Kubernetes 1.12 \u4e2d\u5f15\u5165\uff0cKubernetes v1.20 \u5df2\u7ecf\u7a33\u5b9a\u7248\u672c\uff09\uff0c\u4f60\u5fc5\u987b\u4e3a kube-apiserver \u8bbe\u7f6e\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u901a\u8fc7 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u5df2\u7ecf\u9ed8\u8ba4\u914d\u7f6e\u4e86\uff1a --service-account-issuer # serviceaccount token \u4e2d\u7684\u7b7e\u53d1\u8eab\u4efd\uff0c\u5373token payload\u4e2d\u7684iss\u5b57\u6bb5\u3002 --service-account-key-file # token \u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --service-account-signing-key-file # token \u7b7e\u540d\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --api-audiences ( \u53ef\u9009\u53c2\u6570 ) # \u5408\u6cd5\u7684\u8bf7\u6c42token\u8eab\u4efd\uff0c\u7528\u4e8eapiserver\u670d\u52a1\u7aef\u8ba4\u8bc1\u8bf7\u6c42token\u662f\u5426\u5408\u6cd5\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u6307\u5b9a\u4ee4\u724c\u7684\u6240\u9700\u5c5e\u6027\uff0c\u4f8b\u5982\u8eab\u4efd\u548c\u6709\u6548\u65f6\u95f4\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5728\u9ed8\u8ba4 ServiceAccount \u4ee4\u724c\u4e0a\u65e0\u6cd5\u914d\u7f6e\u3002\u5f53\u5220\u9664 Pod \u6216 ServiceAccount \u65f6\uff0cServiceAccount \u4ee4\u724c\u4e5f\u5c06\u5bf9 API \u65e0\u6548\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a ServiceAccountToken \u7684 ProjectedVolume \u7c7b\u578b\u5728 PodSpec \u4e0a\u914d\u7f6e\u6b64\u529f\u80fd\uff0c\u6bd4\u5982\u8981\u5411 Pod \u63d0\u4f9b\u5177\u6709 \"vault\" \u7528\u6237\u4ee5\u53ca\u4e24\u4e2a\u5c0f\u65f6\u6709\u6548\u671f\u7684\u4ee4\u724c\uff0c\u53ef\u4ee5\u5728 PodSpec \u4e2d\u914d\u7f6e\u4ee5\u4e0b\u5185\u5bb9\uff1a \u4f8b\u5982\u5f53 Pod \u4e2d\u9700\u8981\u4f7f\u7528 audience \u4e3a vault \u5e76\u4e14\u6709\u6548\u671f\u4e3a2\u4e2a\u5c0f\u65f6\u7684 ServiceAccount \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6a21\u677f\u914d\u7f6e PodSpec \u6765\u4f7f\u7528 ServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u3002 apiVersion : v1 kind : ServiceAccount metadata : name : build-robot --- apiVersion : v1 kind : Pod metadata : name : nginx spec : containers : - image : nginx name : nginx volumeMounts : - mountPath : /var/run/secrets/tokens name : vault-token serviceAccountName : build-robot volumes : - name : vault-token projected : sources : - serviceAccountToken : path : vault-token expirationSeconds : 7200 audience : vault kubelet \u7ec4\u4ef6\u4f1a\u66ff Pod \u8bf7\u6c42\u4ee4\u724c\u5e76\u5c06\u5176\u4fdd\u5b58\u8d77\u6765\uff0c\u901a\u8fc7\u5c06\u4ee4\u724c\u5b58\u50a8\u5230\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u8def\u5f84\u4f7f\u4e4b\u5728 Pod \u5185\u53ef\u7528\uff0c\u5e76\u5728\u4ee4\u724c\u5feb\u8981\u5230\u671f\u7684\u65f6\u5019\u5237\u65b0\u5b83\u3002 kubelet \u4f1a\u5728\u4ee4\u724c\u5b58\u5728\u671f\u8fbe\u5230\u5176 TTL \u7684 80% \u7684\u65f6\u5019\u6216\u8005\u4ee4\u724c\u751f\u547d\u671f\u8d85\u8fc7 24 \u5c0f\u65f6\u7684\u65f6\u5019\u4e3b\u52a8\u8f6e\u6362\u5b83\u3002\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5728\u4ee4\u724c\u88ab\u8f6e\u6362\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u5185\u5bb9\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u4f7f\u7528\u573a\u666f\u800c\u8a00\uff0c\u5468\u671f\u6027\u5730\uff08\u4f8b\u5982\uff0c\u6bcf\u9694 5 \u5206\u949f\uff09\u91cd\u65b0\u52a0\u8f7d\u5c31\u8db3\u591f\u4e86\u3002 \u5176\u4ed6\u7279\u6027 \u00b6 \u5982\u679c\u67d0\u4e2a\u5bb9\u5668\u5df2\u7ecf\u5728\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f7f\u7528\u67d0 Secret\uff0c\u5bf9\u8be5 Secret \u7684\u66f4\u65b0\u4e0d\u4f1a\u88ab\u5bb9\u5668\u9a6c\u4e0a\u770b\u89c1\uff0c\u9664\u975e\u5bb9\u5668\u88ab\u91cd\u542f\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u89e3\u51b3\u65b9\u6848\u5728 Secret \u53d1\u751f\u53d8\u5316\u65f6\u89e6\u53d1\u5bb9\u5668\u91cd\u542f\u3002 \u5728 Kubernetes v1.21 \u7248\u672c\u63d0\u4f9b\u4e86\u4e0d\u53ef\u53d8\u7684 Secret \u548c ConfigMap \u7684\u53ef\u9009\u914d\u7f6e[stable]\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e Secret \u548c ConfigMap \u4e3a\u4e0d\u53ef\u53d8\u7684\uff0c\u5bf9\u4e8e\u5927\u91cf\u4f7f\u7528 Secret \u6216\u8005 ConfigMap \u7684\u96c6\u7fa4\uff08\u6bd4\u5982\u6709\u6210\u5343\u4e0a\u4e07\u5404\u4e0d\u76f8\u540c\u7684 Secret \u4f9b Pod \u6302\u8f7d\uff09\u65f6\uff0c\u7981\u6b62\u53d8\u66f4\u5b83\u4eec\u7684\u6570\u636e\u6709\u5f88\u591a\u597d\u5904\uff1a \u53ef\u4ee5\u9632\u6b62\u610f\u5916\u66f4\u65b0\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u65ad \u901a\u8fc7\u5c06 Secret \u6807\u8bb0\u4e3a\u4e0d\u53ef\u53d8\u6765\u5173\u95ed kube-apiserver \u5bf9\u5176\u7684 watch \u64cd\u4f5c\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e kube-apiserver \u7684\u8d1f\u8f7d\uff0c\u63d0\u5347\u96c6\u7fa4\u6027\u80fd \u8fd9\u4e2a\u7279\u6027\u901a\u8fc7\u53ef\u4ee5\u901a\u8fc7 ImmutableEmphemeralVolumes \u7279\u6027\u95e8\u6765\u8fdb\u884c\u5f00\u542f\uff0c\u4ece v1.19 \u5f00\u59cb\u9ed8\u8ba4\u542f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06 Secret \u7684 immutable \u5b57\u6bb5\u8bbe\u7f6e\u4e3a true \u521b\u5efa\u4e0d\u53ef\u66f4\u6539\u7684 Secret\u3002 \u4f8b\u5982\uff1a apiVersion : v1 kind : Secret metadata : ... data : ... immutable : true # \u6807\u8bb0\u4e3a\u4e0d\u53ef\u53d8 Warning \u4e00\u65e6\u4e00\u4e2a Secret \u6216 ConfigMap \u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u66f4\u6539\uff0c\u64a4\u9500\u6b64\u64cd\u4f5c\u6216\u8005\u66f4\u6539 data \u5b57\u6bb5\u7684\u5185\u5bb9\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u53ea\u80fd\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u8fd9\u4e2a Secret\u3002\u73b0\u6709\u7684 Pod \u5c06\u7ef4\u6301\u5bf9\u5df2\u5220\u9664 Secret \u7684\u6302\u8f7d\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u662f\u5efa\u8bae\u91cd\u65b0\u521b\u5efa\u8fd9\u4e9b Pod\u3002 Secret vs ConfigMap \u00b6 \u6700\u540e\u6211\u4eec\u6765\u5bf9\u6bd4\u4e0b Secret \u548c ConfigMap\u8fd9\u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u5f02\u540c\u70b9\uff1a \u76f8\u540c\u70b9 \u00b6 key/value\u7684\u5f62\u5f0f \u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4 \u53ef\u4ee5\u5bfc\u51fa\u5230\u73af\u5883\u53d8\u91cf \u53ef\u4ee5\u901a\u8fc7\u76ee\u5f55/\u6587\u4ef6\u5f62\u5f0f\u6302\u8f7d \u901a\u8fc7 volume \u6302\u8f7d\u7684\u914d\u7f6e\u4fe1\u606f\u5747\u53ef\u70ed\u66f4\u65b0 \u4e0d\u540c\u70b9 \u00b6 Secret \u53ef\u4ee5\u88ab ServerAccount \u5173\u8054 Secret \u53ef\u4ee5\u5b58\u50a8 docker register \u7684\u9274\u6743\u4fe1\u606f\uff0c\u7528\u5728 ImagePullSecret \u53c2\u6570\u4e2d\uff0c\u7528\u4e8e\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u7684\u955c\u50cf Secret \u652f\u6301 Base64 \u52a0\u5bc6 Secret \u5206\u4e3a kubernetes.io/service-account-token\u3001kubernetes.io/dockerconfigjson\u3001Opaque \u4e09\u79cd\u7c7b\u578b\uff0c\u800c Configmap \u4e0d\u533a\u5206\u7c7b\u578b Wearning \u540c\u6837 Secret \u6587\u4ef6\u5927\u5c0f\u9650\u5236\u4e3a 1MB\uff08ETCD \u7684\u8981\u6c42\uff09\uff1bSecret \u867d\u7136\u91c7\u7528 Base64 \u7f16\u7801\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u89e3\u7801\u83b7\u53d6\u5230\u539f\u59cb\u4fe1\u606f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\u8fd8\u662f\u9700\u8981\u614e\u91cd\u8003\u8651\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Vault \u6765\u8fdb\u884c\u52a0\u5bc6\u7ba1\u7406\u3002","title":"Secret"},{"location":"ConfigManage/Secret/#-secret","text":"\u524d\u9762\u6211\u4eec\u5b66\u4e60 ConfigMap \u7684\u65f6\u5019\uff0c\u6211\u4eec\u8bf4 ConfigMap \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u662f Kubernetes \u5f53\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff0c \u4e00\u822c\u60c5\u51b5\u4e0b ConfigMap \u662f\u7528\u6765\u5b58\u50a8\u4e00\u4e9b\u975e\u5b89\u5168\u7684\u914d\u7f6e\u4fe1\u606f \uff0c\u5982\u679c\u6d89\u53ca\u5230\u4e00\u4e9b\u5b89\u5168\u76f8\u5173\u7684\u6570\u636e\u7684\u8bdd\u7528 ConfigMap \u5c31\u975e\u5e38\u4e0d\u59a5\u4e86\uff0c\u56e0\u4e3a ConfigMap \u662f\u660e\u6587\u5b58\u50a8\u7684 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 \u53e6\u5916\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff1aSecret\uff0cSecret\u7528\u6765\u4fdd\u5b58\u654f\u611f\u4fe1\u606f \u3002\u4f8b\u5982\u5bc6\u7801\u3001OAuth \u4ee4\u724c\u548c ssh key \u7b49\u7b49\uff0c\u5c06\u8fd9\u4e9b\u4fe1\u606f\u653e\u5728 Secret \u4e2d\u6bd4\u653e\u5728 Pod \u7684\u5b9a\u4e49\u4e2d\u6216\u8005 Docker \u955c\u50cf\u4e2d\u8981\u66f4\u52a0\u5b89\u5168\u548c\u7075\u6d3b\u3002 Secret \u4e3b\u8981\u4f7f\u7528\u7684\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u7c7b\u578b\uff0c\u5176\u4e2d\u4e3b\u8981\u4f7f\u7528\u524d\u4e09\u79cd\uff1a Opaque \uff1abase64 \u7f16\u7801\u683c\u5f0f\u7684 Secret\uff0c\u7528\u6765\u5b58\u50a8\u5bc6\u7801\u3001\u5bc6\u94a5\u7b49\uff1b\u4f46\u6570\u636e\u4e5f\u53ef\u4ee5\u901a\u8fc7 base64 \u2013decode \u89e3\u7801\u5f97\u5230\u539f\u59cb\u6570\u636e\uff0c\u6240\u6709**\u52a0\u5bc6\u6027\u5f88\u5f31**\u3002 kubernetes.io/dockercfg : ~/.dockercfg \u6587\u4ef6\u7684\u5e8f\u5217\u5316\u5f62\u5f0f kubernetes.io/dockerconfigjson \uff1a\u7528\u6765\u5b58\u50a8\u79c1\u6709docker registry\u7684\u8ba4\u8bc1\u4fe1\u606f\uff0c~/.docker/config.json \u6587\u4ef6\u7684\u5e8f\u5217\u5316\u5f62\u5f0f kubernetes.io/service-account-token \uff1a\u7528\u4e8e ServiceAccount, ServiceAccount \u521b\u5efa\u65f6Kubernetes \u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\uff0cPod \u5982\u679c\u4f7f\u7528\u4e86 ServiceAccount\uff0c\u5bf9\u5e94\u7684 Secret \u4f1a\u81ea\u52a8\u6302\u8f7d\u5230 Pod \u76ee\u5f55 /run/secrets/kubernetes.io/serviceaccount \u4e2d kubernetes.io/ssh-auth \uff1a\u7528\u4e8e SSH \u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e kubernetes.io/basic-auth \uff1a\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e bootstrap.kubernetes.io/token \uff1a\u7528\u4e8e\u8282\u70b9\u63a5\u5165\u96c6\u7fa4\u7684\u6821\u9a8c\u7684 Secret Warning \u4ee5\u4e0a\u662f Secret \u5bf9\u8c61\u5185\u7f6e\u652f\u6301\u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u901a\u8fc7\u4e3a Secret \u5bf9\u8c61\u7684 type \u5b57\u6bb5\u8bbe\u7f6e\u4e00\u4e2a**\u975e\u7a7a**\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5e76\u4f7f\u7528\u81ea\u5df1 Secret \u7c7b\u578b\u3002\u5982\u679c type \u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u88ab\u89c6\u4e3a Opaque \u7c7b\u578b\u3002Kubernetes \u5e76\u4e0d\u5bf9\u7c7b\u578b\u7684\u540d\u79f0\u4f5c\u4efb\u4f55\u9650\u5236\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u8981\u4f7f\u7528\u5185\u7f6e\u7c7b\u578b\u4e4b\u4e00\uff0c \u5219\u4f60\u5fc5\u987b\u6ee1\u8db3\u4e3a\u8be5\u7c7b\u578b\u6240\u5b9a\u4e49\u7684\u6240\u6709\u8981\u6c42\u3002","title":"\u654f\u611f\u4fe1\u606f\u914d\u7f6e\u7ba1\u7406 - Secret"},{"location":"ConfigManage/Secret/#opaque-secret","text":"Secret \u8d44\u6e90\u5305\u542b2\u4e2a\u952e\u503c\u5bf9\uff1a data \u548c stringData \uff0cdata \u5b57\u6bb5\u7528\u6765\u5b58\u50a8 base64 \u7f16\u7801\u7684\u4efb\u610f\u6570\u636e\uff0c\u63d0\u4f9b stringData \u5b57\u6bb5\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5b83\u5141\u8bb8 Secret \u4f7f\u7528\u672a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002 data \u548c stringData \u7684\u952e\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001-\uff0c_ \u6216 . \u7ec4\u6210 \u3002 \u6bd4\u5982\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u540d\u4e3a admin\uff0c\u5bc6\u7801\u4e3a admin321 \u7684 Secret \u5bf9\u8c61\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u628a\u7528\u6237\u540d\u548c\u5bc6\u7801\u505a base64 \u7f16\u7801\uff1a \u279c ~ echo -n \"admin\" | base64 YWRtaW4 = \u279c ~ echo -n \"admin321\" | base64 YWRtaW4zMjE = \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7f16\u7801\u8fc7\u540e\u7684\u6570\u636e\u6765\u7f16\u5199\u4e00\u4e2a YAML \u6587\u4ef6\uff1a(secret-demo.yaml) apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque data : username : YWRtaW4= password : YWRtaW4zMjE= \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u6765\u521b\u5efa\u4e86\uff1a \u279c ~ kubectl apply -f secret-demo.yaml secret \"mysecret\" created \u5229\u7528 get secret \u547d\u4ee4\u67e5\u770b\uff1a \u279c ~ kubectl get secret NAME TYPE DATA AGE default-token-n9w2d kubernetes.io/service-account-token 3 33d mysecret Opaque 2 40s \u5176\u4e2d default-token-n9w2d \u4e3a\u521b\u5efa\u96c6\u7fa4\u65f6\u9ed8\u8ba4\u521b\u5efa\u7684 Secret\uff0c\u88ab serviceacount/default \u5f15\u7528\u3002 \u73b0\u5728\u6211\u4eec\u4f7f\u7528 describe \u547d\u4ee4\u67e5\u770b\u65b0\u521b\u5efa\u7684secret\u8be6\u60c5\uff1a \u279c ~ kubectl describe secret mysecret Name : mysecret Namespace : default Labels : <none> Annotations : <none> Type : Opaque Data ==== password : 8 bytes username : 5 bytes \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5229\u7528 describe \u547d\u4ee4\u67e5\u770b\u5230\u7684 Data \u6ca1\u6709\u76f4\u63a5\u663e\u793a\u51fa\u6765\uff0c\u5982\u679c\u60f3\u770b\u5230 Data \u91cc\u9762\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u8f93\u51fa\u6210YAML \u6587\u4ef6\u8fdb\u884c\u67e5\u770b\uff1a \u279c ~ kubectl get secret mysecret -o yaml apiVersion : v1 data : password : YWRtaW4zMjE= username : YWRtaW4= kind : Secret metadata : creationTimestamp : 2018-06-19T15:27:06Z name : mysecret namespace : default resourceVersion : \"3694084\" selfLink : /api/v1/namespaces/default/secrets/mysecret uid : 39c139f5-73d5-11e8-a101-525400db4df7 type : Opaque \u5bf9\u4e8e\u67d0\u4e9b\u573a\u666f\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 stringData \u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u53ef\u4ee5\u5c06\u4e00\u4e2a\u975e base64 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u653e\u5165 Secret \u4e2d\uff0c \u5f53\u521b\u5efa\u6216\u66f4\u65b0\u8be5 Secret \u65f6\uff0c\u6b64\u5b57\u6bb5\u5c06\u88ab\u7f16\u7801\u3002 \u6bd4\u5982\u5f53\u6211\u4eec\u90e8\u7f72\u5e94\u7528\u65f6\uff0c\u4f7f\u7528 Secret \u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c \u4f60\u5e0c\u671b\u5728\u90e8\u7f72\u8fc7\u7a0b\u4e2d\uff0c\u586b\u5165\u90e8\u5206\u5185\u5bb9\u5230\u8be5\u914d\u7f6e\u6587\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\u6587\u4ef6: apiUrl : \"https://my.api.com/api/v1\" username : \"<user>\" password : \"<password>\" \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5b9a\u4e49\u5c06\u5176\u5b58\u50a8\u5728 Secret \u4e2d: apiVersion : v1 kind : Secret metadata : name : mysecret type : Opaque stringData : config.yaml : | apiUrl: \"https://my.api.com/api/v1\" username: <user> password: <password> \u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u5bf9\u8c61\u540e\u91cd\u65b0\u83b7\u53d6\u5bf9\u8c61\u7684\u8bdd config.yaml \u7684\u503c\u4f1a\u88ab\u7f16\u7801\uff1a \u279c ~ kubectl get secret mysecret -o yaml apiVersion : v1 data : config.yaml : YXBpVXJsOiAiaHR0cHM6Ly9teS5hcGkuY29tL2FwaS92MSIKdXNlcm5hbWU6IDx1c2VyPgpwYXNzd29yZDogPHBhc3N3b3JkPgo= kind : Secret metadata : annotations : kubectl.kubernetes.io/last-applied-configuration : | {\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"annotations\":{},\"name\":\"mysecret\",\"namespace\":\"default\"},\"stringData\":{\"config.yaml\":\"apiUrl: \\\"https://my.api.com/api/v1\\\"\\nusername: \\u003cuser\\u003e\\npassword: \\u003cpassword\\u003e\\n\"},\"type\":\"Opaque\"} creationTimestamp : \"2021-11-21T10:42:25Z\" managedFields : - apiVersion : v1 fieldsType : FieldsV1 fieldsV1 : f:data : . : {} f:config.yaml : {} f:metadata : f:annotations : . : {} f:kubectl.kubernetes.io/last-applied-configuration : {} f:type : {} manager : kubectl operation : Update time : \"2021-11-21T10:42:25Z\" name : mysecret namespace : default resourceVersion : \"857340\" uid : 5a28d296-5f53-4e4c-92f3-c1d7c952ace2 type : Opaque \u521b\u5efa\u597d Secret\u5bf9\u8c61\u540e\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u4f7f\u7528\u5b83\uff1a \u4ee5\u73af\u5883\u53d8\u91cf\u7684\u5f62\u5f0f \u4ee5Volume\u7684\u5f62\u5f0f\u6302\u8f7d","title":"Opaque Secret"},{"location":"ConfigManage/Secret/#_1","text":"\u9996\u5148\u6211\u4eec\u6765\u6d4b\u8bd5\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u6765\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 busybox \u955c\u50cf\u6765\u6d4b\u8bd5\u4e0b:(secret1-pod.yaml) apiVersion : v1 kind : Pod metadata : name : secret1-pod spec : containers : - name : secret1 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : USERNAME valueFrom : secretKeyRef : name : mysecret key : username - name : PASSWORD valueFrom : secretKeyRef : name : mysecret key : password \u4e3b\u8981\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u73af\u5883\u53d8\u91cf\u4e2d\u5b9a\u4e49\u7684 secretKeyRef \u5b57\u6bb5\uff0c\u548c\u6211\u4eec\u524d\u6587\u7684 configMapKeyRef \u7c7b\u4f3c\uff0c\u4e00\u4e2a\u662f\u4ece Secret \u5bf9\u8c61\u4e2d\u83b7\u53d6\uff0c\u4e00\u4e2a\u662f\u4ece ConfigMap \u5bf9\u8c61\u4e2d\u83b7\u53d6\uff0c\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl create -f secret1-pod.yaml pod \"secret1-pod\" created \u7136\u540e\u6211\u4eec\u67e5\u770bPod\u7684\u65e5\u5fd7\u8f93\u51fa\uff1a \u279c ~ kubectl logs secret1-pod ... USERNAME = admin PASSWORD = admin321 ... \u53ef\u4ee5\u770b\u5230\u6709 USERNAME \u548c PASSWORD \u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u8f93\u51fa\u51fa\u6765\u3002","title":"\u73af\u5883\u53d8\u91cf"},{"location":"ConfigManage/Secret/#volume","text":"\u540c\u6837\u7684\u6211\u4eec\u7528\u4e00\u4e2a Pod \u6765\u9a8c\u8bc1\u4e0b Volume \u6302\u8f7d\uff0c\u521b\u5efa\u4e00\u4e2a Pod \u6587\u4ef6\uff1a(secret2-pod.yaml) apiVersion : v1 kind : Pod metadata : name : secret2-pod spec : containers : - name : secret2 image : busybox command : [ \"/bin/sh\" , \"-c\" , \"ls /etc/secrets\" ] volumeMounts : - name : secrets mountPath : /etc/secrets volumes : - name : secrets secret : secretName : mysecret \u521b\u5efa Pod\uff0c\u7136\u540e\u67e5\u770b\u8f93\u51fa\u65e5\u5fd7\uff1a \u279c ~ kubectl create -f secret-pod2.yaml pod \"secret2-pod\" created \u279c ~ kubectl logs secret2-pod password username \u53ef\u4ee5\u770b\u5230 Secret \u628a\u4e24\u4e2a key \u6302\u8f7d\u6210\u4e86\u4e24\u4e2a\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u5f53\u7136\u5982\u679c\u60f3\u8981\u6302\u8f7d\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u4e0a\u9762\uff0c\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u8282\u8bfe\u7684\u65b9\u6cd5\uff1a\u5728 secretName \u4e0b\u9762\u6dfb\u52a0 items \u6307\u5b9a key \u548c path\uff0c\u8fd9\u4e2a\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0a\u8282\u8bfe ConfigMap \u4e2d\u7684\u65b9\u6cd5\u53bb\u6d4b\u8bd5\u4e0b\u3002","title":"Volume \u6302\u8f7d"},{"location":"ConfigManage/Secret/#kubernetesiodockerconfigjson","text":"\u9664\u4e86\u4e0a\u9762\u7684 Opaque \u8fd9\u79cd\u7c7b\u578b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6765\u521b\u5efa\u7528\u6237 docker registry \u8ba4\u8bc1\u7684 Secret\uff0c\u76f4\u63a5\u4f7f\u7528kubectl create \u547d\u4ee4\u521b\u5efa\u5373\u53ef\uff0c\u5982\u4e0b\uff1a \u279c ~ kubectl create secret docker-registry myregistry --docker-server = DOCKER_SERVER --docker-username = DOCKER_USER --docker-password = DOCKER_PASSWORD --docker-email = DOCKER_EMAIL secret \"myregistry\" created \u9664\u4e86\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u955c\u50cf\u4ed3\u5e93\u8ba4\u8bc1\u4fe1\u606f\uff0c\u9700\u8981\u6ce8\u610f\u5bf9\u5e94\u7684 KEY \u548c TYPE\uff1a kubectl create secret generic myregistry --from-file = .dockerconfigjson = /root/.docker/config.json --type = kubernetes.io/dockerconfigjson \u7136\u540e\u67e5\u770b Secret \u5217\u8868\uff1a \u279c ~ kubectl get secret NAME TYPE DATA AGE default-token-n9w2d kubernetes.io/service-account-token 3 33d myregistry kubernetes.io/dockerconfigjson 1 15s mysecret Opaque 2 34m \u6ce8\u610f\u770b\u4e0a\u9762\u7684 TYPE \u7c7b\u578b\uff0cmyregistry \u5bf9\u5e94\u7684\u662f kubernetes.io/dockerconfigjson \uff0c\u540c\u6837\u7684\u53ef\u4ee5\u4f7f\u7528 describe \u547d\u4ee4\u6765\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe secret myregistry Name: myregistry Namespace: default Labels: <none> Annotations: <none> Type: kubernetes.io/dockerconfigjson Data ==== .dockerconfigjson: 152 bytes \u540c\u6837\u7684\u53ef\u4ee5\u770b\u5230 Data \u533a\u57df\u6ca1\u6709\u76f4\u63a5\u5c55\u793a\u51fa\u6765\uff0c\u5982\u679c\u60f3\u67e5\u770b\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 -o yaml \u6765\u8f93\u51fa\u5c55\u793a\u51fa\u6765\uff1a \u279c ~ kubectl get secret myregistry -o yaml apiVersion : v1 data : .dockerconfigjson : eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0= kind : Secret metadata : creationTimestamp : 2018-06-19T16:01:05Z name : myregistry namespace : default resourceVersion : \"3696966\" selfLink : /api/v1/namespaces/default/secrets/myregistry uid : f91db707-73d9-11e8-a101-525400db4df7 type : kubernetes.io/dockerconfigjson \u53ef\u4ee5\u628a\u4e0a\u9762\u7684 data.dockerconfigjson \u4e0b\u9762\u7684\u6570\u636e\u505a\u4e00\u4e2a base64 \u89e3\u7801\uff0c\u770b\u770b\u91cc\u9762\u7684\u6570\u636e\u662f\u600e\u6837\u7684\u5462\uff1f \u279c ~ echo eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0 = | base64 -d { \"auths\" : { \"DOCKER_SERVER\" : { \"username\" : \"DOCKER_USER\" , \"password\" : \"DOCKER_PASSWORD\" , \"email\" : \"DOCKER_EMAIL\" , \"auth\" : \"RE9DS0VSX1VTRVI6RE9DS0VSX1BBU1NXT1JE\" }}} \u5982\u679c\u6211\u4eec\u9700\u8981\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u4e2d\u7684 Docker \u955c\u50cf\u7684\u8bdd\u5c31\u9700\u8981\u4f7f\u7528\u5230\u4e0a\u9762\u7684 myregistry \u8fd9\u4e2a Secret\uff1a apiVersion : v1 kind : Pod metadata : name : foo spec : containers : - name : foo image : 192.168.1.100:5000/test:v1 imagePullSecrets : - name : myregistry Info ImagePullSecrets \u4e0e Secrets \u4e0d\u540c\uff0c\u56e0\u4e3a Secrets \u53ef\u4ee5\u6302\u8f7d\u5230 Pod \u4e2d\uff0c\u4f46\u662f ImagePullSecrets \u53ea\u80fd\u7531 Kubelet \u8bbf\u95ee\u3002 \u6211\u4eec\u9700\u8981\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u955c\u50cf 192.168.1.100:5000/test:v1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u9488\u5bf9\u8be5\u79c1\u6709\u4ed3\u5e93\u6765\u521b\u5efa\u4e00\u4e2a\u5982\u4e0a\u7684 Secret\uff0c\u7136\u540e\u5728 Pod \u4e2d\u6307\u5b9a imagePullSecrets\u3002 \u9664\u4e86\u8bbe\u7f6e Pod.spec.imagePullSecrets \u8fd9\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u79c1\u6709\u955c\u50cf\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728 ServiceAccount \u4e2d\u8bbe\u7f6e imagePullSecrets\uff0c\u7136\u540e\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4f7f\u7528\u8be5 SA \u7684 Pod \u6ce8\u5165 imagePullSecrets \u4fe1\u606f\uff1a # kubectl edit ServiceAccountk edit apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2019-11-08T12:00:04Z\" name: default namespace: default resourceVersion: \"332\" selfLink: /api/v1/namespaces/default/serviceaccounts/default uid: cc37a719-c4fe-4ebf-92da-e92c3e24d5d0 secrets: - name: default-token-5tsh4 imagePullSecrets: - name: myregistry","title":"kubernetes.io/dockerconfigjson"},{"location":"ConfigManage/Secret/#kubernetesiobasic-auth","text":"\u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6240\u9700\u7684\u51ed\u636e\u4fe1\u606f\uff0c\u4f7f\u7528\u8fd9\u79cd Secret \u7c7b\u578b\u65f6\uff0cSecret \u7684 data \u5b57\u6bb5\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u4e24\u4e2a\u952e\uff08\u76f8\u5f53\u4e8e\u662f\u7ea6\u5b9a\u4fd7\u6210\u7684\u4e00\u4e2a\u89c4\u5b9a\uff09\uff0c\u5373\u975e\u5fc5\u987b\uff1a username : \u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u7528\u6237\u540d password : \u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u5bc6\u7801\u6216\u4ee4\u724c Info # kubectl explain secret.data KIND: Secret VERSION: v1 FIELD: data <map [ string ] string> DESCRIPTION: Data contains the secret data. Each key must consist of alphanumeric characters, '-' , '_' or '.' . The serialized form of the secret data is a base64 encoded string, representing the arbitrary ( possibly non-string ) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4 \u4ee5\u4e0a\u4e24\u4e2a\u952e\u7684\u952e\u503c\u90fd\u662f base64 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002 \u7136\u800c\u4f60\u4e5f\u53ef\u4ee5\u5728\u521b\u5efa Secret \u65f6\u4f7f\u7528 stringData \u5b57\u6bb5\u6765\u63d0\u4f9b\u660e\u6587\u5f62\u5f0f\u7684\u5185\u5bb9\u3002\u4e0b\u9762\u7684 YAML \u662f\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1 Secret \u7684\u4e00\u4e2a\u793a\u4f8b\u6e05\u5355\uff1a apiVersion : v1 kind : Secret metadata : name : secret-basic-auth type : kubernetes.io/basic-auth stringData : username : admin password : admin321 \u63d0\u4f9b\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7c7b\u578b\u7684 Secret \u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e\uff0c\u4e0d\u8fc7\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002","title":"kubernetes.io/basic-auth"},{"location":"ConfigManage/Secret/#kubernetesiossh-auth","text":"\u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e SSH \u8eab\u4efd\u8ba4\u8bc1\u4e2d\u6240\u9700\u8981\u7684\u51ed\u636e\uff0c\u4f7f\u7528\u8fd9\u79cd Secret \u7c7b\u578b\u65f6\uff0c\u4f60\u5c31\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5728\u5176 data\uff08\u6216 stringData\uff09\u5b57\u6bb5\u4e2d\u63d0\u4f9b\u4e00\u4e2a ssh-privatekey \u952e\u503c\u5bf9\uff0c\u4f5c\u4e3a\u8981\u4f7f\u7528\u7684 SSH \u51ed\u636e\u3002 \u5982\u4e0b\u6240\u793a\u662f\u4e00\u4e2a SSH \u8eab\u4efd\u8ba4\u8bc1 Secret \u7684\u914d\u7f6e\u793a\u4f8b\uff1a apiVersion : v1 kind : Secret metadata : name : secret-ssh-auth type : kubernetes.io/ssh-auth data : ssh-privatekey : | MIIEpQIBAAKCAQEAulqb/Y ... \u540c\u6837\u63d0\u4f9b SSH \u8eab\u4efd\u8ba4\u8bc1\u7c7b\u578b\u7684 Secret \u4e5f\u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e SSH \u8eab\u4efd\u8ba4\u8bc1\u7684\u51ed\u636e\uff0c\u53ea\u662f\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002","title":"kubernetes.io/ssh-auth"},{"location":"ConfigManage/Secret/#kubernetesiotls","text":"\u8be5\u7c7b\u578b\u7528\u6765\u5b58\u653e\u8bc1\u4e66\u53ca\u5176\u76f8\u5173\u5bc6\u94a5\uff08\u901a\u5e38\u7528\u5728 TLS \u573a\u5408\uff09\u3002\u6b64\u7c7b\u6570\u636e\u4e3b\u8981\u63d0\u4f9b\u7ed9 Ingress \u8d44\u6e90\uff0c\u7528\u4ee5\u6821\u9a8c TLS \u94fe\u63a5\uff0c\u5f53\u4f7f\u7528\u6b64\u7c7b\u578b\u7684 Secret \u65f6\uff0cSecret \u914d\u7f6e\u4e2d\u7684 data \uff08\u6216 stringData\uff09\u5b57\u6bb5\u5fc5\u987b\u5305\u542b tls.key \u548c tls.crt \u4e3b\u952e\u3002\u4e0b\u9762\u7684 YAML \u5305\u542b\u4e00\u4e2a TLS Secret \u7684\u914d\u7f6e\u793a\u4f8b\uff1a apiVersion : v1 kind : Secret metadata : name : secret-tls type : kubernetes.io/tls data : tls.crt : | MIIC2DCCAcCgAwIBAgIBATANBgkqh ... tls.key : | MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ... \u63d0\u4f9b TLS \u7c7b\u578b\u7684 Secret \u4ec5\u4ec5\u662f\u51fa\u4e8e\u7528\u6237\u65b9\u4fbf\u6027\u8003\u8651\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Opaque \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u4e8e TLS \u670d\u52a1\u5668\u4e0e/\u6216\u5ba2\u6237\u7aef\u7684\u51ed\u636e\u3002\u4e0d\u8fc7\uff0c\u4f7f\u7528\u5185\u7f6e\u7684 Secret \u7c7b\u578b\u7684\u6709\u52a9\u4e8e\u5bf9\u51ed\u636e\u683c\u5f0f\u8fdb\u884c\u7edf\u4e00\u5316\u5904\u7406\u3002\u5f53\u4f7f\u7528 kubectl \u6765\u521b\u5efa TLS Secret \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0b\u9762\u7684\u4f8b\u5b50\u4e00\u6837\u4f7f\u7528 tls \u5b50\u547d\u4ee4\uff1a \u279c ~ kubectl create secret tls my-tls-secret \\ --cert = path/to/cert/file \\ --key = path/to/key/file \u9700\u8981\u6ce8\u610f\u7684\u662f\u7528\u4e8e --cert \u7684\u516c\u94a5\u8bc1\u4e66\u5fc5\u987b\u662f .PEM \u7f16\u7801\u7684 \uff08Base64 \u7f16\u7801\u7684 DER \u683c\u5f0f\uff09\uff0c\u4e14\u4e0e --key \u6240\u7ed9\u5b9a\u7684\u79c1\u94a5\u5339\u914d\uff0c\u79c1\u94a5\u5fc5\u987b\u662f\u901a\u5e38\u6240\u8bf4\u7684 PEM \u79c1\u94a5\u683c\u5f0f\uff0c\u4e14\u672a\u52a0\u5bc6 \u3002\u5bf9\u8fd9\u4e24\u4e2a\u6587\u4ef6\u800c\u8a00\uff0cPEM \u683c\u5f0f\u6570\u636e\u7684\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\uff08\u4f8b\u5982\uff0c\u8bc1\u4e66\u6240\u5bf9\u5e94\u7684 --------BEGIN CERTIFICATE----- \u548c -------END CERTIFICATE---- \uff09\u90fd\u4e0d\u4f1a\u5305\u542b\u5728\u5176\u4e2d\u3002","title":"kubernetes.io/tls"},{"location":"ConfigManage/Secret/#kubernetesioservice-account-token","text":"\u53e6\u5916\u4e00\u79cd Secret \u7c7b\u578b\u5c31\u662f kubernetes . io / service-account-token \uff0c\u7528\u4e8e\u88ab ServiceAccount \u5f15\u7528\u3002ServiceAccout \u521b\u5efa\u65f6 Kubernetes \u4f1a\u9ed8\u8ba4\u521b\u5efa\u5bf9\u5e94\u7684 Secret\uff0c\u5982\u4e0b\u6240\u793a\u6211\u4eec\u968f\u610f\u521b\u5efa\u4e00\u4e2a Pod\uff1a \u279c ~ kubectl run secret-pod3 --image nginx:1.7.9 deployment.apps \"secret-pod3\" created \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE ... secret-pod3-78c8c76db8-7zmqm 1 /1 Running 0 13s ... \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u8fd9\u4e2a Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a volumeMounts : - mountPath : /var/run/secrets/kubernetes.io/serviceaccount name : kube-api-access-lvhfb readOnly : true ...... serviceAccount : default serviceAccountName : default volumes : - name : kube-api-access-lvhfb projected : defaultMode : 420 sources : - serviceAccountToken : expirationSeconds : 3607 path : token - configMap : items : - key : ca.crt path : ca.crt name : kube-root-ca.crt - downwardAPI : items : - fieldRef : apiVersion : v1 fieldPath : metadata.namespace path : namespace \u5f53\u521b\u5efa Pod \u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a ServiceAccount\uff0cPod \u5219\u4f1a\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u4e2d\u540d\u4e3a default \u7684 ServiceAccount\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 spec.serviceAccountName \u5b57\u6bb5\u5df2\u7ecf\u88ab\u81ea\u52a8\u8bbe\u7f6e\u4e86\u3002 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a projected \u7c7b\u578b\u7684 Volume \u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u7684\u76ee\u5f55\u4e2d\uff0cprojected \u7c7b\u578b\u7684 Volume \u53ef\u4ee5\u540c\u65f6\u6302\u8f7d\u591a\u4e2a\u6765\u6e90\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u6302\u8f7d\u4e86\u4e00\u4e2a downwardAPI \u6765\u83b7\u53d6 namespace\uff0c\u901a\u8fc7 ConfigMap \u6765\u83b7\u53d6 ca.crt \u8bc1\u4e66\uff0c\u7136\u540e\u8fd8\u6709\u4e00\u4e2a serviceAccountToken \u7c7b\u578b\u7684\u6570\u636e\u6e90\u3002 \u5728\u4e4b\u524d\u7684\u7248\u672c\uff08v1.20\uff09\u4e2d\uff0c\u662f\u76f4\u63a5\u5c06 default\uff08\u81ea\u52a8\u521b\u5efa\u7684\uff09\u7684 ServiceAccount \u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\u901a\u8fc7 Volume \u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u7684\u76ee\u5f55\u4e2d\u7684\uff0c\u73b0\u5728\u7684\u7248\u672c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86 expirationSeconds \u548c path \u4e24\u4e2a\u5c5e\u6027\u3002 \u524d\u9762\u6211\u4eec\u4e5f\u63d0\u5230\u4e86\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5f53\u524d namespace \u4e0b\u9762\u7684 Pod \u4f1a\u9ed8\u8ba4\u4f7f\u7528 default \u8fd9\u4e2a ServiceAccount\uff0c\u5bf9\u5e94\u7684 Secret \u4f1a\u81ea\u52a8\u6302\u8f7d\u5230 Pod \u7684 /var/run/secrets/kubernetes.io/serviceaccount/ \u76ee\u5f55\u4e2d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Pod \u91cc\u9762\u83b7\u53d6\u5230\u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u7684\u4fe1\u606f\u4e86\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u6302\u8f7d\u7ed9 Pod \u7684 ServiceAccount \u51ed\u636e\u8bbf\u95ee API\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728 ServiceAccount \u4e0a\u8bbe\u7f6e automountServiceAccountToken : false \u6765\u5b9e\u73b0\u4e0d\u7ed9 ServiceAccount \u81ea\u52a8\u6302\u8f7d API \u51ed\u636e\uff1a apiVersion : v1 kind : ServiceAccount metadata : name : build-robot automountServiceAccountToken : false ... \u6b64\u5916\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u7ed9\u7279\u5b9a Pod \u81ea\u52a8\u6302\u8f7d API \u51ed\u636e\uff1a apiVersion : v1 kind : Pod metadata : name : my-pod spec : serviceAccountName : build-robot automountServiceAccountToken : false ... \u5982\u679c Pod \u548c ServiceAccount \u90fd\u6307\u5b9a\u4e86 automountServiceAccountToken \u503c\uff0c\u5219 Pod \u7684 spec \u4f18\u5148\u4e8e ServiceAccount\u3002","title":"kubernetes.io/service-account-token"},{"location":"ConfigManage/Secret/#serviceaccount-token","text":"ServiceAccount \u662f Pod \u548c\u96c6\u7fa4 apiserver \u901a\u8baf\u7684\u8bbf\u95ee\u51ed\u8bc1\uff0c\u4f20\u7edf\u65b9\u5f0f\u4e0b\uff0c\u5728 Pod \u4e2d\u4f7f\u7528 ServiceAccount \u53ef\u80fd\u4f1a\u9047\u5230\u5982\u4e0b\u7684\u5b89\u5168\u6311\u6218\uff1a ServiceAccount \u4e2d\u7684 JSON Web Token (JWT) \u6ca1\u6709\u7ed1\u5b9a audience \u8eab\u4efd\uff0c\u56e0\u6b64\u6240\u6709 ServiceAccount \u7684\u4f7f\u7528\u8005\u90fd\u53ef\u4ee5\u5f7c\u6b64\u626e\u6f14\uff0c\u5b58\u5728\u4f2a\u88c5\u653b\u51fb\u7684\u53ef\u80fd \u4f20\u7edf\u65b9\u5f0f\u4e0b\u6bcf\u4e00\u4e2a ServiceAccount \u90fd\u9700\u8981\u5b58\u50a8\u5728\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u4e2d\uff0c\u5e76\u4e14\u4f1a\u4ee5\u6587\u4ef6\u5f62\u5f0f\u5b58\u50a8\u5728\u5bf9\u5e94\u7684\u5e94\u7528\u8282\u70b9\u4e0a\uff0c\u800c\u96c6\u7fa4\u7684\u7cfb\u7edf\u7ec4\u4ef6\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9b\u6743\u9650\u5f88\u9ad8\u7684 ServiceAccount\uff0c\u5176\u589e\u5927\u4e86\u96c6\u7fa4\u7ba1\u63a7\u5e73\u9762\u7684\u653b\u51fb\u9762\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u8fd9\u4e9b\u7ba1\u63a7\u7ec4\u4ef6\u4f7f\u7528\u7684 ServiceAccount \u975e\u6cd5\u63d0\u6743 ServiceAccount \u4e2d\u7684 JWT token \u6ca1\u6709\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u4e0a\u8ff0 ServiceAccount \u6cc4\u9732\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u53ea\u80fd\u901a\u8fc7\u8f6e\u8f6c ServiceAccount \u7684\u7b7e\u53d1\u79c1\u94a5\u6765\u8fdb\u884c\u9632\u8303 \u6bcf\u4e00\u4e2a ServiceAccount \u90fd\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684 Secret\uff0c\u5728\u5927\u89c4\u6a21\u7684\u5e94\u7528\u90e8\u7f72\u4e0b\u5b58\u5728\u5f39\u6027\u548c\u5bb9\u91cf\u98ce\u9669 \u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 Kubernetes \u63d0\u4f9b\u4e86 ServiceAccount Token \u6295\u5f71\u7279\u6027\u7528\u4e8e\u589e\u5f3a ServiceAccount \u7684\u5b89\u5168\u6027\uff0cServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u53ef\u4f7f Pod \u652f\u6301\u4ee5\u5377\u6295\u5f71\u7684\u5f62\u5f0f\u5c06 ServiceAccount \u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u4ece\u800c\u907f\u514d\u4e86\u5bf9 Secret \u7684\u4f9d\u8d56\u3002 \u901a\u8fc7 ServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u53ef\u7528\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u7684 ServiceAccount \u4ee4\u724c\u662f\u53d7\u65f6\u95f4\u9650\u5236\uff0c\u53d7 audience \u7ea6\u675f\u7684\uff0c \u5e76\u4e14\u4e0d\u4e0e Secret \u5bf9\u8c61\u5173\u8054\u3002\u5982\u679c\u5220\u9664\u4e86 Pod \u6216\u5220\u9664\u4e86 ServiceAccount\uff0c\u5219\u8fd9\u4e9b\u4ee4\u724c\u5c06\u65e0\u6548\uff0c\u4ece\u800c\u53ef\u4ee5\u9632\u6b62\u4efb\u4f55\u8bef\u7528\uff0cKubelet \u8fd8\u4f1a\u5728\u4ee4\u724c\u5373\u5c06\u5230\u671f\u65f6\u81ea\u52a8\u65cb\u8f6c\u4ee4\u724c\uff0c\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5e0c\u671b\u6b64\u4ee4\u724c\u53ef\u7528\u7684\u8def\u5f84\u3002 \u4e3a\u4e86\u542f\u7528\u4ee4\u724c\u8bf7\u6c42\u6295\u5c04\uff08\u6b64\u529f\u80fd\u5728 Kubernetes 1.12 \u4e2d\u5f15\u5165\uff0cKubernetes v1.20 \u5df2\u7ecf\u7a33\u5b9a\u7248\u672c\uff09\uff0c\u4f60\u5fc5\u987b\u4e3a kube-apiserver \u8bbe\u7f6e\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u901a\u8fc7 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u5df2\u7ecf\u9ed8\u8ba4\u914d\u7f6e\u4e86\uff1a --service-account-issuer # serviceaccount token \u4e2d\u7684\u7b7e\u53d1\u8eab\u4efd\uff0c\u5373token payload\u4e2d\u7684iss\u5b57\u6bb5\u3002 --service-account-key-file # token \u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --service-account-signing-key-file # token \u7b7e\u540d\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 --api-audiences ( \u53ef\u9009\u53c2\u6570 ) # \u5408\u6cd5\u7684\u8bf7\u6c42token\u8eab\u4efd\uff0c\u7528\u4e8eapiserver\u670d\u52a1\u7aef\u8ba4\u8bc1\u8bf7\u6c42token\u662f\u5426\u5408\u6cd5\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u6307\u5b9a\u4ee4\u724c\u7684\u6240\u9700\u5c5e\u6027\uff0c\u4f8b\u5982\u8eab\u4efd\u548c\u6709\u6548\u65f6\u95f4\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5728\u9ed8\u8ba4 ServiceAccount \u4ee4\u724c\u4e0a\u65e0\u6cd5\u914d\u7f6e\u3002\u5f53\u5220\u9664 Pod \u6216 ServiceAccount \u65f6\uff0cServiceAccount \u4ee4\u724c\u4e5f\u5c06\u5bf9 API \u65e0\u6548\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a ServiceAccountToken \u7684 ProjectedVolume \u7c7b\u578b\u5728 PodSpec \u4e0a\u914d\u7f6e\u6b64\u529f\u80fd\uff0c\u6bd4\u5982\u8981\u5411 Pod \u63d0\u4f9b\u5177\u6709 \"vault\" \u7528\u6237\u4ee5\u53ca\u4e24\u4e2a\u5c0f\u65f6\u6709\u6548\u671f\u7684\u4ee4\u724c\uff0c\u53ef\u4ee5\u5728 PodSpec \u4e2d\u914d\u7f6e\u4ee5\u4e0b\u5185\u5bb9\uff1a \u4f8b\u5982\u5f53 Pod \u4e2d\u9700\u8981\u4f7f\u7528 audience \u4e3a vault \u5e76\u4e14\u6709\u6548\u671f\u4e3a2\u4e2a\u5c0f\u65f6\u7684 ServiceAccount \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6a21\u677f\u914d\u7f6e PodSpec \u6765\u4f7f\u7528 ServiceAccount \u4ee4\u724c\u5377\u6295\u5f71\u3002 apiVersion : v1 kind : ServiceAccount metadata : name : build-robot --- apiVersion : v1 kind : Pod metadata : name : nginx spec : containers : - image : nginx name : nginx volumeMounts : - mountPath : /var/run/secrets/tokens name : vault-token serviceAccountName : build-robot volumes : - name : vault-token projected : sources : - serviceAccountToken : path : vault-token expirationSeconds : 7200 audience : vault kubelet \u7ec4\u4ef6\u4f1a\u66ff Pod \u8bf7\u6c42\u4ee4\u724c\u5e76\u5c06\u5176\u4fdd\u5b58\u8d77\u6765\uff0c\u901a\u8fc7\u5c06\u4ee4\u724c\u5b58\u50a8\u5230\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u8def\u5f84\u4f7f\u4e4b\u5728 Pod \u5185\u53ef\u7528\uff0c\u5e76\u5728\u4ee4\u724c\u5feb\u8981\u5230\u671f\u7684\u65f6\u5019\u5237\u65b0\u5b83\u3002 kubelet \u4f1a\u5728\u4ee4\u724c\u5b58\u5728\u671f\u8fbe\u5230\u5176 TTL \u7684 80% \u7684\u65f6\u5019\u6216\u8005\u4ee4\u724c\u751f\u547d\u671f\u8d85\u8fc7 24 \u5c0f\u65f6\u7684\u65f6\u5019\u4e3b\u52a8\u8f6e\u6362\u5b83\u3002\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5728\u4ee4\u724c\u88ab\u8f6e\u6362\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u5185\u5bb9\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u4f7f\u7528\u573a\u666f\u800c\u8a00\uff0c\u5468\u671f\u6027\u5730\uff08\u4f8b\u5982\uff0c\u6bcf\u9694 5 \u5206\u949f\uff09\u91cd\u65b0\u52a0\u8f7d\u5c31\u8db3\u591f\u4e86\u3002","title":"ServiceAccount Token \u6295\u5f71"},{"location":"ConfigManage/Secret/#_2","text":"\u5982\u679c\u67d0\u4e2a\u5bb9\u5668\u5df2\u7ecf\u5728\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f7f\u7528\u67d0 Secret\uff0c\u5bf9\u8be5 Secret \u7684\u66f4\u65b0\u4e0d\u4f1a\u88ab\u5bb9\u5668\u9a6c\u4e0a\u770b\u89c1\uff0c\u9664\u975e\u5bb9\u5668\u88ab\u91cd\u542f\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u89e3\u51b3\u65b9\u6848\u5728 Secret \u53d1\u751f\u53d8\u5316\u65f6\u89e6\u53d1\u5bb9\u5668\u91cd\u542f\u3002 \u5728 Kubernetes v1.21 \u7248\u672c\u63d0\u4f9b\u4e86\u4e0d\u53ef\u53d8\u7684 Secret \u548c ConfigMap \u7684\u53ef\u9009\u914d\u7f6e[stable]\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e Secret \u548c ConfigMap \u4e3a\u4e0d\u53ef\u53d8\u7684\uff0c\u5bf9\u4e8e\u5927\u91cf\u4f7f\u7528 Secret \u6216\u8005 ConfigMap \u7684\u96c6\u7fa4\uff08\u6bd4\u5982\u6709\u6210\u5343\u4e0a\u4e07\u5404\u4e0d\u76f8\u540c\u7684 Secret \u4f9b Pod \u6302\u8f7d\uff09\u65f6\uff0c\u7981\u6b62\u53d8\u66f4\u5b83\u4eec\u7684\u6570\u636e\u6709\u5f88\u591a\u597d\u5904\uff1a \u53ef\u4ee5\u9632\u6b62\u610f\u5916\u66f4\u65b0\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u65ad \u901a\u8fc7\u5c06 Secret \u6807\u8bb0\u4e3a\u4e0d\u53ef\u53d8\u6765\u5173\u95ed kube-apiserver \u5bf9\u5176\u7684 watch \u64cd\u4f5c\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e kube-apiserver \u7684\u8d1f\u8f7d\uff0c\u63d0\u5347\u96c6\u7fa4\u6027\u80fd \u8fd9\u4e2a\u7279\u6027\u901a\u8fc7\u53ef\u4ee5\u901a\u8fc7 ImmutableEmphemeralVolumes \u7279\u6027\u95e8\u6765\u8fdb\u884c\u5f00\u542f\uff0c\u4ece v1.19 \u5f00\u59cb\u9ed8\u8ba4\u542f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06 Secret \u7684 immutable \u5b57\u6bb5\u8bbe\u7f6e\u4e3a true \u521b\u5efa\u4e0d\u53ef\u66f4\u6539\u7684 Secret\u3002 \u4f8b\u5982\uff1a apiVersion : v1 kind : Secret metadata : ... data : ... immutable : true # \u6807\u8bb0\u4e3a\u4e0d\u53ef\u53d8 Warning \u4e00\u65e6\u4e00\u4e2a Secret \u6216 ConfigMap \u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u66f4\u6539\uff0c\u64a4\u9500\u6b64\u64cd\u4f5c\u6216\u8005\u66f4\u6539 data \u5b57\u6bb5\u7684\u5185\u5bb9\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u53ea\u80fd\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u8fd9\u4e2a Secret\u3002\u73b0\u6709\u7684 Pod \u5c06\u7ef4\u6301\u5bf9\u5df2\u5220\u9664 Secret \u7684\u6302\u8f7d\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u662f\u5efa\u8bae\u91cd\u65b0\u521b\u5efa\u8fd9\u4e9b Pod\u3002","title":"\u5176\u4ed6\u7279\u6027"},{"location":"ConfigManage/Secret/#secret-vs-configmap","text":"\u6700\u540e\u6211\u4eec\u6765\u5bf9\u6bd4\u4e0b Secret \u548c ConfigMap\u8fd9\u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u5f02\u540c\u70b9\uff1a","title":"Secret vs ConfigMap"},{"location":"ConfigManage/Secret/#_3","text":"key/value\u7684\u5f62\u5f0f \u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4 \u53ef\u4ee5\u5bfc\u51fa\u5230\u73af\u5883\u53d8\u91cf \u53ef\u4ee5\u901a\u8fc7\u76ee\u5f55/\u6587\u4ef6\u5f62\u5f0f\u6302\u8f7d \u901a\u8fc7 volume \u6302\u8f7d\u7684\u914d\u7f6e\u4fe1\u606f\u5747\u53ef\u70ed\u66f4\u65b0","title":"\u76f8\u540c\u70b9"},{"location":"ConfigManage/Secret/#_4","text":"Secret \u53ef\u4ee5\u88ab ServerAccount \u5173\u8054 Secret \u53ef\u4ee5\u5b58\u50a8 docker register \u7684\u9274\u6743\u4fe1\u606f\uff0c\u7528\u5728 ImagePullSecret \u53c2\u6570\u4e2d\uff0c\u7528\u4e8e\u62c9\u53d6\u79c1\u6709\u4ed3\u5e93\u7684\u955c\u50cf Secret \u652f\u6301 Base64 \u52a0\u5bc6 Secret \u5206\u4e3a kubernetes.io/service-account-token\u3001kubernetes.io/dockerconfigjson\u3001Opaque \u4e09\u79cd\u7c7b\u578b\uff0c\u800c Configmap \u4e0d\u533a\u5206\u7c7b\u578b Wearning \u540c\u6837 Secret \u6587\u4ef6\u5927\u5c0f\u9650\u5236\u4e3a 1MB\uff08ETCD \u7684\u8981\u6c42\uff09\uff1bSecret \u867d\u7136\u91c7\u7528 Base64 \u7f16\u7801\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u89e3\u7801\u83b7\u53d6\u5230\u539f\u59cb\u4fe1\u606f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\u8fd8\u662f\u9700\u8981\u614e\u91cd\u8003\u8651\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Vault \u6765\u8fdb\u884c\u52a0\u5bc6\u7ba1\u7406\u3002","title":"\u4e0d\u540c\u70b9"},{"location":"ConfigManage/Security%20Context/","text":"Kubernetes Pod/\u5bb9\u5668\u7684\u5b89\u5168\u7ba1\u63a7 - Security Context \u00b6 \u6211\u4eec\u6709\u65f6\u5019\u5728\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 sysctl \u547d\u4ee4\u6765\u4fee\u6539\u5185\u6838\u53c2\u6570\uff0c\u6bd4\u5982 net\u3001vm\u3001kernel \u7b49\u53c2\u6570\uff0c\u4f46\u662f systcl \u9700\u8981\u5bb9\u5668\u62e5\u6709\u8d85\u7ea7\u6743\u9650\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\uff0c\u5728 Docker \u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a --privileged \u53c2\u6570\u6765\u4f7f\u7528\u7279\u6743\u6a21\u5f0f\u3002\u90a3\u4e48\u5728 Kubernetes \u4e2d\u5e94\u8be5\u5982\u4f55\u6765\u4f7f\u7528\u5462\uff1f \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 Kubernetes \u4e2d\u7684 Security Context\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u5b89\u5168\u4e0a\u4e0b\u6587\uff0c\u4e3b\u8981\u662f\u6765\u9650\u5236\u5bb9\u5668\u975e\u6cd5\u64cd\u4f5c\u5bbf\u4e3b\u8282\u70b9\u7684\u7cfb\u7edf\u7ea7\u522b\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u8282\u70b9\u7684\u7cfb\u7edf\u6216\u8005\u8282\u70b9\u4e0a\u5176\u4ed6\u5bb9\u5668\u7ec4\u53d7\u5230\u5f71\u54cd\u3002Kubernetes \u63d0\u4f9b\u4e86\u4e09\u79cd\u914d\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\u7ea7\u522b\u7684\u65b9\u6cd5\uff1a Container-level Security Context \uff1a\u4ec5\u5e94\u7528\u5230\u6307\u5b9a\u7684\u5bb9\u5668 Pod-level Security Context \uff1a\u5e94\u7528\u5230 Pod \u5185\u6240\u6709\u5bb9\u5668\u4ee5\u53ca Volume Pod Security Policies\uff08PSP\uff0c\u5e9f\u5f03\uff09 \uff1a\u5e94\u7528\u5230\u96c6\u7fa4\u5185\u90e8\u6240\u6709 Pod \u4ee5\u53ca Volume \u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u8bbe\u7f6e Security Context\uff1a \u8bbf\u95ee\u6743\u9650\u63a7\u5236 \uff1a\u6839\u636e\u7528\u6237 ID\uff08UID\uff09\u548c\u7ec4 ID\uff08GID\uff09\u6765\u9650\u5236\u5bf9\u8d44\u6e90\uff08\u6bd4\u5982\uff1a\u6587\u4ef6\uff09\u7684\u8bbf\u95ee\u6743\u9650 Security Enhanced Linux (SELinux) \uff1a\u4e3a\u5bf9\u8c61\u5206\u914d SELinux \u6807\u7b7e Privileged\uff08\u7279\u6743\uff09\u6a21\u5f0f\u8fd0\u884c Linux Capabilities \uff1a\u7ed9\u67d0\u4e2a\u7279\u5b9a\u7684\u8fdb\u7a0b\u8d85\u7ea7\u6743\u9650\uff0c\u800c\u4e0d\u7528\u7ed9 root \u7528\u6237\u6240\u6709\u7684 privileged \u6743\u9650 AppArmor \uff1a\u4f7f\u7528\u7a0b\u5e8f\u6587\u4ef6\u6765\u9650\u5236\u5355\u4e2a\u7a0b\u5e8f\u7684\u6743\u9650 Seccomp \uff1a\u8fc7\u6ee4\u5bb9\u5668\u4e2d\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\uff08system call\uff09 AllowPrivilegeEscalation\uff08\u5141\u8bb8\u7279\u6743\u6269\u5927\uff09 \uff1a\u6b64\u9879\u914d\u7f6e\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u6bd4\u5176\u7236\u8fdb\u7a0b\u83b7\u5f97\u66f4\u591a\u7684\u7279\u6743\uff0c\u76f4\u63a5\u6548\u679c\u662f\uff0c\u5bb9\u5668\u7684\u8fdb\u7a0b\u4e0a\u662f\u5426\u88ab\u8bbe\u7f6e no_new_privs \u6807\u8bb0\u3002\u5f53\u51fa\u73b0\u5982\u4e0b\u60c5\u51b5\u65f6\uff0cAllowPrivilegeEscalation \u7684\u503c\u59cb\u7ec8\u4e3a true\uff1a \u5bb9\u5668\u4ee5 privileged \u6a21\u5f0f\u8fd0\u884c \u5bb9\u5668\u62e5\u6709 CAP_SYS_ADMIN \u7684 Linux Capability \u4e3a Pod \u8bbe\u7f6e Security Context \u00b6 \u6211\u4eec\u53ea\u9700\u8981\u5728 Pod \u5b9a\u4e49\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6dfb\u52a0 securityContext \u5b57\u6bb5\uff0c\u5c31\u53ef\u4ee5\u4e3a Pod \u6307\u5b9a\u5b89\u5168\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8bbe\u5b9a\uff0c\u901a\u8fc7\u8be5\u5b57\u6bb5\u6307\u5b9a\u7684\u5185\u5bb9\u5c06\u4f1a\u5bf9\u5f53\u524d Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u751f\u6548\u3002 apiVersion : v1 kind : Pod metadata : name : security-context-pod-demo spec : volumes : - name : sec-ctx-vol emptyDir : {} securityContext : runAsUser : 1000 runAsGroup : 3000 fsGroup : 2000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 60m\" ] volumeMounts : - name : sec-ctx-vol mountPath : /pod/demo securityContext : allowPrivilegeEscalation : false \u5728\u5f53\u524d\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6211\u4eec\u5728 Pod \u4e0b\u9762\u6dfb\u52a0\u4e86 securityContext \u5b57\u6bb5\uff0c\u5176\u4e2d\uff1a runAsUser \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u8fdb\u7a0b\u90fd\u4ee5 UID 1000 \u7684\u8eab\u4efd\u8fd0\u884c runAsGroup \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u8fdb\u7a0b\u90fd\u4ee5 GID 3000 \u7684\u8eab\u4efd\u8fd0\u884c \u5982\u679c\u7701\u7565\u8be5\u5b57\u6bb5\uff0c\u5bb9\u5668\u8fdb\u7a0b\u7684 GID \u4e3a root(0) \u5bb9\u5668\u4e2d\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u5176\u6240\u6709\u8005\u4e3a userID 1000\uff0cgroupID 3000 fsGroup \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u7684 fsGroup \u4e3a 2000 \u6570\u636e\u5377 \uff08\u5bf9\u5e94\u6302\u8f7d\u70b9 /pod/demo \u7684\u6570\u636e\u5377\u4e3a sec-ctx-demo\uff09 \u7684\u6240\u6709\u8005\u4ee5\u53ca\u5728\u8be5\u6570\u636e\u5377\u4e0b\u521b\u5efa\u7684\u4efb\u4f55\u6587\u4ef6\uff0c\u5176 GID \u90fd\u4e3a 2000 \u4e0b\u8868\u662f\u6211\u4eec\u5e38\u7528\u7684\u4e00\u4e9b securityContext \u5b57\u6bb5\u8bbe\u7f6e\u5185\u5bb9\u4ecb\u7ecd\uff1a \u4e0b\u8868\u662f\u6211\u4eec\u5e38\u7528\u7684\u4e00\u4e9b securityContext \u5b57\u6bb5\u8bbe\u7f6e\u5185\u5bb9\u4ecb\u7ecd\uff1a \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f security-context-pod-demo-1.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE security-context-pod-demo 1 /1 Running 0 6m45s \u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u4e0b\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u8fd0\u884c\u7684 ownership\uff1a \u279c ~ kubectl exec security-context-pod-demo top Mem: 7586020K used, 422948K free, 298660K shrd, 1247656K buff, 3867660K cached CPU: 2 .1% usr 1 .0% sys 0 .0% nic 96 .3% idle 0 .2% io 0 .0% irq 0 .0% sirq Load average: 0 .30 0 .35 0 .35 1 /956 50 PID PPID USER STAT VSZ %VSZ CPU %CPU COMMAND 46 0 1000 R 1292 0 .0 0 0 .0 top 1 0 1000 S 1280 0 .0 0 0 .0 sleep 60m \u6211\u4eec\u76f4\u63a5\u8fd0\u884c\u4e00\u4e2a top \u8fdb\u7a0b\uff0c\u67e5\u770b\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 USER ID \u90fd\u4e3a 1000\uff08runAsUser \u6307\u5b9a\u7684\uff09\uff0c\u7136\u540e\u67e5\u770b\u4e0b\u6302\u8f7d\u7684\u6570\u636e\u5377\u7684 ownership\uff1a \u279c ~ kubectl exec security-context-pod-demo -- ls -la /pod total 8 drwxr-xr-x 3 root root 4096 Nov 26 15 :44 . drwxr-xr-x 1 root root 4096 Nov 26 15 :44 .. drwxrwsrwx 2 root 2000 6 Nov 26 15 :43 demo \u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u6307\u5b9a\u4e86 fsGroup=2000\uff0c\u6240\u4ee5\u58f0\u660e\u6302\u8f7d\u7684\u6570\u636e\u5377 /pod/demo \u7684 GID \u4e5f\u53d8\u6210\u4e86 2000\u3002\u76f4\u63a5\u8c03\u7528\u5bb9\u5668\u4e2d\u7684 id \u547d\u4ee4\uff1a \u279c ~ kubectl exec security-context-pod-demo id uid = 1000 gid = 3000 groups = 2000 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 gid \u4e3a 3000\uff0c\u4e0e runAsGroup \u5b57\u6bb5\u6240\u6307\u5b9a\u7684\u4e00\u81f4\uff0c\u5982\u679c runAsGroup \u5b57\u6bb5\u88ab\u7701\u7565\uff0c\u5219 gid \u53d6\u503c\u4e3a 0\uff08\u5373 root\uff09\uff0c\u6b64\u65f6\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u5c06\u53ef\u4ee5\u64cd\u4f5c root Group \u7684\u6587\u4ef6\u3002 \u6bd4\u5982\u6211\u4eec\u73b0\u5728\u60f3\u8981\u53bb\u5220\u9664\u5bb9\u5668\u4e2d\u7684 /tmp \u76ee\u5f55\u5c31\u6ca1\u6709\u6743\u9650\u4e86\uff0c\u56e0\u4e3a\u8be5\u76ee\u5f55\u7684\u7528\u6237\u548c\u7ec4\u90fd\u662f root\uff0c\u800c\u6211\u4eec\u5f53\u524d\u8981\u53bb\u5220\u9664\u4f7f\u7528\u7684\u8fdb\u7a0b\u7684 ID \u53f7\u5c31\u53d8\u6210\u4e86 1000:3000\uff0c\u6240\u4ee5\u6ca1\u6709\u6743\u9650\u64cd\u4f5c\uff1a \u279c ~ kubectl exec security-context-pod-demo -- ls -la /tmp total 8 drwxrwxrwt 2 root root 4096 Oct 29 02 :40 . drwxr-xr-x 1 root root 4096 Nov 26 15 :44 .. \u279c ~ kubectl exec security-context-pod-demo -- rm -rf /tmp rm: can 't remove ' /tmp ' : Permission denied \u4e3a\u5bb9\u5668\u8bbe\u7f6e Security Context \u00b6 \u9664\u4e86\u5728 Pod \u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5355\u72ec\u4e3a\u67d0\u4e2a\u5bb9\u5668\u8bbe\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\uff0c\u540c\u6837\u4e5f\u662f\u901a\u8fc7 securityContext \u5b57\u6bb5\u8bbe\u7f6e\uff0c\u5f53\u8be5\u5b57\u6bb5\u7684\u914d\u7f6e\u4e0e Pod \u7ea7\u522b\u7684 securityContext \u914d\u7f6e\u76f8\u51b2\u7a81\u65f6\uff0c\u5bb9\u5668\u7ea7\u522b\u7684\u914d\u7f6e\u5c06\u8986\u76d6 Pod \u7ea7\u522b\u7684\u914d\u7f6e\u3002\u5bb9\u5668\u7ea7\u522b\u7684 securityContext \u4e0d\u5f71\u54cd Pod \u4e2d\u7684\u6570\u636e\u5377\u3002\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6240\u793a\uff1a apiVersion : v1 kind : Pod metadata : name : security-context-container-demo spec : securityContext : runAsUser : 1000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 60m\" ] securityContext : runAsUser : 2000 allowPrivilegeEscalation : false \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f https:/www.qikqiak.com/k8strain/security/manifests/security-context-pod-demo-2.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE security-context-container-demo 1 /1 Running 0 5s \u540c\u6837\u6211\u4eec\u76f4\u63a5\u6267\u884c\u5bb9\u5668\u4e2d\u7684 top \u547d\u4ee4\uff1a \u279c ~ kubectl exec security-context-container-demo top Mem: 4991896K used, 3016924K free, 52308K shrd, 158364K buff, 3282996K cached CPU: 2 .6% usr 7 .8% sys 2 .6% nic 86 .8% idle 0 .0% io 0 .0% irq 0 .0% sirq Load average: 0 .12 0 .09 0 .12 1 /848 10 PID PPID USER STAT VSZ %VSZ CPU %CPU COMMAND 6 0 2000 R 1292 0 .0 1 0 .0 top 1 0 2000 S 1280 0 .0 3 0 .0 sleep 60m \u5bb9\u5668\u7684\u8fdb\u7a0b\u4ee5 UID 2000 \u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u8be5\u53d6\u503c\u7531 spec.containers[*].securityContext.runAsUser \u5bb9\u5668\u7ec4\u4e2d\u7684\u5b57\u6bb5\u5b9a\u4e49\u3002Pod \u4e2d\u5b9a\u4e49\u7684 spec.securityContext.runAsUser \u53d6\u503c 1000 \u88ab\u8986\u76d6\u3002 \u8bbe\u7f6e Linux Capabilities \u00b6 \u6211\u4eec\u4f7f\u7528 docker/nerdctl run \u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 --cap-add \u548c --cap-drop \u547d\u4ee4\u6765\u7ed9\u5bb9\u5668\u6dfb\u52a0 Linux Capabilities\u3002\u90a3\u4e48\u5728 Kubernetes \u4e0b\u9762\u5982\u4f55\u6765\u8bbe\u7f6e\u5462\uff1f\u8981\u4e86\u89e3\u5982\u4f55\u8bbe\u7f6e\uff0c\u9996\u5148\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e86\u89e3\u4e0b Linux Capabilities \u662f\u4ec0\u4e48\uff1f Linux Capabilities \u00b6 \u8981\u4e86\u89e3 Linux Capabilities\uff0c\u8fd9\u5c31\u5f97\u4ece Linux \u7684\u6743\u9650\u63a7\u5236\u53d1\u5c55\u6765\u8bf4\u660e\u3002\u5728 Linux 2.2 \u7248\u672c\u4e4b\u524d\uff0c\u5f53\u5185\u6838\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u6743\u9650\u9a8c\u8bc1\u7684\u65f6\u5019\uff0cLinux \u5c06\u8fdb\u7a0b\u5212\u5206\u4e3a\u4e24\u7c7b\uff1a\u7279\u6743\u8fdb\u7a0b\uff08UID=0\uff0c\u4e5f\u5c31\u662f\u8d85\u7ea7\u7528\u6237\uff09\u548c\u975e\u7279\u6743\u8fdb\u7a0b\uff08UID!=0\uff09\uff0c\u7279\u6743\u8fdb\u7a0b\u62e5\u6709\u6240\u6709\u7684\u5185\u6838\u6743\u9650\uff0c\u800c\u975e\u7279\u6743\u8fdb\u7a0b\u5219\u6839\u636e\u8fdb\u7a0b\u51ed\u8bc1\uff08effective UID, effective GID\uff0csupplementary group \u7b49\uff09\u8fdb\u884c\u6743\u9650\u68c0\u67e5\u3002 \u6bd4\u5982\u6211\u4eec\u4ee5\u5e38\u7528\u7684 passwd \u547d\u4ee4\u4e3a\u4f8b\uff0c\u4fee\u6539\u7528\u6237\u5bc6\u7801\u9700\u8981\u5177\u6709 root \u6743\u9650\uff0c\u800c\u666e\u901a\u7528\u6237\u662f\u6ca1\u6709\u8fd9\u4e2a\u6743\u9650\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u666e\u901a\u7528\u6237\u53c8\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u5728 Linux \u7684\u6743\u9650\u63a7\u5236\u673a\u5236\u4e2d\uff0c\u6709\u4e00\u7c7b\u6bd4\u8f83\u7279\u6b8a\u7684\u6743\u9650\u8bbe\u7f6e\uff0c\u6bd4\u5982 SUID(Set User ID on execution)\uff0c\u5141\u8bb8\u7528\u6237\u4ee5\u53ef\u6267\u884c\u6587\u4ef6\u7684 owner \u7684\u6743\u9650\u6765\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u3002\u56e0\u4e3a\u7a0b\u5e8f\u6587\u4ef6 /bin/passwd \u88ab\u8bbe\u7f6e\u4e86 SUID \u6807\u8bc6\uff0c\u6240\u4ee5\u666e\u901a\u7528\u6237\u5728\u6267\u884c passwd \u547d\u4ee4\u65f6\uff0c\u8fdb\u7a0b\u662f\u4ee5 passwd \u7684\u6240\u6709\u8005\uff0c\u4e5f\u5c31\u662f root \u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u4fee\u6539\u5bc6\u7801\u4e86\u3002 \u4f46\u662f\u4f7f\u7528 SUID \u5374\u5e26\u6765\u4e86\u65b0\u7684\u5b89\u5168\u9690\u60a3\uff0c\u5f53\u6211\u4eec\u8fd0\u884c\u8bbe\u7f6e\u4e86 SUID \u7684\u547d\u4ee4\u65f6\uff0c\u901a\u5e38\u53ea\u662f\u9700\u8981\u5f88\u5c0f\u4e00\u90e8\u5206\u7684\u7279\u6743\uff0c\u4f46\u662f SUID \u5374\u7ed9\u4e86\u5b83 root \u5177\u6709\u7684\u5168\u90e8\u6743\u9650\uff0c\u4e00\u65e6 \u88ab\u8bbe\u7f6e\u4e86 SUID \u7684\u547d\u4ee4\u51fa\u73b0\u6f0f\u6d1e\uff0c\u662f\u4e0d\u662f\u5c31\u5f88\u5bb9\u6613\u88ab\u5229\u7528\u4e86\u3002 \u4e3a\u6b64 Linux \u5f15\u5165\u4e86 Capabilities \u673a\u5236\u6765\u5bf9 root \u6743\u9650\u8fdb\u884c\u4e86\u66f4\u52a0\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u6309\u9700\u8fdb\u884c\u6388\u6743\uff0c\u8fd9\u6837\u5c31\u5927\u5927\u51cf\u5c0f\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u9690\u60a3\u3002 \u4ec0\u4e48\u662f Capabilities \u00b6 \u4ece\u5185\u6838 2.2 \u5f00\u59cb\uff0cLinux \u5c06\u4f20\u7edf\u4e0a\u4e0e\u8d85\u7ea7\u7528\u6237 root \u5173\u8054\u7684\u7279\u6743\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5355\u5143\uff0c\u79f0\u4e3a capabilites\u3002Capabilites \u6bcf\u4e2a\u5355\u5143\u90fd\u53ef\u4ee5\u72ec\u7acb\u542f\u7528\u548c\u7981\u7528\u3002\u8fd9\u6837\u5f53\u7cfb\u7edf\u5728\u4f5c\u6743\u9650\u68c0\u67e5\u7684\u65f6\u5019\u5c31\u53d8\u6210\u4e86\uff1a\u5728\u6267\u884c\u7279\u6743\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8fdb\u7a0b\u7684\u6709\u6548\u8eab\u4efd\u4e0d\u662f root\uff0c\u5c31\u53bb\u68c0\u67e5\u662f\u5426\u5177\u6709\u8be5\u7279\u6743\u64cd\u4f5c\u6240\u5bf9\u5e94\u7684 capabilites\uff0c\u5e76\u4ee5\u6b64\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u8be5\u7279\u6743\u64cd\u4f5c\u3002\u6bd4\u5982\u5982\u679c\u6211\u4eec\u8981\u8bbe\u7f6e\u7cfb\u7edf\u65f6\u95f4\uff0c\u5c31\u5f97\u5177\u6709 CAP_SYS_TIME \u8fd9\u4e2a capabilites\u3002\u4e0b\u9762\u662f\u4ece capabilities man page \u4e2d\u6458\u53d6\u7684 capabilites \u5217\u8868\uff1a \u5982\u4f55\u4f7f\u7528 Capabilities \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 getcap \u548c setcap \u4e24\u6761\u547d\u4ee4\u6765\u5206\u522b\u67e5\u770b\u548c\u8bbe\u7f6e\u7a0b\u5e8f\u6587\u4ef6\u7684 capabilities \u5c5e\u6027\u3002\u6bd4\u5982\u5f53\u524d\u6211\u4eec\u662ftest \u8fd9\u4e2a\u7528\u6237\uff0c\u4f7f\u7528 getcap \u547d\u4ee4\u67e5\u770b ping \u547d\u4ee4\u76ee\u524d\u5177\u6709\u7684 capabilities\uff1a \u279c ~ ll /bin/ping -rwxr-xr-x. 1 root root 66176 Aug 4 2017 /bin/ping \u279c ~ getcap /bin/ping /bin/ping = cap_net_admin,cap_net_raw+p \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5177\u6709 cap_net_admin \u8fd9\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6267\u884c ping \u547d\u4ee4\uff1a \u279c ~ ping www.qikqiak.com PING www.qikqiak.com.w.kunlungr.com ( 115 .223.14.186 ) 56 ( 84 ) bytes of data. 64 bytes from 115 .223.14.186 ( 115 .223.14.186 ) : icmp_seq = 1 ttl = 54 time = 7 .87 ms 64 bytes from 115 .223.14.186 ( 115 .223.14.186 ) : icmp_seq = 2 ttl = 54 time = 7 .85 ms \u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u547d\u4ee4\u7684 capabilities \u5c5e\u6027\u79fb\u9664\u6389\uff1a \u279c ~ sudo setcap cap_net_admin,cap_net_raw-p /bin/ping \u279c ~ getcap /bin/ping /bin/ping = \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6267\u884c ping \u547d\u4ee4\u53ef\u4ee5\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709\u6743\u9650\u4e86\uff1a \u279c ~ ping www.qikqiak.com ping: socket: Operation not permitted \u56e0\u4e3a ping \u547d\u4ee4\u5728\u6267\u884c\u65f6\u9700\u8981\u8bbf\u95ee\u7f51\u7edc\uff0c\u6240\u9700\u7684 capabilities \u4e3a cap_net_admin \u548c cap_net_raw\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 setcap \u547d\u4ee4\u53ef\u6765\u6dfb\u52a0\u5b83\u4eec\uff1a \u279c ~ sudo setcap cap_net_admin,cap_net_raw+p /bin/ping \u279c ~ getcap /bin/ping /bin/ping = cap_net_admin,cap_net_raw+p \u279c ~ ping www.qikqiak.com PING www.qikqiak.com.w.kunlungr.com ( 115 .223.14.188 ) 56 ( 84 ) bytes of data. 64 bytes from 115 .223.14.188 ( 115 .223.14.188 ) : icmp_seq = 1 ttl = 54 time = 7 .39 ms \u547d\u4ee4\u4e2d\u7684 p \u8868\u793a Permitted \u96c6\u5408(\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecd)\uff0c+ \u53f7\u8868\u793a\u628a\u6307\u5b9a\u7684capabilities \u6dfb\u52a0\u5230\u8fd9\u4e9b\u96c6\u5408\u4e2d\uff0c- \u53f7\u8868\u793a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5bf9\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5c5e\u6027\u4e2d\u6709\u4e09\u4e2a\u96c6\u5408\u6765\u4fdd\u5b58\u4e09\u7c7b capabilities\uff0c\u5b83\u4eec\u5206\u522b\u662f\uff1a Permitted \uff1a\u5728\u8fdb\u7a0b\u6267\u884c\u65f6\uff0cPermitted \u96c6\u5408\u4e2d\u7684 capabilites \u81ea\u52a8\u88ab\u52a0\u5165\u5230\u8fdb\u7a0b\u7684 Permitted \u96c6\u5408\u4e2d\u3002 Inheritable \uff1aInheritable \u96c6\u5408\u4e2d\u7684 capabilites \u4f1a\u4e0e\u8fdb\u7a0b\u7684 Inheritable \u96c6\u5408\u6267\u884c\u4e0e\u64cd\u4f5c\uff0c\u4ee5\u786e\u5b9a\u8fdb\u7a0b\u5728\u6267\u884c execve \u51fd\u6570\u540e\u54ea\u4e9b capabilites \u88ab\u7ee7\u627f\u3002 Effective \uff1aEffective \u53ea\u662f\u4e00\u4e2a bit\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a\u5f00\u542f\uff0c\u90a3\u4e48\u5728\u6267\u884c execve \u51fd\u6570\u540e\uff0cPermitted \u96c6\u5408\u4e2d\u65b0\u589e\u7684 capabilities \u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u8fdb\u7a0b\u7684 Effective \u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u8fdb\u7a0b\u4e2d\u6709\u4e94\u79cd capabilities \u96c6\u5408\u7c7b\u578b\uff0c\u76f8\u6bd4\u6587\u4ef6\u7684 capabilites\uff0c\u8fdb\u7a0b\u7684 capabilities \u591a\u4e86\u4e24\u4e2a\u96c6\u5408\uff0c\u5206\u522b\u662f Bounding \u548c Ambient\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u540d\u6765\u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u7684 capabilities \u4fe1\u606f\uff1a \u279c ~ cat /proc/7029/status | grep 'Cap' #7029\u4e3aPID CapInh: 0000000000000000 CapPrm: 0000000000000000 CapEff: 0000000000000000 CapBnd: 0000001fffffffff CapAmb: 0000000000000000 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 capsh \u547d\u4ee4\u628a\u5b83\u4eec\u8f6c\u4e49\u4e3a\u53ef\u8bfb\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u57fa\u672c\u53ef\u4ee5\u770b\u51fa\u8fdb\u7a0b\u5177\u6709\u7684 capabilities \u4e86\uff1a \u279c ~ capsh --decode = 0000001fffffffff 0x0000001fffffffff = cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,35,36 Container Runtime Capabilities \u00b6 \u6211\u4eec\u8bf4\u5bb9\u5668\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u5bb9\u5668\u5c31\u4f1a\u548c\u8fdb\u7a0b\u4e00\u6837\u4f1a\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u5f00\u653e\u6743\u9650\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Docker/Containerd \u4f1a\u5220\u9664\u5fc5\u987b\u7684 capabilities \u4e4b\u5916\u7684\u6240\u6709 capabilities\uff0c\u56e0\u4e3a\u5728\u5bb9\u5668\u4e2d\u6211\u4eec\u7ecf\u5e38\u4f1a\u4ee5 root \u7528\u6237\u6765\u8fd0\u884c\uff0c\u4f7f\u7528 capabilities \u73b0\u5728\u540e\uff0c\u5bb9\u5668\u4e2d\u7684\u4f7f\u7528\u7684 root \u7528\u6237\u6743\u9650\u5c31\u6bd4\u6211\u4eec\u5e73\u65f6\u5728\u5bbf\u4e3b\u673a\u4e0a\u4f7f\u7528\u7684 root \u7528\u6237\u6743\u9650\u8981\u5c11\u5f88\u591a\u4e86\uff0c\u8fd9\u6837\u5373\u4f7f\u51fa\u73b0\u4e86\u5b89\u5168\u6f0f\u6d1e\uff0c\u4e5f\u5f88\u96be\u7834\u574f\u6216\u8005\u83b7\u53d6\u5bbf\u4e3b\u673a\u7684 root \u6743\u9650\uff0c\u6240\u4ee5 Docker/Containerd \u652f\u6301 Capabilities \u5bf9\u4e8e\u5bb9\u5668\u7684\u5b89\u5168\u6027\u6765\u8bf4\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4e0d\u8fc7\u6211\u4eec\u5728\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a --privileded \u53c2\u6570\u6765\u5f00\u542f\u5bb9\u5668\u7684\u8d85\u7ea7\u6743\u9650\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e00\u5b9a\u8981\u614e\u7528\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u83b7\u53d6\u7cfb\u7edf root \u7528\u6237\u6240\u6709\u80fd\u529b\u8d4b\u503c\u7ed9\u5bb9\u5668\uff0c\u5e76\u4e14\u4f1a\u626b\u63cf\u5bbf\u4e3b\u673a\u7684\u6240\u6709\u8bbe\u5907\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u5185\u90e8\uff0c\u6240\u4ee5\u662f\u975e\u5e38\u5371\u9669\u7684\u64cd\u4f5c\u3002 \u4f46\u662f\u5982\u679c\u4f60\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u7684\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 --cap-add \u548c --cap-drop \u8fd9\u4e24\u4e2a\u53c2\u6570\u6765\u52a8\u6001\u8c03\u6574\uff0c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u4fdd\u8bc1\u5bb9\u5668\u7684\u4f7f\u7528\u5b89\u5168\u3002\u4e0b\u9762\u8868\u683c\u4e2d\u5217\u51fa\u7684 Capabilities \u662f Docker \u9ed8\u8ba4\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 --cap-drop \u53bb\u9664\u5176\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff1a \u4e0b\u9762\u8868\u683c\u4e2d\u5217\u51fa\u7684 Capabilities \u662f Docker \u9ed8\u8ba4\u5220\u9664\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7--cap-add\u6dfb\u52a0\u5176\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff1a Warning --cap-add\u548c--cap-drop \u8fd9\u4e24\u53c2\u6570\u90fd\u652f\u6301ALL\u503c\uff0c\u6bd4\u5982\u5982\u679c\u4f60\u60f3\u8ba9\u67d0\u4e2a\u5bb9\u5668\u62e5\u6709\u9664\u4e86MKNOD\u4e4b\u5916\u7684\u6240\u6709\u5185\u6838\u6743\u9650\uff0c\u90a3\u4e48\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a \u279c ~ sudo docker run --cap-add=ALL --cap-drop=MKNOD ... \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u9700\u8981\u4fee\u6539\u7f51\u7edc\u63a5\u53e3\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u6743\u9650\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u7684 NET_ADMIN \u8fd9\u4e2a Capabilities \u9ed8\u8ba4\u88ab\u79fb\u9664\u4e86\uff1a # docker \u4e00\u6837\u7684\u65b9\u5f0f \u279c ~ nerdctl run -it --rm busybox /bin/sh / # ip link add dummy0 type dummy ip: RTNETLINK answers: Operation not permitted / # \u6240\u4ee5\u5728\u4e0d\u4f7f\u7528 --privileged \u7684\u60c5\u51b5\u4e0b\uff08\u4e0d\u5efa\u8bae\uff09\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 --cap-add=NET_ADMIN \u5c06\u8fd9\u4e2a Capabilities \u6dfb\u52a0\u56de\u6765\uff1a \u279c ~ nerdctl run -it --rm --cap-add = NET_ADMIN busybox /bin/sh / # ip link add dummy0 type dummy / # \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf OK \u4e86\u3002 Kubernetes \u914d\u7f6e Capabilities \u00b6 \u4e0a\u9762\u6211\u4ecb\u7ecd\u4e86\u5728 Docker \u5bb9\u5668\u4e0b\u5982\u4f55\u6765\u914d\u7f6e Capabilities\uff0c\u5728 Kubernetes \u4e2d\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6765\u5b9a\u4e49\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0\u5230 Pod \u5b9a\u4e49\u7684 spec.containers.securityContext.capabilities\u4e2d\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c add \u548c drop \u914d\u7f6e\uff0c\u540c\u6837\u4e0a\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u8981\u7ed9 busybox \u5bb9\u5668\u6dfb\u52a0 NET_ADMIN \u8fd9\u4e2a Capabilities\uff0c\u5bf9\u5e94\u7684 YAML \u6587\u4ef6\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a # cpb-demo.yaml apiVersion: v1 kind: Pod metadata: name: cpb-demo spec: containers: - name: cpb image: busybox args: - sleep - \"3600\" securityContext: capabilities: add: # \u6dfb\u52a0 - NET_ADMIN drop: # \u5220\u9664 - KILL \u6211\u4eec\u5728 securityContext \u4e0b\u9762\u6dfb\u52a0\u4e86 capabilities \u5b57\u6bb5\uff0c\u5176\u4e2d\u6dfb\u52a0\u4e86 NET_ADMIN \u5e76\u4e14\u5220\u9664\u4e86 KILL \u8fd9\u4e2a\u9ed8\u8ba4\u7684\u5bb9\u5668 Capabilities\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Pod \u4e2d\u4fee\u6539\u7f51\u7edc\u63a5\u53e3\u6570\u636e\u4e86\uff1a \u279c ~ kubectl apply -f cpb-demo.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE cpb-demo 1 /1 Running 0 2m9s \u279c ~ kubectl exec -it cpb-demo /bin/sh / # ip link add dummy0 type dummy / # \u5728 Kubernetes \u4e2d\u901a\u8fc7 containers.securityContext.capabilities \u8fdb\u884c\u914d\u7f6e\u5bb9\u5668\u7684 Capabilities\uff0c\u5f53\u7136\u6700\u7ec8\u8fd8\u662f\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 libcontainer \u53bb\u501f\u52a9 Linux kernel capabilities \u5b9e\u73b0\u7684\u6743\u9650\u7ba1\u7406\u3002","title":"Security Context"},{"location":"ConfigManage/Security%20Context/#kubernetes-pod-security-context","text":"\u6211\u4eec\u6709\u65f6\u5019\u5728\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 sysctl \u547d\u4ee4\u6765\u4fee\u6539\u5185\u6838\u53c2\u6570\uff0c\u6bd4\u5982 net\u3001vm\u3001kernel \u7b49\u53c2\u6570\uff0c\u4f46\u662f systcl \u9700\u8981\u5bb9\u5668\u62e5\u6709\u8d85\u7ea7\u6743\u9650\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\uff0c\u5728 Docker \u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a --privileged \u53c2\u6570\u6765\u4f7f\u7528\u7279\u6743\u6a21\u5f0f\u3002\u90a3\u4e48\u5728 Kubernetes \u4e2d\u5e94\u8be5\u5982\u4f55\u6765\u4f7f\u7528\u5462\uff1f \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 Kubernetes \u4e2d\u7684 Security Context\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u5b89\u5168\u4e0a\u4e0b\u6587\uff0c\u4e3b\u8981\u662f\u6765\u9650\u5236\u5bb9\u5668\u975e\u6cd5\u64cd\u4f5c\u5bbf\u4e3b\u8282\u70b9\u7684\u7cfb\u7edf\u7ea7\u522b\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u8282\u70b9\u7684\u7cfb\u7edf\u6216\u8005\u8282\u70b9\u4e0a\u5176\u4ed6\u5bb9\u5668\u7ec4\u53d7\u5230\u5f71\u54cd\u3002Kubernetes \u63d0\u4f9b\u4e86\u4e09\u79cd\u914d\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\u7ea7\u522b\u7684\u65b9\u6cd5\uff1a Container-level Security Context \uff1a\u4ec5\u5e94\u7528\u5230\u6307\u5b9a\u7684\u5bb9\u5668 Pod-level Security Context \uff1a\u5e94\u7528\u5230 Pod \u5185\u6240\u6709\u5bb9\u5668\u4ee5\u53ca Volume Pod Security Policies\uff08PSP\uff0c\u5e9f\u5f03\uff09 \uff1a\u5e94\u7528\u5230\u96c6\u7fa4\u5185\u90e8\u6240\u6709 Pod \u4ee5\u53ca Volume \u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u8bbe\u7f6e Security Context\uff1a \u8bbf\u95ee\u6743\u9650\u63a7\u5236 \uff1a\u6839\u636e\u7528\u6237 ID\uff08UID\uff09\u548c\u7ec4 ID\uff08GID\uff09\u6765\u9650\u5236\u5bf9\u8d44\u6e90\uff08\u6bd4\u5982\uff1a\u6587\u4ef6\uff09\u7684\u8bbf\u95ee\u6743\u9650 Security Enhanced Linux (SELinux) \uff1a\u4e3a\u5bf9\u8c61\u5206\u914d SELinux \u6807\u7b7e Privileged\uff08\u7279\u6743\uff09\u6a21\u5f0f\u8fd0\u884c Linux Capabilities \uff1a\u7ed9\u67d0\u4e2a\u7279\u5b9a\u7684\u8fdb\u7a0b\u8d85\u7ea7\u6743\u9650\uff0c\u800c\u4e0d\u7528\u7ed9 root \u7528\u6237\u6240\u6709\u7684 privileged \u6743\u9650 AppArmor \uff1a\u4f7f\u7528\u7a0b\u5e8f\u6587\u4ef6\u6765\u9650\u5236\u5355\u4e2a\u7a0b\u5e8f\u7684\u6743\u9650 Seccomp \uff1a\u8fc7\u6ee4\u5bb9\u5668\u4e2d\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\uff08system call\uff09 AllowPrivilegeEscalation\uff08\u5141\u8bb8\u7279\u6743\u6269\u5927\uff09 \uff1a\u6b64\u9879\u914d\u7f6e\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u6bd4\u5176\u7236\u8fdb\u7a0b\u83b7\u5f97\u66f4\u591a\u7684\u7279\u6743\uff0c\u76f4\u63a5\u6548\u679c\u662f\uff0c\u5bb9\u5668\u7684\u8fdb\u7a0b\u4e0a\u662f\u5426\u88ab\u8bbe\u7f6e no_new_privs \u6807\u8bb0\u3002\u5f53\u51fa\u73b0\u5982\u4e0b\u60c5\u51b5\u65f6\uff0cAllowPrivilegeEscalation \u7684\u503c\u59cb\u7ec8\u4e3a true\uff1a \u5bb9\u5668\u4ee5 privileged \u6a21\u5f0f\u8fd0\u884c \u5bb9\u5668\u62e5\u6709 CAP_SYS_ADMIN \u7684 Linux Capability","title":"Kubernetes Pod/\u5bb9\u5668\u7684\u5b89\u5168\u7ba1\u63a7 - Security Context"},{"location":"ConfigManage/Security%20Context/#pod-security-context","text":"\u6211\u4eec\u53ea\u9700\u8981\u5728 Pod \u5b9a\u4e49\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6dfb\u52a0 securityContext \u5b57\u6bb5\uff0c\u5c31\u53ef\u4ee5\u4e3a Pod \u6307\u5b9a\u5b89\u5168\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8bbe\u5b9a\uff0c\u901a\u8fc7\u8be5\u5b57\u6bb5\u6307\u5b9a\u7684\u5185\u5bb9\u5c06\u4f1a\u5bf9\u5f53\u524d Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u751f\u6548\u3002 apiVersion : v1 kind : Pod metadata : name : security-context-pod-demo spec : volumes : - name : sec-ctx-vol emptyDir : {} securityContext : runAsUser : 1000 runAsGroup : 3000 fsGroup : 2000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 60m\" ] volumeMounts : - name : sec-ctx-vol mountPath : /pod/demo securityContext : allowPrivilegeEscalation : false \u5728\u5f53\u524d\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6211\u4eec\u5728 Pod \u4e0b\u9762\u6dfb\u52a0\u4e86 securityContext \u5b57\u6bb5\uff0c\u5176\u4e2d\uff1a runAsUser \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u8fdb\u7a0b\u90fd\u4ee5 UID 1000 \u7684\u8eab\u4efd\u8fd0\u884c runAsGroup \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u8fdb\u7a0b\u90fd\u4ee5 GID 3000 \u7684\u8eab\u4efd\u8fd0\u884c \u5982\u679c\u7701\u7565\u8be5\u5b57\u6bb5\uff0c\u5bb9\u5668\u8fdb\u7a0b\u7684 GID \u4e3a root(0) \u5bb9\u5668\u4e2d\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u5176\u6240\u6709\u8005\u4e3a userID 1000\uff0cgroupID 3000 fsGroup \u5b57\u6bb5\u6307\u5b9a\u4e86\u8be5 Pod \u7684 fsGroup \u4e3a 2000 \u6570\u636e\u5377 \uff08\u5bf9\u5e94\u6302\u8f7d\u70b9 /pod/demo \u7684\u6570\u636e\u5377\u4e3a sec-ctx-demo\uff09 \u7684\u6240\u6709\u8005\u4ee5\u53ca\u5728\u8be5\u6570\u636e\u5377\u4e0b\u521b\u5efa\u7684\u4efb\u4f55\u6587\u4ef6\uff0c\u5176 GID \u90fd\u4e3a 2000 \u4e0b\u8868\u662f\u6211\u4eec\u5e38\u7528\u7684\u4e00\u4e9b securityContext \u5b57\u6bb5\u8bbe\u7f6e\u5185\u5bb9\u4ecb\u7ecd\uff1a \u4e0b\u8868\u662f\u6211\u4eec\u5e38\u7528\u7684\u4e00\u4e9b securityContext \u5b57\u6bb5\u8bbe\u7f6e\u5185\u5bb9\u4ecb\u7ecd\uff1a \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f security-context-pod-demo-1.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE security-context-pod-demo 1 /1 Running 0 6m45s \u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u4e0b\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u8fd0\u884c\u7684 ownership\uff1a \u279c ~ kubectl exec security-context-pod-demo top Mem: 7586020K used, 422948K free, 298660K shrd, 1247656K buff, 3867660K cached CPU: 2 .1% usr 1 .0% sys 0 .0% nic 96 .3% idle 0 .2% io 0 .0% irq 0 .0% sirq Load average: 0 .30 0 .35 0 .35 1 /956 50 PID PPID USER STAT VSZ %VSZ CPU %CPU COMMAND 46 0 1000 R 1292 0 .0 0 0 .0 top 1 0 1000 S 1280 0 .0 0 0 .0 sleep 60m \u6211\u4eec\u76f4\u63a5\u8fd0\u884c\u4e00\u4e2a top \u8fdb\u7a0b\uff0c\u67e5\u770b\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 USER ID \u90fd\u4e3a 1000\uff08runAsUser \u6307\u5b9a\u7684\uff09\uff0c\u7136\u540e\u67e5\u770b\u4e0b\u6302\u8f7d\u7684\u6570\u636e\u5377\u7684 ownership\uff1a \u279c ~ kubectl exec security-context-pod-demo -- ls -la /pod total 8 drwxr-xr-x 3 root root 4096 Nov 26 15 :44 . drwxr-xr-x 1 root root 4096 Nov 26 15 :44 .. drwxrwsrwx 2 root 2000 6 Nov 26 15 :43 demo \u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u6307\u5b9a\u4e86 fsGroup=2000\uff0c\u6240\u4ee5\u58f0\u660e\u6302\u8f7d\u7684\u6570\u636e\u5377 /pod/demo \u7684 GID \u4e5f\u53d8\u6210\u4e86 2000\u3002\u76f4\u63a5\u8c03\u7528\u5bb9\u5668\u4e2d\u7684 id \u547d\u4ee4\uff1a \u279c ~ kubectl exec security-context-pod-demo id uid = 1000 gid = 3000 groups = 2000 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 gid \u4e3a 3000\uff0c\u4e0e runAsGroup \u5b57\u6bb5\u6240\u6307\u5b9a\u7684\u4e00\u81f4\uff0c\u5982\u679c runAsGroup \u5b57\u6bb5\u88ab\u7701\u7565\uff0c\u5219 gid \u53d6\u503c\u4e3a 0\uff08\u5373 root\uff09\uff0c\u6b64\u65f6\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u5c06\u53ef\u4ee5\u64cd\u4f5c root Group \u7684\u6587\u4ef6\u3002 \u6bd4\u5982\u6211\u4eec\u73b0\u5728\u60f3\u8981\u53bb\u5220\u9664\u5bb9\u5668\u4e2d\u7684 /tmp \u76ee\u5f55\u5c31\u6ca1\u6709\u6743\u9650\u4e86\uff0c\u56e0\u4e3a\u8be5\u76ee\u5f55\u7684\u7528\u6237\u548c\u7ec4\u90fd\u662f root\uff0c\u800c\u6211\u4eec\u5f53\u524d\u8981\u53bb\u5220\u9664\u4f7f\u7528\u7684\u8fdb\u7a0b\u7684 ID \u53f7\u5c31\u53d8\u6210\u4e86 1000:3000\uff0c\u6240\u4ee5\u6ca1\u6709\u6743\u9650\u64cd\u4f5c\uff1a \u279c ~ kubectl exec security-context-pod-demo -- ls -la /tmp total 8 drwxrwxrwt 2 root root 4096 Oct 29 02 :40 . drwxr-xr-x 1 root root 4096 Nov 26 15 :44 .. \u279c ~ kubectl exec security-context-pod-demo -- rm -rf /tmp rm: can 't remove ' /tmp ' : Permission denied","title":"\u4e3a Pod \u8bbe\u7f6e Security Context"},{"location":"ConfigManage/Security%20Context/#security-context","text":"\u9664\u4e86\u5728 Pod \u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5355\u72ec\u4e3a\u67d0\u4e2a\u5bb9\u5668\u8bbe\u7f6e\u5b89\u5168\u4e0a\u4e0b\u6587\uff0c\u540c\u6837\u4e5f\u662f\u901a\u8fc7 securityContext \u5b57\u6bb5\u8bbe\u7f6e\uff0c\u5f53\u8be5\u5b57\u6bb5\u7684\u914d\u7f6e\u4e0e Pod \u7ea7\u522b\u7684 securityContext \u914d\u7f6e\u76f8\u51b2\u7a81\u65f6\uff0c\u5bb9\u5668\u7ea7\u522b\u7684\u914d\u7f6e\u5c06\u8986\u76d6 Pod \u7ea7\u522b\u7684\u914d\u7f6e\u3002\u5bb9\u5668\u7ea7\u522b\u7684 securityContext \u4e0d\u5f71\u54cd Pod \u4e2d\u7684\u6570\u636e\u5377\u3002\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6240\u793a\uff1a apiVersion : v1 kind : Pod metadata : name : security-context-container-demo spec : securityContext : runAsUser : 1000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 60m\" ] securityContext : runAsUser : 2000 allowPrivilegeEscalation : false \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f https:/www.qikqiak.com/k8strain/security/manifests/security-context-pod-demo-2.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE security-context-container-demo 1 /1 Running 0 5s \u540c\u6837\u6211\u4eec\u76f4\u63a5\u6267\u884c\u5bb9\u5668\u4e2d\u7684 top \u547d\u4ee4\uff1a \u279c ~ kubectl exec security-context-container-demo top Mem: 4991896K used, 3016924K free, 52308K shrd, 158364K buff, 3282996K cached CPU: 2 .6% usr 7 .8% sys 2 .6% nic 86 .8% idle 0 .0% io 0 .0% irq 0 .0% sirq Load average: 0 .12 0 .09 0 .12 1 /848 10 PID PPID USER STAT VSZ %VSZ CPU %CPU COMMAND 6 0 2000 R 1292 0 .0 1 0 .0 top 1 0 2000 S 1280 0 .0 3 0 .0 sleep 60m \u5bb9\u5668\u7684\u8fdb\u7a0b\u4ee5 UID 2000 \u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u8be5\u53d6\u503c\u7531 spec.containers[*].securityContext.runAsUser \u5bb9\u5668\u7ec4\u4e2d\u7684\u5b57\u6bb5\u5b9a\u4e49\u3002Pod \u4e2d\u5b9a\u4e49\u7684 spec.securityContext.runAsUser \u53d6\u503c 1000 \u88ab\u8986\u76d6\u3002","title":"\u4e3a\u5bb9\u5668\u8bbe\u7f6e Security Context"},{"location":"ConfigManage/Security%20Context/#linux-capabilities","text":"\u6211\u4eec\u4f7f\u7528 docker/nerdctl run \u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 --cap-add \u548c --cap-drop \u547d\u4ee4\u6765\u7ed9\u5bb9\u5668\u6dfb\u52a0 Linux Capabilities\u3002\u90a3\u4e48\u5728 Kubernetes \u4e0b\u9762\u5982\u4f55\u6765\u8bbe\u7f6e\u5462\uff1f\u8981\u4e86\u89e3\u5982\u4f55\u8bbe\u7f6e\uff0c\u9996\u5148\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e86\u89e3\u4e0b Linux Capabilities \u662f\u4ec0\u4e48\uff1f","title":"\u8bbe\u7f6e Linux Capabilities"},{"location":"ConfigManage/Security%20Context/#linux-capabilities_1","text":"\u8981\u4e86\u89e3 Linux Capabilities\uff0c\u8fd9\u5c31\u5f97\u4ece Linux \u7684\u6743\u9650\u63a7\u5236\u53d1\u5c55\u6765\u8bf4\u660e\u3002\u5728 Linux 2.2 \u7248\u672c\u4e4b\u524d\uff0c\u5f53\u5185\u6838\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u6743\u9650\u9a8c\u8bc1\u7684\u65f6\u5019\uff0cLinux \u5c06\u8fdb\u7a0b\u5212\u5206\u4e3a\u4e24\u7c7b\uff1a\u7279\u6743\u8fdb\u7a0b\uff08UID=0\uff0c\u4e5f\u5c31\u662f\u8d85\u7ea7\u7528\u6237\uff09\u548c\u975e\u7279\u6743\u8fdb\u7a0b\uff08UID!=0\uff09\uff0c\u7279\u6743\u8fdb\u7a0b\u62e5\u6709\u6240\u6709\u7684\u5185\u6838\u6743\u9650\uff0c\u800c\u975e\u7279\u6743\u8fdb\u7a0b\u5219\u6839\u636e\u8fdb\u7a0b\u51ed\u8bc1\uff08effective UID, effective GID\uff0csupplementary group \u7b49\uff09\u8fdb\u884c\u6743\u9650\u68c0\u67e5\u3002 \u6bd4\u5982\u6211\u4eec\u4ee5\u5e38\u7528\u7684 passwd \u547d\u4ee4\u4e3a\u4f8b\uff0c\u4fee\u6539\u7528\u6237\u5bc6\u7801\u9700\u8981\u5177\u6709 root \u6743\u9650\uff0c\u800c\u666e\u901a\u7528\u6237\u662f\u6ca1\u6709\u8fd9\u4e2a\u6743\u9650\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u666e\u901a\u7528\u6237\u53c8\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u5728 Linux \u7684\u6743\u9650\u63a7\u5236\u673a\u5236\u4e2d\uff0c\u6709\u4e00\u7c7b\u6bd4\u8f83\u7279\u6b8a\u7684\u6743\u9650\u8bbe\u7f6e\uff0c\u6bd4\u5982 SUID(Set User ID on execution)\uff0c\u5141\u8bb8\u7528\u6237\u4ee5\u53ef\u6267\u884c\u6587\u4ef6\u7684 owner \u7684\u6743\u9650\u6765\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u3002\u56e0\u4e3a\u7a0b\u5e8f\u6587\u4ef6 /bin/passwd \u88ab\u8bbe\u7f6e\u4e86 SUID \u6807\u8bc6\uff0c\u6240\u4ee5\u666e\u901a\u7528\u6237\u5728\u6267\u884c passwd \u547d\u4ee4\u65f6\uff0c\u8fdb\u7a0b\u662f\u4ee5 passwd \u7684\u6240\u6709\u8005\uff0c\u4e5f\u5c31\u662f root \u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u4fee\u6539\u5bc6\u7801\u4e86\u3002 \u4f46\u662f\u4f7f\u7528 SUID \u5374\u5e26\u6765\u4e86\u65b0\u7684\u5b89\u5168\u9690\u60a3\uff0c\u5f53\u6211\u4eec\u8fd0\u884c\u8bbe\u7f6e\u4e86 SUID \u7684\u547d\u4ee4\u65f6\uff0c\u901a\u5e38\u53ea\u662f\u9700\u8981\u5f88\u5c0f\u4e00\u90e8\u5206\u7684\u7279\u6743\uff0c\u4f46\u662f SUID \u5374\u7ed9\u4e86\u5b83 root \u5177\u6709\u7684\u5168\u90e8\u6743\u9650\uff0c\u4e00\u65e6 \u88ab\u8bbe\u7f6e\u4e86 SUID \u7684\u547d\u4ee4\u51fa\u73b0\u6f0f\u6d1e\uff0c\u662f\u4e0d\u662f\u5c31\u5f88\u5bb9\u6613\u88ab\u5229\u7528\u4e86\u3002 \u4e3a\u6b64 Linux \u5f15\u5165\u4e86 Capabilities \u673a\u5236\u6765\u5bf9 root \u6743\u9650\u8fdb\u884c\u4e86\u66f4\u52a0\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u6309\u9700\u8fdb\u884c\u6388\u6743\uff0c\u8fd9\u6837\u5c31\u5927\u5927\u51cf\u5c0f\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u9690\u60a3\u3002","title":"Linux Capabilities"},{"location":"ConfigManage/Security%20Context/#capabilities","text":"\u4ece\u5185\u6838 2.2 \u5f00\u59cb\uff0cLinux \u5c06\u4f20\u7edf\u4e0a\u4e0e\u8d85\u7ea7\u7528\u6237 root \u5173\u8054\u7684\u7279\u6743\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5355\u5143\uff0c\u79f0\u4e3a capabilites\u3002Capabilites \u6bcf\u4e2a\u5355\u5143\u90fd\u53ef\u4ee5\u72ec\u7acb\u542f\u7528\u548c\u7981\u7528\u3002\u8fd9\u6837\u5f53\u7cfb\u7edf\u5728\u4f5c\u6743\u9650\u68c0\u67e5\u7684\u65f6\u5019\u5c31\u53d8\u6210\u4e86\uff1a\u5728\u6267\u884c\u7279\u6743\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8fdb\u7a0b\u7684\u6709\u6548\u8eab\u4efd\u4e0d\u662f root\uff0c\u5c31\u53bb\u68c0\u67e5\u662f\u5426\u5177\u6709\u8be5\u7279\u6743\u64cd\u4f5c\u6240\u5bf9\u5e94\u7684 capabilites\uff0c\u5e76\u4ee5\u6b64\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u8be5\u7279\u6743\u64cd\u4f5c\u3002\u6bd4\u5982\u5982\u679c\u6211\u4eec\u8981\u8bbe\u7f6e\u7cfb\u7edf\u65f6\u95f4\uff0c\u5c31\u5f97\u5177\u6709 CAP_SYS_TIME \u8fd9\u4e2a capabilites\u3002\u4e0b\u9762\u662f\u4ece capabilities man page \u4e2d\u6458\u53d6\u7684 capabilites \u5217\u8868\uff1a","title":"\u4ec0\u4e48\u662f Capabilities"},{"location":"ConfigManage/Security%20Context/#capabilities_1","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 getcap \u548c setcap \u4e24\u6761\u547d\u4ee4\u6765\u5206\u522b\u67e5\u770b\u548c\u8bbe\u7f6e\u7a0b\u5e8f\u6587\u4ef6\u7684 capabilities \u5c5e\u6027\u3002\u6bd4\u5982\u5f53\u524d\u6211\u4eec\u662ftest \u8fd9\u4e2a\u7528\u6237\uff0c\u4f7f\u7528 getcap \u547d\u4ee4\u67e5\u770b ping \u547d\u4ee4\u76ee\u524d\u5177\u6709\u7684 capabilities\uff1a \u279c ~ ll /bin/ping -rwxr-xr-x. 1 root root 66176 Aug 4 2017 /bin/ping \u279c ~ getcap /bin/ping /bin/ping = cap_net_admin,cap_net_raw+p \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5177\u6709 cap_net_admin \u8fd9\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6267\u884c ping \u547d\u4ee4\uff1a \u279c ~ ping www.qikqiak.com PING www.qikqiak.com.w.kunlungr.com ( 115 .223.14.186 ) 56 ( 84 ) bytes of data. 64 bytes from 115 .223.14.186 ( 115 .223.14.186 ) : icmp_seq = 1 ttl = 54 time = 7 .87 ms 64 bytes from 115 .223.14.186 ( 115 .223.14.186 ) : icmp_seq = 2 ttl = 54 time = 7 .85 ms \u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u547d\u4ee4\u7684 capabilities \u5c5e\u6027\u79fb\u9664\u6389\uff1a \u279c ~ sudo setcap cap_net_admin,cap_net_raw-p /bin/ping \u279c ~ getcap /bin/ping /bin/ping = \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6267\u884c ping \u547d\u4ee4\u53ef\u4ee5\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709\u6743\u9650\u4e86\uff1a \u279c ~ ping www.qikqiak.com ping: socket: Operation not permitted \u56e0\u4e3a ping \u547d\u4ee4\u5728\u6267\u884c\u65f6\u9700\u8981\u8bbf\u95ee\u7f51\u7edc\uff0c\u6240\u9700\u7684 capabilities \u4e3a cap_net_admin \u548c cap_net_raw\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 setcap \u547d\u4ee4\u53ef\u6765\u6dfb\u52a0\u5b83\u4eec\uff1a \u279c ~ sudo setcap cap_net_admin,cap_net_raw+p /bin/ping \u279c ~ getcap /bin/ping /bin/ping = cap_net_admin,cap_net_raw+p \u279c ~ ping www.qikqiak.com PING www.qikqiak.com.w.kunlungr.com ( 115 .223.14.188 ) 56 ( 84 ) bytes of data. 64 bytes from 115 .223.14.188 ( 115 .223.14.188 ) : icmp_seq = 1 ttl = 54 time = 7 .39 ms \u547d\u4ee4\u4e2d\u7684 p \u8868\u793a Permitted \u96c6\u5408(\u63a5\u4e0b\u6765\u4f1a\u4ecb\u7ecd)\uff0c+ \u53f7\u8868\u793a\u628a\u6307\u5b9a\u7684capabilities \u6dfb\u52a0\u5230\u8fd9\u4e9b\u96c6\u5408\u4e2d\uff0c- \u53f7\u8868\u793a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5bf9\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5c5e\u6027\u4e2d\u6709\u4e09\u4e2a\u96c6\u5408\u6765\u4fdd\u5b58\u4e09\u7c7b capabilities\uff0c\u5b83\u4eec\u5206\u522b\u662f\uff1a Permitted \uff1a\u5728\u8fdb\u7a0b\u6267\u884c\u65f6\uff0cPermitted \u96c6\u5408\u4e2d\u7684 capabilites \u81ea\u52a8\u88ab\u52a0\u5165\u5230\u8fdb\u7a0b\u7684 Permitted \u96c6\u5408\u4e2d\u3002 Inheritable \uff1aInheritable \u96c6\u5408\u4e2d\u7684 capabilites \u4f1a\u4e0e\u8fdb\u7a0b\u7684 Inheritable \u96c6\u5408\u6267\u884c\u4e0e\u64cd\u4f5c\uff0c\u4ee5\u786e\u5b9a\u8fdb\u7a0b\u5728\u6267\u884c execve \u51fd\u6570\u540e\u54ea\u4e9b capabilites \u88ab\u7ee7\u627f\u3002 Effective \uff1aEffective \u53ea\u662f\u4e00\u4e2a bit\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a\u5f00\u542f\uff0c\u90a3\u4e48\u5728\u6267\u884c execve \u51fd\u6570\u540e\uff0cPermitted \u96c6\u5408\u4e2d\u65b0\u589e\u7684 capabilities \u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u8fdb\u7a0b\u7684 Effective \u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u8fdb\u7a0b\u4e2d\u6709\u4e94\u79cd capabilities \u96c6\u5408\u7c7b\u578b\uff0c\u76f8\u6bd4\u6587\u4ef6\u7684 capabilites\uff0c\u8fdb\u7a0b\u7684 capabilities \u591a\u4e86\u4e24\u4e2a\u96c6\u5408\uff0c\u5206\u522b\u662f Bounding \u548c Ambient\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u540d\u6765\u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u7684 capabilities \u4fe1\u606f\uff1a \u279c ~ cat /proc/7029/status | grep 'Cap' #7029\u4e3aPID CapInh: 0000000000000000 CapPrm: 0000000000000000 CapEff: 0000000000000000 CapBnd: 0000001fffffffff CapAmb: 0000000000000000 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 capsh \u547d\u4ee4\u628a\u5b83\u4eec\u8f6c\u4e49\u4e3a\u53ef\u8bfb\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u57fa\u672c\u53ef\u4ee5\u770b\u51fa\u8fdb\u7a0b\u5177\u6709\u7684 capabilities \u4e86\uff1a \u279c ~ capsh --decode = 0000001fffffffff 0x0000001fffffffff = cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,35,36","title":"\u5982\u4f55\u4f7f\u7528 Capabilities"},{"location":"ConfigManage/Security%20Context/#container-runtime-capabilities","text":"\u6211\u4eec\u8bf4\u5bb9\u5668\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u5bb9\u5668\u5c31\u4f1a\u548c\u8fdb\u7a0b\u4e00\u6837\u4f1a\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u5f00\u653e\u6743\u9650\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Docker/Containerd \u4f1a\u5220\u9664\u5fc5\u987b\u7684 capabilities \u4e4b\u5916\u7684\u6240\u6709 capabilities\uff0c\u56e0\u4e3a\u5728\u5bb9\u5668\u4e2d\u6211\u4eec\u7ecf\u5e38\u4f1a\u4ee5 root \u7528\u6237\u6765\u8fd0\u884c\uff0c\u4f7f\u7528 capabilities \u73b0\u5728\u540e\uff0c\u5bb9\u5668\u4e2d\u7684\u4f7f\u7528\u7684 root \u7528\u6237\u6743\u9650\u5c31\u6bd4\u6211\u4eec\u5e73\u65f6\u5728\u5bbf\u4e3b\u673a\u4e0a\u4f7f\u7528\u7684 root \u7528\u6237\u6743\u9650\u8981\u5c11\u5f88\u591a\u4e86\uff0c\u8fd9\u6837\u5373\u4f7f\u51fa\u73b0\u4e86\u5b89\u5168\u6f0f\u6d1e\uff0c\u4e5f\u5f88\u96be\u7834\u574f\u6216\u8005\u83b7\u53d6\u5bbf\u4e3b\u673a\u7684 root \u6743\u9650\uff0c\u6240\u4ee5 Docker/Containerd \u652f\u6301 Capabilities \u5bf9\u4e8e\u5bb9\u5668\u7684\u5b89\u5168\u6027\u6765\u8bf4\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4e0d\u8fc7\u6211\u4eec\u5728\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a --privileded \u53c2\u6570\u6765\u5f00\u542f\u5bb9\u5668\u7684\u8d85\u7ea7\u6743\u9650\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e00\u5b9a\u8981\u614e\u7528\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u83b7\u53d6\u7cfb\u7edf root \u7528\u6237\u6240\u6709\u80fd\u529b\u8d4b\u503c\u7ed9\u5bb9\u5668\uff0c\u5e76\u4e14\u4f1a\u626b\u63cf\u5bbf\u4e3b\u673a\u7684\u6240\u6709\u8bbe\u5907\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u5185\u90e8\uff0c\u6240\u4ee5\u662f\u975e\u5e38\u5371\u9669\u7684\u64cd\u4f5c\u3002 \u4f46\u662f\u5982\u679c\u4f60\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u7684\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 --cap-add \u548c --cap-drop \u8fd9\u4e24\u4e2a\u53c2\u6570\u6765\u52a8\u6001\u8c03\u6574\uff0c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u4fdd\u8bc1\u5bb9\u5668\u7684\u4f7f\u7528\u5b89\u5168\u3002\u4e0b\u9762\u8868\u683c\u4e2d\u5217\u51fa\u7684 Capabilities \u662f Docker \u9ed8\u8ba4\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 --cap-drop \u53bb\u9664\u5176\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff1a \u4e0b\u9762\u8868\u683c\u4e2d\u5217\u51fa\u7684 Capabilities \u662f Docker \u9ed8\u8ba4\u5220\u9664\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7--cap-add\u6dfb\u52a0\u5176\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff1a Warning --cap-add\u548c--cap-drop \u8fd9\u4e24\u53c2\u6570\u90fd\u652f\u6301ALL\u503c\uff0c\u6bd4\u5982\u5982\u679c\u4f60\u60f3\u8ba9\u67d0\u4e2a\u5bb9\u5668\u62e5\u6709\u9664\u4e86MKNOD\u4e4b\u5916\u7684\u6240\u6709\u5185\u6838\u6743\u9650\uff0c\u90a3\u4e48\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a \u279c ~ sudo docker run --cap-add=ALL --cap-drop=MKNOD ... \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u9700\u8981\u4fee\u6539\u7f51\u7edc\u63a5\u53e3\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u6743\u9650\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u7684 NET_ADMIN \u8fd9\u4e2a Capabilities \u9ed8\u8ba4\u88ab\u79fb\u9664\u4e86\uff1a # docker \u4e00\u6837\u7684\u65b9\u5f0f \u279c ~ nerdctl run -it --rm busybox /bin/sh / # ip link add dummy0 type dummy ip: RTNETLINK answers: Operation not permitted / # \u6240\u4ee5\u5728\u4e0d\u4f7f\u7528 --privileged \u7684\u60c5\u51b5\u4e0b\uff08\u4e0d\u5efa\u8bae\uff09\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 --cap-add=NET_ADMIN \u5c06\u8fd9\u4e2a Capabilities \u6dfb\u52a0\u56de\u6765\uff1a \u279c ~ nerdctl run -it --rm --cap-add = NET_ADMIN busybox /bin/sh / # ip link add dummy0 type dummy / # \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf OK \u4e86\u3002","title":"Container Runtime Capabilities"},{"location":"ConfigManage/Security%20Context/#kubernetes-capabilities","text":"\u4e0a\u9762\u6211\u4ecb\u7ecd\u4e86\u5728 Docker \u5bb9\u5668\u4e0b\u5982\u4f55\u6765\u914d\u7f6e Capabilities\uff0c\u5728 Kubernetes \u4e2d\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6765\u5b9a\u4e49\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0\u5230 Pod \u5b9a\u4e49\u7684 spec.containers.securityContext.capabilities\u4e2d\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c add \u548c drop \u914d\u7f6e\uff0c\u540c\u6837\u4e0a\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u8981\u7ed9 busybox \u5bb9\u5668\u6dfb\u52a0 NET_ADMIN \u8fd9\u4e2a Capabilities\uff0c\u5bf9\u5e94\u7684 YAML \u6587\u4ef6\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a # cpb-demo.yaml apiVersion: v1 kind: Pod metadata: name: cpb-demo spec: containers: - name: cpb image: busybox args: - sleep - \"3600\" securityContext: capabilities: add: # \u6dfb\u52a0 - NET_ADMIN drop: # \u5220\u9664 - KILL \u6211\u4eec\u5728 securityContext \u4e0b\u9762\u6dfb\u52a0\u4e86 capabilities \u5b57\u6bb5\uff0c\u5176\u4e2d\u6dfb\u52a0\u4e86 NET_ADMIN \u5e76\u4e14\u5220\u9664\u4e86 KILL \u8fd9\u4e2a\u9ed8\u8ba4\u7684\u5bb9\u5668 Capabilities\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Pod \u4e2d\u4fee\u6539\u7f51\u7edc\u63a5\u53e3\u6570\u636e\u4e86\uff1a \u279c ~ kubectl apply -f cpb-demo.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE cpb-demo 1 /1 Running 0 2m9s \u279c ~ kubectl exec -it cpb-demo /bin/sh / # ip link add dummy0 type dummy / # \u5728 Kubernetes \u4e2d\u901a\u8fc7 containers.securityContext.capabilities \u8fdb\u884c\u914d\u7f6e\u5bb9\u5668\u7684 Capabilities\uff0c\u5f53\u7136\u6700\u7ec8\u8fd8\u662f\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 libcontainer \u53bb\u501f\u52a9 Linux kernel capabilities \u5b9e\u73b0\u7684\u6743\u9650\u7ba1\u7406\u3002","title":"Kubernetes \u914d\u7f6e Capabilities"},{"location":"Container/containerd/","text":"Containerd \u00b6 \u6211\u4eec\u77e5\u9053\u5f88\u65e9\u4e4b\u524d\u7684 Docker Engine \u4e2d\u5c31\u6709\u4e86 containerd\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u662f\u5c06 containerd \u4ece Docker Engine \u91cc\u5206\u79bb\u51fa\u6765\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u66f4\u52a0\u5f00\u653e\u3001\u7a33\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c\u57fa\u7840\u8bbe\u65bd\u3002\u5206\u79bb\u51fa\u6765\u7684 containerd \u5c06\u5177\u6709\u66f4\u591a\u7684\u529f\u80fd\uff0c\u6db5\u76d6\u6574\u4e2a\u5bb9\u5668\u8fd0\u884c\u65f6\u7ba1\u7406\u7684\u6240\u6709\u9700\u6c42\uff0c\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u652f\u6301\u3002 containerd \u662f\u4e00\u4e2a\u5de5\u4e1a\u7ea7\u6807\u51c6\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u5b83\u5f3a\u8c03 \u7b80\u5355\u6027\u3001\u5065\u58ee\u6027\u548c\u53ef\u79fb\u690d\u6027 \uff0ccontainerd \u53ef\u4ee5\u8d1f\u8d23\u5e72\u4e0b\u9762\u8fd9\u4e9b\u4e8b\u60c5\uff1a \u7ba1\u7406\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff08\u4ece\u521b\u5efa\u5bb9\u5668\u5230\u9500\u6bc1\u5bb9\u5668\uff09 \u62c9\u53d6/\u63a8\u9001\u5bb9\u5668\u955c\u50cf \u5b58\u50a8\u7ba1\u7406\uff08\u7ba1\u7406\u955c\u50cf\u53ca\u5bb9\u5668\u6570\u636e\u7684\u5b58\u50a8\uff09 \u8c03\u7528 runc \u8fd0\u884c\u5bb9\u5668\uff08\u4e0e runc \u7b49\u5bb9\u5668\u8fd0\u884c\u65f6\u4ea4\u4e92\uff09 \u7ba1\u7406\u5bb9\u5668\u7f51\u7edc\u63a5\u53e3\u53ca\u7f51\u7edc \u67b6\u6784 \u00b6 containerd \u53ef\u7528\u4f5c Linux \u548c Windows \u7684\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5b83\u7ba1\u7406\u5176\u4e3b\u673a\u7cfb\u7edf\u5b8c\u6574\u7684\u5bb9\u5668\u751f\u547d\u5468\u671f\uff0c\u4ece\u955c\u50cf\u4f20\u8f93\u548c\u5b58\u50a8\u5230\u5bb9\u5668\u6267\u884c\u548c\u76d1\u6d4b\uff0c\u518d\u5230\u5e95\u5c42\u5b58\u50a8\u5230\u7f51\u7edc\u9644\u4ef6\u7b49\u7b49\u3002 \u4e0a\u56fe\u662f containerd \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa containerd \u91c7\u7528\u7684\u4e5f\u662f C/S \u67b6\u6784\uff0c\u670d\u52a1\u7aef\u901a\u8fc7 unix domain socket \u66b4\u9732\u4f4e\u5c42\u7684 gRPC API \u63a5\u53e3\u51fa\u53bb\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u8fd9\u4e9b API \u7ba1\u7406\u8282\u70b9\u4e0a\u7684\u5bb9\u5668\uff0c\u6bcf\u4e2a containerd \u53ea\u8d1f\u8d23\u4e00\u53f0\u673a\u5668\uff0cPull \u955c\u50cf\uff0c\u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\uff08\u542f\u52a8\u3001\u505c\u6b62\u7b49\uff09\uff0c\u7f51\u7edc\uff0c\u5b58\u50a8\u90fd\u662f\u7531 containerd \u5b8c\u6210\u3002\u5177\u4f53\u8fd0\u884c\u5bb9\u5668\u7531 runc \u8d1f\u8d23\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u662f\u7b26\u5408 OCI \u89c4\u8303\u7684\u5bb9\u5668\u90fd\u53ef\u4ee5\u652f\u6301\u3002 \u4e3a\u4e86\u89e3\u8026\uff0ccontainerd \u5c06\u7cfb\u7edf\u5212\u5206\u6210\u4e86\u4e0d\u540c\u7684\u7ec4\u4ef6\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6a21\u5757\u534f\u4f5c\u5b8c\u6210\uff08Core \u90e8\u5206\uff09\uff0c\u6bcf\u4e00\u79cd\u7c7b\u578b\u7684\u6a21\u5757\u90fd\u4ee5\u63d2\u4ef6\u7684\u5f62\u5f0f\u96c6\u6210\u5230 Containerd \u4e2d\uff0c\u800c\u4e14\u63d2\u4ef6\u4e4b\u95f4\u662f\u76f8\u4e92\u4f9d\u8d56\u7684\uff0c\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u957f\u865a\u7ebf\u7684\u65b9\u6846\u90fd\u8868\u793a\u4e00\u79cd\u7c7b\u578b\u7684\u63d2\u4ef6\uff0c\u5305\u62ec Service Plugin\u3001Metadata Plugin\u3001GC Plugin\u3001Runtime Plugin \u7b49\uff0c\u5176\u4e2d Service Plugin \u53c8\u4f1a\u4f9d\u8d56 Metadata Plugin\u3001GC Plugin \u548c Runtime Plugin\u3002\u6bcf\u4e00\u4e2a\u5c0f\u65b9\u6846\u90fd\u8868\u793a\u4e00\u4e2a\u7ec6\u5206\u7684\u63d2\u4ef6\uff0c\u4f8b\u5982 Metadata Plugin \u4f9d\u8d56 Containers Plugin\u3001Content Plugin \u7b49\u3002\u6bd4\u5982: Content Plugin: \u63d0\u4f9b\u5bf9\u955c\u50cf\u4e2d\u53ef\u5bfb\u5740\u5185\u5bb9\u7684\u8bbf\u95ee\uff0c\u6240\u6709\u4e0d\u53ef\u53d8\u7684\u5185\u5bb9\u90fd\u88ab\u5b58\u50a8\u5728\u8fd9\u91cc\u3002 Snapshot Plugin: \u7528\u6765\u7ba1\u7406\u5bb9\u5668\u955c\u50cf\u7684\u6587\u4ef6\u7cfb\u7edf\u5feb\u7167\uff0c\u955c\u50cf\u4e2d\u7684\u6bcf\u4e00\u5c42\u90fd\u4f1a\u88ab\u89e3\u538b\u6210\u6587\u4ef6\u7cfb\u7edf\u5feb\u7167\uff0c\u7c7b\u4f3c\u4e8eDocker \u4e2d\u7684 graphdriver\u3002 \u603b\u4f53\u6765\u770b containerd \u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u5927\u5757\uff1aStorage\u3001Metadata \u548c Runtime\u3002 \u5b89\u88c5 \u00b6 \u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u7cfb\u7edf\u662f CentOS 7.6 \uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5 seccomp \u4f9d\u8d56\uff1a \u279c ~ rpm -qa | grep libseccomp libseccomp-2.3.1-4.el7.x86_64 # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 libseccomp \u5305\u5219\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56 \u279c ~ yum install wget -y \u279c ~ wget http://mirror.centos.org/centos/7/os/x86_64/Packages/libseccomp-2.3.1-4.el7.x86_64.rpm \u279c ~ yum install libseccomp-2.3.1-4.el7.x86_64.rpm -y \u7531\u4e8e containerd \u9700\u8981\u8c03\u7528 runc\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5148\u5b89\u88c5 runc\uff0c\u4e0d\u8fc7 containerd \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5305\u542b\u76f8\u5173\u4f9d\u8d56\u7684\u538b\u7f29\u5305 cri-containerd-cni-${VERSION}.${OS}-${ARCH}.tar.gz \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5305\u6765\u8fdb\u884c\u5b89\u88c5\u3002\u9996\u5148\u4ece release \u9875\u9762 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u538b\u7f29\u5305\uff0c\u5f53\u524d\u4e3a 1.5.5 \u7248\u672c\uff08\u6700\u65b0\u76841.5.7\u7248\u672c\u5728CentOS7\u4e0b\u9762\u6267\u884c runc \u4f1a\u62a5\u9519\uff1a https://github.com/containerd/containerd/issues/6091 \uff09\uff1a \u279c ~ wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u53ef\u4ee5\u901a\u8fc7 tar \u7684 -t \u9009\u9879\u76f4\u63a5\u770b\u5230\u538b\u7f29\u5305\u4e2d\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1a \u279c ~ tar -tf cri-containerd-cni-1.5.5-linux-amd64.tar.gz etc/ etc/cni/ etc/cni/net.d/ etc/cni/net.d/10-containerd-net.conflist etc/crictl.yaml etc/systemd/ etc/systemd/system/ etc/systemd/system/containerd.service usr/ usr/local/ usr/local/bin/ usr/local/bin/containerd-shim-runc-v2 usr/local/bin/ctr usr/local/bin/containerd-shim usr/local/bin/containerd-shim-runc-v1 usr/local/bin/crictl usr/local/bin/critest usr/local/bin/containerd usr/local/sbin/ usr/local/sbin/runc opt/ opt/cni/ opt/cni/bin/ opt/cni/bin/vlan opt/cni/bin/host-local opt/cni/bin/flannel opt/cni/bin/bridge opt/cni/bin/host-device opt/cni/bin/tuning opt/cni/bin/firewall opt/cni/bin/bandwidth opt/cni/bin/ipvlan opt/cni/bin/sbr opt/cni/bin/dhcp opt/cni/bin/portmap opt/cni/bin/ptp opt/cni/bin/static opt/cni/bin/macvlan opt/cni/bin/loopback opt/containerd/ opt/containerd/cluster/ opt/containerd/cluster/version opt/containerd/cluster/gce/ opt/containerd/cluster/gce/cni.template opt/containerd/cluster/gce/configure.sh opt/containerd/cluster/gce/cloud-init/ opt/containerd/cluster/gce/cloud-init/master.yaml opt/containerd/cluster/gce/cloud-init/node.yaml opt/containerd/cluster/gce/env \u76f4\u63a5\u5c06\u538b\u7f29\u5305\u89e3\u538b\u5230\u7cfb\u7edf\u7684\u5404\u4e2a\u76ee\u5f55\u4e2d\uff1a \u279c ~ tar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u5f53\u7136\u8981\u8bb0\u5f97\u5c06 /usr/local/bin \u548c /usr/local/sbin \u8ffd\u52a0\u5230 ~/.bashrc \u6587\u4ef6\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff1a export PATH = $PATH :/usr/local/bin:/usr/local/sbin \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4f7f\u5176\u7acb\u5373\u751f\u6548\uff1a \u279c ~ source ~/.bashrc containerd \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a /etc/containerd/config.toml \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u914d\u7f6e\uff1a \u279c ~ mkdir -p /etc/containerd \u279c ~ containerd config default > /etc/containerd/config.toml \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u4e0b\u8f7d\u7684 containerd \u538b\u7f29\u5305\u4e2d\u5305\u542b\u4e00\u4e2a etc/systemd/system/containerd.service \u7684\u6587\u4ef6\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 systemd \u6765\u914d\u7f6e containerd \u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u4e86\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a \u279c ~ cat /etc/systemd/system/containerd.service [ Unit ] Description = containerd container runtime Documentation = https://containerd.io After = network.target local-fs.target [ Service ] ExecStartPre = -/sbin/modprobe overlay ExecStart = /usr/local/bin/containerd Type = notify Delegate = yes KillMode = process Restart = always RestartSec = 5 # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNPROC = infinity LimitCORE = infinity LimitNOFILE = 1048576 # Comment TasksMax if your systemd version does not supports it. # Only systemd 226 and above support this version. TasksMax = infinity OOMScoreAdjust = -999 [ Install ] WantedBy = multi-user.target \u8fd9\u91cc\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff1a Delegate : \u8fd9\u4e2a\u9009\u9879\u5141\u8bb8 containerd \u4ee5\u53ca\u8fd0\u884c\u65f6\u81ea\u5df1\u7ba1\u7406\u81ea\u5df1\u521b\u5efa\u5bb9\u5668\u7684 cgroups\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u9009\u9879\uff0csystemd \u5c31\u4f1a\u5c06\u8fdb\u7a0b\u79fb\u5230\u81ea\u5df1\u7684 cgroups \u4e2d\uff0c\u4ece\u800c\u5bfc\u81f4 containerd \u65e0\u6cd5\u6b63\u786e\u83b7\u53d6\u5bb9\u5668\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 KillMode : \u8fd9\u4e2a\u9009\u9879\u7528\u6765\u5904\u7406 containerd \u8fdb\u7a0b\u88ab\u6740\u6b7b\u7684\u65b9\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csystemd \u4f1a\u5728\u8fdb\u7a0b\u7684 cgroup \u4e2d\u67e5\u627e\u5e76\u6740\u6b7b containerd \u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u3002KillMode \u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u7684\u503c\u5982\u4e0b\u3002 control-group \uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u5f53\u524d\u63a7\u5236\u7ec4\u91cc\u9762\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\uff0c\u90fd\u4f1a\u88ab\u6740\u6389 process \uff1a\u53ea\u6740\u4e3b\u8fdb\u7a0b mixed \uff1a\u4e3b\u8fdb\u7a0b\u5c06\u6536\u5230 SIGTERM \u4fe1\u53f7\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230 SIGKILL \u4fe1\u53f7 none \uff1a\u6ca1\u6709\u8fdb\u7a0b\u4f1a\u88ab\u6740\u6389\uff0c\u53ea\u662f\u6267\u884c\u670d\u52a1\u7684 stop \u547d\u4ee4 \u6211\u4eec\u9700\u8981\u5c06 KillMode \u7684\u503c\u8bbe\u7f6e\u4e3a process\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5347\u7ea7\u6216\u91cd\u542f containerd \u65f6\u4e0d\u6740\u6b7b\u73b0\u6709\u7684\u5bb9\u5668\u3002 \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8 containerd \u4e86\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ systemctl enable containerd --now \u542f\u52a8\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 containerd \u7684\u672c\u5730 CLI \u5de5\u5177 ctr \u4e86\uff0c\u6bd4\u5982\u67e5\u770b\u7248\u672c\uff1a \u914d\u7f6e \u00b6 \u6211\u4eec\u9996\u5148\u6765\u67e5\u770b\u4e0b\u4e0a\u9762\u9ed8\u8ba4\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 /etc/containerd/config.toml \uff1a disabled_plugins = [] imports = [] oom_score = 0 plugin_dir = \"\" required_plugins = [] root = \"/var/lib/containerd\" state = \"/run/containerd\" version = 2 [cgroup] path = \"\" [debug] address = \"\" format = \"\" gid = 0 level = \"\" uid = 0 [grpc] address = \"/run/containerd/containerd.sock\" gid = 0 max_recv_message_size = 16777216 max_send_message_size = 16777216 tcp_address = \"\" tcp_tls_cert = \"\" tcp_tls_key = \"\" uid = 0 [metrics] address = \"\" grpc_histogram = false [plugins] [plugins. \"io.containerd.gc.v1.scheduler\" ] deletion_threshold = 0 mutation_threshold = 100 pause_threshold = 0.02 schedule_delay = \"0s\" startup_delay = \"100ms\" [plugins. \"io.containerd.grpc.v1.cri\" ] disable_apparmor = false disable_cgroup = false disable_hugetlb_controller = true disable_proc_mount = false disable_tcp_service = true enable_selinux = false enable_tls_streaming = false ignore_image_defined_volumes = false max_concurrent_downloads = 3 max_container_log_line_size = 16384 netns_mounts_under_state_dir = false restrict_oom_score_adj = false sandbox_image = \"k8s.gcr.io/pause:3.5\" selinux_category_range = 1024 stats_collect_period = 10 stream_idle_timeout = \"4h0m0s\" stream_server_address = \"127.0.0.1\" stream_server_port = \"0\" systemd_cgroup = false tolerate_missing_hugetlb_controller = true unset_seccomp_profile = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .cni] bin_dir = \"/opt/cni/bin\" conf_dir = \"/etc/cni/net.d\" conf_template = \"\" max_conf_num = 1 [plugins. \"io.containerd.grpc.v1.cri\" .containerd] default_runtime_name = \"runc\" disable_snapshot_annotations = true discard_unpacked_layers = false no_pivot = false snapshotter = \"overlayfs\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.default_runtime] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.default_runtime.options] [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes] [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"io.containerd.runc.v2\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc.options] BinaryName = \"\" CriuImagePath = \"\" CriuPath = \"\" CriuWorkPath = \"\" IoGid = 0 IoUid = 0 NoNewKeyring = false NoPivotRoot = false Root = \"\" ShimCgroup = \"\" SystemdCgroup = false [plugins. \"io.containerd.grpc.v1.cri\" .containerd.untrusted_workload_runtime] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.untrusted_workload_runtime.options] [plugins. \"io.containerd.grpc.v1.cri\" .image_decryption] key_model = \"node\" [plugins. \"io.containerd.grpc.v1.cri\" .registry] config_path = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .registry.auths] [plugins. \"io.containerd.grpc.v1.cri\" .registry.configs] [plugins. \"io.containerd.grpc.v1.cri\" .registry.headers] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .x509_key_pair_streaming] tls_cert_file = \"\" tls_key_file = \"\" [plugins. \"io.containerd.internal.v1.opt\" ] path = \"/opt/containerd\" [plugins. \"io.containerd.internal.v1.restart\" ] interval = \"10s\" [plugins. \"io.containerd.metadata.v1.bolt\" ] content_sharing_policy = \"shared\" [plugins. \"io.containerd.monitor.v1.cgroups\" ] no_prometheus = false [plugins. \"io.containerd.runtime.v1.linux\" ] no_shim = false runtime = \"runc\" runtime_root = \"\" shim = \"containerd-shim\" shim_debug = false [plugins. \"io.containerd.runtime.v2.task\" ] platforms = [ \"linux/amd64\" ] [plugins. \"io.containerd.service.v1.diff-service\" ] default = [ \"walking\" ] [plugins. \"io.containerd.snapshotter.v1.aufs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.btrfs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.devmapper\" ] async_remove = false base_image_size = \"\" pool_name = \"\" root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.native\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.overlayfs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.zfs\" ] root_path = \"\" [proxy_plugins] [stream_processors] [stream_processors. \"io.containerd.ocicrypt.decoder.v1.tar\" ] accepts = [ \"application/vnd.oci.image.layer.v1.tar+encrypted\" ] args = [ \"--decryption-keys-path\" , \"/etc/containerd/ocicrypt/keys\" ] env = [ \"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\" ] path = \"ctd-decoder\" returns = \"application/vnd.oci.image.layer.v1.tar\" [stream_processors. \"io.containerd.ocicrypt.decoder.v1.tar.gzip\" ] accepts = [ \"application/vnd.oci.image.layer.v1.tar+gzip+encrypted\" ] args = [ \"--decryption-keys-path\" , \"/etc/containerd/ocicrypt/keys\" ] env = [ \"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\" ] path = \"ctd-decoder\" returns = \"application/vnd.oci.image.layer.v1.tar+gzip\" [timeouts] \"io.containerd.timeout.shim.cleanup\" = \"5s\" \"io.containerd.timeout.shim.load\" = \"5s\" \"io.containerd.timeout.shim.shutdown\" = \"3s\" \"io.containerd.timeout.task.state\" = \"2s\" [ttrpc] address = \"\" gid = 0 uid = 0 \u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u91cd\u70b9\u653e\u5728\u5176\u4e2d\u7684 plugins \u914d\u7f6e\u4e0a\u9762\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u9876\u7ea7\u914d\u7f6e\u5757\u7684\u547d\u540d\u90fd\u662f plugins.\"io.containerd.xxx.vx.xxx\" \u8fd9\u79cd\u5f62\u5f0f\uff0c\u6bcf\u4e00\u4e2a\u9876\u7ea7\u914d\u7f6e\u5757\u90fd\u8868\u793a\u4e00\u4e2a\u63d2\u4ef6\uff0c\u5176\u4e2d io.containerd.xxx.vx \u8868\u793a\u63d2\u4ef6\u7684\u7c7b\u578b\uff0c vx \u540e\u9762\u7684 xxx \u8868\u793a\u63d2\u4ef6\u7684 ID\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ctr \u67e5\u770b\u63d2\u4ef6\u5217\u8868\uff1a \u279c ~ ctr plugin ls ctr plugin ls TYPE ID PLATFORMS STATUS io.containerd.content.v1 content - ok io.containerd.snapshotter.v1 aufs linux/amd64 ok io.containerd.snapshotter.v1 btrfs linux/amd64 skip io.containerd.snapshotter.v1 devmapper linux/amd64 error io.containerd.snapshotter.v1 native linux/amd64 ok io.containerd.snapshotter.v1 overlayfs linux/amd64 ok io.containerd.snapshotter.v1 zfs linux/amd64 skip io.containerd.metadata.v1 bolt - ok io.containerd.differ.v1 walking linux/amd64 ok io.containerd.gc.v1 scheduler - ok io.containerd.service.v1 introspection-service - ok io.containerd.service.v1 containers-service - ok io.containerd.service.v1 content-service - ok io.containerd.service.v1 diff-service - ok io.containerd.service.v1 images-service - ok io.containerd.service.v1 leases-service - ok io.containerd.service.v1 namespaces-service - ok io.containerd.service.v1 snapshots-service - ok io.containerd.runtime.v1 linux linux/amd64 ok io.containerd.runtime.v2 task linux/amd64 ok io.containerd.monitor.v1 cgroups linux/amd64 ok io.containerd.service.v1 tasks-service - ok io.containerd.internal.v1 restart - ok io.containerd.grpc.v1 containers - ok io.containerd.grpc.v1 content - ok io.containerd.grpc.v1 diff - ok io.containerd.grpc.v1 events - ok io.containerd.grpc.v1 healthcheck - ok io.containerd.grpc.v1 images - ok io.containerd.grpc.v1 leases - ok io.containerd.grpc.v1 namespaces - ok io.containerd.internal.v1 opt - ok io.containerd.grpc.v1 snapshots - ok io.containerd.grpc.v1 tasks - ok io.containerd.grpc.v1 version - ok io.containerd.grpc.v1 cri linux/amd64 ok \u9876\u7ea7\u914d\u7f6e\u5757\u4e0b\u9762\u7684\u5b50\u914d\u7f6e\u5757\u8868\u793a\u8be5\u63d2\u4ef6\u7684\u5404\u79cd\u914d\u7f6e\uff0c\u6bd4\u5982 cri \u63d2\u4ef6\u4e0b\u9762\u5c31\u5206\u4e3a containerd\u3001cni \u548c registry \u7684\u914d\u7f6e\uff0c\u800c containerd \u4e0b\u9762\u53c8\u53ef\u4ee5\u914d\u7f6e\u5404\u79cd runtime\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u9ed8\u8ba4\u7684 runtime\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u4e3a\u955c\u50cf\u914d\u7f6e\u4e00\u4e2a\u52a0\u901f\u5668\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728 cri \u914d\u7f6e\u5757\u4e0b\u9762\u7684 registry \u914d\u7f6e\u5757\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e registry.mirrors \uff1a [plugins. \"io.containerd.grpc.v1.cri\" .registry] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"docker.io\" ] endpoint = [ \"https://bqr1dr1n.mirror.aliyuncs.com\" ] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"k8s.gcr.io\" ] endpoint = [ \"https://registry.aliyuncs.com/k8sxio\" ] registry.mirrors.\"xxx\" : \u8868\u793a\u9700\u8981\u914d\u7f6e mirror \u7684\u955c\u50cf\u4ed3\u5e93\uff0c\u4f8b\u5982 registry.mirrors.\"docker.io\" \u8868\u793a\u914d\u7f6e docker.io \u7684 mirror\u3002 endpoint : \u8868\u793a\u63d0\u4f9b mirror \u7684\u955c\u50cf\u52a0\u901f\u670d\u52a1\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u955c\u50cf\u670d\u52a1\u6765\u4f5c\u4e3a docker.io \u7684 mirror\u3002 \u53e6\u5916\u5728\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u8fd8\u6709\u4e24\u4e2a\u5173\u4e8e\u5b58\u50a8\u7684\u914d\u7f6e\u8def\u5f84\uff1a root = \"/var/lib/containerd\" state = \"/run/containerd\" \u5176\u4e2d root \u662f\u7528\u6765\u4fdd\u5b58\u6301\u4e45\u5316\u6570\u636e\uff0c\u5305\u62ec Snapshots, Content, Metadata \u4ee5\u53ca\u5404\u79cd\u63d2\u4ef6\u7684\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u76ee\u5f55\uff0cContainerd \u672c\u8eab\u4e0d\u5b58\u50a8\u4efb\u4f55\u6570\u636e\uff0c\u5b83\u7684\u6240\u6709\u529f\u80fd\u90fd\u6765\u81ea\u4e8e\u5df2\u52a0\u8f7d\u7684\u63d2\u4ef6\u3002 \u800c\u53e6\u5916\u7684 state \u662f\u7528\u6765\u4fdd\u5b58\u8fd0\u884c\u65f6\u7684\u4e34\u65f6\u6570\u636e\u7684\uff0c\u5305\u62ec sockets\u3001pid\u3001\u6302\u8f7d\u70b9\u3001\u8fd0\u884c\u65f6\u72b6\u6001\u4ee5\u53ca\u4e0d\u9700\u8981\u6301\u4e45\u5316\u7684\u63d2\u4ef6\u6570\u636e\u3002 \u4f7f\u7528 \u00b6 \u6211\u4eec\u77e5\u9053 Docker CLI \u5de5\u5177\u63d0\u4f9b\u4e86\u9700\u8981\u589e\u5f3a\u7528\u6237\u4f53\u9a8c\u7684\u529f\u80fd\uff0ccontainerd \u540c\u6837\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u5e94\u7684 CLI \u5de5\u5177\uff1a ctr \uff0c\u4e0d\u8fc7 ctr \u7684\u529f\u80fd\u6ca1\u6709 docker \u5b8c\u5584\uff0c\u4f46\u662f\u5173\u4e8e\u955c\u50cf\u548c\u5bb9\u5668\u7684\u57fa\u672c\u529f\u80fd\u90fd\u662f\u6709\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5148\u7b80\u5355\u4ecb\u7ecd\u4e0b ctr \u7684\u4f7f\u7528\u3002 \u5e2e\u52a9 \u76f4\u63a5\u8f93\u5165 ctr \u547d\u4ee4\u5373\u53ef\u83b7\u5f97\u6240\u6709\u76f8\u5173\u7684\u64cd\u4f5c\u547d\u4ee4\u4f7f\u7528\u65b9\u5f0f\uff1a \u279c ~ ctr NAME: ctr - __ _____/ /______ / ___/ __/ ___/ / /__/ /_/ / \\_ __/ \\_ _/_/ containerd CLI USAGE: ctr [ global options ] command [ command options ] [ arguments... ] VERSION: v1.5.5 DESCRIPTION: ctr is an unsupported debug and administrative client for interacting with the containerd daemon. Because it is unsupported, the commands, options, and operations are not guaranteed to be backward compatible or stable from release to release of the containerd project. COMMANDS: plugins, plugin provides information about containerd plugins version print the client and server versions containers, c, container manage containers content manage content events, event display containerd events images, image, i manage images leases manage leases namespaces, namespace, ns manage namespaces pprof provide golang pprof outputs for containerd run run a container snapshots, snapshot manage snapshots tasks, t, task manage tasks install install a new package oci OCI tools shim interact with a shim directly help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --debug enable debug output in logs --address value, -a value address for containerd ' s GRPC server ( default: \"/run/containerd/containerd.sock\" ) [ $CONTAINERD_ADDRESS ] --timeout value total timeout for ctr commands ( default: 0s ) --connect-timeout value timeout for connecting to containerd ( default: 0s ) --namespace value, -n value namespace to use with commands ( default: \"default\" ) [ $CONTAINERD_NAMESPACE ] --help, -h show help --version, -v print the version \u955c\u50cf\u64cd\u4f5c \u00b6 \u62c9\u53d6\u955c\u50cf \u62c9\u53d6\u955c\u50cf\u53ef\u4ee5\u4f7f\u7528 tr image pull \u6765\u5b8c\u6210\uff0c\u6bd4\u5982\u62c9\u53d6 Docker Hub \u5b98\u65b9\u955c\u50cf nginx:alpine \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u955c\u50cf\u5730\u5740\u9700\u8981\u52a0\u4e0a docker.io Host \u5730\u5740\uff1a \u279c ~ ctr image pull docker.io/library/nginx:alpine docker.io/library/nginx:alpine: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce: exists | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:ce6ca11a3fa7e0e6b44813901e3289212fc2f327ee8b1366176666e8fb470f24: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:9a6ac07b84eb50935293bb185d0a8696d03247f74fd7d43ea6161dc0f293f81f: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:e82f830de071ebcda58148003698f32205b7970b01c58a197ac60d6bb79241b0: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:d7c9fa7589ae28cd3306b204d5dd9a539612593e35df70f7a1d69ff7548e74cf: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:bf2b3ee132db5b4c65432e53aca69da4e609c6cb154e0d0e14b2b02259e9c1e3: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:7ce0143dee376bfd2937b499a46fb110bda3c629c195b84b1cf6e19be1a9e23b: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:3c1eaf69ff492177c34bdbf1735b6f2e5400e417f8f11b98b0da878f4ecad5fb: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:29291e31a76a7e560b9b7ad3cada56e8c18d50a96cca8a2573e4f4689d7aca77: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 11 .9s total: 8 .7 Mi ( 748 .1 KiB/s ) unpacking linux/amd64 sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce... done : 410 .86624ms \u4e5f\u53ef\u4ee5\u4f7f\u7528 --platform \u9009\u9879\u6307\u5b9a\u5bf9\u5e94\u5e73\u53f0\u7684\u955c\u50cf\u3002\u5f53\u7136\u5bf9\u5e94\u7684\u4e5f\u6709\u63a8\u9001\u955c\u50cf\u7684\u547d\u4ee4 ctr image push \uff0c\u5982\u679c\u662f\u79c1\u6709\u955c\u50cf\u5219\u5728\u63a8\u9001\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 --user \u6765\u81ea\u5b9a\u4e49\u4ed3\u5e93\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u5217\u51fa\u672c\u5730\u955c\u50cf \u279c ~ ctr image ls REF TYPE DIGEST SIZE PLATFORMS LABELS docker.io/library/nginx:alpine application/vnd.docker.distribution.manifest.list.v2+json sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce 9 .5 MiB linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x - \u279c ~ ctr image ls -q docker.io/library/nginx:alpine \u4f7f\u7528 -q\uff08--quiet\uff09 \u9009\u9879\u53ef\u4ee5\u53ea\u6253\u5370\u955c\u50cf\u540d\u79f0\u3002 \u68c0\u6d4b\u672c\u5730\u955c\u50cf \u279c ~ ctr image check REF TYPE DIGEST STATUS SIZE UNPACKED docker.io/library/nginx:alpine application/vnd.docker.distribution.manifest.list.v2+json sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce complete ( 7 /7 ) 9 .5 MiB/9.5 MiB true \u4e3b\u8981\u67e5\u770b\u5176\u4e2d\u7684 STATUS \uff0c complete \u8868\u793a\u955c\u50cf\u662f\u5b8c\u6574\u53ef\u7528\u7684\u72b6\u6001\u3002 \u91cd\u65b0\u6253\u6807\u7b7e \u540c\u6837\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u91cd\u65b0\u7ed9\u6307\u5b9a\u7684\u955c\u50cf\u6253\u4e00\u4e2a Tag\uff1a \u279c ~ ctr image tag docker.io/library/nginx:alpine harbor.k8s.local/course/nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ ctr image ls -q docker.io/library/nginx:alpine harbor.k8s.local/course/nginx:alpine \u5220\u9664\u955c\u50cf \u4e0d\u9700\u8981\u4f7f\u7528\u7684\u955c\u50cf\u4e5f\u53ef\u4ee5\u4f7f\u7528 ctr image rm \u8fdb\u884c\u5220\u9664\uff1a \u279c ~ ctr image rm harbor.k8s.local/course/nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ ctr image ls -q docker.io/library/nginx:alpine \u52a0\u4e0a --sync \u9009\u9879\u53ef\u4ee5\u540c\u6b65\u5220\u9664\u955c\u50cf\u548c\u6240\u6709\u76f8\u5173\u7684\u8d44\u6e90\u3002 \u5c06\u955c\u50cf\u6302\u8f7d\u5230\u4e3b\u673a\u76ee\u5f55 \u279c ~ ctr image mount docker.io/library/nginx:alpine /mnt sha256:c3554b2d61e3c1cffcaba4b4fa7651c644a3354efaafa2f22cb53542f6c600dc /mnt \u279c ~ tree -L 1 /mnt /mnt \u251c\u2500\u2500 bin \u251c\u2500\u2500 dev \u251c\u2500\u2500 docker-entrypoint.d \u251c\u2500\u2500 docker-entrypoint.sh \u251c\u2500\u2500 etc \u251c\u2500\u2500 home \u251c\u2500\u2500 lib \u251c\u2500\u2500 media \u251c\u2500\u2500 mnt \u251c\u2500\u2500 opt \u251c\u2500\u2500 proc \u251c\u2500\u2500 root \u251c\u2500\u2500 run \u251c\u2500\u2500 sbin \u251c\u2500\u2500 srv \u251c\u2500\u2500 sys \u251c\u2500\u2500 tmp \u251c\u2500\u2500 usr \u2514\u2500\u2500 var 18 directories, 1 file \u5c06\u955c\u50cf\u4ece\u4e3b\u673a\u76ee\u5f55\u4e0a\u5378\u8f7d \u279c ~ ctr image unmount /mnt /mnt \u5c06\u955c\u50cf\u5bfc\u51fa\u4e3a\u538b\u7f29\u5305 \u279c ~ ctr image export --all-platforms nginx.tar.gz docker.io/library/nginx:alpine \u4ece\u538b\u7f29\u5305\u5bfc\u5165\u955c\u50cf \u279c ~ ctr image import nginx.tar.gz \u76f4\u63a5\u5bfc\u5165\u53ef\u80fd\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e ctr: content digest sha256:xxxxxx not found \u7684\u9519\u8bef\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u529e\u6cd5\u9700\u8981 pull \u6240\u6709\u5e73\u53f0\u955c\u50cf\uff1a \u279c ~ ctr i pull --all-platforms docker.io/library/nginx:alpine \u279c ~ ctr i export --all-platforms nginx.tar.gz docker.io/library/nginx:alpine \u279c ~ ctr i rm docker.io/library/nginx:alpine \u279c ~ ctr i import nginx.tar.gz \u5bb9\u5668\u64cd\u4f5c \u00b6 \u5bb9\u5668\u76f8\u5173\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ctr container \u83b7\u53d6\u3002 \u521b\u5efa\u5bb9\u5668 \u279c ~ ctr container create docker.io/library/nginx:alpine nginx \u5217\u51fa\u5bb9\u5668 \u279c ~ ctr container ls CONTAINER IMAGE RUNTIME nginx docker.io/library/nginx:alpine io.containerd.runc.v2 \u540c\u6837\u53ef\u4ee5\u52a0\u4e0a -q \u9009\u9879\u7cbe\u7b80\u5217\u8868\u5185\u5bb9\uff1a \u279c ~ ctr container ls -q nginx \u67e5\u770b\u5bb9\u5668\u8be6\u7ec6\u914d\u7f6e \u7c7b\u4f3c\u4e8e docker inspect \u529f\u80fd\u3002 \u279c ~ ctr container info nginx { \"ID\" : \"nginx\" , \"Labels\" : { \"io.containerd.image.config.stop-signal\" : \"SIGQUIT\" } , \"Image\" : \"docker.io/library/nginx:alpine\" , \"Runtime\" : { \"Name\" : \"io.containerd.runc.v2\" , \"Options\" : { \"type_url\" : \"containerd.runc.v1.Options\" } } , \"SnapshotKey\" : \"nginx\" , \"Snapshotter\" : \"overlayfs\" , \"CreatedAt\" : \"2021-08-12T08:23:13.792871558Z\" , \"UpdatedAt\" : \"2021-08-12T08:23:13.792871558Z\" , \"Extensions\" : null, \"Spec\" : { ...... \u5220\u9664\u5bb9\u5668 \u279c ~ ctr container rm nginx \u279c ~ ctr container ls CONTAINER IMAGE RUNTIME \u9664\u4e86\u4f7f\u7528 rm \u5b50\u547d\u4ee4\u4e4b\u5916\u4e5f\u53ef\u4ee5\u4f7f\u7528 delete \u6216\u8005 del \u5220\u9664\u5bb9\u5668\u3002 \u4efb\u52a1 \u00b6 \u4e0a\u9762\u6211\u4eec\u901a\u8fc7 container create \u547d\u4ee4\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u5e76\u6ca1\u6709\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u53ea\u662f\u4e00\u4e2a\u9759\u6001\u7684\u5bb9\u5668\u3002\u4e00\u4e2a container \u5bf9\u8c61\u53ea\u662f\u5305\u542b\u4e86\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668\u6240\u9700\u7684\u8d44\u6e90\u53ca\u76f8\u5173\u914d\u7f6e\u6570\u636e\uff0c\u8868\u793a namespaces\u3001rootfs \u548c\u5bb9\u5668\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u521d\u59cb\u5316\u6210\u529f\u4e86\uff0c\u53ea\u662f\u7528\u6237\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u542f\u52a8\u3002 \u4e00\u4e2a\u5bb9\u5668\u771f\u6b63\u8fd0\u884c\u8d77\u6765\u662f\u7531 Task \u4efb\u52a1\u5b9e\u73b0\u7684\uff0cTask \u53ef\u4ee5\u4e3a\u5bb9\u5668\u8bbe\u7f6e\u7f51\u5361\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5de5\u5177\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u76d1\u63a7\u7b49\u3002 Task \u76f8\u5173\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ctr task \u83b7\u53d6\uff0c\u5982\u4e0b\u6211\u4eec\u901a\u8fc7 Task \u6765\u542f\u52a8\u5bb9\u5668\uff1a \u279c ~ ctr task start -d nginx /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/ \u542f\u52a8\u5bb9\u5668\u540e\u53ef\u4ee5\u901a\u8fc7 task ls \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff1a \u279c ~ ctr task ls TASK PID STATUS nginx 3630 RUNNING \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 exec \u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c\u64cd\u4f5c\uff1a \u279c ~ ctr task exec --exec-id 0 -t nginx sh / # \u4e0d\u8fc7\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u5fc5\u987b\u8981\u6307\u5b9a --exec-id \u53c2\u6570\uff0c\u8fd9\u4e2a id \u53ef\u4ee5\u968f\u4fbf\u5199\uff0c\u53ea\u8981\u552f\u4e00\u5c31\u884c\u3002 \u6682\u505c\u5bb9\u5668\uff0c\u548c docker pause \u7c7b\u4f3c\u7684\u529f\u80fd\uff1a \u279c ~ ctr task pause nginx \u6682\u505c\u540e\u5bb9\u5668\u72b6\u6001\u53d8\u6210\u4e86 PAUSED \uff1a \u279c ~ ctr task ls TASK PID STATUS nginx 3630 PAUSED \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 resume \u547d\u4ee4\u6765\u6062\u590d\u5bb9\u5668\uff1a \u279c ~ ctr task resume nginx \u279c ~ ctr task ls TASK PID STATUS nginx 3630 RUNNING \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f ctr \u6ca1\u6709 stop \u5bb9\u5668\u7684\u529f\u80fd\uff0c\u53ea\u80fd\u6682\u505c\u6216\u8005\u6740\u6b7b\u5bb9\u5668\u3002\u6740\u6b7b\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528 task kill \u547d\u4ee4: \u279c ~ ctr task kill nginx \u279c ~ ctr task ls TASK PID STATUS nginx 3630 STOPPED \u6740\u6389\u5bb9\u5668\u540e\u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u7684\u72b6\u6001\u53d8\u6210\u4e86 STOPPED \u3002\u540c\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7 task rm \u547d\u4ee4\u5220\u9664 Task\uff1a \u279c ~ ctr task rm nginx \u279c ~ ctr task ls TASK PID STATUS \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u5bb9\u5668\u7684 cgroup \u76f8\u5173\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 task metrics \u547d\u4ee4\u7528\u6765\u83b7\u53d6\u5bb9\u5668\u7684\u5185\u5b58\u3001CPU \u548c PID \u7684\u9650\u989d\u4e0e\u4f7f\u7528\u91cf\u3002 # \u91cd\u65b0\u542f\u52a8\u5bb9\u5668 \u279c ~ ctr task metrics nginx ID TIMESTAMP nginx 2021 -08-12 08 :50:46.952769941 +0000 UTC METRIC VALUE memory.usage_in_bytes 8855552 memory.limit_in_bytes 9223372036854771712 memory.stat.cache 0 cpuacct.usage 22467106 cpuacct.usage_percpu [ 2962708 860891 1163413 1915748 1058868 2888139 6159277 5458062 ] pids.current 9 pids.limit 0 \u8fd8\u53ef\u4ee5\u4f7f\u7528 task ps \u547d\u4ee4\u67e5\u770b\u5bb9\u5668\u4e2d\u6240\u6709\u8fdb\u7a0b\u5728\u5bbf\u4e3b\u673a\u4e2d\u7684 PID\uff1a \u279c ~ ctr task ps nginx PID INFO 3984 - 4029 - 4030 - 4031 - 4032 - 4033 - 4034 - 4035 - 4036 - \u279c ~ ctr task ls TASK PID STATUS nginx 3984 RUNNING \u5176\u4e2d\u7b2c\u4e00\u4e2a PID 3984 \u5c31\u662f\u6211\u4eec\u5bb9\u5668\u4e2d\u76841\u53f7\u8fdb\u7a0b\u3002 \u547d\u540d\u7a7a\u95f4 \u00b6 \u53e6\u5916 Containerd \u4e2d\u4e5f\u652f\u6301\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u67e5\u770b\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ ctr ns ls NAME LABELS default \u5982\u679c\u4e0d\u6307\u5b9a\uff0cctr \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f default \u7a7a\u95f4\u3002\u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 ns create \u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ ctr ns create test \u279c ~ ctr ns ls NAME LABELS default test \u4f7f\u7528 remove \u6216\u8005 rm \u53ef\u4ee5\u5220\u9664 namespace\uff1a \u279c ~ ctr ns rm test test \u279c ~ ctr ns ls NAME LABELS default \u6709\u4e86\u547d\u540d\u7a7a\u95f4\u540e\u5c31\u53ef\u4ee5\u5728\u64cd\u4f5c\u8d44\u6e90\u7684\u65f6\u5019\u6307\u5b9a namespace\uff0c\u6bd4\u5982\u67e5\u770b test \u547d\u540d\u7a7a\u95f4\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u5728\u64cd\u4f5c\u547d\u4ee4\u540e\u9762\u52a0\u4e0a -n test \u9009\u9879\uff1a \u279c ~ ctr -n test image ls REF TYPE DIGEST SIZE PLATFORMS LABELS \u6211\u4eec\u77e5\u9053 Docker \u5176\u5b9e\u4e5f\u662f\u9ed8\u8ba4\u8c03\u7528\u7684 containerd\uff0c\u4e8b\u5b9e\u4e0a Docker \u4f7f\u7528\u7684 containerd \u4e0b\u9762\u7684\u547d\u540d\u7a7a\u95f4\u9ed8\u8ba4\u662f moby \uff0c\u800c\u4e0d\u662f default \uff0c\u6240\u4ee5\u5047\u5982\u6211\u4eec\u6709\u7528 docker \u542f\u52a8\u5bb9\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 ctr -n moby \u6765\u5b9a\u4f4d\u4e0b\u9762\u7684\u5bb9\u5668\uff1a \u279c ~ ctr -n moby container ls \u540c\u6837 Kubernetes \u4e0b\u4f7f\u7528\u7684 containerd \u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\u662f k8s.io \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ctr -n k8s.io \u6765\u67e5\u770b Kubernetes \u4e0b\u9762\u521b\u5efa\u7684\u5bb9\u5668\u3002","title":"Containerd\u7684\u4f7f\u7528"},{"location":"Container/containerd/#containerd","text":"\u6211\u4eec\u77e5\u9053\u5f88\u65e9\u4e4b\u524d\u7684 Docker Engine \u4e2d\u5c31\u6709\u4e86 containerd\uff0c\u53ea\u4e0d\u8fc7\u73b0\u5728\u662f\u5c06 containerd \u4ece Docker Engine \u91cc\u5206\u79bb\u51fa\u6765\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u66f4\u52a0\u5f00\u653e\u3001\u7a33\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c\u57fa\u7840\u8bbe\u65bd\u3002\u5206\u79bb\u51fa\u6765\u7684 containerd \u5c06\u5177\u6709\u66f4\u591a\u7684\u529f\u80fd\uff0c\u6db5\u76d6\u6574\u4e2a\u5bb9\u5668\u8fd0\u884c\u65f6\u7ba1\u7406\u7684\u6240\u6709\u9700\u6c42\uff0c\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u652f\u6301\u3002 containerd \u662f\u4e00\u4e2a\u5de5\u4e1a\u7ea7\u6807\u51c6\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u5b83\u5f3a\u8c03 \u7b80\u5355\u6027\u3001\u5065\u58ee\u6027\u548c\u53ef\u79fb\u690d\u6027 \uff0ccontainerd \u53ef\u4ee5\u8d1f\u8d23\u5e72\u4e0b\u9762\u8fd9\u4e9b\u4e8b\u60c5\uff1a \u7ba1\u7406\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff08\u4ece\u521b\u5efa\u5bb9\u5668\u5230\u9500\u6bc1\u5bb9\u5668\uff09 \u62c9\u53d6/\u63a8\u9001\u5bb9\u5668\u955c\u50cf \u5b58\u50a8\u7ba1\u7406\uff08\u7ba1\u7406\u955c\u50cf\u53ca\u5bb9\u5668\u6570\u636e\u7684\u5b58\u50a8\uff09 \u8c03\u7528 runc \u8fd0\u884c\u5bb9\u5668\uff08\u4e0e runc \u7b49\u5bb9\u5668\u8fd0\u884c\u65f6\u4ea4\u4e92\uff09 \u7ba1\u7406\u5bb9\u5668\u7f51\u7edc\u63a5\u53e3\u53ca\u7f51\u7edc","title":"Containerd"},{"location":"Container/containerd/#_1","text":"containerd \u53ef\u7528\u4f5c Linux \u548c Windows \u7684\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5b83\u7ba1\u7406\u5176\u4e3b\u673a\u7cfb\u7edf\u5b8c\u6574\u7684\u5bb9\u5668\u751f\u547d\u5468\u671f\uff0c\u4ece\u955c\u50cf\u4f20\u8f93\u548c\u5b58\u50a8\u5230\u5bb9\u5668\u6267\u884c\u548c\u76d1\u6d4b\uff0c\u518d\u5230\u5e95\u5c42\u5b58\u50a8\u5230\u7f51\u7edc\u9644\u4ef6\u7b49\u7b49\u3002 \u4e0a\u56fe\u662f containerd \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa containerd \u91c7\u7528\u7684\u4e5f\u662f C/S \u67b6\u6784\uff0c\u670d\u52a1\u7aef\u901a\u8fc7 unix domain socket \u66b4\u9732\u4f4e\u5c42\u7684 gRPC API \u63a5\u53e3\u51fa\u53bb\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u8fd9\u4e9b API \u7ba1\u7406\u8282\u70b9\u4e0a\u7684\u5bb9\u5668\uff0c\u6bcf\u4e2a containerd \u53ea\u8d1f\u8d23\u4e00\u53f0\u673a\u5668\uff0cPull \u955c\u50cf\uff0c\u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\uff08\u542f\u52a8\u3001\u505c\u6b62\u7b49\uff09\uff0c\u7f51\u7edc\uff0c\u5b58\u50a8\u90fd\u662f\u7531 containerd \u5b8c\u6210\u3002\u5177\u4f53\u8fd0\u884c\u5bb9\u5668\u7531 runc \u8d1f\u8d23\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u662f\u7b26\u5408 OCI \u89c4\u8303\u7684\u5bb9\u5668\u90fd\u53ef\u4ee5\u652f\u6301\u3002 \u4e3a\u4e86\u89e3\u8026\uff0ccontainerd \u5c06\u7cfb\u7edf\u5212\u5206\u6210\u4e86\u4e0d\u540c\u7684\u7ec4\u4ef6\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6a21\u5757\u534f\u4f5c\u5b8c\u6210\uff08Core \u90e8\u5206\uff09\uff0c\u6bcf\u4e00\u79cd\u7c7b\u578b\u7684\u6a21\u5757\u90fd\u4ee5\u63d2\u4ef6\u7684\u5f62\u5f0f\u96c6\u6210\u5230 Containerd \u4e2d\uff0c\u800c\u4e14\u63d2\u4ef6\u4e4b\u95f4\u662f\u76f8\u4e92\u4f9d\u8d56\u7684\uff0c\u4f8b\u5982\uff0c\u4e0a\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u957f\u865a\u7ebf\u7684\u65b9\u6846\u90fd\u8868\u793a\u4e00\u79cd\u7c7b\u578b\u7684\u63d2\u4ef6\uff0c\u5305\u62ec Service Plugin\u3001Metadata Plugin\u3001GC Plugin\u3001Runtime Plugin \u7b49\uff0c\u5176\u4e2d Service Plugin \u53c8\u4f1a\u4f9d\u8d56 Metadata Plugin\u3001GC Plugin \u548c Runtime Plugin\u3002\u6bcf\u4e00\u4e2a\u5c0f\u65b9\u6846\u90fd\u8868\u793a\u4e00\u4e2a\u7ec6\u5206\u7684\u63d2\u4ef6\uff0c\u4f8b\u5982 Metadata Plugin \u4f9d\u8d56 Containers Plugin\u3001Content Plugin \u7b49\u3002\u6bd4\u5982: Content Plugin: \u63d0\u4f9b\u5bf9\u955c\u50cf\u4e2d\u53ef\u5bfb\u5740\u5185\u5bb9\u7684\u8bbf\u95ee\uff0c\u6240\u6709\u4e0d\u53ef\u53d8\u7684\u5185\u5bb9\u90fd\u88ab\u5b58\u50a8\u5728\u8fd9\u91cc\u3002 Snapshot Plugin: \u7528\u6765\u7ba1\u7406\u5bb9\u5668\u955c\u50cf\u7684\u6587\u4ef6\u7cfb\u7edf\u5feb\u7167\uff0c\u955c\u50cf\u4e2d\u7684\u6bcf\u4e00\u5c42\u90fd\u4f1a\u88ab\u89e3\u538b\u6210\u6587\u4ef6\u7cfb\u7edf\u5feb\u7167\uff0c\u7c7b\u4f3c\u4e8eDocker \u4e2d\u7684 graphdriver\u3002 \u603b\u4f53\u6765\u770b containerd \u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u5927\u5757\uff1aStorage\u3001Metadata \u548c Runtime\u3002","title":"\u67b6\u6784"},{"location":"Container/containerd/#_2","text":"\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u7cfb\u7edf\u662f CentOS 7.6 \uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5 seccomp \u4f9d\u8d56\uff1a \u279c ~ rpm -qa | grep libseccomp libseccomp-2.3.1-4.el7.x86_64 # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 libseccomp \u5305\u5219\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56 \u279c ~ yum install wget -y \u279c ~ wget http://mirror.centos.org/centos/7/os/x86_64/Packages/libseccomp-2.3.1-4.el7.x86_64.rpm \u279c ~ yum install libseccomp-2.3.1-4.el7.x86_64.rpm -y \u7531\u4e8e containerd \u9700\u8981\u8c03\u7528 runc\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5148\u5b89\u88c5 runc\uff0c\u4e0d\u8fc7 containerd \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5305\u542b\u76f8\u5173\u4f9d\u8d56\u7684\u538b\u7f29\u5305 cri-containerd-cni-${VERSION}.${OS}-${ARCH}.tar.gz \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5305\u6765\u8fdb\u884c\u5b89\u88c5\u3002\u9996\u5148\u4ece release \u9875\u9762 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u538b\u7f29\u5305\uff0c\u5f53\u524d\u4e3a 1.5.5 \u7248\u672c\uff08\u6700\u65b0\u76841.5.7\u7248\u672c\u5728CentOS7\u4e0b\u9762\u6267\u884c runc \u4f1a\u62a5\u9519\uff1a https://github.com/containerd/containerd/issues/6091 \uff09\uff1a \u279c ~ wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u53ef\u4ee5\u901a\u8fc7 tar \u7684 -t \u9009\u9879\u76f4\u63a5\u770b\u5230\u538b\u7f29\u5305\u4e2d\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1a \u279c ~ tar -tf cri-containerd-cni-1.5.5-linux-amd64.tar.gz etc/ etc/cni/ etc/cni/net.d/ etc/cni/net.d/10-containerd-net.conflist etc/crictl.yaml etc/systemd/ etc/systemd/system/ etc/systemd/system/containerd.service usr/ usr/local/ usr/local/bin/ usr/local/bin/containerd-shim-runc-v2 usr/local/bin/ctr usr/local/bin/containerd-shim usr/local/bin/containerd-shim-runc-v1 usr/local/bin/crictl usr/local/bin/critest usr/local/bin/containerd usr/local/sbin/ usr/local/sbin/runc opt/ opt/cni/ opt/cni/bin/ opt/cni/bin/vlan opt/cni/bin/host-local opt/cni/bin/flannel opt/cni/bin/bridge opt/cni/bin/host-device opt/cni/bin/tuning opt/cni/bin/firewall opt/cni/bin/bandwidth opt/cni/bin/ipvlan opt/cni/bin/sbr opt/cni/bin/dhcp opt/cni/bin/portmap opt/cni/bin/ptp opt/cni/bin/static opt/cni/bin/macvlan opt/cni/bin/loopback opt/containerd/ opt/containerd/cluster/ opt/containerd/cluster/version opt/containerd/cluster/gce/ opt/containerd/cluster/gce/cni.template opt/containerd/cluster/gce/configure.sh opt/containerd/cluster/gce/cloud-init/ opt/containerd/cluster/gce/cloud-init/master.yaml opt/containerd/cluster/gce/cloud-init/node.yaml opt/containerd/cluster/gce/env \u76f4\u63a5\u5c06\u538b\u7f29\u5305\u89e3\u538b\u5230\u7cfb\u7edf\u7684\u5404\u4e2a\u76ee\u5f55\u4e2d\uff1a \u279c ~ tar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u5f53\u7136\u8981\u8bb0\u5f97\u5c06 /usr/local/bin \u548c /usr/local/sbin \u8ffd\u52a0\u5230 ~/.bashrc \u6587\u4ef6\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff1a export PATH = $PATH :/usr/local/bin:/usr/local/sbin \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4f7f\u5176\u7acb\u5373\u751f\u6548\uff1a \u279c ~ source ~/.bashrc containerd \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a /etc/containerd/config.toml \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u914d\u7f6e\uff1a \u279c ~ mkdir -p /etc/containerd \u279c ~ containerd config default > /etc/containerd/config.toml \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u4e0b\u8f7d\u7684 containerd \u538b\u7f29\u5305\u4e2d\u5305\u542b\u4e00\u4e2a etc/systemd/system/containerd.service \u7684\u6587\u4ef6\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 systemd \u6765\u914d\u7f6e containerd \u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u4e86\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a \u279c ~ cat /etc/systemd/system/containerd.service [ Unit ] Description = containerd container runtime Documentation = https://containerd.io After = network.target local-fs.target [ Service ] ExecStartPre = -/sbin/modprobe overlay ExecStart = /usr/local/bin/containerd Type = notify Delegate = yes KillMode = process Restart = always RestartSec = 5 # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNPROC = infinity LimitCORE = infinity LimitNOFILE = 1048576 # Comment TasksMax if your systemd version does not supports it. # Only systemd 226 and above support this version. TasksMax = infinity OOMScoreAdjust = -999 [ Install ] WantedBy = multi-user.target \u8fd9\u91cc\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff1a Delegate : \u8fd9\u4e2a\u9009\u9879\u5141\u8bb8 containerd \u4ee5\u53ca\u8fd0\u884c\u65f6\u81ea\u5df1\u7ba1\u7406\u81ea\u5df1\u521b\u5efa\u5bb9\u5668\u7684 cgroups\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u9009\u9879\uff0csystemd \u5c31\u4f1a\u5c06\u8fdb\u7a0b\u79fb\u5230\u81ea\u5df1\u7684 cgroups \u4e2d\uff0c\u4ece\u800c\u5bfc\u81f4 containerd \u65e0\u6cd5\u6b63\u786e\u83b7\u53d6\u5bb9\u5668\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 KillMode : \u8fd9\u4e2a\u9009\u9879\u7528\u6765\u5904\u7406 containerd \u8fdb\u7a0b\u88ab\u6740\u6b7b\u7684\u65b9\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csystemd \u4f1a\u5728\u8fdb\u7a0b\u7684 cgroup \u4e2d\u67e5\u627e\u5e76\u6740\u6b7b containerd \u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u3002KillMode \u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u7684\u503c\u5982\u4e0b\u3002 control-group \uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u5f53\u524d\u63a7\u5236\u7ec4\u91cc\u9762\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\uff0c\u90fd\u4f1a\u88ab\u6740\u6389 process \uff1a\u53ea\u6740\u4e3b\u8fdb\u7a0b mixed \uff1a\u4e3b\u8fdb\u7a0b\u5c06\u6536\u5230 SIGTERM \u4fe1\u53f7\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230 SIGKILL \u4fe1\u53f7 none \uff1a\u6ca1\u6709\u8fdb\u7a0b\u4f1a\u88ab\u6740\u6389\uff0c\u53ea\u662f\u6267\u884c\u670d\u52a1\u7684 stop \u547d\u4ee4 \u6211\u4eec\u9700\u8981\u5c06 KillMode \u7684\u503c\u8bbe\u7f6e\u4e3a process\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5347\u7ea7\u6216\u91cd\u542f containerd \u65f6\u4e0d\u6740\u6b7b\u73b0\u6709\u7684\u5bb9\u5668\u3002 \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8 containerd \u4e86\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ systemctl enable containerd --now \u542f\u52a8\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 containerd \u7684\u672c\u5730 CLI \u5de5\u5177 ctr \u4e86\uff0c\u6bd4\u5982\u67e5\u770b\u7248\u672c\uff1a","title":"\u5b89\u88c5"},{"location":"Container/containerd/#_3","text":"\u6211\u4eec\u9996\u5148\u6765\u67e5\u770b\u4e0b\u4e0a\u9762\u9ed8\u8ba4\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 /etc/containerd/config.toml \uff1a disabled_plugins = [] imports = [] oom_score = 0 plugin_dir = \"\" required_plugins = [] root = \"/var/lib/containerd\" state = \"/run/containerd\" version = 2 [cgroup] path = \"\" [debug] address = \"\" format = \"\" gid = 0 level = \"\" uid = 0 [grpc] address = \"/run/containerd/containerd.sock\" gid = 0 max_recv_message_size = 16777216 max_send_message_size = 16777216 tcp_address = \"\" tcp_tls_cert = \"\" tcp_tls_key = \"\" uid = 0 [metrics] address = \"\" grpc_histogram = false [plugins] [plugins. \"io.containerd.gc.v1.scheduler\" ] deletion_threshold = 0 mutation_threshold = 100 pause_threshold = 0.02 schedule_delay = \"0s\" startup_delay = \"100ms\" [plugins. \"io.containerd.grpc.v1.cri\" ] disable_apparmor = false disable_cgroup = false disable_hugetlb_controller = true disable_proc_mount = false disable_tcp_service = true enable_selinux = false enable_tls_streaming = false ignore_image_defined_volumes = false max_concurrent_downloads = 3 max_container_log_line_size = 16384 netns_mounts_under_state_dir = false restrict_oom_score_adj = false sandbox_image = \"k8s.gcr.io/pause:3.5\" selinux_category_range = 1024 stats_collect_period = 10 stream_idle_timeout = \"4h0m0s\" stream_server_address = \"127.0.0.1\" stream_server_port = \"0\" systemd_cgroup = false tolerate_missing_hugetlb_controller = true unset_seccomp_profile = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .cni] bin_dir = \"/opt/cni/bin\" conf_dir = \"/etc/cni/net.d\" conf_template = \"\" max_conf_num = 1 [plugins. \"io.containerd.grpc.v1.cri\" .containerd] default_runtime_name = \"runc\" disable_snapshot_annotations = true discard_unpacked_layers = false no_pivot = false snapshotter = \"overlayfs\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.default_runtime] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.default_runtime.options] [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes] [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"io.containerd.runc.v2\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc.options] BinaryName = \"\" CriuImagePath = \"\" CriuPath = \"\" CriuWorkPath = \"\" IoGid = 0 IoUid = 0 NoNewKeyring = false NoPivotRoot = false Root = \"\" ShimCgroup = \"\" SystemdCgroup = false [plugins. \"io.containerd.grpc.v1.cri\" .containerd.untrusted_workload_runtime] base_runtime_spec = \"\" container_annotations = [] pod_annotations = [] privileged_without_host_devices = false runtime_engine = \"\" runtime_root = \"\" runtime_type = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .containerd.untrusted_workload_runtime.options] [plugins. \"io.containerd.grpc.v1.cri\" .image_decryption] key_model = \"node\" [plugins. \"io.containerd.grpc.v1.cri\" .registry] config_path = \"\" [plugins. \"io.containerd.grpc.v1.cri\" .registry.auths] [plugins. \"io.containerd.grpc.v1.cri\" .registry.configs] [plugins. \"io.containerd.grpc.v1.cri\" .registry.headers] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .x509_key_pair_streaming] tls_cert_file = \"\" tls_key_file = \"\" [plugins. \"io.containerd.internal.v1.opt\" ] path = \"/opt/containerd\" [plugins. \"io.containerd.internal.v1.restart\" ] interval = \"10s\" [plugins. \"io.containerd.metadata.v1.bolt\" ] content_sharing_policy = \"shared\" [plugins. \"io.containerd.monitor.v1.cgroups\" ] no_prometheus = false [plugins. \"io.containerd.runtime.v1.linux\" ] no_shim = false runtime = \"runc\" runtime_root = \"\" shim = \"containerd-shim\" shim_debug = false [plugins. \"io.containerd.runtime.v2.task\" ] platforms = [ \"linux/amd64\" ] [plugins. \"io.containerd.service.v1.diff-service\" ] default = [ \"walking\" ] [plugins. \"io.containerd.snapshotter.v1.aufs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.btrfs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.devmapper\" ] async_remove = false base_image_size = \"\" pool_name = \"\" root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.native\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.overlayfs\" ] root_path = \"\" [plugins. \"io.containerd.snapshotter.v1.zfs\" ] root_path = \"\" [proxy_plugins] [stream_processors] [stream_processors. \"io.containerd.ocicrypt.decoder.v1.tar\" ] accepts = [ \"application/vnd.oci.image.layer.v1.tar+encrypted\" ] args = [ \"--decryption-keys-path\" , \"/etc/containerd/ocicrypt/keys\" ] env = [ \"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\" ] path = \"ctd-decoder\" returns = \"application/vnd.oci.image.layer.v1.tar\" [stream_processors. \"io.containerd.ocicrypt.decoder.v1.tar.gzip\" ] accepts = [ \"application/vnd.oci.image.layer.v1.tar+gzip+encrypted\" ] args = [ \"--decryption-keys-path\" , \"/etc/containerd/ocicrypt/keys\" ] env = [ \"OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf\" ] path = \"ctd-decoder\" returns = \"application/vnd.oci.image.layer.v1.tar+gzip\" [timeouts] \"io.containerd.timeout.shim.cleanup\" = \"5s\" \"io.containerd.timeout.shim.load\" = \"5s\" \"io.containerd.timeout.shim.shutdown\" = \"3s\" \"io.containerd.timeout.task.state\" = \"2s\" [ttrpc] address = \"\" gid = 0 uid = 0 \u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u91cd\u70b9\u653e\u5728\u5176\u4e2d\u7684 plugins \u914d\u7f6e\u4e0a\u9762\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u9876\u7ea7\u914d\u7f6e\u5757\u7684\u547d\u540d\u90fd\u662f plugins.\"io.containerd.xxx.vx.xxx\" \u8fd9\u79cd\u5f62\u5f0f\uff0c\u6bcf\u4e00\u4e2a\u9876\u7ea7\u914d\u7f6e\u5757\u90fd\u8868\u793a\u4e00\u4e2a\u63d2\u4ef6\uff0c\u5176\u4e2d io.containerd.xxx.vx \u8868\u793a\u63d2\u4ef6\u7684\u7c7b\u578b\uff0c vx \u540e\u9762\u7684 xxx \u8868\u793a\u63d2\u4ef6\u7684 ID\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ctr \u67e5\u770b\u63d2\u4ef6\u5217\u8868\uff1a \u279c ~ ctr plugin ls ctr plugin ls TYPE ID PLATFORMS STATUS io.containerd.content.v1 content - ok io.containerd.snapshotter.v1 aufs linux/amd64 ok io.containerd.snapshotter.v1 btrfs linux/amd64 skip io.containerd.snapshotter.v1 devmapper linux/amd64 error io.containerd.snapshotter.v1 native linux/amd64 ok io.containerd.snapshotter.v1 overlayfs linux/amd64 ok io.containerd.snapshotter.v1 zfs linux/amd64 skip io.containerd.metadata.v1 bolt - ok io.containerd.differ.v1 walking linux/amd64 ok io.containerd.gc.v1 scheduler - ok io.containerd.service.v1 introspection-service - ok io.containerd.service.v1 containers-service - ok io.containerd.service.v1 content-service - ok io.containerd.service.v1 diff-service - ok io.containerd.service.v1 images-service - ok io.containerd.service.v1 leases-service - ok io.containerd.service.v1 namespaces-service - ok io.containerd.service.v1 snapshots-service - ok io.containerd.runtime.v1 linux linux/amd64 ok io.containerd.runtime.v2 task linux/amd64 ok io.containerd.monitor.v1 cgroups linux/amd64 ok io.containerd.service.v1 tasks-service - ok io.containerd.internal.v1 restart - ok io.containerd.grpc.v1 containers - ok io.containerd.grpc.v1 content - ok io.containerd.grpc.v1 diff - ok io.containerd.grpc.v1 events - ok io.containerd.grpc.v1 healthcheck - ok io.containerd.grpc.v1 images - ok io.containerd.grpc.v1 leases - ok io.containerd.grpc.v1 namespaces - ok io.containerd.internal.v1 opt - ok io.containerd.grpc.v1 snapshots - ok io.containerd.grpc.v1 tasks - ok io.containerd.grpc.v1 version - ok io.containerd.grpc.v1 cri linux/amd64 ok \u9876\u7ea7\u914d\u7f6e\u5757\u4e0b\u9762\u7684\u5b50\u914d\u7f6e\u5757\u8868\u793a\u8be5\u63d2\u4ef6\u7684\u5404\u79cd\u914d\u7f6e\uff0c\u6bd4\u5982 cri \u63d2\u4ef6\u4e0b\u9762\u5c31\u5206\u4e3a containerd\u3001cni \u548c registry \u7684\u914d\u7f6e\uff0c\u800c containerd \u4e0b\u9762\u53c8\u53ef\u4ee5\u914d\u7f6e\u5404\u79cd runtime\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u9ed8\u8ba4\u7684 runtime\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u4e3a\u955c\u50cf\u914d\u7f6e\u4e00\u4e2a\u52a0\u901f\u5668\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728 cri \u914d\u7f6e\u5757\u4e0b\u9762\u7684 registry \u914d\u7f6e\u5757\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e registry.mirrors \uff1a [plugins. \"io.containerd.grpc.v1.cri\" .registry] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"docker.io\" ] endpoint = [ \"https://bqr1dr1n.mirror.aliyuncs.com\" ] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"k8s.gcr.io\" ] endpoint = [ \"https://registry.aliyuncs.com/k8sxio\" ] registry.mirrors.\"xxx\" : \u8868\u793a\u9700\u8981\u914d\u7f6e mirror \u7684\u955c\u50cf\u4ed3\u5e93\uff0c\u4f8b\u5982 registry.mirrors.\"docker.io\" \u8868\u793a\u914d\u7f6e docker.io \u7684 mirror\u3002 endpoint : \u8868\u793a\u63d0\u4f9b mirror \u7684\u955c\u50cf\u52a0\u901f\u670d\u52a1\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u955c\u50cf\u670d\u52a1\u6765\u4f5c\u4e3a docker.io \u7684 mirror\u3002 \u53e6\u5916\u5728\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u8fd8\u6709\u4e24\u4e2a\u5173\u4e8e\u5b58\u50a8\u7684\u914d\u7f6e\u8def\u5f84\uff1a root = \"/var/lib/containerd\" state = \"/run/containerd\" \u5176\u4e2d root \u662f\u7528\u6765\u4fdd\u5b58\u6301\u4e45\u5316\u6570\u636e\uff0c\u5305\u62ec Snapshots, Content, Metadata \u4ee5\u53ca\u5404\u79cd\u63d2\u4ef6\u7684\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u76ee\u5f55\uff0cContainerd \u672c\u8eab\u4e0d\u5b58\u50a8\u4efb\u4f55\u6570\u636e\uff0c\u5b83\u7684\u6240\u6709\u529f\u80fd\u90fd\u6765\u81ea\u4e8e\u5df2\u52a0\u8f7d\u7684\u63d2\u4ef6\u3002 \u800c\u53e6\u5916\u7684 state \u662f\u7528\u6765\u4fdd\u5b58\u8fd0\u884c\u65f6\u7684\u4e34\u65f6\u6570\u636e\u7684\uff0c\u5305\u62ec sockets\u3001pid\u3001\u6302\u8f7d\u70b9\u3001\u8fd0\u884c\u65f6\u72b6\u6001\u4ee5\u53ca\u4e0d\u9700\u8981\u6301\u4e45\u5316\u7684\u63d2\u4ef6\u6570\u636e\u3002","title":"\u914d\u7f6e"},{"location":"Container/containerd/#_4","text":"\u6211\u4eec\u77e5\u9053 Docker CLI \u5de5\u5177\u63d0\u4f9b\u4e86\u9700\u8981\u589e\u5f3a\u7528\u6237\u4f53\u9a8c\u7684\u529f\u80fd\uff0ccontainerd \u540c\u6837\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u5e94\u7684 CLI \u5de5\u5177\uff1a ctr \uff0c\u4e0d\u8fc7 ctr \u7684\u529f\u80fd\u6ca1\u6709 docker \u5b8c\u5584\uff0c\u4f46\u662f\u5173\u4e8e\u955c\u50cf\u548c\u5bb9\u5668\u7684\u57fa\u672c\u529f\u80fd\u90fd\u662f\u6709\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5148\u7b80\u5355\u4ecb\u7ecd\u4e0b ctr \u7684\u4f7f\u7528\u3002 \u5e2e\u52a9 \u76f4\u63a5\u8f93\u5165 ctr \u547d\u4ee4\u5373\u53ef\u83b7\u5f97\u6240\u6709\u76f8\u5173\u7684\u64cd\u4f5c\u547d\u4ee4\u4f7f\u7528\u65b9\u5f0f\uff1a \u279c ~ ctr NAME: ctr - __ _____/ /______ / ___/ __/ ___/ / /__/ /_/ / \\_ __/ \\_ _/_/ containerd CLI USAGE: ctr [ global options ] command [ command options ] [ arguments... ] VERSION: v1.5.5 DESCRIPTION: ctr is an unsupported debug and administrative client for interacting with the containerd daemon. Because it is unsupported, the commands, options, and operations are not guaranteed to be backward compatible or stable from release to release of the containerd project. COMMANDS: plugins, plugin provides information about containerd plugins version print the client and server versions containers, c, container manage containers content manage content events, event display containerd events images, image, i manage images leases manage leases namespaces, namespace, ns manage namespaces pprof provide golang pprof outputs for containerd run run a container snapshots, snapshot manage snapshots tasks, t, task manage tasks install install a new package oci OCI tools shim interact with a shim directly help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --debug enable debug output in logs --address value, -a value address for containerd ' s GRPC server ( default: \"/run/containerd/containerd.sock\" ) [ $CONTAINERD_ADDRESS ] --timeout value total timeout for ctr commands ( default: 0s ) --connect-timeout value timeout for connecting to containerd ( default: 0s ) --namespace value, -n value namespace to use with commands ( default: \"default\" ) [ $CONTAINERD_NAMESPACE ] --help, -h show help --version, -v print the version","title":"\u4f7f\u7528"},{"location":"Container/containerd/#_5","text":"\u62c9\u53d6\u955c\u50cf \u62c9\u53d6\u955c\u50cf\u53ef\u4ee5\u4f7f\u7528 tr image pull \u6765\u5b8c\u6210\uff0c\u6bd4\u5982\u62c9\u53d6 Docker Hub \u5b98\u65b9\u955c\u50cf nginx:alpine \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u955c\u50cf\u5730\u5740\u9700\u8981\u52a0\u4e0a docker.io Host \u5730\u5740\uff1a \u279c ~ ctr image pull docker.io/library/nginx:alpine docker.io/library/nginx:alpine: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce: exists | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:ce6ca11a3fa7e0e6b44813901e3289212fc2f327ee8b1366176666e8fb470f24: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:9a6ac07b84eb50935293bb185d0a8696d03247f74fd7d43ea6161dc0f293f81f: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:e82f830de071ebcda58148003698f32205b7970b01c58a197ac60d6bb79241b0: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:d7c9fa7589ae28cd3306b204d5dd9a539612593e35df70f7a1d69ff7548e74cf: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:bf2b3ee132db5b4c65432e53aca69da4e609c6cb154e0d0e14b2b02259e9c1e3: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:7ce0143dee376bfd2937b499a46fb110bda3c629c195b84b1cf6e19be1a9e23b: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:3c1eaf69ff492177c34bdbf1735b6f2e5400e417f8f11b98b0da878f4ecad5fb: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:29291e31a76a7e560b9b7ad3cada56e8c18d50a96cca8a2573e4f4689d7aca77: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 11 .9s total: 8 .7 Mi ( 748 .1 KiB/s ) unpacking linux/amd64 sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce... done : 410 .86624ms \u4e5f\u53ef\u4ee5\u4f7f\u7528 --platform \u9009\u9879\u6307\u5b9a\u5bf9\u5e94\u5e73\u53f0\u7684\u955c\u50cf\u3002\u5f53\u7136\u5bf9\u5e94\u7684\u4e5f\u6709\u63a8\u9001\u955c\u50cf\u7684\u547d\u4ee4 ctr image push \uff0c\u5982\u679c\u662f\u79c1\u6709\u955c\u50cf\u5219\u5728\u63a8\u9001\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 --user \u6765\u81ea\u5b9a\u4e49\u4ed3\u5e93\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u5217\u51fa\u672c\u5730\u955c\u50cf \u279c ~ ctr image ls REF TYPE DIGEST SIZE PLATFORMS LABELS docker.io/library/nginx:alpine application/vnd.docker.distribution.manifest.list.v2+json sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce 9 .5 MiB linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x - \u279c ~ ctr image ls -q docker.io/library/nginx:alpine \u4f7f\u7528 -q\uff08--quiet\uff09 \u9009\u9879\u53ef\u4ee5\u53ea\u6253\u5370\u955c\u50cf\u540d\u79f0\u3002 \u68c0\u6d4b\u672c\u5730\u955c\u50cf \u279c ~ ctr image check REF TYPE DIGEST STATUS SIZE UNPACKED docker.io/library/nginx:alpine application/vnd.docker.distribution.manifest.list.v2+json sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce complete ( 7 /7 ) 9 .5 MiB/9.5 MiB true \u4e3b\u8981\u67e5\u770b\u5176\u4e2d\u7684 STATUS \uff0c complete \u8868\u793a\u955c\u50cf\u662f\u5b8c\u6574\u53ef\u7528\u7684\u72b6\u6001\u3002 \u91cd\u65b0\u6253\u6807\u7b7e \u540c\u6837\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u91cd\u65b0\u7ed9\u6307\u5b9a\u7684\u955c\u50cf\u6253\u4e00\u4e2a Tag\uff1a \u279c ~ ctr image tag docker.io/library/nginx:alpine harbor.k8s.local/course/nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ ctr image ls -q docker.io/library/nginx:alpine harbor.k8s.local/course/nginx:alpine \u5220\u9664\u955c\u50cf \u4e0d\u9700\u8981\u4f7f\u7528\u7684\u955c\u50cf\u4e5f\u53ef\u4ee5\u4f7f\u7528 ctr image rm \u8fdb\u884c\u5220\u9664\uff1a \u279c ~ ctr image rm harbor.k8s.local/course/nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ ctr image ls -q docker.io/library/nginx:alpine \u52a0\u4e0a --sync \u9009\u9879\u53ef\u4ee5\u540c\u6b65\u5220\u9664\u955c\u50cf\u548c\u6240\u6709\u76f8\u5173\u7684\u8d44\u6e90\u3002 \u5c06\u955c\u50cf\u6302\u8f7d\u5230\u4e3b\u673a\u76ee\u5f55 \u279c ~ ctr image mount docker.io/library/nginx:alpine /mnt sha256:c3554b2d61e3c1cffcaba4b4fa7651c644a3354efaafa2f22cb53542f6c600dc /mnt \u279c ~ tree -L 1 /mnt /mnt \u251c\u2500\u2500 bin \u251c\u2500\u2500 dev \u251c\u2500\u2500 docker-entrypoint.d \u251c\u2500\u2500 docker-entrypoint.sh \u251c\u2500\u2500 etc \u251c\u2500\u2500 home \u251c\u2500\u2500 lib \u251c\u2500\u2500 media \u251c\u2500\u2500 mnt \u251c\u2500\u2500 opt \u251c\u2500\u2500 proc \u251c\u2500\u2500 root \u251c\u2500\u2500 run \u251c\u2500\u2500 sbin \u251c\u2500\u2500 srv \u251c\u2500\u2500 sys \u251c\u2500\u2500 tmp \u251c\u2500\u2500 usr \u2514\u2500\u2500 var 18 directories, 1 file \u5c06\u955c\u50cf\u4ece\u4e3b\u673a\u76ee\u5f55\u4e0a\u5378\u8f7d \u279c ~ ctr image unmount /mnt /mnt \u5c06\u955c\u50cf\u5bfc\u51fa\u4e3a\u538b\u7f29\u5305 \u279c ~ ctr image export --all-platforms nginx.tar.gz docker.io/library/nginx:alpine \u4ece\u538b\u7f29\u5305\u5bfc\u5165\u955c\u50cf \u279c ~ ctr image import nginx.tar.gz \u76f4\u63a5\u5bfc\u5165\u53ef\u80fd\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e ctr: content digest sha256:xxxxxx not found \u7684\u9519\u8bef\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u529e\u6cd5\u9700\u8981 pull \u6240\u6709\u5e73\u53f0\u955c\u50cf\uff1a \u279c ~ ctr i pull --all-platforms docker.io/library/nginx:alpine \u279c ~ ctr i export --all-platforms nginx.tar.gz docker.io/library/nginx:alpine \u279c ~ ctr i rm docker.io/library/nginx:alpine \u279c ~ ctr i import nginx.tar.gz","title":"\u955c\u50cf\u64cd\u4f5c"},{"location":"Container/containerd/#_6","text":"\u5bb9\u5668\u76f8\u5173\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ctr container \u83b7\u53d6\u3002 \u521b\u5efa\u5bb9\u5668 \u279c ~ ctr container create docker.io/library/nginx:alpine nginx \u5217\u51fa\u5bb9\u5668 \u279c ~ ctr container ls CONTAINER IMAGE RUNTIME nginx docker.io/library/nginx:alpine io.containerd.runc.v2 \u540c\u6837\u53ef\u4ee5\u52a0\u4e0a -q \u9009\u9879\u7cbe\u7b80\u5217\u8868\u5185\u5bb9\uff1a \u279c ~ ctr container ls -q nginx \u67e5\u770b\u5bb9\u5668\u8be6\u7ec6\u914d\u7f6e \u7c7b\u4f3c\u4e8e docker inspect \u529f\u80fd\u3002 \u279c ~ ctr container info nginx { \"ID\" : \"nginx\" , \"Labels\" : { \"io.containerd.image.config.stop-signal\" : \"SIGQUIT\" } , \"Image\" : \"docker.io/library/nginx:alpine\" , \"Runtime\" : { \"Name\" : \"io.containerd.runc.v2\" , \"Options\" : { \"type_url\" : \"containerd.runc.v1.Options\" } } , \"SnapshotKey\" : \"nginx\" , \"Snapshotter\" : \"overlayfs\" , \"CreatedAt\" : \"2021-08-12T08:23:13.792871558Z\" , \"UpdatedAt\" : \"2021-08-12T08:23:13.792871558Z\" , \"Extensions\" : null, \"Spec\" : { ...... \u5220\u9664\u5bb9\u5668 \u279c ~ ctr container rm nginx \u279c ~ ctr container ls CONTAINER IMAGE RUNTIME \u9664\u4e86\u4f7f\u7528 rm \u5b50\u547d\u4ee4\u4e4b\u5916\u4e5f\u53ef\u4ee5\u4f7f\u7528 delete \u6216\u8005 del \u5220\u9664\u5bb9\u5668\u3002","title":"\u5bb9\u5668\u64cd\u4f5c"},{"location":"Container/containerd/#_7","text":"\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 container create \u547d\u4ee4\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u5e76\u6ca1\u6709\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u53ea\u662f\u4e00\u4e2a\u9759\u6001\u7684\u5bb9\u5668\u3002\u4e00\u4e2a container \u5bf9\u8c61\u53ea\u662f\u5305\u542b\u4e86\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668\u6240\u9700\u7684\u8d44\u6e90\u53ca\u76f8\u5173\u914d\u7f6e\u6570\u636e\uff0c\u8868\u793a namespaces\u3001rootfs \u548c\u5bb9\u5668\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u521d\u59cb\u5316\u6210\u529f\u4e86\uff0c\u53ea\u662f\u7528\u6237\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u542f\u52a8\u3002 \u4e00\u4e2a\u5bb9\u5668\u771f\u6b63\u8fd0\u884c\u8d77\u6765\u662f\u7531 Task \u4efb\u52a1\u5b9e\u73b0\u7684\uff0cTask \u53ef\u4ee5\u4e3a\u5bb9\u5668\u8bbe\u7f6e\u7f51\u5361\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5de5\u5177\u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u76d1\u63a7\u7b49\u3002 Task \u76f8\u5173\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7 ctr task \u83b7\u53d6\uff0c\u5982\u4e0b\u6211\u4eec\u901a\u8fc7 Task \u6765\u542f\u52a8\u5bb9\u5668\uff1a \u279c ~ ctr task start -d nginx /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/ \u542f\u52a8\u5bb9\u5668\u540e\u53ef\u4ee5\u901a\u8fc7 task ls \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff1a \u279c ~ ctr task ls TASK PID STATUS nginx 3630 RUNNING \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 exec \u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c\u64cd\u4f5c\uff1a \u279c ~ ctr task exec --exec-id 0 -t nginx sh / # \u4e0d\u8fc7\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u5fc5\u987b\u8981\u6307\u5b9a --exec-id \u53c2\u6570\uff0c\u8fd9\u4e2a id \u53ef\u4ee5\u968f\u4fbf\u5199\uff0c\u53ea\u8981\u552f\u4e00\u5c31\u884c\u3002 \u6682\u505c\u5bb9\u5668\uff0c\u548c docker pause \u7c7b\u4f3c\u7684\u529f\u80fd\uff1a \u279c ~ ctr task pause nginx \u6682\u505c\u540e\u5bb9\u5668\u72b6\u6001\u53d8\u6210\u4e86 PAUSED \uff1a \u279c ~ ctr task ls TASK PID STATUS nginx 3630 PAUSED \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 resume \u547d\u4ee4\u6765\u6062\u590d\u5bb9\u5668\uff1a \u279c ~ ctr task resume nginx \u279c ~ ctr task ls TASK PID STATUS nginx 3630 RUNNING \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f ctr \u6ca1\u6709 stop \u5bb9\u5668\u7684\u529f\u80fd\uff0c\u53ea\u80fd\u6682\u505c\u6216\u8005\u6740\u6b7b\u5bb9\u5668\u3002\u6740\u6b7b\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528 task kill \u547d\u4ee4: \u279c ~ ctr task kill nginx \u279c ~ ctr task ls TASK PID STATUS nginx 3630 STOPPED \u6740\u6389\u5bb9\u5668\u540e\u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u7684\u72b6\u6001\u53d8\u6210\u4e86 STOPPED \u3002\u540c\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7 task rm \u547d\u4ee4\u5220\u9664 Task\uff1a \u279c ~ ctr task rm nginx \u279c ~ ctr task ls TASK PID STATUS \u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u5bb9\u5668\u7684 cgroup \u76f8\u5173\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528 task metrics \u547d\u4ee4\u7528\u6765\u83b7\u53d6\u5bb9\u5668\u7684\u5185\u5b58\u3001CPU \u548c PID \u7684\u9650\u989d\u4e0e\u4f7f\u7528\u91cf\u3002 # \u91cd\u65b0\u542f\u52a8\u5bb9\u5668 \u279c ~ ctr task metrics nginx ID TIMESTAMP nginx 2021 -08-12 08 :50:46.952769941 +0000 UTC METRIC VALUE memory.usage_in_bytes 8855552 memory.limit_in_bytes 9223372036854771712 memory.stat.cache 0 cpuacct.usage 22467106 cpuacct.usage_percpu [ 2962708 860891 1163413 1915748 1058868 2888139 6159277 5458062 ] pids.current 9 pids.limit 0 \u8fd8\u53ef\u4ee5\u4f7f\u7528 task ps \u547d\u4ee4\u67e5\u770b\u5bb9\u5668\u4e2d\u6240\u6709\u8fdb\u7a0b\u5728\u5bbf\u4e3b\u673a\u4e2d\u7684 PID\uff1a \u279c ~ ctr task ps nginx PID INFO 3984 - 4029 - 4030 - 4031 - 4032 - 4033 - 4034 - 4035 - 4036 - \u279c ~ ctr task ls TASK PID STATUS nginx 3984 RUNNING \u5176\u4e2d\u7b2c\u4e00\u4e2a PID 3984 \u5c31\u662f\u6211\u4eec\u5bb9\u5668\u4e2d\u76841\u53f7\u8fdb\u7a0b\u3002","title":"\u4efb\u52a1"},{"location":"Container/containerd/#_8","text":"\u53e6\u5916 Containerd \u4e2d\u4e5f\u652f\u6301\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u67e5\u770b\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ ctr ns ls NAME LABELS default \u5982\u679c\u4e0d\u6307\u5b9a\uff0cctr \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f default \u7a7a\u95f4\u3002\u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 ns create \u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ ctr ns create test \u279c ~ ctr ns ls NAME LABELS default test \u4f7f\u7528 remove \u6216\u8005 rm \u53ef\u4ee5\u5220\u9664 namespace\uff1a \u279c ~ ctr ns rm test test \u279c ~ ctr ns ls NAME LABELS default \u6709\u4e86\u547d\u540d\u7a7a\u95f4\u540e\u5c31\u53ef\u4ee5\u5728\u64cd\u4f5c\u8d44\u6e90\u7684\u65f6\u5019\u6307\u5b9a namespace\uff0c\u6bd4\u5982\u67e5\u770b test \u547d\u540d\u7a7a\u95f4\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u5728\u64cd\u4f5c\u547d\u4ee4\u540e\u9762\u52a0\u4e0a -n test \u9009\u9879\uff1a \u279c ~ ctr -n test image ls REF TYPE DIGEST SIZE PLATFORMS LABELS \u6211\u4eec\u77e5\u9053 Docker \u5176\u5b9e\u4e5f\u662f\u9ed8\u8ba4\u8c03\u7528\u7684 containerd\uff0c\u4e8b\u5b9e\u4e0a Docker \u4f7f\u7528\u7684 containerd \u4e0b\u9762\u7684\u547d\u540d\u7a7a\u95f4\u9ed8\u8ba4\u662f moby \uff0c\u800c\u4e0d\u662f default \uff0c\u6240\u4ee5\u5047\u5982\u6211\u4eec\u6709\u7528 docker \u542f\u52a8\u5bb9\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 ctr -n moby \u6765\u5b9a\u4f4d\u4e0b\u9762\u7684\u5bb9\u5668\uff1a \u279c ~ ctr -n moby container ls \u540c\u6837 Kubernetes \u4e0b\u4f7f\u7528\u7684 containerd \u9ed8\u8ba4\u547d\u540d\u7a7a\u95f4\u662f k8s.io \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ctr -n k8s.io \u6765\u67e5\u770b Kubernetes \u4e0b\u9762\u521b\u5efa\u7684\u5bb9\u5668\u3002","title":"\u547d\u540d\u7a7a\u95f4"},{"location":"Container/namespace%26cgroups/","text":"CGroups\u4e0eNamespaces \u00b6 \u672c\u8282\u6211\u4eec\u6765\u4e00\u8d77\u4e86\u89e3\u4e0b\u5bb9\u5668\u80cc\u540e\u7684\u4e24\u4e2a\u6838\u5fc3\u6280\u672f\uff1aCGroups \u548c Namespace\u3002 CGroups\u6982\u8ff0 \u00b6 CGroups \u5168\u79f0\u4e3a Linux Control Group \uff0c\u5176\u4f5c\u7528\u662f\u9650\u5236\u4e00\u7ec4\u8fdb\u7a0b\u4f7f\u7528\u7684\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u7b49\uff09\u4e0a\u9650\uff0cCGroups \u4e5f\u662f Containerd \u5bb9\u5668\u6280\u672f\u7684\u6838\u5fc3\u5b9e\u73b0\u539f\u7406\u4e4b\u4e00\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u51e0\u4e2a `CGroups \u7684\u57fa\u672c\u6982\u5ff5\uff1a Task : \u5728 cgroup \u4e2d\uff0ctask \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u8fd9\u91cc\u7684\u8fdb\u7a0b\u548c\u4e00\u822c\u610f\u4e49\u4e0a\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u4e0d\u592a\u4e00\u6837\uff0c\u5b9e\u9645\u4e0a\u662f\u8fdb\u7a0b ID \u548c\u7ebf\u7a0b ID \u5217\u8868\u3002 CGroup : \u5373\u63a7\u5236\u7ec4\uff0c\u4e00\u4e2a\u63a7\u5236\u7ec4\u5c31\u662f\u4e00\u7ec4\u6309\u7167\u67d0\u79cd\u6807\u51c6\u5212\u5206\u7684 Tasks\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d44\u6e90\u9650\u5236\u662f\u4ee5\u8fdb\u7a0b\u7ec4\u4e3a\u5355\u4f4d\u5b9e\u73b0\u7684\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u52a0\u5165\u5230\u67d0\u4e2a\u63a7\u5236\u7ec4\u540e\uff0c\u5c31\u4f1a\u53d7\u5230\u76f8\u5e94\u914d\u7f6e\u7684\u8d44\u6e90\u9650\u5236\u3002 Hierarchy : cgroup \u7684\u5c42\u7ea7\u7ec4\u7ec7\u5173\u7cfb\uff0ccgroup \u4ee5\u6811\u5f62\u5c42\u7ea7\u7ec4\u7ec7\uff0c\u6bcf\u4e2a cgroup \u5b50\u8282\u70b9\u9ed8\u8ba4\u7ee7\u627f\u5176\u7236 cgroup \u8282\u70b9\u7684\u914d\u7f6e\u5c5e\u6027\uff0c\u8fd9\u6837\u6bcf\u4e2a Hierarchy \u5728\u521d\u59cb\u5316\u4f1a\u6709 root cgroup\u3002 Subsystem : \u5373\u5b50\u7cfb\u7edf\uff0c\u5b50\u7cfb\u7edf\u8868\u793a\u5177\u4f53\u7684\u8d44\u6e90\u914d\u7f6e\uff0c\u5982CPU\u4f7f\u7528\uff0c\u5185\u5b58\u5360\u7528\u7b49\uff0cSubsystem\u9644\u52a0\u5230Hierarchy\u4e0a\u540e\u53ef\u7528\u3002 CGroups \u652f\u6301\u7684\u5b50\u7cfb\u7edf\u5305\u542b\u4ee5\u4e0b\u51e0\u7c7b\uff0c\u5373\u4e3a\u6bcf\u79cd\u53ef\u4ee5\u63a7\u5236\u7684\u8d44\u6e90\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b50\u7cfb\u7edf: cpuset : \u4e3a cgroup \u4e2d\u7684\u8fdb\u7a0b\u5206\u914d\u5355\u72ec\u7684 CPU \u8282\u70b9\uff0c\u5373\u53ef\u4ee5\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684 CPU cpu : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684 CPU \u4f7f\u7528\u4efd\u989d cpuacct : \u7edf\u8ba1 cgroup \u4e2d\u8fdb\u7a0b\u7684 CPU \u4f7f\u7528\u60c5\u51b5 memory : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528,\u5e76\u80fd\u62a5\u544a\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 devices : \u63a7\u5236 cgroup \u4e2d\u8fdb\u7a0b\u80fd\u8bbf\u95ee\u54ea\u4e9b\u6587\u4ef6\u8bbe\u5907(\u8bbe\u5907\u6587\u4ef6\u7684\u521b\u5efa\u3001\u8bfb\u5199) freezer : \u6302\u8d77\u6216\u6062\u590d cgroup \u4e2d\u7684 task net_cls : \u53ef\u4ee5\u6807\u8bb0 cgroups \u4e2d\u8fdb\u7a0b\u7684\u7f51\u7edc\u6570\u636e\u5305\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 tc \u6a21\u5757(traffic contro)\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u63a7\u5236 blkio : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684\u5757\u8bbe\u5907 IO perf_event : \u76d1\u63a7 cgroup \u4e2d\u8fdb\u7a0b\u7684 perf \u65f6\u95f4\uff0c\u53ef\u7528\u4e8e\u6027\u80fd\u8c03\u4f18 hugetlb : hugetlb \u7684\u8d44\u6e90\u63a7\u5236\u529f\u80fd pids : \u9650\u5236 cgroup \u4e2d\u53ef\u4ee5\u521b\u5efa\u7684\u8fdb\u7a0b\u6570 net_prio : \u5141\u8bb8\u7ba1\u7406\u5458\u52a8\u6001\u7684\u901a\u8fc7\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u7f51\u7edc\u4f20\u8f93\u7684\u4f18\u5148\u7ea7 \u901a\u8fc7\u4e0a\u9762\u7684\u5404\u4e2a\u5b50\u7cfb\u7edf\uff0c\u53ef\u4ee5\u770b\u51fa\u4f7f\u7528 CGroups \u53ef\u4ee5\u63a7\u5236\u7684\u8d44\u6e90\u6709: CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u3001IO\u3001\u6587\u4ef6\u8bbe\u5907\u7b49\u3002 CGroups \u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\u3000\u3000\u3000\u3000\u3000\u3000\u3000 CGroups \u7684 API \u4ee5\u4e00\u4e2a\u4f2a\u6587\u4ef6\u7cfb\u7edf\uff08/sys/fs/cgroup/\uff09\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u7528\u6237\u7684\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0 CGroups \u7684\u7ec4\u4ef6\u7ba1\u7406 CGroups \u7684\u7ec4\u4ef6\u7ba1\u7406\u64cd\u4f5c\u5355\u5143\u53ef\u4ee5\u7ec6\u7c92\u5ea6\u5230\u7ebf\u7a0b\u7ea7\u522b\uff0c\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1 CGroups\uff0c\u4ece\u800c\u5b9e\u73b0\u8d44\u6e90\u8f7d\u5206\u914d\u548c\u518d\u5229\u7528 \u6240\u6709\u8d44\u6e90\u7ba1\u7406\u7684\u529f\u80fd\u90fd\u4ee5\u5b50\u7cfb\u7edf\uff08cpu\u3001cpuset \u8fd9\u4e9b\uff09\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u63a5\u53e3\u7edf\u4e00\u5b50\u4efb\u52a1\u521b\u5efa\u4e4b\u521d\u4e0e\u5176\u7236\u4efb\u52a1\u5904\u4e8e\u540c\u4e00\u4e2a CGroups \u7684\u63a7\u5236\u7ec4 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b /proc/cgroups \u6587\u4ef6\u6765\u67e5\u627e\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684 CGroups \u5b50\u7cfb\u7edf: \u5728\u4f7f\u7528 CGroups \u65f6\u9700\u8981\u5148\u6302\u8f7d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 df -h | grep cgroup \u547d\u4ee4\u8fdb\u884c\u67e5\u770b: \u279c ~ df -h | grep cgroup tmpfs 3 .9G 0 3 .9G 0 % /sys/fs/cgroup \u53ef\u4ee5\u770b\u5230\u88ab\u6302\u8f7d\u5230\u4e86 /sys/fs/cgroup \uff0ccgroup \u5176\u5b9e\u662f\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u6587\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mount --type cgroup \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u6302\u8f7d\u4e86\u54ea\u4e9b cgroup\uff1a \u279c ~ mount --type cgroup cgroup on /sys/fs/cgroup/systemd type cgroup ( rw,nosuid,nodev,noexec,relatime,xattr,release_agent = /usr/lib/systemd/systemd-cgroups-agent,name = systemd ) cgroup on /sys/fs/cgroup/cpuset type cgroup ( rw,nosuid,nodev,noexec,relatime,cpuset ) cgroup on /sys/fs/cgroup/perf_event type cgroup ( rw,nosuid,nodev,noexec,relatime,perf_event ) cgroup on /sys/fs/cgroup/cpu,cpuacct type cgroup ( rw,nosuid,nodev,noexec,relatime,cpuacct,cpu ) cgroup on /sys/fs/cgroup/memory type cgroup ( rw,nosuid,nodev,noexec,relatime,memory ) cgroup on /sys/fs/cgroup/freezer type cgroup ( rw,nosuid,nodev,noexec,relatime,freezer ) cgroup on /sys/fs/cgroup/net_cls,net_prio type cgroup ( rw,nosuid,nodev,noexec,relatime,net_prio,net_cls ) cgroup on /sys/fs/cgroup/blkio type cgroup ( rw,nosuid,nodev,noexec,relatime,blkio ) cgroup on /sys/fs/cgroup/hugetlb type cgroup ( rw,nosuid,nodev,noexec,relatime,hugetlb ) cgroup on /sys/fs/cgroup/pids type cgroup ( rw,nosuid,nodev,noexec,relatime,pids ) cgroup on /sys/fs/cgroup/devices type cgroup ( rw,nosuid,nodev,noexec,relatime,devices ) /sys/fs/cgroup \u76ee\u5f55\u4e0b\u7684\u6bcf\u4e2a\u5b50\u76ee\u5f55\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u5b50\u7cfb\u7edf\uff0ccgroup \u662f\u4ee5\u76ee\u5f55\u5f62\u5f0f\u7ec4\u7ec7\u7684\uff0c/ \u662f cgroup \u7684\u6839\u76ee\u5f55\uff0c\u4f46\u662f\u8fd9\u4e2a\u6839\u76ee\u5f55\u53ef\u4ee5\u88ab\u6302\u8f7d\u5230\u4efb\u610f\u76ee\u5f55\uff0c\u4f8b\u5982 CGroups \u7684 memory \u5b50\u7cfb\u7edf\u7684\u6302\u8f7d\u70b9\u662f /sys/fs/cgroup/memory \uff0c\u90a3\u4e48 /sys/fs/cgroup/memory/ \u5bf9\u5e94 memory \u5b50\u7cfb\u7edf\u7684\u6839\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\uff1a \u279c ~ ll /sys/fs/cgroup/memory/ total 0 -rw-r--r-- 1 root root 0 Oct 21 10 :10 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 10 :10 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 10 :10 cgroup.procs -r--r--r-- 1 root root 0 Oct 21 10 :10 cgroup.sane_behavior drwxr-xr-x 4 root root 0 Oct 21 10 :10 kubepods.slice -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.failcnt --w------- 1 root root 0 Oct 21 10 :10 memory.force_empty -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.slabinfo -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.max_usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.move_charge_at_immigrate -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.numa_stat -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.oom_control ---------- 1 root root 0 Oct 21 10 :10 memory.pressure_level -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.soft_limit_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.stat -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.swappiness -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.use_hierarchy -rw-r--r-- 1 root root 0 Oct 21 10 :10 notify_on_release -rw-r--r-- 1 root root 0 Oct 21 10 :10 release_agent drwxr-xr-x 65 root root 0 Oct 21 10 :25 system.slice -rw-r--r-- 1 root root 0 Oct 21 10 :10 tasks drwxr-xr-x 2 root root 0 Oct 21 10 :10 user.slice \u4e0a\u9762\u5305\u542b kubepods.slice\u3001system.slice\u3001user.slice \u7b49\u76ee\u5f55\uff0c\u8fd9\u4e9b\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u4f1a\u6709\u5b50\u76ee\u5f55\uff0c\u76f8\u5f53\u4e8e\u4e00\u9897\u6709\u5c42\u7ea7\u5173\u7cfb\u7684\u6811\u6765\u8fdb\u884c\u7ec4\u7ec7\uff1a / \u251c\u2500\u2500 kubepods.slice \u251c\u2500\u2500 system.slice \u2514\u2500\u2500 user.slice \u4f8b\u5982\u6211\u5728\u8282\u70b9\u4e0a\u4f7f\u7528 systemd \u7ba1\u7406\u4e86\u4e00\u4e2a Prometheus \u7684\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 systemctl status prometheus \u547d\u4ee4\u67e5\u770b Prometheus \u8fdb\u7a0b\u6240\u5728\u7684 cgroup \u4e3a /system.slice/prometheus.service : \u279c ~ systemctl status prometheus \u25cf prometheus.service - prometheus service Loaded: loaded ( /etc/systemd/system/prometheus.service ; enabled ; vendor preset: disabled ) Active: active ( running ) since Thu 2021 -10-21 10 :10:12 CST ; 1h 40min ago Docs: https://prometheus.io Main PID: 1065 ( prometheus ) Tasks: 10 Memory: 167 .4M CGroup: /system.slice/prometheus.service \u2514\u25001065 /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus --config.file = /root/p8strain/prometheu... \u4e0a\u9762\u663e\u793a\u7684 CGroup \u53ea\u662f\u4e00\u4e2a\u76f8\u5bf9\u7684\u8def\u5f84\uff0c\u5b9e\u9645\u7684\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u662f\u5728\u5bf9\u5e94\u7684\u5b50\u7cfb\u7edf\u4e0b\u9762\uff0c\u6bd4\u5982 /sys/fs/cgroup/cpu/system.slice/prometheus.service \u3001 /sys/fs/cgroup/memory/system.slice/prometheus.service \u76ee\u5f55\uff1a \u8fd9\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a cpu \u548c memory \u5b50\u7cfb\u7edf\u88ab\u9644\u52a0\u5230\u4e86 /system.slice/prometheus.service \u8fd9\u4e2a cgroup \u4e0a\u3002 Info \u5982\u679c linux \u7cfb\u7edf\u4f7f\u7528 systemd \u521d\u59cb\u5316\u7cfb\u7edf\uff0c\u521d\u59cb\u5316\u8fdb\u7a0b\u4f1a\u751f\u6210\u4e00\u4e2a root cgroup\uff0c\u6bcf\u4e2a systemd unit \u90fd\u5c06\u4f1a\u88ab\u5206\u914d\u4e00\u4e2acgroup\uff0c\u540c\u6837\u53ef\u4ee5\u914d\u7f6e\u5bb9\u5668\u8fd0\u884c\u65f6\u5982 containerd \u9009\u62e9\u4f7f\u7528 cgroupfs \u6216 systemd \u4f5c\u4e3a cgroup \u9a71\u52a8\uff0ccontainerd \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f cgroupfs\uff0c\u4f46\u5bf9\u4e8e\u4f7f\u7528\u4e86 systemd \u7684 linux \u53d1\u884c\u7248\u6765\u8bf4\u5c31\u540c\u65f6\u5b58\u5728\u4e24\u4e2a cgroup \u7ba1\u7406\u5668\uff0c\u5bf9\u4e8e\u8be5\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u7684\u5bb9\u5668\u4f7f\u7528\u7684\u662fcgroupfs\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6 systemd \u7ba1\u7406\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u662f systemd\uff0c\u8fd9\u6837\u5728\u670d\u52a1\u5668\u8d44\u6e90\u8d1f\u8f7d\u9ad8\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u53d8\u7684\u4e0d\u7a33\u5b9a\u3002\u56e0\u6b64\u5bf9\u4e8e\u4f7f\u7528\u4e86 systemd \u7684 linux \u7cfb\u7edf\uff0c\u63a8\u8350\u5c06\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 cgroup \u9a71\u52a8\u4f7f\u7528 systemd\u3002 CGroup \u6d4b\u8bd5 \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5c1d\u8bd5\u624b\u52a8\u8bbe\u7f6e\u4e0b cgroup\uff0c\u4ee5 CPU \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u9996\u5148\u6211\u4eec\u5728 /sys/fs/cgroup/cpu \u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ydzs.test \u7684\u76ee\u5f55\uff1a \u279c ~ mkdir -p /sys/fs/cgroup/cpu/ydzs.test \u279c ~ ls /sys/fs/cgroup/cpu/ydzs.test/ cgroup.clone_children cpuacct.stat cpu.cfs_period_us cpu.rt_runtime_us notify_on_release cgroup.event_control cpuacct.usage cpu.cfs_quota_us cpu.shares tasks cgroup.procs cpuacct.usage_percpu cpu.rt_period_us cpu.stat \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u76ee\u5f55\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4e0b\u9762\u5c31\u4f1a\u5df2\u7ecf\u81ea\u52a8\u521b\u5efa cgroup \u7684\u76f8\u5173\u6587\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 cpu.cfs_period_us \u548c cpu.cfs_quota_us \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u524d\u9762\u4e00\u4e2a\u662f\u7528\u6765\u914d\u7f6e CPU \u65f6\u95f4\u5468\u671f\u957f\u5ea6\u7684\uff0c\u9ed8\u8ba4\u4e3a 100000us \uff0c\u540e\u8005\u7528\u6765\u8bbe\u7f6e\u5728\u6b64\u65f6\u95f4\u5468\u671f\u957f\u5ea6\u5185\u6240\u80fd\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a-1\uff0c\u8868\u793a\u4e0d\u53d7\u65f6\u95f4\u9650\u5236\u3002 \u279c ~ cat /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_period_us 100000 \u279c ~ cat /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us -1 \u73b0\u5728\u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python \u811a\u672c\u6765\u6d88\u8017 CPU\uff1a # cgroup.py while True : pass \u76f4\u63a5\u6267\u884c\u8fd9\u4e2a\u6b7b\u5faa\u73af\u811a\u672c\u5373\u53ef\uff1a \u279c ~ python cgroup . py & [ 1 ] 2113 \u4f7f\u7528 top \u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u53f72113\u7684 CPU \u4f7f\u7528\u7387\u8fbe\u5230\u4e86 100% \u73b0\u5728\u6211\u4eec\u5c06\u8fd9\u4e2a\u8fdb\u7a0bID\u5199\u5165\u5230 /sys/fs/cgroup/cpu/ydzs.test/tasks \u6587\u4ef6\u4e0b\u9762\u53bb\uff0c\u7136\u540e\u8bbe\u7f6e /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us \u4e3a 10000us \uff0c\u56e0\u4e3a cpu.cfs_period_us \u9ed8\u8ba4\u503c\u4e3a 100000us \uff0c\u6240\u4ee5\u8fd9\u8868\u793a\u6211\u4eec\u8981\u9650\u5236 CPU \u4f7f\u7528\u7387\u4e3a10%\uff1a \u279c ~ echo 2113 > /sys/fs/cgroup/cpu/ydzs.test/tasks \u279c ~ echo 10000 > /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us \u8bbe\u7f6e\u5b8c\u8fc7\u540e\u4e0a\u9762\u6211\u4eec\u7684\u6d4b\u8bd5\u8fdb\u7a0b CPU \u5c31\u4f1a\u88ab\u9650\u5236\u5728 10% \u5de6\u53f3\u4e86\uff0c\u518d\u6b21\u4f7f\u7528 top \u547d\u4ee4\u67e5\u770b\u8be5\u8fdb\u7a0b\u53ef\u4ee5\u9a8c\u8bc1\u3002 \u5982\u679c\u8981\u9650\u5236\u5185\u5b58\u7b49\u5176\u4ed6\u8d44\u6e90\u7684\u8bdd\uff0c\u540c\u6837\u53bb\u5bf9\u5e94\u7684\u5b50\u7cfb\u7edf\u4e0b\u9762\u8bbe\u7f6e\u8d44\u6e90\uff0c\u5e76\u5c06\u8fdb\u7a0b ID \u52a0\u5165 tasks \u4e2d\u5373\u53ef\u3002\u5982\u679c\u8981\u5220\u9664\u8fd9\u4e2a cgroup\uff0c\u76f4\u63a5\u5220\u9664\u6587\u4ef6\u5939\u662f\u4e0d\u884c\u7684\uff0c\u9700\u8981\u4f7f\u7528 libcgroup \u5de5\u5177\uff1a \u279c ~ yum install libcgroup libcgroup-tools \u279c ~ cgdelete cpu:ydzs.test \u279c ~ ls /sys/fs/cgroup/cpu/ydzs.test ls: cannot access /sys/fs/cgroup/cpu/ydzs.test: No such file or directory \u5728\u5bb9\u5668\u4e2d\u4f7f\u7528CGroups \u00b6 \u4e0a\u9762\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u666e\u901a\u5e94\u7528\u5982\u4f55\u914d\u7f6e cgroup\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728 Containerd \u7684\u5bb9\u5668\u4e2d\u6765\u4f7f\u7528 cgroup\uff0c\u6bd4\u5982\u4f7f\u7528 nerdctl \u542f\u52a8\u4e00\u4e2a nginx \u5bb9\u5668\uff0c\u5e76\u9650\u5236\u5176\u4f7f\u7528\u5185\u5b58\u4e3a50M: \u279c ~ nerdctl run -d -m 50m --name nginx nginx:alpine 8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 8690c7dba4ff docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 53 seconds ago Up nginx \u5728\u4f7f\u7528 nerdctl run \u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 -m \u6216 --memory \u53c2\u6570\u6765\u73b0\u5728\u5185\u5b58\uff0c\u542f\u52a8\u5b8c\u6210\u540e\u8be5\u5bb9\u5668\u7684 cgroup \u4f1a\u51fa\u73b0\u5728 \u540d\u4e3a default \u7684\u76ee\u5f55\u4e0b\u9762\uff0c\u6bd4\u5982\u67e5\u770b\u5185\u5b58\u5b50\u7cfb\u7edf\u7684\u76ee\u5f55\uff1a \u279c ~ ll /sys/fs/cgroup/memory/default/ total 0 drwxr-xr-x 2 root root 0 Oct 21 15 :01 8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 15 :01 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.procs ...... \u4e0a\u9762\u6211\u4eec\u542f\u52a8\u7684 nginx \u5bb9\u5668 ID \u7684\u76ee\u5f55\u4f1a\u51fa\u73b0\u5728 /sys/fs/cgroup/memory/default/ \u4e0b\u9762\uff0c\u8be5\u6587\u4ef6\u5939\u4e0b\u9762\u6709\u5f88\u591a\u548c\u5185\u5b58\u76f8\u5173\u7684 cgroup \u914d\u7f6e\u6587\u4ef6\uff0c\u8981\u8fdb\u884c\u76f8\u5173\u7684\u914d\u7f6e\u5c31\u9700\u8981\u5728\u8be5\u76ee\u5f55\u4e0b\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\u53bb\u64cd\u4f5c\uff1a \u279c ~ ll /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c total 0 -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 15 :01 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.procs -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.failcnt --w------- 1 root root 0 Oct 21 15 :01 memory.force_empty -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.slabinfo -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.max_usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.move_charge_at_immigrate -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.numa_stat -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.oom_control ---------- 1 root root 0 Oct 21 15 :01 memory.pressure_level -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.soft_limit_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.stat -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.swappiness -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.use_hierarchy -rw-r--r-- 1 root root 0 Oct 21 15 :01 notify_on_release -rw-r--r-- 1 root root 0 Oct 21 15 :01 tasks \u6211\u4eec\u8fd9\u91cc\u9700\u8981\u5173\u5fc3\u7684\u662f memory.limit_in_bytes \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5c31\u662f\u7528\u6765\u8bbe\u7f6e\u5185\u5b58\u5927\u5c0f\u7684\uff0c\u6b63\u5e38\u5e94\u8be5\u662f 50M \u7684\u5185\u5b58\u9650\u5236\uff1a \u279c ~ cat /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c/memory.limit_in_bytes 52428800 \u540c\u6837\u6211\u4eec\u7684 nginx \u5bb9\u5668\u8fdb\u7a0b ID \u4e5f\u4f1a\u51fa\u73b0\u5728\u4e0a\u9762\u7684 tasks \u6587\u4ef6\u4e2d\uff1a \u279c ~ cat /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c/tasks 2686 2815 2816 2817 2818 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u8fc7\u6ee4\u8be5\u8fdb\u7a0b\u53f7\uff0c\u53ef\u4ee5\u770b\u51fa\u7b2c\u4e00\u884c\u7684 2686 \u5c31\u662f nginx \u8fdb\u7a0b\u5728\u4e3b\u673a\u4e0a\u7684\u8fdb\u7a0b ID\uff0c\u4e0b\u9762\u51e0\u4e2a\u662f\u8fd9\u4e2a\u8fdb\u7a0b\u4e0b\u7684\u7ebf\u7a0b\uff1a \u279c ~ ps -ef | grep 2686 root 2686 2656 0 15 :01 ? 00 :00:00 nginx: master process nginx -g daemon off ; 101 2815 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2816 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2817 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2818 2686 0 15 :01 ? 00 :00:00 nginx: worker process root 2950 1976 0 15 :36 pts/0 00 :00:00 grep --color = auto 2686 Namespaces \u00b6 namespace \u4e5f\u79f0\u547d\u540d\u7a7a\u95f4\uff0c\u662f Linux \u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u7528\u4e8e\u9694\u79bb\u8fdb\u7a0b\u6811\u3001\u7f51\u7edc\u63a5\u53e3\u3001\u6302\u8f7d\u70b9\u4ee5\u53ca\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7b49\u8d44\u6e90\u7684\u65b9\u6cd5\u3002\u5728\u65e5\u5e38\u4f7f\u7528\u4e2a\u4eba PC \u65f6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u8fd0\u884c\u591a\u4e2a\u5b8c\u5168\u5206\u79bb\u7684\u670d\u52a1\u5668\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5728\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u4e86\u591a\u4e2a\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u5176\u5b9e\u4f1a\u76f8\u4e92\u5f71\u54cd\u7684\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u90fd\u80fd\u770b\u5230\u5176\u4ed6\u670d\u52a1\u7684\u8fdb\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5bbf\u4e3b\u673a\u5668\u4e0a\u7684\u4efb\u610f\u6587\u4ef6\uff0c\u4e00\u65e6\u670d\u52a1\u5668\u4e0a\u7684\u67d0\u4e00\u4e2a\u670d\u52a1\u88ab\u5165\u4fb5\uff0c\u90a3\u4e48\u5165\u4fb5\u8005\u5c31\u80fd\u591f\u8bbf\u95ee\u5f53\u524d\u673a\u5668\u4e0a\u7684\u6240\u6709\u670d\u52a1\u548c\u6587\u4ef6\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u613f\u610f\u770b\u5230\u7684\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u4e0d\u540c\u670d\u52a1\u80fd\u505a\u5230\u5b8c\u5168\u9694\u79bb\uff0c\u5c31\u50cf\u8fd0\u884c\u5728\u591a\u53f0\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u4e00\u6837\u3002\u800c\u6211\u4eec\u8fd9\u91cc\u7684\u5bb9\u5668\u5176\u5b9e\u5c31\u901a\u8fc7 Linux \u7684 Namespaces \u6280\u672f\u6765\u5b9e\u73b0\u7684\u5bf9\u4e0d\u540c\u7684\u5bb9\u5668\u8fdb\u884c\u9694\u79bb\u3002 linux \u5171\u67096(7)\u79cd\u547d\u540d\u7a7a\u95f4: ipc namespace : \u7ba1\u7406\u5bf9 IPC \u8d44\u6e90\uff08\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u548c\u5171\u4eab\u5185\u5b58\uff09\u7684\u8bbf\u95ee net namespace : \u7f51\u7edc\u8bbe\u5907\u3001\u7f51\u7edc\u6808\u3001\u7aef\u53e3\u7b49\u9694\u79bb mnt namespace : \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u70b9\u9694\u79bb pid namespace : \u7528\u4e8e\u8fdb\u7a0b\u9694\u79bb user namespace : \u7528\u6237\u548c\u7528\u6237\u7ec4\u9694\u79bb\uff083.8\u4ee5\u540e\u7684\u5185\u6838\u624d\u652f\u6301\uff09 uts namespace : \u4e3b\u673a\u548c\u57df\u540d\u9694\u79bb cgroup namespace \uff1a\u7528\u4e8e cgroup \u6839\u76ee\u5f55\u9694\u79bb\uff084.6\u4ee5\u540e\u7248\u672c\u7684\u5185\u6838\u624d\u652f\u6301\uff09 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 lsns \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u5df2\u7ecf\u521b\u5efa\u7684\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ lsns NS TYPE NPROCS PID USER COMMAND 4026531836 pid 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531837 user 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531838 uts 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531839 ipc 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531840 mnt 138 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531856 mnt 1 28 root kdevtmpfs 4026531956 net 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026532503 mnt 2 728 root /usr/sbin/NetworkManager --no-daemon 4026532504 mnt 1 745 chrony /usr/sbin/chronyd 4026532642 mnt 1 1076 grafana /usr/sbin/grafana-server --config = /etc/grafana/grafana.ini --pidfile = /var/run \u8981\u67e5\u770b\u4e00\u4e2a\u8fdb\u7a0b\u6240\u5c5e\u7684\u547d\u540d\u7a7a\u95f4\u4fe1\u606f\uff0c\u53ef\u4ee5\u5230 /proc/<pid>/ns \u76ee\u5f55\u4e0b\u67e5\u770b\uff1a \u279c ~ ps -ef | grep prometheus root 1065 1 0 10 :10 ? 00 :01:13 /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus --config.file = /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus.yml \u279c ~ ll /proc/1065/ns total 0 lrwxrwxrwx 1 root root 0 Oct 21 15 :58 ipc -> ipc: [ 4026531839 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 mnt -> mnt: [ 4026531840 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 net -> net: [ 4026531956 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 pid -> pid: [ 4026531836 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 user -> user: [ 4026531837 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 uts -> uts: [ 4026531838 ] \u8fd9\u4e9b namespace \u90fd\u662f\u94fe\u63a5\u6587\u4ef6, \u683c\u5f0f\u4e3a namespaceType:[inode number] \uff0c inode number \u7528\u6765\u6807\u8bc6\u4e00\u4e2a namespace\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a namespace id\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u7684\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u94fe\u63a5\u6587\u4ef6\u6307\u5411\u540c\u4e00\u4e2a\uff0c\u90a3\u4e48\u5176\u76f8\u5173\u8d44\u6e90\u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u5c31\u6ca1\u6709\u9694\u79bb\u4e86\u3002\u6bd4\u5982\u540c\u6837\u9488\u5bf9\u4e0a\u9762\u8fd0\u884c\u7684 nginx \u5bb9\u5668\uff0c\u6211\u4eec\u67e5\u770b\u5176\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ lsns | grep nginx 4026532505 mnt 5 3171 root nginx: master process nginx -g daemon off 4026532506 uts 5 3171 root nginx: master process nginx -g daemon off 4026532507 ipc 5 3171 root nginx: master process nginx -g daemon off 4026532508 pid 5 3171 root nginx: master process nginx -g daemon off 4026532510 net 5 3171 root nginx: master process nginx -g daemon off \u53ef\u4ee5\u770b\u51fa nginx \u5bb9\u5668\u542f\u52a8\u540e\uff0c\u5df2\u7ecf\u4e3a\u8be5\u5bb9\u5668\u81ea\u52a8\u521b\u5efa\u4e86\u5355\u72ec\u7684 mtn\u3001uts\u3001ipc\u3001pid\u3001net \u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5bb9\u5668\u5728\u8fd9\u4e9b\u65b9\u9762\u662f\u72ec\u7acb\u9694\u79bb\u7684\uff0c\u5176\u4ed6\u5bb9\u5668\u60f3\u8981\u548c\u8be5\u5bb9\u5668\u5171\u4eab\u67d0\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6307\u5411\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002 \u53c2\u8003\u6587\u6863 \u00b6 https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/ https://www.infoq.cn/article/docker-resource-management-cgroups/","title":"CGroups\u4e0eNamespaces"},{"location":"Container/namespace%26cgroups/#cgroupsnamespaces","text":"\u672c\u8282\u6211\u4eec\u6765\u4e00\u8d77\u4e86\u89e3\u4e0b\u5bb9\u5668\u80cc\u540e\u7684\u4e24\u4e2a\u6838\u5fc3\u6280\u672f\uff1aCGroups \u548c Namespace\u3002","title":"CGroups\u4e0eNamespaces"},{"location":"Container/namespace%26cgroups/#cgroups","text":"CGroups \u5168\u79f0\u4e3a Linux Control Group \uff0c\u5176\u4f5c\u7528\u662f\u9650\u5236\u4e00\u7ec4\u8fdb\u7a0b\u4f7f\u7528\u7684\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u7b49\uff09\u4e0a\u9650\uff0cCGroups \u4e5f\u662f Containerd \u5bb9\u5668\u6280\u672f\u7684\u6838\u5fc3\u5b9e\u73b0\u539f\u7406\u4e4b\u4e00\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u51e0\u4e2a `CGroups \u7684\u57fa\u672c\u6982\u5ff5\uff1a Task : \u5728 cgroup \u4e2d\uff0ctask \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u8fd9\u91cc\u7684\u8fdb\u7a0b\u548c\u4e00\u822c\u610f\u4e49\u4e0a\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u4e0d\u592a\u4e00\u6837\uff0c\u5b9e\u9645\u4e0a\u662f\u8fdb\u7a0b ID \u548c\u7ebf\u7a0b ID \u5217\u8868\u3002 CGroup : \u5373\u63a7\u5236\u7ec4\uff0c\u4e00\u4e2a\u63a7\u5236\u7ec4\u5c31\u662f\u4e00\u7ec4\u6309\u7167\u67d0\u79cd\u6807\u51c6\u5212\u5206\u7684 Tasks\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d44\u6e90\u9650\u5236\u662f\u4ee5\u8fdb\u7a0b\u7ec4\u4e3a\u5355\u4f4d\u5b9e\u73b0\u7684\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u52a0\u5165\u5230\u67d0\u4e2a\u63a7\u5236\u7ec4\u540e\uff0c\u5c31\u4f1a\u53d7\u5230\u76f8\u5e94\u914d\u7f6e\u7684\u8d44\u6e90\u9650\u5236\u3002 Hierarchy : cgroup \u7684\u5c42\u7ea7\u7ec4\u7ec7\u5173\u7cfb\uff0ccgroup \u4ee5\u6811\u5f62\u5c42\u7ea7\u7ec4\u7ec7\uff0c\u6bcf\u4e2a cgroup \u5b50\u8282\u70b9\u9ed8\u8ba4\u7ee7\u627f\u5176\u7236 cgroup \u8282\u70b9\u7684\u914d\u7f6e\u5c5e\u6027\uff0c\u8fd9\u6837\u6bcf\u4e2a Hierarchy \u5728\u521d\u59cb\u5316\u4f1a\u6709 root cgroup\u3002 Subsystem : \u5373\u5b50\u7cfb\u7edf\uff0c\u5b50\u7cfb\u7edf\u8868\u793a\u5177\u4f53\u7684\u8d44\u6e90\u914d\u7f6e\uff0c\u5982CPU\u4f7f\u7528\uff0c\u5185\u5b58\u5360\u7528\u7b49\uff0cSubsystem\u9644\u52a0\u5230Hierarchy\u4e0a\u540e\u53ef\u7528\u3002 CGroups \u652f\u6301\u7684\u5b50\u7cfb\u7edf\u5305\u542b\u4ee5\u4e0b\u51e0\u7c7b\uff0c\u5373\u4e3a\u6bcf\u79cd\u53ef\u4ee5\u63a7\u5236\u7684\u8d44\u6e90\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b50\u7cfb\u7edf: cpuset : \u4e3a cgroup \u4e2d\u7684\u8fdb\u7a0b\u5206\u914d\u5355\u72ec\u7684 CPU \u8282\u70b9\uff0c\u5373\u53ef\u4ee5\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684 CPU cpu : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684 CPU \u4f7f\u7528\u4efd\u989d cpuacct : \u7edf\u8ba1 cgroup \u4e2d\u8fdb\u7a0b\u7684 CPU \u4f7f\u7528\u60c5\u51b5 memory : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528,\u5e76\u80fd\u62a5\u544a\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 devices : \u63a7\u5236 cgroup \u4e2d\u8fdb\u7a0b\u80fd\u8bbf\u95ee\u54ea\u4e9b\u6587\u4ef6\u8bbe\u5907(\u8bbe\u5907\u6587\u4ef6\u7684\u521b\u5efa\u3001\u8bfb\u5199) freezer : \u6302\u8d77\u6216\u6062\u590d cgroup \u4e2d\u7684 task net_cls : \u53ef\u4ee5\u6807\u8bb0 cgroups \u4e2d\u8fdb\u7a0b\u7684\u7f51\u7edc\u6570\u636e\u5305\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 tc \u6a21\u5757(traffic contro)\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u63a7\u5236 blkio : \u9650\u5236 cgroup \u4e2d\u8fdb\u7a0b\u7684\u5757\u8bbe\u5907 IO perf_event : \u76d1\u63a7 cgroup \u4e2d\u8fdb\u7a0b\u7684 perf \u65f6\u95f4\uff0c\u53ef\u7528\u4e8e\u6027\u80fd\u8c03\u4f18 hugetlb : hugetlb \u7684\u8d44\u6e90\u63a7\u5236\u529f\u80fd pids : \u9650\u5236 cgroup \u4e2d\u53ef\u4ee5\u521b\u5efa\u7684\u8fdb\u7a0b\u6570 net_prio : \u5141\u8bb8\u7ba1\u7406\u5458\u52a8\u6001\u7684\u901a\u8fc7\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u7f51\u7edc\u4f20\u8f93\u7684\u4f18\u5148\u7ea7 \u901a\u8fc7\u4e0a\u9762\u7684\u5404\u4e2a\u5b50\u7cfb\u7edf\uff0c\u53ef\u4ee5\u770b\u51fa\u4f7f\u7528 CGroups \u53ef\u4ee5\u63a7\u5236\u7684\u8d44\u6e90\u6709: CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u3001IO\u3001\u6587\u4ef6\u8bbe\u5907\u7b49\u3002 CGroups \u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\u3000\u3000\u3000\u3000\u3000\u3000\u3000 CGroups \u7684 API \u4ee5\u4e00\u4e2a\u4f2a\u6587\u4ef6\u7cfb\u7edf\uff08/sys/fs/cgroup/\uff09\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u7528\u6237\u7684\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0 CGroups \u7684\u7ec4\u4ef6\u7ba1\u7406 CGroups \u7684\u7ec4\u4ef6\u7ba1\u7406\u64cd\u4f5c\u5355\u5143\u53ef\u4ee5\u7ec6\u7c92\u5ea6\u5230\u7ebf\u7a0b\u7ea7\u522b\uff0c\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1 CGroups\uff0c\u4ece\u800c\u5b9e\u73b0\u8d44\u6e90\u8f7d\u5206\u914d\u548c\u518d\u5229\u7528 \u6240\u6709\u8d44\u6e90\u7ba1\u7406\u7684\u529f\u80fd\u90fd\u4ee5\u5b50\u7cfb\u7edf\uff08cpu\u3001cpuset \u8fd9\u4e9b\uff09\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u63a5\u53e3\u7edf\u4e00\u5b50\u4efb\u52a1\u521b\u5efa\u4e4b\u521d\u4e0e\u5176\u7236\u4efb\u52a1\u5904\u4e8e\u540c\u4e00\u4e2a CGroups \u7684\u63a7\u5236\u7ec4 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b /proc/cgroups \u6587\u4ef6\u6765\u67e5\u627e\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684 CGroups \u5b50\u7cfb\u7edf: \u5728\u4f7f\u7528 CGroups \u65f6\u9700\u8981\u5148\u6302\u8f7d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 df -h | grep cgroup \u547d\u4ee4\u8fdb\u884c\u67e5\u770b: \u279c ~ df -h | grep cgroup tmpfs 3 .9G 0 3 .9G 0 % /sys/fs/cgroup \u53ef\u4ee5\u770b\u5230\u88ab\u6302\u8f7d\u5230\u4e86 /sys/fs/cgroup \uff0ccgroup \u5176\u5b9e\u662f\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u6587\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mount --type cgroup \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u6302\u8f7d\u4e86\u54ea\u4e9b cgroup\uff1a \u279c ~ mount --type cgroup cgroup on /sys/fs/cgroup/systemd type cgroup ( rw,nosuid,nodev,noexec,relatime,xattr,release_agent = /usr/lib/systemd/systemd-cgroups-agent,name = systemd ) cgroup on /sys/fs/cgroup/cpuset type cgroup ( rw,nosuid,nodev,noexec,relatime,cpuset ) cgroup on /sys/fs/cgroup/perf_event type cgroup ( rw,nosuid,nodev,noexec,relatime,perf_event ) cgroup on /sys/fs/cgroup/cpu,cpuacct type cgroup ( rw,nosuid,nodev,noexec,relatime,cpuacct,cpu ) cgroup on /sys/fs/cgroup/memory type cgroup ( rw,nosuid,nodev,noexec,relatime,memory ) cgroup on /sys/fs/cgroup/freezer type cgroup ( rw,nosuid,nodev,noexec,relatime,freezer ) cgroup on /sys/fs/cgroup/net_cls,net_prio type cgroup ( rw,nosuid,nodev,noexec,relatime,net_prio,net_cls ) cgroup on /sys/fs/cgroup/blkio type cgroup ( rw,nosuid,nodev,noexec,relatime,blkio ) cgroup on /sys/fs/cgroup/hugetlb type cgroup ( rw,nosuid,nodev,noexec,relatime,hugetlb ) cgroup on /sys/fs/cgroup/pids type cgroup ( rw,nosuid,nodev,noexec,relatime,pids ) cgroup on /sys/fs/cgroup/devices type cgroup ( rw,nosuid,nodev,noexec,relatime,devices ) /sys/fs/cgroup \u76ee\u5f55\u4e0b\u7684\u6bcf\u4e2a\u5b50\u76ee\u5f55\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u5b50\u7cfb\u7edf\uff0ccgroup \u662f\u4ee5\u76ee\u5f55\u5f62\u5f0f\u7ec4\u7ec7\u7684\uff0c/ \u662f cgroup \u7684\u6839\u76ee\u5f55\uff0c\u4f46\u662f\u8fd9\u4e2a\u6839\u76ee\u5f55\u53ef\u4ee5\u88ab\u6302\u8f7d\u5230\u4efb\u610f\u76ee\u5f55\uff0c\u4f8b\u5982 CGroups \u7684 memory \u5b50\u7cfb\u7edf\u7684\u6302\u8f7d\u70b9\u662f /sys/fs/cgroup/memory \uff0c\u90a3\u4e48 /sys/fs/cgroup/memory/ \u5bf9\u5e94 memory \u5b50\u7cfb\u7edf\u7684\u6839\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\uff1a \u279c ~ ll /sys/fs/cgroup/memory/ total 0 -rw-r--r-- 1 root root 0 Oct 21 10 :10 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 10 :10 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 10 :10 cgroup.procs -r--r--r-- 1 root root 0 Oct 21 10 :10 cgroup.sane_behavior drwxr-xr-x 4 root root 0 Oct 21 10 :10 kubepods.slice -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.failcnt --w------- 1 root root 0 Oct 21 10 :10 memory.force_empty -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.slabinfo -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.tcp.usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.kmem.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.max_usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.failcnt -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.memsw.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.move_charge_at_immigrate -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.numa_stat -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.oom_control ---------- 1 root root 0 Oct 21 10 :10 memory.pressure_level -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.soft_limit_in_bytes -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.stat -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.swappiness -r--r--r-- 1 root root 0 Oct 21 10 :10 memory.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 10 :10 memory.use_hierarchy -rw-r--r-- 1 root root 0 Oct 21 10 :10 notify_on_release -rw-r--r-- 1 root root 0 Oct 21 10 :10 release_agent drwxr-xr-x 65 root root 0 Oct 21 10 :25 system.slice -rw-r--r-- 1 root root 0 Oct 21 10 :10 tasks drwxr-xr-x 2 root root 0 Oct 21 10 :10 user.slice \u4e0a\u9762\u5305\u542b kubepods.slice\u3001system.slice\u3001user.slice \u7b49\u76ee\u5f55\uff0c\u8fd9\u4e9b\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u4f1a\u6709\u5b50\u76ee\u5f55\uff0c\u76f8\u5f53\u4e8e\u4e00\u9897\u6709\u5c42\u7ea7\u5173\u7cfb\u7684\u6811\u6765\u8fdb\u884c\u7ec4\u7ec7\uff1a / \u251c\u2500\u2500 kubepods.slice \u251c\u2500\u2500 system.slice \u2514\u2500\u2500 user.slice \u4f8b\u5982\u6211\u5728\u8282\u70b9\u4e0a\u4f7f\u7528 systemd \u7ba1\u7406\u4e86\u4e00\u4e2a Prometheus \u7684\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 systemctl status prometheus \u547d\u4ee4\u67e5\u770b Prometheus \u8fdb\u7a0b\u6240\u5728\u7684 cgroup \u4e3a /system.slice/prometheus.service : \u279c ~ systemctl status prometheus \u25cf prometheus.service - prometheus service Loaded: loaded ( /etc/systemd/system/prometheus.service ; enabled ; vendor preset: disabled ) Active: active ( running ) since Thu 2021 -10-21 10 :10:12 CST ; 1h 40min ago Docs: https://prometheus.io Main PID: 1065 ( prometheus ) Tasks: 10 Memory: 167 .4M CGroup: /system.slice/prometheus.service \u2514\u25001065 /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus --config.file = /root/p8strain/prometheu... \u4e0a\u9762\u663e\u793a\u7684 CGroup \u53ea\u662f\u4e00\u4e2a\u76f8\u5bf9\u7684\u8def\u5f84\uff0c\u5b9e\u9645\u7684\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u662f\u5728\u5bf9\u5e94\u7684\u5b50\u7cfb\u7edf\u4e0b\u9762\uff0c\u6bd4\u5982 /sys/fs/cgroup/cpu/system.slice/prometheus.service \u3001 /sys/fs/cgroup/memory/system.slice/prometheus.service \u76ee\u5f55\uff1a \u8fd9\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a cpu \u548c memory \u5b50\u7cfb\u7edf\u88ab\u9644\u52a0\u5230\u4e86 /system.slice/prometheus.service \u8fd9\u4e2a cgroup \u4e0a\u3002 Info \u5982\u679c linux \u7cfb\u7edf\u4f7f\u7528 systemd \u521d\u59cb\u5316\u7cfb\u7edf\uff0c\u521d\u59cb\u5316\u8fdb\u7a0b\u4f1a\u751f\u6210\u4e00\u4e2a root cgroup\uff0c\u6bcf\u4e2a systemd unit \u90fd\u5c06\u4f1a\u88ab\u5206\u914d\u4e00\u4e2acgroup\uff0c\u540c\u6837\u53ef\u4ee5\u914d\u7f6e\u5bb9\u5668\u8fd0\u884c\u65f6\u5982 containerd \u9009\u62e9\u4f7f\u7528 cgroupfs \u6216 systemd \u4f5c\u4e3a cgroup \u9a71\u52a8\uff0ccontainerd \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f cgroupfs\uff0c\u4f46\u5bf9\u4e8e\u4f7f\u7528\u4e86 systemd \u7684 linux \u53d1\u884c\u7248\u6765\u8bf4\u5c31\u540c\u65f6\u5b58\u5728\u4e24\u4e2a cgroup \u7ba1\u7406\u5668\uff0c\u5bf9\u4e8e\u8be5\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u7684\u5bb9\u5668\u4f7f\u7528\u7684\u662fcgroupfs\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6 systemd \u7ba1\u7406\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u662f systemd\uff0c\u8fd9\u6837\u5728\u670d\u52a1\u5668\u8d44\u6e90\u8d1f\u8f7d\u9ad8\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u53d8\u7684\u4e0d\u7a33\u5b9a\u3002\u56e0\u6b64\u5bf9\u4e8e\u4f7f\u7528\u4e86 systemd \u7684 linux \u7cfb\u7edf\uff0c\u63a8\u8350\u5c06\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 cgroup \u9a71\u52a8\u4f7f\u7528 systemd\u3002","title":"CGroups\u6982\u8ff0"},{"location":"Container/namespace%26cgroups/#cgroup","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5c1d\u8bd5\u624b\u52a8\u8bbe\u7f6e\u4e0b cgroup\uff0c\u4ee5 CPU \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u9996\u5148\u6211\u4eec\u5728 /sys/fs/cgroup/cpu \u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ydzs.test \u7684\u76ee\u5f55\uff1a \u279c ~ mkdir -p /sys/fs/cgroup/cpu/ydzs.test \u279c ~ ls /sys/fs/cgroup/cpu/ydzs.test/ cgroup.clone_children cpuacct.stat cpu.cfs_period_us cpu.rt_runtime_us notify_on_release cgroup.event_control cpuacct.usage cpu.cfs_quota_us cpu.shares tasks cgroup.procs cpuacct.usage_percpu cpu.rt_period_us cpu.stat \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u76ee\u5f55\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4e0b\u9762\u5c31\u4f1a\u5df2\u7ecf\u81ea\u52a8\u521b\u5efa cgroup \u7684\u76f8\u5173\u6587\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 cpu.cfs_period_us \u548c cpu.cfs_quota_us \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u524d\u9762\u4e00\u4e2a\u662f\u7528\u6765\u914d\u7f6e CPU \u65f6\u95f4\u5468\u671f\u957f\u5ea6\u7684\uff0c\u9ed8\u8ba4\u4e3a 100000us \uff0c\u540e\u8005\u7528\u6765\u8bbe\u7f6e\u5728\u6b64\u65f6\u95f4\u5468\u671f\u957f\u5ea6\u5185\u6240\u80fd\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a-1\uff0c\u8868\u793a\u4e0d\u53d7\u65f6\u95f4\u9650\u5236\u3002 \u279c ~ cat /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_period_us 100000 \u279c ~ cat /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us -1 \u73b0\u5728\u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python \u811a\u672c\u6765\u6d88\u8017 CPU\uff1a # cgroup.py while True : pass \u76f4\u63a5\u6267\u884c\u8fd9\u4e2a\u6b7b\u5faa\u73af\u811a\u672c\u5373\u53ef\uff1a \u279c ~ python cgroup . py & [ 1 ] 2113 \u4f7f\u7528 top \u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u53f72113\u7684 CPU \u4f7f\u7528\u7387\u8fbe\u5230\u4e86 100% \u73b0\u5728\u6211\u4eec\u5c06\u8fd9\u4e2a\u8fdb\u7a0bID\u5199\u5165\u5230 /sys/fs/cgroup/cpu/ydzs.test/tasks \u6587\u4ef6\u4e0b\u9762\u53bb\uff0c\u7136\u540e\u8bbe\u7f6e /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us \u4e3a 10000us \uff0c\u56e0\u4e3a cpu.cfs_period_us \u9ed8\u8ba4\u503c\u4e3a 100000us \uff0c\u6240\u4ee5\u8fd9\u8868\u793a\u6211\u4eec\u8981\u9650\u5236 CPU \u4f7f\u7528\u7387\u4e3a10%\uff1a \u279c ~ echo 2113 > /sys/fs/cgroup/cpu/ydzs.test/tasks \u279c ~ echo 10000 > /sys/fs/cgroup/cpu/ydzs.test/cpu.cfs_quota_us \u8bbe\u7f6e\u5b8c\u8fc7\u540e\u4e0a\u9762\u6211\u4eec\u7684\u6d4b\u8bd5\u8fdb\u7a0b CPU \u5c31\u4f1a\u88ab\u9650\u5236\u5728 10% \u5de6\u53f3\u4e86\uff0c\u518d\u6b21\u4f7f\u7528 top \u547d\u4ee4\u67e5\u770b\u8be5\u8fdb\u7a0b\u53ef\u4ee5\u9a8c\u8bc1\u3002 \u5982\u679c\u8981\u9650\u5236\u5185\u5b58\u7b49\u5176\u4ed6\u8d44\u6e90\u7684\u8bdd\uff0c\u540c\u6837\u53bb\u5bf9\u5e94\u7684\u5b50\u7cfb\u7edf\u4e0b\u9762\u8bbe\u7f6e\u8d44\u6e90\uff0c\u5e76\u5c06\u8fdb\u7a0b ID \u52a0\u5165 tasks \u4e2d\u5373\u53ef\u3002\u5982\u679c\u8981\u5220\u9664\u8fd9\u4e2a cgroup\uff0c\u76f4\u63a5\u5220\u9664\u6587\u4ef6\u5939\u662f\u4e0d\u884c\u7684\uff0c\u9700\u8981\u4f7f\u7528 libcgroup \u5de5\u5177\uff1a \u279c ~ yum install libcgroup libcgroup-tools \u279c ~ cgdelete cpu:ydzs.test \u279c ~ ls /sys/fs/cgroup/cpu/ydzs.test ls: cannot access /sys/fs/cgroup/cpu/ydzs.test: No such file or directory","title":"CGroup \u6d4b\u8bd5"},{"location":"Container/namespace%26cgroups/#cgroups_1","text":"\u4e0a\u9762\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u666e\u901a\u5e94\u7528\u5982\u4f55\u914d\u7f6e cgroup\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728 Containerd \u7684\u5bb9\u5668\u4e2d\u6765\u4f7f\u7528 cgroup\uff0c\u6bd4\u5982\u4f7f\u7528 nerdctl \u542f\u52a8\u4e00\u4e2a nginx \u5bb9\u5668\uff0c\u5e76\u9650\u5236\u5176\u4f7f\u7528\u5185\u5b58\u4e3a50M: \u279c ~ nerdctl run -d -m 50m --name nginx nginx:alpine 8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 8690c7dba4ff docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 53 seconds ago Up nginx \u5728\u4f7f\u7528 nerdctl run \u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 -m \u6216 --memory \u53c2\u6570\u6765\u73b0\u5728\u5185\u5b58\uff0c\u542f\u52a8\u5b8c\u6210\u540e\u8be5\u5bb9\u5668\u7684 cgroup \u4f1a\u51fa\u73b0\u5728 \u540d\u4e3a default \u7684\u76ee\u5f55\u4e0b\u9762\uff0c\u6bd4\u5982\u67e5\u770b\u5185\u5b58\u5b50\u7cfb\u7edf\u7684\u76ee\u5f55\uff1a \u279c ~ ll /sys/fs/cgroup/memory/default/ total 0 drwxr-xr-x 2 root root 0 Oct 21 15 :01 8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 15 :01 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.procs ...... \u4e0a\u9762\u6211\u4eec\u542f\u52a8\u7684 nginx \u5bb9\u5668 ID \u7684\u76ee\u5f55\u4f1a\u51fa\u73b0\u5728 /sys/fs/cgroup/memory/default/ \u4e0b\u9762\uff0c\u8be5\u6587\u4ef6\u5939\u4e0b\u9762\u6709\u5f88\u591a\u548c\u5185\u5b58\u76f8\u5173\u7684 cgroup \u914d\u7f6e\u6587\u4ef6\uff0c\u8981\u8fdb\u884c\u76f8\u5173\u7684\u914d\u7f6e\u5c31\u9700\u8981\u5728\u8be5\u76ee\u5f55\u4e0b\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\u53bb\u64cd\u4f5c\uff1a \u279c ~ ll /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c total 0 -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.clone_children --w--w--w- 1 root root 0 Oct 21 15 :01 cgroup.event_control -rw-r--r-- 1 root root 0 Oct 21 15 :01 cgroup.procs -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.failcnt --w------- 1 root root 0 Oct 21 15 :01 memory.force_empty -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.slabinfo -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.tcp.usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.kmem.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.max_usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.failcnt -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.limit_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.max_usage_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.memsw.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.move_charge_at_immigrate -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.numa_stat -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.oom_control ---------- 1 root root 0 Oct 21 15 :01 memory.pressure_level -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.soft_limit_in_bytes -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.stat -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.swappiness -r--r--r-- 1 root root 0 Oct 21 15 :01 memory.usage_in_bytes -rw-r--r-- 1 root root 0 Oct 21 15 :01 memory.use_hierarchy -rw-r--r-- 1 root root 0 Oct 21 15 :01 notify_on_release -rw-r--r-- 1 root root 0 Oct 21 15 :01 tasks \u6211\u4eec\u8fd9\u91cc\u9700\u8981\u5173\u5fc3\u7684\u662f memory.limit_in_bytes \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5c31\u662f\u7528\u6765\u8bbe\u7f6e\u5185\u5b58\u5927\u5c0f\u7684\uff0c\u6b63\u5e38\u5e94\u8be5\u662f 50M \u7684\u5185\u5b58\u9650\u5236\uff1a \u279c ~ cat /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c/memory.limit_in_bytes 52428800 \u540c\u6837\u6211\u4eec\u7684 nginx \u5bb9\u5668\u8fdb\u7a0b ID \u4e5f\u4f1a\u51fa\u73b0\u5728\u4e0a\u9762\u7684 tasks \u6587\u4ef6\u4e2d\uff1a \u279c ~ cat /sys/fs/cgroup/memory/default/8690c7dba4ffe03d63983555c594e2784c146b5f9939de1195a9626339c9129c/tasks 2686 2815 2816 2817 2818 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u8fc7\u6ee4\u8be5\u8fdb\u7a0b\u53f7\uff0c\u53ef\u4ee5\u770b\u51fa\u7b2c\u4e00\u884c\u7684 2686 \u5c31\u662f nginx \u8fdb\u7a0b\u5728\u4e3b\u673a\u4e0a\u7684\u8fdb\u7a0b ID\uff0c\u4e0b\u9762\u51e0\u4e2a\u662f\u8fd9\u4e2a\u8fdb\u7a0b\u4e0b\u7684\u7ebf\u7a0b\uff1a \u279c ~ ps -ef | grep 2686 root 2686 2656 0 15 :01 ? 00 :00:00 nginx: master process nginx -g daemon off ; 101 2815 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2816 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2817 2686 0 15 :01 ? 00 :00:00 nginx: worker process 101 2818 2686 0 15 :01 ? 00 :00:00 nginx: worker process root 2950 1976 0 15 :36 pts/0 00 :00:00 grep --color = auto 2686","title":"\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528CGroups"},{"location":"Container/namespace%26cgroups/#namespaces","text":"namespace \u4e5f\u79f0\u547d\u540d\u7a7a\u95f4\uff0c\u662f Linux \u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u7528\u4e8e\u9694\u79bb\u8fdb\u7a0b\u6811\u3001\u7f51\u7edc\u63a5\u53e3\u3001\u6302\u8f7d\u70b9\u4ee5\u53ca\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7b49\u8d44\u6e90\u7684\u65b9\u6cd5\u3002\u5728\u65e5\u5e38\u4f7f\u7528\u4e2a\u4eba PC \u65f6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u8fd0\u884c\u591a\u4e2a\u5b8c\u5168\u5206\u79bb\u7684\u670d\u52a1\u5668\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5728\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u4e86\u591a\u4e2a\u670d\u52a1\uff0c\u8fd9\u4e9b\u670d\u52a1\u5176\u5b9e\u4f1a\u76f8\u4e92\u5f71\u54cd\u7684\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u90fd\u80fd\u770b\u5230\u5176\u4ed6\u670d\u52a1\u7684\u8fdb\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5bbf\u4e3b\u673a\u5668\u4e0a\u7684\u4efb\u610f\u6587\u4ef6\uff0c\u4e00\u65e6\u670d\u52a1\u5668\u4e0a\u7684\u67d0\u4e00\u4e2a\u670d\u52a1\u88ab\u5165\u4fb5\uff0c\u90a3\u4e48\u5165\u4fb5\u8005\u5c31\u80fd\u591f\u8bbf\u95ee\u5f53\u524d\u673a\u5668\u4e0a\u7684\u6240\u6709\u670d\u52a1\u548c\u6587\u4ef6\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u613f\u610f\u770b\u5230\u7684\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u4e0d\u540c\u670d\u52a1\u80fd\u505a\u5230\u5b8c\u5168\u9694\u79bb\uff0c\u5c31\u50cf\u8fd0\u884c\u5728\u591a\u53f0\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u4e00\u6837\u3002\u800c\u6211\u4eec\u8fd9\u91cc\u7684\u5bb9\u5668\u5176\u5b9e\u5c31\u901a\u8fc7 Linux \u7684 Namespaces \u6280\u672f\u6765\u5b9e\u73b0\u7684\u5bf9\u4e0d\u540c\u7684\u5bb9\u5668\u8fdb\u884c\u9694\u79bb\u3002 linux \u5171\u67096(7)\u79cd\u547d\u540d\u7a7a\u95f4: ipc namespace : \u7ba1\u7406\u5bf9 IPC \u8d44\u6e90\uff08\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u548c\u5171\u4eab\u5185\u5b58\uff09\u7684\u8bbf\u95ee net namespace : \u7f51\u7edc\u8bbe\u5907\u3001\u7f51\u7edc\u6808\u3001\u7aef\u53e3\u7b49\u9694\u79bb mnt namespace : \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u70b9\u9694\u79bb pid namespace : \u7528\u4e8e\u8fdb\u7a0b\u9694\u79bb user namespace : \u7528\u6237\u548c\u7528\u6237\u7ec4\u9694\u79bb\uff083.8\u4ee5\u540e\u7684\u5185\u6838\u624d\u652f\u6301\uff09 uts namespace : \u4e3b\u673a\u548c\u57df\u540d\u9694\u79bb cgroup namespace \uff1a\u7528\u4e8e cgroup \u6839\u76ee\u5f55\u9694\u79bb\uff084.6\u4ee5\u540e\u7248\u672c\u7684\u5185\u6838\u624d\u652f\u6301\uff09 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 lsns \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u5df2\u7ecf\u521b\u5efa\u7684\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ lsns NS TYPE NPROCS PID USER COMMAND 4026531836 pid 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531837 user 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531838 uts 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531839 ipc 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531840 mnt 138 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026531856 mnt 1 28 root kdevtmpfs 4026531956 net 143 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026532503 mnt 2 728 root /usr/sbin/NetworkManager --no-daemon 4026532504 mnt 1 745 chrony /usr/sbin/chronyd 4026532642 mnt 1 1076 grafana /usr/sbin/grafana-server --config = /etc/grafana/grafana.ini --pidfile = /var/run \u8981\u67e5\u770b\u4e00\u4e2a\u8fdb\u7a0b\u6240\u5c5e\u7684\u547d\u540d\u7a7a\u95f4\u4fe1\u606f\uff0c\u53ef\u4ee5\u5230 /proc/<pid>/ns \u76ee\u5f55\u4e0b\u67e5\u770b\uff1a \u279c ~ ps -ef | grep prometheus root 1065 1 0 10 :10 ? 00 :01:13 /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus --config.file = /root/p8strain/prometheus-2.30.2.linux-amd64/prometheus.yml \u279c ~ ll /proc/1065/ns total 0 lrwxrwxrwx 1 root root 0 Oct 21 15 :58 ipc -> ipc: [ 4026531839 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 mnt -> mnt: [ 4026531840 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 net -> net: [ 4026531956 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 pid -> pid: [ 4026531836 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 user -> user: [ 4026531837 ] lrwxrwxrwx 1 root root 0 Oct 21 15 :58 uts -> uts: [ 4026531838 ] \u8fd9\u4e9b namespace \u90fd\u662f\u94fe\u63a5\u6587\u4ef6, \u683c\u5f0f\u4e3a namespaceType:[inode number] \uff0c inode number \u7528\u6765\u6807\u8bc6\u4e00\u4e2a namespace\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a namespace id\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u7684\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u94fe\u63a5\u6587\u4ef6\u6307\u5411\u540c\u4e00\u4e2a\uff0c\u90a3\u4e48\u5176\u76f8\u5173\u8d44\u6e90\u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u5c31\u6ca1\u6709\u9694\u79bb\u4e86\u3002\u6bd4\u5982\u540c\u6837\u9488\u5bf9\u4e0a\u9762\u8fd0\u884c\u7684 nginx \u5bb9\u5668\uff0c\u6211\u4eec\u67e5\u770b\u5176\u547d\u540d\u7a7a\u95f4\uff1a \u279c ~ lsns | grep nginx 4026532505 mnt 5 3171 root nginx: master process nginx -g daemon off 4026532506 uts 5 3171 root nginx: master process nginx -g daemon off 4026532507 ipc 5 3171 root nginx: master process nginx -g daemon off 4026532508 pid 5 3171 root nginx: master process nginx -g daemon off 4026532510 net 5 3171 root nginx: master process nginx -g daemon off \u53ef\u4ee5\u770b\u51fa nginx \u5bb9\u5668\u542f\u52a8\u540e\uff0c\u5df2\u7ecf\u4e3a\u8be5\u5bb9\u5668\u81ea\u52a8\u521b\u5efa\u4e86\u5355\u72ec\u7684 mtn\u3001uts\u3001ipc\u3001pid\u3001net \u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5bb9\u5668\u5728\u8fd9\u4e9b\u65b9\u9762\u662f\u72ec\u7acb\u9694\u79bb\u7684\uff0c\u5176\u4ed6\u5bb9\u5668\u60f3\u8981\u548c\u8be5\u5bb9\u5668\u5171\u4eab\u67d0\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6307\u5411\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002","title":"Namespaces"},{"location":"Container/namespace%26cgroups/#_1","text":"https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/ https://www.infoq.cn/article/docker-resource-management-cgroups/","title":"\u53c2\u8003\u6587\u6863"},{"location":"Container/nerdctl/","text":"Containerd \u9ad8\u7ea7\u547d\u4ee4\u884c\u5de5\u5177 nerdctl \u00b6 \u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528 ctr \u64cd\u4f5c\u7ba1\u7406 containerd \u955c\u50cf\u5bb9\u5668\uff0c\u4f46\u662f\u5927\u5bb6\u90fd\u4e60\u60ef\u4e86\u4f7f\u7528 docker cli\uff0c ctr \u4f7f\u7528\u8d77\u6765\u53ef\u80fd\u8fd8\u662f\u4e0d\u592a\u987a\u624b\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u5927\u5bb6\u66f4\u597d\u7684\u8f6c\u5230 containerd \u4e0a\u9762\u6765\uff0c\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff1a nerdctl \u3002nerdctl \u662f\u4e00\u4e2a\u4e0e docker cli \u98ce\u683c\u517c\u5bb9\u7684 containerd \u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u800c\u4e14\u76f4\u63a5\u517c\u5bb9 docker compose \u7684\u8bed\u6cd5\u7684\uff0c\u8fd9\u5c31\u5927\u5927\u63d0\u9ad8\u4e86\u76f4\u63a5\u5c06 containerd \u4f5c\u4e3a\u672c\u5730\u5f00\u53d1\u3001\u6d4b\u8bd5\u6216\u8005\u5355\u673a\u5bb9\u5668\u90e8\u7f72\u4f7f\u7528\u7684\u6548\u7387\u3002 \u5b89\u88c5 \u00b6 \u540c\u6837\u76f4\u63a5\u5728 GitHub Release \u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230 PATH \u8def\u5f84\u4e0b\u5373\u53ef\uff1a # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 containerd\uff0c\u5219\u53ef\u4ee5\u4e0b\u8f7d nerdctl-full-<VERSION>-linux-amd64.tar.gz \u5305\u8fdb\u884c\u5b89\u88c5 \u279c ~ wget https://github.com/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz \u279c ~ mkdir -p /usr/local/containerd/bin/ && tar -zxvf nerdctl-0.12.1-linux-amd64.tar.gz nerdctl && mv nerdctl /usr/local/containerd/bin/ \u279c ~ ln -s /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl \u279c ~ nerdctl version Client: Version: v0.12.1 Git commit: c802f934791f83dacf20a041cd1c865f8fac954e Server: containerd: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 \u5b89\u88c5\u5b8c\u6210\u540e\u63a5\u4e0b\u6765\u5b66\u4e60\u4e0b nerdctl \u547d\u4ee4\u884c\u5de5\u5177\u7684\u4f7f\u7528\u3002 \u547d\u4ee4 \u00b6 Run&Exec \u00b6 nerdctl run \u548c docker run \u7c7b\u4f3c\u53ef\u4ee5\u4f7f\u7528 nerdctl run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\uff0c\u4f8b\u5982\uff1a \u279c ~ nerdctl run -d -p 80 :80 --name = nginx --restart = always nginx:alpine docker.io/library/nginx:alpine: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:ce6ca11a3fa7e0e6b44813901e3289212fc2f327ee8b1366176666e8fb470f24: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:7ce0143dee376bfd2937b499a46fb110bda3c629c195b84b1cf6e19be1a9e23b: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 5 .3 s total: 3 .1 Ki ( 606 .0 B/s ) 6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8 \u53ef\u9009\u7684\u53c2\u6570\u4f7f\u7528\u548c docker run \u57fa\u672c\u4e00\u76f4\uff0c\u6bd4\u5982 -i\u3001-t\u3001--cpus\u3001--memory \u7b49\u9009\u9879\uff0c\u53ef\u4ee5\u4f7f\u7528 nerdctl run --help \u83b7\u53d6\u53ef\u4f7f\u7528\u7684\u547d\u4ee4\u9009\u9879\uff1a \u279c ~ nerdctl run --help NAME: nerdctl run - Run a command in a new container USAGE: nerdctl run [ command options ] [ arguments... ] OPTIONS: --help show help ( default: false ) --tty, -t ( Currently -t needs to correspond to -i ) ( default: false ) --interactive, -i Keep STDIN open even if not attached ( default: false ) --detach, -d Run container in background and print container ID ( default: false ) --restart value Restart policy to apply when a container exits ( implemented values: \"no\" | \"always\" ) ( default: \"no\" ) --rm Automatically remove the container when it exits ( default: false ) --pull value Pull image before running ( \"always\" | \"missing\" | \"never\" ) ( default: \"missing\" ) --network value, --net value Connect a container to a network ( \"bridge\" | \"host\" | \"none\" ) ( default: \"bridge\" ) --dns value Set custom DNS servers ( default: \"8.8.8.8\" , \"1.1.1.1\" ) --publish value, -p value Publish a container 's port(s) to the host --hostname value, -h value Container host name --cpus value Number of CPUs (default: 0) --memory value, -m value Memory limit --pid value PID namespace to use --pids-limit value Tune container pids limit (set -1 for unlimited) (default: -1) --cgroupns value Cgroup namespace to use, the default depends on the cgroup version (\"host\"|\"private\") (default: \"host\") --cpuset-cpus value CPUs in which to allow execution (0-3, 0,1) --cpu-shares value CPU shares (relative weight) (default: 0) --device value Add a host device to the container --user value, -u value Username or UID (format: <name|uid>[:<group|gid>]) --security-opt value Security options --cap-add value Add Linux capabilities --cap-drop value Drop Linux capabilities --privileged Give extended privileges to this container (default: false) --runtime value Runtime to use for this container, e.g. \"crun\", or \"io.containerd.runsc.v1\" (default: \"io.containerd.runc.v2\") --sysctl value Sysctl options --gpus value GPU devices to add to the container (' all ' to pass all GPUs) --volume value, -v value Bind mount a volume --read-only Mount the container' s root filesystem as read only ( default: false ) --rootfs The first argument is not an image but the rootfs to the exploded container ( default: false ) --entrypoint value Overwrite the default ENTRYPOINT of the image --workdir value, -w value Working directory inside the container --env value, -e value Set environment variables --env-file value Set environment variables from file --name value Assign a name to the container --label value, -l value Set meta data on a container --label-file value Read in a line delimited file of labels --cidfile value Write the container ID to the file --shm-size value Size of /dev/shm nerdctl exec \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 exec \u547d\u4ee4\u6267\u884c\u5bb9\u5668\u76f8\u5173\u547d\u4ee4\uff0c\u4f8b\u5982\uff1a \u279c ~ nerdctl exec -it nginx /bin/sh / # date Thu Aug 19 06 :43:19 UTC 2021 / # \u5bb9\u5668\u7ba1\u7406 \u00b6 nerdctl ps \uff1a\u5217\u51fa\u5bb9\u5668 \u4f7f\u7528 nerdctl ps \u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u5bb9\u5668\u3002 \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6e489777d2f7 docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 10 minutes ago Up 0 .0.0.0:80->80/tcp nginx \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 -a \u9009\u9879\u663e\u793a\u6240\u6709\u7684\u5bb9\u5668\u5217\u8868\uff0c\u9ed8\u8ba4\u53ea\u663e\u793a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f nerdctl ps \u547d\u4ee4\u5e76\u6ca1\u6709\u5b9e\u73b0 docker ps \u4e0b\u9762\u7684 --filter\u3001--format\u3001--last\u3001--size \u7b49\u9009\u9879\u3002 nerdctl inspect \uff1a\u83b7\u53d6\u5bb9\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u279c ~ nerdctl inspect nginx [ { \"Id\" : \"6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8\" , \"Created\" : \"2021-08-19T06:35:46.403464674Z\" , \"Path\" : \"/docker-entrypoint.sh\" , \"Args\" : [ \"nginx\" , \"-g\" , \"daemon off;\" ] , \"State\" : { \"Status\" : \"running\" , \"Running\" : true, \"Paused\" : false, \"Pid\" : 2002 , \"ExitCode\" : 0 , \"FinishedAt\" : \"0001-01-01T00:00:00Z\" } , \"Image\" : \"docker.io/library/nginx:alpine\" , \"ResolvConfPath\" : \"/var/lib/nerdctl/1935db59/containers/default/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8/resolv.conf\" , \"LogPath\" : \"/var/lib/nerdctl/1935db59/containers/default/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8-json.log\" , \"Name\" : \"nginx\" , \"Driver\" : \"overlayfs\" , \"Platform\" : \"linux\" , \"AppArmorProfile\" : \"nerdctl-default\" , \"NetworkSettings\" : { \"Ports\" : { \"80/tcp\" : [ { \"HostIp\" : \"0.0.0.0\" , \"HostPort\" : \"80\" } ] } , \"GlobalIPv6Address\" : \"\" , \"GlobalIPv6PrefixLen\" : 0 , \"IPAddress\" : \"10.4.0.3\" , \"IPPrefixLen\" : 24 , \"MacAddress\" : \"f2:b1:8e:a2:fe:18\" , \"Networks\" : { \"unknown-eth0\" : { \"IPAddress\" : \"10.4.0.3\" , \"IPPrefixLen\" : 24 , \"GlobalIPv6Address\" : \"\" , \"GlobalIPv6PrefixLen\" : 0 , \"MacAddress\" : \"f2:b1:8e:a2:fe:18\" } } } } ] \u53ef\u4ee5\u770b\u5230\u663e\u793a\u7ed3\u679c\u548c docker inspect \u4e5f\u57fa\u672c\u4e00\u81f4\u7684\u3002 nerdctl logs \uff1a\u83b7\u53d6\u5bb9\u5668\u65e5\u5fd7 \u67e5\u770b\u5bb9\u5668\u65e5\u5fd7\u662f\u6211\u4eec\u5e73\u65f6\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 nerdctl logs \u6765\u83b7\u53d6\u65e5\u5fd7\u6570\u636e\uff1a \u279c ~ nerdctl logs -f nginx ...... 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker processes 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker process 32 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker process 33 \u540c\u6837\u652f\u6301 -f\u3001-t\u3001-n\u3001--since\u3001--until \u8fd9\u4e9b\u9009\u9879\u3002 nerdctl stop \uff1a\u505c\u6b62\u5bb9\u5668 \u279c ~ nerdctl stop nginx nginx \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES \u279c ~ nerdctl ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6e489777d2f7 docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 20 minutes ago Up 0 .0.0.0:80->80/tcp nginx nerdctl rm \uff1a\u5220\u9664\u5bb9\u5668 \u279c ~ nerdctl rm nginx You cannot remove a running container f4ac170235595f28bf962bad68aa81b20fc83b741751e7f3355bd77d8016462d. Stop the container before attempting removal or force remove \u279c ~ nerdctl rm -f ginx nginx \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES \u8981\u5f3a\u5236\u5220\u9664\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 -f \u6216 --force \u9009\u9879\u6765\u64cd\u4f5c\u3002 \u955c\u50cf\u7ba1\u7406 \u00b6 nerdctl images \uff1a\u955c\u50cf\u5217\u8868 \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE alpine latest eb3e4e175ba6 6 days ago 5 .9 MiB nginx alpine bead42240255 29 minutes ago 16 .0 KiB \u4e5f\u9700\u8981\u6ce8\u610f\u7684\u662f\u6ca1\u6709\u5b9e\u73b0 docker images \u7684\u4e00\u4e9b\u9009\u9879\uff0c\u6bd4\u5982 --all\u3001--digests\u3001--filter\u3001--format \u3002 nerdctl pull \uff1a\u62c9\u53d6\u955c\u50cf \u279c ~ docker.io/library/busybox:latest: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:dca71257cd2e72840a21f0323234bb2e33fea6d949fa0f21c5102146f583486b: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:69593048aa3acfee0f75f20b77acb549de2472063053f6730c4091b53f2dfb02: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:b71f96345d44b237decc0c2d6c2f9ad0d17fde83dad7579608f1f0764d9686f2: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 5 .9 s total: 752 .8 ( 127 .5 KiB/s ) nerdctl push \uff1a\u63a8\u9001\u955c\u50cf \u5f53\u7136\u5728\u63a8\u9001\u955c\u50cf\u4e4b\u524d\u4e5f\u53ef\u4ee5\u4f7f\u7528 nerdctl login \u547d\u4ee4\u767b\u5f55\u5230\u955c\u50cf\u4ed3\u5e93\uff0c\u7136\u540e\u518d\u6267\u884c push \u64cd\u4f5c\u3002 \u53ef\u4ee5\u4f7f\u7528 nerdctl login --username xxx --password xxx \u8fdb\u884c\u767b\u5f55\uff0c\u4f7f\u7528 nerdctl logout \u53ef\u4ee5\u6ce8\u9500\u9000\u51fa\u767b\u5f55\u3002 nerdctl tag \uff1a\u955c\u50cf\u6807\u7b7e \u4f7f\u7528 tag \u547d\u4ee4\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u955c\u50cf\u521b\u5efa\u4e00\u4e2a\u522b\u540d\u955c\u50cf\uff1a \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE busybox latest 0f354ec1728d 6 minutes ago 1 .3 MiB nginx alpine bead42240255 41 minutes ago 16 .0 KiB \u279c ~ nerdctl tag nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE busybox latest 0f354ec1728d 7 minutes ago 1 .3 MiB nginx alpine bead42240255 41 minutes ago 16 .0 KiB harbor.k8s.local/course/nginx alpine bead42240255 2 seconds ago 16 .0 KiB nerdctl save \uff1a\u5bfc\u51fa\u955c\u50cf \u4f7f\u7528 save \u547d\u4ee4\u53ef\u4ee5\u5bfc\u51fa\u955c\u50cf\u4e3a\u4e00\u4e2a tar \u538b\u7f29\u5305\u3002 \u279c ~ nerdctl save -o busybox.tar.gz busybox:latest \u279c ~ ls -lh busybox.tar.gz -rw-r--r-- 1 root root 761K Aug 19 15 :19 busybox.tar.gz nerdctl rmi \uff1a\u5220\u9664\u955c\u50cf \u279c ~ nerdctl rmi busybox Untagged: docker.io/library/busybox:latest@sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60 Deleted: sha256:5b8c72934dfc08c7d2bd707e93197550f06c0751023dabb3a045b723c5e7b373 nerdctl load \uff1a\u5bfc\u5165\u955c\u50cf \u4f7f\u7528 load \u547d\u4ee4\u53ef\u4ee5\u5c06\u4e0a\u9762\u5bfc\u51fa\u7684\u955c\u50cf\u518d\u6b21\u5bfc\u5165\uff1a \u279c ~ nerdctl load -i busybox.tar.gz unpacking docker.io/library/busybox:latest ( sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60 ) ...done \u4f7f\u7528 -i \u6216 --input \u9009\u9879\u6307\u5b9a\u9700\u8981\u5bfc\u5165\u7684\u538b\u7f29\u5305\u3002 \u955c\u50cf\u6784\u5efa \u00b6 \u955c\u50cf\u6784\u5efa\u662f\u5e73\u65f6\u6211\u4eec\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u9700\u6c42\uff0c\u6211\u4eec\u77e5\u9053 ctr \u5e76\u6ca1\u6709\u6784\u5efa\u955c\u50cf\u7684\u547d\u4ee4\uff0c\u800c\u73b0\u5728\u6211\u4eec\u53c8\u4e0d\u4f7f\u7528 Docker \u4e86\uff0c\u90a3\u4e48\u5982\u4f55\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u4e86\uff0c\u5e78\u8fd0\u7684\u662f nerdctl \u5c31\u63d0\u4f9b\u4e86 nerdctl build \u8fd9\u6837\u7684\u955c\u50cf\u6784\u5efa\u547d\u4ee4\u3002 nerdctl build \uff1a\u4ece Dockerfile \u6784\u5efa\u955c\u50cf \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u5b9a\u5236\u4e00\u4e2a nginx \u955c\u50cf\uff0c\u65b0\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Dockerfile \u6587\u4ef6\uff1a FROM nginx RUN echo 'Hello Nerdctl From Containerd' > /usr/share/nginx/html/index.html \u7136\u540e\u5728\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6267\u884c\u955c\u50cf\u6784\u5efa\u547d\u4ee4\uff1a \u279c ~ nerdctl build -t nginx:nerdctl -f Dockerfile . FATA [ 0000 ] ` buildctl ` needs to be installed and ` buildkitd ` needs to be running, see https://github.com/moby/buildkit: exec: \"buildctl\" : executable file not found in $PATH \u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u9519\u8bef\u63d0\u793a\uff0c\u9700\u8981\u6211\u4eec\u5b89\u88c5 buildctl \u5e76\u8fd0\u884c buildkitd \uff0c\u8fd9\u662f\u56e0\u4e3a nerdctl build \u9700\u8981\u4f9d\u8d56 buildkit \u5de5\u5177\u3002 buildkit \u9879\u76ee\u4e5f\u662f Docker \u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u6784\u5efa\u5de5\u5177\u5305\uff0c\u652f\u6301 OCI \u6807\u51c6\u7684\u955c\u50cf\u6784\u5efa\u3002\u5b83\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u90e8\u5206: \u670d\u52a1\u7aef buildkitd \uff1a\u5f53\u524d\u652f\u6301 runc \u548c containerd \u4f5c\u4e3a worker\uff0c\u9ed8\u8ba4\u662f runc\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 containerd \u5ba2\u6237\u7aef buildctl \uff1a\u8d1f\u8d23\u89e3\u6790 Dockerfile\uff0c\u5e76\u5411\u670d\u52a1\u7aef buildkitd \u53d1\u51fa\u6784\u5efa\u8bf7\u6c42 buildkit \u662f\u5178\u578b\u7684 C/S \u67b6\u6784\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u662f\u53ef\u4ee5\u4e0d\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u800c nerdctl \u5728\u6784\u5efa\u955c\u50cf\u7684\u65f6\u5019\u4e5f\u4f5c\u4e3a buildkitd \u7684\u5ba2\u6237\u7aef\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u5b89\u88c5\u5e76\u8fd0\u884c buildkitd \u3002 \u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u6765\u5b89\u88c5 buildkit \uff1a \u279c ~ wget https://github.com/moby/buildkit/releases/download/v0.9.1/buildkit-v0.9.1.linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/moby/buildkit/releases/download/v0.9.1/buildkit-v0.9.1.linux-amd64.tar.gz \u279c ~ tar -zxvf buildkit-v0.9.1.linux-amd64.tar.gz -C /usr/local/containerd/ bin/ bin/buildctl bin/buildkit-qemu-aarch64 bin/buildkit-qemu-arm bin/buildkit-qemu-i386 bin/buildkit-qemu-mips64 bin/buildkit-qemu-mips64el bin/buildkit-qemu-ppc64le bin/buildkit-qemu-riscv64 bin/buildkit-qemu-s390x bin/buildkit-runc bin/buildkitd \u279c ~ ln -s /usr/local/containerd/bin/buildkitd /usr/local/bin/buildkitd \u279c ~ ln -s /usr/local/containerd/bin/buildctl /usr/local/bin/buildctl \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Systemd \u6765\u7ba1\u7406 buildkitd \uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 systemd unit \u6587\u4ef6\uff1a \u279c ~ cat /etc/systemd/system/buildkit.service [ Unit ] Description = BuildKit Documentation = https://github.com/moby/buildkit [ Service ] ExecStart = /usr/local/bin/buildkitd --oci-worker = false --containerd-worker = true [ Install ] WantedBy = multi-user.target \u7136\u540e\u542f\u52a8 buildkitd \uff1a \u279c ~ systemctl daemon-reload \u279c ~ systemctl enable buildkit --now Created symlink /etc/systemd/system/multi-user.target.wants/buildkit.service \u2192 /etc/systemd/system/buildkit.service. \u279c ~ systemctl status buildkit \u25cf buildkit.service - BuildKit Loaded: loaded ( /etc/systemd/system/buildkit.service ; enabled ; vendor preset: enabled ) Memory: 8 .6M CGroup: /system.slice/buildkit.service \u2514\u25005779 /usr/local/bin/buildkitd --oci-worker = false --containerd-worker = true Aug 19 16 :03:10 ydzsio systemd [ 1 ] : Started BuildKit. Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = warning msg = \"using host network as the default\" Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = info msg = \"found worker \\\"euznuelxhxb689bc5of7pxmbc\\\", labels> Aug 19 16:03:10 ydzsio buildkitd[5779]: time=\" 2021 -08-19T16:03:10+08:00 \" level=info msg=\" found 1 workers, default = \\\" euznuelxhxb689bc5of7pxm> Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = warning msg = \"currently, only the default worker can be used.\" Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = info msg = \"running server on /run/buildkit/buildkitd.sock\" ~ \u73b0\u5728\u6211\u4eec\u518d\u6765\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff1a \u6784\u5efa\u5b8c\u6210\u540e\u67e5\u770b\u955c\u50cf\u662f\u5426\u6784\u5efa\u6210\u529f\uff1a \u279c ~ nerdctl images WARN [ 0000 ] unparsable image name \"overlayfs@sha256:d5b9b9e4c930f30340650cb373f62f97c93ee3b92c83f01c6e00b7b87d62c624\" REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 4d4d96ac750a 4 minutes ago 16 .0 KiB nginx nerdctl d5b9b9e4c930 About a minute ago 24 .0 KiB \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6709\u6211\u4eec\u6784\u5efa\u7684 nginx:nerdctl \u955c\u50cf\u4e86\u3002\u63a5\u4e0b\u6765\u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u6784\u5efa\u7684\u955c\u50cf\u6765\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u6d4b\u8bd5\uff1a \u279c ~ nerdctl run -d -p 80 :80 --name = nginx --restart = always nginx:nerdctl f8f639cb667926023231b13584226b2c7b856847e0a25bd5f686b9a6e7e3cacd \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f8f639cb6679 docker.io/library/nginx:nerdctl \"/docker-entrypoint.\u2026\" 1 second ago Up 0 .0.0.0:80->80/tcp nginx \u279c ~ curl localhost This is a nerdctl build ' s nginx image base on containerd \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 nerdctl + buildkitd \u8f7b\u677e\u5b8c\u6210\u4e86\u5bb9\u5668\u955c\u50cf\u7684\u6784\u5efa\u3002 \u5f53\u7136\u5982\u679c\u4f60\u8fd8\u60f3\u5728\u5355\u673a\u73af\u5883\u4e0b\u4f7f\u7528 Docker Compose\uff0c\u5728 containerd \u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 nerdctl \u6765\u517c\u5bb9\u8be5\u529f\u80fd\u3002\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 nerdctl compose\u3001nerdctl compose up\u3001nerdctl compose logs\u3001nerdctl compose build\u3001nerdctl compose down \u7b49\u547d\u4ee4\u6765\u7ba1\u7406 Compose \u670d\u52a1\u3002\u8fd9\u6837\u4f7f\u7528 containerd\u3001nerdctl \u7ed3\u5408 buildkit \u7b49\u5de5\u5177\u5c31\u5b8c\u5168\u53ef\u4ee5\u66ff\u4ee3 docker \u5728\u955c\u50cf\u6784\u5efa\u3001\u955c\u50cf\u5bb9\u5668\u65b9\u9762\u7684\u7ba1\u7406\u529f\u80fd\u4e86\u3002","title":"\u547d\u4ee4\u884c\u5de5\u5177Nerdctl"},{"location":"Container/nerdctl/#containerd-nerdctl","text":"\u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528 ctr \u64cd\u4f5c\u7ba1\u7406 containerd \u955c\u50cf\u5bb9\u5668\uff0c\u4f46\u662f\u5927\u5bb6\u90fd\u4e60\u60ef\u4e86\u4f7f\u7528 docker cli\uff0c ctr \u4f7f\u7528\u8d77\u6765\u53ef\u80fd\u8fd8\u662f\u4e0d\u592a\u987a\u624b\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u5927\u5bb6\u66f4\u597d\u7684\u8f6c\u5230 containerd \u4e0a\u9762\u6765\uff0c\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff1a nerdctl \u3002nerdctl \u662f\u4e00\u4e2a\u4e0e docker cli \u98ce\u683c\u517c\u5bb9\u7684 containerd \u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u800c\u4e14\u76f4\u63a5\u517c\u5bb9 docker compose \u7684\u8bed\u6cd5\u7684\uff0c\u8fd9\u5c31\u5927\u5927\u63d0\u9ad8\u4e86\u76f4\u63a5\u5c06 containerd \u4f5c\u4e3a\u672c\u5730\u5f00\u53d1\u3001\u6d4b\u8bd5\u6216\u8005\u5355\u673a\u5bb9\u5668\u90e8\u7f72\u4f7f\u7528\u7684\u6548\u7387\u3002","title":"Containerd \u9ad8\u7ea7\u547d\u4ee4\u884c\u5de5\u5177 nerdctl"},{"location":"Container/nerdctl/#_1","text":"\u540c\u6837\u76f4\u63a5\u5728 GitHub Release \u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230 PATH \u8def\u5f84\u4e0b\u5373\u53ef\uff1a # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 containerd\uff0c\u5219\u53ef\u4ee5\u4e0b\u8f7d nerdctl-full-<VERSION>-linux-amd64.tar.gz \u5305\u8fdb\u884c\u5b89\u88c5 \u279c ~ wget https://github.com/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz \u279c ~ mkdir -p /usr/local/containerd/bin/ && tar -zxvf nerdctl-0.12.1-linux-amd64.tar.gz nerdctl && mv nerdctl /usr/local/containerd/bin/ \u279c ~ ln -s /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl \u279c ~ nerdctl version Client: Version: v0.12.1 Git commit: c802f934791f83dacf20a041cd1c865f8fac954e Server: containerd: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 \u5b89\u88c5\u5b8c\u6210\u540e\u63a5\u4e0b\u6765\u5b66\u4e60\u4e0b nerdctl \u547d\u4ee4\u884c\u5de5\u5177\u7684\u4f7f\u7528\u3002","title":"\u5b89\u88c5"},{"location":"Container/nerdctl/#_2","text":"","title":"\u547d\u4ee4"},{"location":"Container/nerdctl/#runexec","text":"nerdctl run \u548c docker run \u7c7b\u4f3c\u53ef\u4ee5\u4f7f\u7528 nerdctl run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\uff0c\u4f8b\u5982\uff1a \u279c ~ nerdctl run -d -p 80 :80 --name = nginx --restart = always nginx:alpine docker.io/library/nginx:alpine: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:bead42240255ae1485653a956ef41c9e458eb077fcb6dc664cbc3aa9701a05ce: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:ce6ca11a3fa7e0e6b44813901e3289212fc2f327ee8b1366176666e8fb470f24: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:7ce0143dee376bfd2937b499a46fb110bda3c629c195b84b1cf6e19be1a9e23b: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 5 .3 s total: 3 .1 Ki ( 606 .0 B/s ) 6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8 \u53ef\u9009\u7684\u53c2\u6570\u4f7f\u7528\u548c docker run \u57fa\u672c\u4e00\u76f4\uff0c\u6bd4\u5982 -i\u3001-t\u3001--cpus\u3001--memory \u7b49\u9009\u9879\uff0c\u53ef\u4ee5\u4f7f\u7528 nerdctl run --help \u83b7\u53d6\u53ef\u4f7f\u7528\u7684\u547d\u4ee4\u9009\u9879\uff1a \u279c ~ nerdctl run --help NAME: nerdctl run - Run a command in a new container USAGE: nerdctl run [ command options ] [ arguments... ] OPTIONS: --help show help ( default: false ) --tty, -t ( Currently -t needs to correspond to -i ) ( default: false ) --interactive, -i Keep STDIN open even if not attached ( default: false ) --detach, -d Run container in background and print container ID ( default: false ) --restart value Restart policy to apply when a container exits ( implemented values: \"no\" | \"always\" ) ( default: \"no\" ) --rm Automatically remove the container when it exits ( default: false ) --pull value Pull image before running ( \"always\" | \"missing\" | \"never\" ) ( default: \"missing\" ) --network value, --net value Connect a container to a network ( \"bridge\" | \"host\" | \"none\" ) ( default: \"bridge\" ) --dns value Set custom DNS servers ( default: \"8.8.8.8\" , \"1.1.1.1\" ) --publish value, -p value Publish a container 's port(s) to the host --hostname value, -h value Container host name --cpus value Number of CPUs (default: 0) --memory value, -m value Memory limit --pid value PID namespace to use --pids-limit value Tune container pids limit (set -1 for unlimited) (default: -1) --cgroupns value Cgroup namespace to use, the default depends on the cgroup version (\"host\"|\"private\") (default: \"host\") --cpuset-cpus value CPUs in which to allow execution (0-3, 0,1) --cpu-shares value CPU shares (relative weight) (default: 0) --device value Add a host device to the container --user value, -u value Username or UID (format: <name|uid>[:<group|gid>]) --security-opt value Security options --cap-add value Add Linux capabilities --cap-drop value Drop Linux capabilities --privileged Give extended privileges to this container (default: false) --runtime value Runtime to use for this container, e.g. \"crun\", or \"io.containerd.runsc.v1\" (default: \"io.containerd.runc.v2\") --sysctl value Sysctl options --gpus value GPU devices to add to the container (' all ' to pass all GPUs) --volume value, -v value Bind mount a volume --read-only Mount the container' s root filesystem as read only ( default: false ) --rootfs The first argument is not an image but the rootfs to the exploded container ( default: false ) --entrypoint value Overwrite the default ENTRYPOINT of the image --workdir value, -w value Working directory inside the container --env value, -e value Set environment variables --env-file value Set environment variables from file --name value Assign a name to the container --label value, -l value Set meta data on a container --label-file value Read in a line delimited file of labels --cidfile value Write the container ID to the file --shm-size value Size of /dev/shm nerdctl exec \u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528 exec \u547d\u4ee4\u6267\u884c\u5bb9\u5668\u76f8\u5173\u547d\u4ee4\uff0c\u4f8b\u5982\uff1a \u279c ~ nerdctl exec -it nginx /bin/sh / # date Thu Aug 19 06 :43:19 UTC 2021 / #","title":"Run&amp;Exec"},{"location":"Container/nerdctl/#_3","text":"nerdctl ps \uff1a\u5217\u51fa\u5bb9\u5668 \u4f7f\u7528 nerdctl ps \u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u5bb9\u5668\u3002 \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6e489777d2f7 docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 10 minutes ago Up 0 .0.0.0:80->80/tcp nginx \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 -a \u9009\u9879\u663e\u793a\u6240\u6709\u7684\u5bb9\u5668\u5217\u8868\uff0c\u9ed8\u8ba4\u53ea\u663e\u793a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f nerdctl ps \u547d\u4ee4\u5e76\u6ca1\u6709\u5b9e\u73b0 docker ps \u4e0b\u9762\u7684 --filter\u3001--format\u3001--last\u3001--size \u7b49\u9009\u9879\u3002 nerdctl inspect \uff1a\u83b7\u53d6\u5bb9\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u279c ~ nerdctl inspect nginx [ { \"Id\" : \"6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8\" , \"Created\" : \"2021-08-19T06:35:46.403464674Z\" , \"Path\" : \"/docker-entrypoint.sh\" , \"Args\" : [ \"nginx\" , \"-g\" , \"daemon off;\" ] , \"State\" : { \"Status\" : \"running\" , \"Running\" : true, \"Paused\" : false, \"Pid\" : 2002 , \"ExitCode\" : 0 , \"FinishedAt\" : \"0001-01-01T00:00:00Z\" } , \"Image\" : \"docker.io/library/nginx:alpine\" , \"ResolvConfPath\" : \"/var/lib/nerdctl/1935db59/containers/default/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8/resolv.conf\" , \"LogPath\" : \"/var/lib/nerdctl/1935db59/containers/default/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8/6e489777d2f73dda8a310cdf8da9df38353c1aa2021d3c2270b30eff1806bcf8-json.log\" , \"Name\" : \"nginx\" , \"Driver\" : \"overlayfs\" , \"Platform\" : \"linux\" , \"AppArmorProfile\" : \"nerdctl-default\" , \"NetworkSettings\" : { \"Ports\" : { \"80/tcp\" : [ { \"HostIp\" : \"0.0.0.0\" , \"HostPort\" : \"80\" } ] } , \"GlobalIPv6Address\" : \"\" , \"GlobalIPv6PrefixLen\" : 0 , \"IPAddress\" : \"10.4.0.3\" , \"IPPrefixLen\" : 24 , \"MacAddress\" : \"f2:b1:8e:a2:fe:18\" , \"Networks\" : { \"unknown-eth0\" : { \"IPAddress\" : \"10.4.0.3\" , \"IPPrefixLen\" : 24 , \"GlobalIPv6Address\" : \"\" , \"GlobalIPv6PrefixLen\" : 0 , \"MacAddress\" : \"f2:b1:8e:a2:fe:18\" } } } } ] \u53ef\u4ee5\u770b\u5230\u663e\u793a\u7ed3\u679c\u548c docker inspect \u4e5f\u57fa\u672c\u4e00\u81f4\u7684\u3002 nerdctl logs \uff1a\u83b7\u53d6\u5bb9\u5668\u65e5\u5fd7 \u67e5\u770b\u5bb9\u5668\u65e5\u5fd7\u662f\u6211\u4eec\u5e73\u65f6\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 nerdctl logs \u6765\u83b7\u53d6\u65e5\u5fd7\u6570\u636e\uff1a \u279c ~ nerdctl logs -f nginx ...... 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker processes 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker process 32 2021 /08/19 06 :35:46 [ notice ] 1 #1: start worker process 33 \u540c\u6837\u652f\u6301 -f\u3001-t\u3001-n\u3001--since\u3001--until \u8fd9\u4e9b\u9009\u9879\u3002 nerdctl stop \uff1a\u505c\u6b62\u5bb9\u5668 \u279c ~ nerdctl stop nginx nginx \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES \u279c ~ nerdctl ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6e489777d2f7 docker.io/library/nginx:alpine \"/docker-entrypoint.\u2026\" 20 minutes ago Up 0 .0.0.0:80->80/tcp nginx nerdctl rm \uff1a\u5220\u9664\u5bb9\u5668 \u279c ~ nerdctl rm nginx You cannot remove a running container f4ac170235595f28bf962bad68aa81b20fc83b741751e7f3355bd77d8016462d. Stop the container before attempting removal or force remove \u279c ~ nerdctl rm -f ginx nginx \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES \u8981\u5f3a\u5236\u5220\u9664\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 -f \u6216 --force \u9009\u9879\u6765\u64cd\u4f5c\u3002","title":"\u5bb9\u5668\u7ba1\u7406"},{"location":"Container/nerdctl/#_4","text":"nerdctl images \uff1a\u955c\u50cf\u5217\u8868 \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE alpine latest eb3e4e175ba6 6 days ago 5 .9 MiB nginx alpine bead42240255 29 minutes ago 16 .0 KiB \u4e5f\u9700\u8981\u6ce8\u610f\u7684\u662f\u6ca1\u6709\u5b9e\u73b0 docker images \u7684\u4e00\u4e9b\u9009\u9879\uff0c\u6bd4\u5982 --all\u3001--digests\u3001--filter\u3001--format \u3002 nerdctl pull \uff1a\u62c9\u53d6\u955c\u50cf \u279c ~ docker.io/library/busybox:latest: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:dca71257cd2e72840a21f0323234bb2e33fea6d949fa0f21c5102146f583486b: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:69593048aa3acfee0f75f20b77acb549de2472063053f6730c4091b53f2dfb02: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:b71f96345d44b237decc0c2d6c2f9ad0d17fde83dad7579608f1f0764d9686f2: done | ++++++++++++++++++++++++++++++++++++++ | elapsed: 5 .9 s total: 752 .8 ( 127 .5 KiB/s ) nerdctl push \uff1a\u63a8\u9001\u955c\u50cf \u5f53\u7136\u5728\u63a8\u9001\u955c\u50cf\u4e4b\u524d\u4e5f\u53ef\u4ee5\u4f7f\u7528 nerdctl login \u547d\u4ee4\u767b\u5f55\u5230\u955c\u50cf\u4ed3\u5e93\uff0c\u7136\u540e\u518d\u6267\u884c push \u64cd\u4f5c\u3002 \u53ef\u4ee5\u4f7f\u7528 nerdctl login --username xxx --password xxx \u8fdb\u884c\u767b\u5f55\uff0c\u4f7f\u7528 nerdctl logout \u53ef\u4ee5\u6ce8\u9500\u9000\u51fa\u767b\u5f55\u3002 nerdctl tag \uff1a\u955c\u50cf\u6807\u7b7e \u4f7f\u7528 tag \u547d\u4ee4\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u955c\u50cf\u521b\u5efa\u4e00\u4e2a\u522b\u540d\u955c\u50cf\uff1a \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE busybox latest 0f354ec1728d 6 minutes ago 1 .3 MiB nginx alpine bead42240255 41 minutes ago 16 .0 KiB \u279c ~ nerdctl tag nginx:alpine harbor.k8s.local/course/nginx:alpine \u279c ~ nerdctl images REPOSITORY TAG IMAGE ID CREATED SIZE busybox latest 0f354ec1728d 7 minutes ago 1 .3 MiB nginx alpine bead42240255 41 minutes ago 16 .0 KiB harbor.k8s.local/course/nginx alpine bead42240255 2 seconds ago 16 .0 KiB nerdctl save \uff1a\u5bfc\u51fa\u955c\u50cf \u4f7f\u7528 save \u547d\u4ee4\u53ef\u4ee5\u5bfc\u51fa\u955c\u50cf\u4e3a\u4e00\u4e2a tar \u538b\u7f29\u5305\u3002 \u279c ~ nerdctl save -o busybox.tar.gz busybox:latest \u279c ~ ls -lh busybox.tar.gz -rw-r--r-- 1 root root 761K Aug 19 15 :19 busybox.tar.gz nerdctl rmi \uff1a\u5220\u9664\u955c\u50cf \u279c ~ nerdctl rmi busybox Untagged: docker.io/library/busybox:latest@sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60 Deleted: sha256:5b8c72934dfc08c7d2bd707e93197550f06c0751023dabb3a045b723c5e7b373 nerdctl load \uff1a\u5bfc\u5165\u955c\u50cf \u4f7f\u7528 load \u547d\u4ee4\u53ef\u4ee5\u5c06\u4e0a\u9762\u5bfc\u51fa\u7684\u955c\u50cf\u518d\u6b21\u5bfc\u5165\uff1a \u279c ~ nerdctl load -i busybox.tar.gz unpacking docker.io/library/busybox:latest ( sha256:0f354ec1728d9ff32edcd7d1b8bbdfc798277ad36120dc3dc683be44524c8b60 ) ...done \u4f7f\u7528 -i \u6216 --input \u9009\u9879\u6307\u5b9a\u9700\u8981\u5bfc\u5165\u7684\u538b\u7f29\u5305\u3002","title":"\u955c\u50cf\u7ba1\u7406"},{"location":"Container/nerdctl/#_5","text":"\u955c\u50cf\u6784\u5efa\u662f\u5e73\u65f6\u6211\u4eec\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u9700\u6c42\uff0c\u6211\u4eec\u77e5\u9053 ctr \u5e76\u6ca1\u6709\u6784\u5efa\u955c\u50cf\u7684\u547d\u4ee4\uff0c\u800c\u73b0\u5728\u6211\u4eec\u53c8\u4e0d\u4f7f\u7528 Docker \u4e86\uff0c\u90a3\u4e48\u5982\u4f55\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u4e86\uff0c\u5e78\u8fd0\u7684\u662f nerdctl \u5c31\u63d0\u4f9b\u4e86 nerdctl build \u8fd9\u6837\u7684\u955c\u50cf\u6784\u5efa\u547d\u4ee4\u3002 nerdctl build \uff1a\u4ece Dockerfile \u6784\u5efa\u955c\u50cf \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u5b9a\u5236\u4e00\u4e2a nginx \u955c\u50cf\uff0c\u65b0\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Dockerfile \u6587\u4ef6\uff1a FROM nginx RUN echo 'Hello Nerdctl From Containerd' > /usr/share/nginx/html/index.html \u7136\u540e\u5728\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6267\u884c\u955c\u50cf\u6784\u5efa\u547d\u4ee4\uff1a \u279c ~ nerdctl build -t nginx:nerdctl -f Dockerfile . FATA [ 0000 ] ` buildctl ` needs to be installed and ` buildkitd ` needs to be running, see https://github.com/moby/buildkit: exec: \"buildctl\" : executable file not found in $PATH \u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u9519\u8bef\u63d0\u793a\uff0c\u9700\u8981\u6211\u4eec\u5b89\u88c5 buildctl \u5e76\u8fd0\u884c buildkitd \uff0c\u8fd9\u662f\u56e0\u4e3a nerdctl build \u9700\u8981\u4f9d\u8d56 buildkit \u5de5\u5177\u3002 buildkit \u9879\u76ee\u4e5f\u662f Docker \u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u6784\u5efa\u5de5\u5177\u5305\uff0c\u652f\u6301 OCI \u6807\u51c6\u7684\u955c\u50cf\u6784\u5efa\u3002\u5b83\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u90e8\u5206: \u670d\u52a1\u7aef buildkitd \uff1a\u5f53\u524d\u652f\u6301 runc \u548c containerd \u4f5c\u4e3a worker\uff0c\u9ed8\u8ba4\u662f runc\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 containerd \u5ba2\u6237\u7aef buildctl \uff1a\u8d1f\u8d23\u89e3\u6790 Dockerfile\uff0c\u5e76\u5411\u670d\u52a1\u7aef buildkitd \u53d1\u51fa\u6784\u5efa\u8bf7\u6c42 buildkit \u662f\u5178\u578b\u7684 C/S \u67b6\u6784\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u662f\u53ef\u4ee5\u4e0d\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u800c nerdctl \u5728\u6784\u5efa\u955c\u50cf\u7684\u65f6\u5019\u4e5f\u4f5c\u4e3a buildkitd \u7684\u5ba2\u6237\u7aef\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u5b89\u88c5\u5e76\u8fd0\u884c buildkitd \u3002 \u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u6765\u5b89\u88c5 buildkit \uff1a \u279c ~ wget https://github.com/moby/buildkit/releases/download/v0.9.1/buildkit-v0.9.1.linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/moby/buildkit/releases/download/v0.9.1/buildkit-v0.9.1.linux-amd64.tar.gz \u279c ~ tar -zxvf buildkit-v0.9.1.linux-amd64.tar.gz -C /usr/local/containerd/ bin/ bin/buildctl bin/buildkit-qemu-aarch64 bin/buildkit-qemu-arm bin/buildkit-qemu-i386 bin/buildkit-qemu-mips64 bin/buildkit-qemu-mips64el bin/buildkit-qemu-ppc64le bin/buildkit-qemu-riscv64 bin/buildkit-qemu-s390x bin/buildkit-runc bin/buildkitd \u279c ~ ln -s /usr/local/containerd/bin/buildkitd /usr/local/bin/buildkitd \u279c ~ ln -s /usr/local/containerd/bin/buildctl /usr/local/bin/buildctl \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Systemd \u6765\u7ba1\u7406 buildkitd \uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 systemd unit \u6587\u4ef6\uff1a \u279c ~ cat /etc/systemd/system/buildkit.service [ Unit ] Description = BuildKit Documentation = https://github.com/moby/buildkit [ Service ] ExecStart = /usr/local/bin/buildkitd --oci-worker = false --containerd-worker = true [ Install ] WantedBy = multi-user.target \u7136\u540e\u542f\u52a8 buildkitd \uff1a \u279c ~ systemctl daemon-reload \u279c ~ systemctl enable buildkit --now Created symlink /etc/systemd/system/multi-user.target.wants/buildkit.service \u2192 /etc/systemd/system/buildkit.service. \u279c ~ systemctl status buildkit \u25cf buildkit.service - BuildKit Loaded: loaded ( /etc/systemd/system/buildkit.service ; enabled ; vendor preset: enabled ) Memory: 8 .6M CGroup: /system.slice/buildkit.service \u2514\u25005779 /usr/local/bin/buildkitd --oci-worker = false --containerd-worker = true Aug 19 16 :03:10 ydzsio systemd [ 1 ] : Started BuildKit. Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = warning msg = \"using host network as the default\" Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = info msg = \"found worker \\\"euznuelxhxb689bc5of7pxmbc\\\", labels> Aug 19 16:03:10 ydzsio buildkitd[5779]: time=\" 2021 -08-19T16:03:10+08:00 \" level=info msg=\" found 1 workers, default = \\\" euznuelxhxb689bc5of7pxm> Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = warning msg = \"currently, only the default worker can be used.\" Aug 19 16 :03:10 ydzsio buildkitd [ 5779 ] : time = \"2021-08-19T16:03:10+08:00\" level = info msg = \"running server on /run/buildkit/buildkitd.sock\" ~ \u73b0\u5728\u6211\u4eec\u518d\u6765\u91cd\u65b0\u6784\u5efa\u955c\u50cf\uff1a \u6784\u5efa\u5b8c\u6210\u540e\u67e5\u770b\u955c\u50cf\u662f\u5426\u6784\u5efa\u6210\u529f\uff1a \u279c ~ nerdctl images WARN [ 0000 ] unparsable image name \"overlayfs@sha256:d5b9b9e4c930f30340650cb373f62f97c93ee3b92c83f01c6e00b7b87d62c624\" REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 4d4d96ac750a 4 minutes ago 16 .0 KiB nginx nerdctl d5b9b9e4c930 About a minute ago 24 .0 KiB \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6709\u6211\u4eec\u6784\u5efa\u7684 nginx:nerdctl \u955c\u50cf\u4e86\u3002\u63a5\u4e0b\u6765\u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u6784\u5efa\u7684\u955c\u50cf\u6765\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u6d4b\u8bd5\uff1a \u279c ~ nerdctl run -d -p 80 :80 --name = nginx --restart = always nginx:nerdctl f8f639cb667926023231b13584226b2c7b856847e0a25bd5f686b9a6e7e3cacd \u279c ~ nerdctl ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f8f639cb6679 docker.io/library/nginx:nerdctl \"/docker-entrypoint.\u2026\" 1 second ago Up 0 .0.0.0:80->80/tcp nginx \u279c ~ curl localhost This is a nerdctl build ' s nginx image base on containerd \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 nerdctl + buildkitd \u8f7b\u677e\u5b8c\u6210\u4e86\u5bb9\u5668\u955c\u50cf\u7684\u6784\u5efa\u3002 \u5f53\u7136\u5982\u679c\u4f60\u8fd8\u60f3\u5728\u5355\u673a\u73af\u5883\u4e0b\u4f7f\u7528 Docker Compose\uff0c\u5728 containerd \u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 nerdctl \u6765\u517c\u5bb9\u8be5\u529f\u80fd\u3002\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 nerdctl compose\u3001nerdctl compose up\u3001nerdctl compose logs\u3001nerdctl compose build\u3001nerdctl compose down \u7b49\u547d\u4ee4\u6765\u7ba1\u7406 Compose \u670d\u52a1\u3002\u8fd9\u6837\u4f7f\u7528 containerd\u3001nerdctl \u7ed3\u5408 buildkit \u7b49\u5de5\u5177\u5c31\u5b8c\u5168\u53ef\u4ee5\u66ff\u4ee3 docker \u5728\u955c\u50cf\u6784\u5efa\u3001\u955c\u50cf\u5bb9\u5668\u65b9\u9762\u7684\u7ba1\u7406\u529f\u80fd\u4e86\u3002","title":"\u955c\u50cf\u6784\u5efa"},{"location":"Container/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/","text":"\u5bb9\u5668\u8fd0\u884c\u65f6 \u00b6 \u5728\u5b66\u4e60 Containerd \u4e4b\u524d\u6211\u4eec\u6709\u5fc5\u8981\u5bf9 Docker \u7684\u53d1\u5c55\u5386\u53f2\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u56de\u987e\uff0c\u56e0\u4e3a\u8fd9\u91cc\u9762\u7275\u6d89\u5230\u7684\u7ec4\u4ef6\u5b9e\u6218\u662f\u6709\u70b9\u591a\uff0c\u6709\u5f88\u591a\u6211\u4eec\u4f1a\u7ecf\u5e38\u542c\u5230\uff0c\u4f46\u662f\u4e0d\u6e05\u695a\u8fd9\u4e9b\u7ec4\u4ef6\u5230\u5e95\u662f\u5e72\u4ec0\u4e48\u7528\u7684\uff0c\u6bd4\u5982 libcontainer\u3001runc\u3001containerd\u3001CRI\u3001OCI \u7b49\u7b49\u3002 Docker \u00b6 \u4ece Docker 1.11 \u7248\u672c\u5f00\u59cb\uff0cDocker \u5bb9\u5668\u8fd0\u884c\u5c31\u4e0d\u662f\u7b80\u5355\u901a\u8fc7 Docker Daemon \u6765\u542f\u52a8\u4e86\uff0c\u800c\u662f\u901a\u8fc7\u96c6\u6210 containerd\u3001runc \u7b49\u591a\u4e2a\u7ec4\u4ef6\u6765\u5b8c\u6210\u7684\u3002\u867d\u7136 Docker Daemon \u5b88\u62a4\u8fdb\u7a0b\u6a21\u5757\u5728\u4e0d\u505c\u7684\u91cd\u6784\uff0c\u4f46\u662f\u57fa\u672c\u529f\u80fd\u548c\u5b9a\u4f4d\u6ca1\u6709\u592a\u5927\u7684\u53d8\u5316\uff0c\u4e00\u76f4\u90fd\u662f CS \u67b6\u6784\uff0c\u5b88\u62a4\u8fdb\u7a0b\u8d1f\u8d23\u548c Docker Client \u7aef\u4ea4\u4e92\uff0c\u5e76\u7ba1\u7406 Docker \u955c\u50cf\u548c\u5bb9\u5668\u3002\u73b0\u5728\u7684\u67b6\u6784\u4e2d\u7ec4\u4ef6 containerd \u5c31\u4f1a\u8d1f\u8d23\u96c6\u7fa4\u8282\u70b9\u4e0a\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u5e76\u5411\u4e0a\u4e3a Docker Daemon \u63d0\u4f9b gRPC \u63a5\u53e3\u3002 \u5f53\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u73b0\u5728 Docker Daemon \u5e76\u4e0d\u80fd\u76f4\u63a5\u5e2e\u6211\u4eec\u521b\u5efa\u4e86\uff0c\u800c\u662f\u8bf7\u6c42 containerd \u6765\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0ccontainerd \u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4e5f\u5e76\u4e0d\u4f1a\u76f4\u63a5\u53bb\u64cd\u4f5c\u5bb9\u5668\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u53eb\u505a containerd-shim \u7684\u8fdb\u7a0b\uff0c\u8ba9\u8fd9\u4e2a\u8fdb\u7a0b\u53bb\u64cd\u4f5c\u5bb9\u5668\uff0c\u6211\u4eec\u6307\u5b9a\u5bb9\u5668\u8fdb\u7a0b\u662f\u9700\u8981\u4e00\u4e2a\u7236\u8fdb\u7a0b\u6765\u505a\u72b6\u6001\u6536\u96c6\u3001\u7ef4\u6301 stdin \u7b49 fd \u6253\u5f00\u7b49\u5de5\u4f5c\u7684\uff0c\u5047\u5982\u8fd9\u4e2a\u7236\u8fdb\u7a0b\u5c31\u662f containerd\uff0c\u90a3\u5982\u679c containerd \u6302\u6389\u7684\u8bdd\uff0c\u6574\u4e2a\u5bbf\u4e3b\u673a\u4e0a\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5f97\u9000\u51fa\u4e86\uff0c\u800c\u5f15\u5165 containerd-shim \u8fd9\u4e2a\u57ab\u7247\u5c31\u53ef\u4ee5\u6765\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \u7136\u540e\u521b\u5efa\u5bb9\u5668\u9700\u8981\u505a\u4e00\u4e9b namespaces \u548c cgroups \u7684\u914d\u7f6e\uff0c\u4ee5\u53ca\u6302\u8f7d root \u6587\u4ef6\u7cfb\u7edf\u7b49\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5176\u5b9e\u5df2\u7ecf\u6709\u4e86\u6807\u51c6\u7684\u89c4\u8303\uff0c\u90a3\u5c31\u662f OCI\uff08\u5f00\u653e\u5bb9\u5668\u6807\u51c6\uff09\uff0c runc \u5c31\u662f\u5b83\u7684\u4e00\u4e2a\u53c2\u8003\u5b9e\u73b0\uff08Docker \u88ab\u903c\u65e0\u8010\u5c06 libcontainer \u6350\u732e\u51fa\u6765\u6539\u540d\u4e3a runc \u7684\uff09\uff0c\u8fd9\u4e2a\u6807\u51c6\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6587\u6863\uff0c\u4e3b\u8981\u89c4\u5b9a\u4e86\u5bb9\u5668\u955c\u50cf\u7684\u7ed3\u6784\u3001\u4ee5\u53ca\u5bb9\u5668\u9700\u8981\u63a5\u6536\u54ea\u4e9b\u64cd\u4f5c\u6307\u4ee4\uff0c\u6bd4\u5982 create\u3001start\u3001stop\u3001delete \u7b49\u8fd9\u4e9b\u547d\u4ee4\u3002 runc \u5c31\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a OCI \u6587\u6863\u6765\u521b\u5efa\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5bb9\u5668\uff0c\u65e2\u7136\u662f\u6807\u51c6\u80af\u5b9a\u5c31\u6709\u5176\u4ed6 OCI \u5b9e\u73b0\uff0c\u6bd4\u5982 Kata\u3001gVisor \u8fd9\u4e9b\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u662f\u7b26\u5408 OCI \u6807\u51c6\u7684\u3002 \u6240\u4ee5\u771f\u6b63\u542f\u52a8\u5bb9\u5668\u662f\u901a\u8fc7 containerd-shim \u53bb\u8c03\u7528 runc \u6765\u542f\u52a8\u5bb9\u5668\u7684\uff0c runc \u542f\u52a8\u5b8c\u5bb9\u5668\u540e\u672c\u8eab\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c containerd-shim \u5219\u4f1a\u6210\u4e3a\u5bb9\u5668\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b, \u8d1f\u8d23\u6536\u96c6\u5bb9\u5668\u8fdb\u7a0b\u7684\u72b6\u6001, \u4e0a\u62a5\u7ed9 containerd , \u5e76\u5728\u5bb9\u5668\u4e2d pid \u4e3a 1 \u7684\u8fdb\u7a0b\u9000\u51fa\u540e\u63a5\u7ba1\u5bb9\u5668\u4e2d\u7684\u5b50\u8fdb\u7a0b\u8fdb\u884c\u6e05\u7406, \u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u50f5\u5c38\u8fdb\u7a0b\u3002 \u800c Docker \u5c06\u5bb9\u5668\u64cd\u4f5c\u90fd\u8fc1\u79fb\u5230 containerd \u4e2d\u53bb\u662f\u56e0\u4e3a\u5f53\u524d\u505a Swarm\uff0c\u60f3\u8981\u8fdb\u519b PaaS \u5e02\u573a\uff0c\u505a\u4e86\u8fd9\u4e2a\u67b6\u6784\u5207\u5206\uff0c\u8ba9 Docker Daemon \u4e13\u95e8\u53bb\u8d1f\u8d23\u4e0a\u5c42\u7684\u5c01\u88c5\u7f16\u6392\uff0c\u5f53\u7136\u540e\u9762\u7684\u7ed3\u679c\u6211\u4eec\u77e5\u9053 Swarm \u5728 Kubernetes \u9762\u524d\u662f\u60e8\u8d25\uff0c\u7136\u540e Docker \u516c\u53f8\u5c31\u628a containerd \u9879\u76ee\u6350\u732e\u7ed9\u4e86 CNCF \u57fa\u91d1\u4f1a\uff0c\u8fd9\u4e2a\u4e5f\u662f\u73b0\u5728\u7684 Docker \u67b6\u6784\u3002 CRI \u00b6 \u6211\u4eec\u77e5\u9053 Kubernetes \u63d0\u4f9b\u4e86\u4e00\u4e2a CRI \u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\uff0c\u90a3\u4e48\u8fd9\u4e2a CRI \u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u5176\u5b9e\u4e5f\u548c Docker \u7684\u53d1\u5c55\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u5728 Kubernetes \u65e9\u671f\u7684\u65f6\u5019\uff0c\u5f53\u65f6 Docker \u5b9e\u5728\u662f\u592a\u706b\u4e86\uff0cKubernetes \u5f53\u7136\u4f1a\u5148\u9009\u62e9\u652f\u6301 Docker\uff0c\u800c\u4e14\u662f\u901a\u8fc7\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u76f4\u63a5\u8c03\u7528 Docker API\uff0c\u540e\u9762\u968f\u7740 Docker \u7684\u4e0d\u65ad\u53d1\u5c55\u4ee5\u53ca Google \u7684\u4e3b\u5bfc\uff0c\u51fa\u73b0\u4e86\u66f4\u591a\u5bb9\u5668\u8fd0\u884c\u65f6\uff0cKubernetes \u4e3a\u4e86\u652f\u6301\u66f4\u591a\u66f4\u7cbe\u7b80\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0cGoogle \u5c31\u548c\u7ea2\u5e3d\u4e3b\u5bfc\u63a8\u51fa\u4e86 CRI \u6807\u51c6\uff0c\u7528\u4e8e\u5c06 Kubernetes \u5e73\u53f0\u548c\u7279\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u5f53\u7136\u4e3b\u8981\u662f\u4e3a\u4e86\u5e72\u6389 Docker\uff09\u89e3\u8026\u3002 CRI \uff08Container Runtime Interface \u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\uff09\u672c\u8d28\u4e0a\u5c31\u662f Kubernetes \u5b9a\u4e49\u7684\u4e00\u7ec4\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u8fdb\u884c\u4ea4\u4e92\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u5957\u63a5\u53e3\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u53ef\u4ee5\u5bf9\u63a5\u5230 Kubernetes \u5e73\u53f0\u4e0a\u6765\u3002\u4e0d\u8fc7 Kubernetes \u63a8\u51fa CRI \u8fd9\u5957\u6807\u51c6\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u73b0\u5728\u7684\u7edf\u6cbb\u5730\u4f4d\uff0c\u6240\u4ee5\u6709\u4e00\u4e9b\u5bb9\u5668\u8fd0\u884c\u65f6\u53ef\u80fd\u4e0d\u4f1a\u81ea\u8eab\u5c31\u53bb\u5b9e\u73b0 CRI \u63a5\u53e3\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 shim\uff08\u57ab\u7247\uff09 \uff0c \u4e00\u4e2a shim \u7684\u804c\u8d23\u5c31\u662f\u4f5c\u4e3a\u9002\u914d\u5668\u5c06\u5404\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u672c\u8eab\u7684\u63a5\u53e3\u9002\u914d\u5230 Kubernetes \u7684 CRI \u63a5\u53e3\u4e0a\uff0c\u5176\u4e2d dockershim \u5c31\u662f Kubernetes \u5bf9\u63a5 Docker \u5230 CRI \u63a5\u53e3\u4e0a\u7684\u4e00\u4e2a\u57ab\u7247\u5b9e\u73b0\u3002 Kubelet \u901a\u8fc7 gRPC \u6846\u67b6\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u6216 shim \u8fdb\u884c\u901a\u4fe1\uff0c\u5176\u4e2d kubelet \u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0cCRI shim\uff08\u4e5f\u53ef\u80fd\u662f\u5bb9\u5668\u8fd0\u884c\u65f6\u672c\u8eab\uff09\u4f5c\u4e3a\u670d\u52a1\u5668\u3002 CRI \u5b9a\u4e49\u7684 API \u4e3b\u8981\u5305\u62ec\u4e24\u4e2a gRPC \u670d\u52a1\uff0c ImageService \u548c RuntimeService \uff0c ImageService \u670d\u52a1\u4e3b\u8981\u662f\u62c9\u53d6\u955c\u50cf\u3001\u67e5\u770b\u548c\u5220\u9664\u955c\u50cf\u7b49\u64cd\u4f5c\uff0c RuntimeService \u5219\u662f\u7528\u6765\u7ba1\u7406 Pod \u548c\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u53ca\u4e0e\u5bb9\u5668\u4ea4\u4e92\u7684\u8c03\u7528\uff08exec/attach/port-forward\uff09\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 kubelet \u4e2d\u7684\u6807\u5fd7 --container-runtime-endpoint \u548c --image-service-endpoint \u6765\u914d\u7f6e\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u5957\u63a5\u5b57\u3002 \u4e0d\u8fc7\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u90a3\u5c31\u662f Docker\uff0c\u7531\u4e8e Docker \u5f53\u65f6\u7684\u6c5f\u6e56\u5730\u4f4d\u5f88\u9ad8\uff0cKubernetes \u662f\u76f4\u63a5\u5185\u7f6e\u4e86 dockershim \u5728 kubelet \u4e2d\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Docker \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u8bdd\u662f\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\u914d\u7f6e\u9002\u914d\u5668\u4e4b\u7c7b\u7684\uff0c\u5f53\u7136\u8fd9\u4e2a\u4e3e\u52a8\u4f3c\u4e4e\u4e5f\u9ebb\u75f9\u4e86 Docker \u516c\u53f8\u3002 \u73b0\u5728\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f Docker \u7684\u8bdd\uff0c\u5f53\u6211\u4eec\u5728 Kubernetes \u4e2d\u521b\u5efa\u4e00\u4e2a Pod \u7684\u65f6\u5019\uff0c\u9996\u5148\u5c31\u662f kubelet \u901a\u8fc7 CRI \u63a5\u53e3\u8c03\u7528 dockershim \uff0c\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0ckubelet \u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684 CRI Client, \u800c dockershim \u5c31\u662f\u63a5\u6536\u8bf7\u6c42\u7684 Server\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u90fd\u662f\u5728 kubelet \u5185\u7f6e\u7684\u3002 dockershim \u6536\u5230\u8bf7\u6c42\u540e, \u8f6c\u5316\u6210 Docker Daemon \u80fd\u8bc6\u522b\u7684\u8bf7\u6c42, \u53d1\u5230 Docker Daemon \u4e0a\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u8bf7\u6c42\u5230\u4e86 Docker Daemon \u540e\u7eed\u5c31\u662f Docker \u521b\u5efa\u5bb9\u5668\u7684\u6d41\u7a0b\u4e86\uff0c\u53bb\u8c03\u7528 containerd \uff0c\u7136\u540e\u521b\u5efa containerd-shim \u8fdb\u7a0b\uff0c\u901a\u8fc7\u8be5\u8fdb\u7a0b\u53bb\u8c03\u7528 runc \u53bb\u771f\u6b63\u521b\u5efa\u5bb9\u5668\u3002 \u5176\u5b9e\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e5f\u4e0d\u96be\u53d1\u73b0\u4f7f\u7528 Docker \u7684\u8bdd\u5176\u5b9e\u662f\u8c03\u7528\u94fe\u6bd4\u8f83\u957f\u7684\uff0c\u771f\u6b63\u5bb9\u5668\u76f8\u5173\u7684\u64cd\u4f5c\u5176\u5b9e containerd \u5c31\u5b8c\u5168\u8db3\u591f\u4e86\uff0cDocker \u592a\u8fc7\u4e8e\u590d\u6742\u7b28\u91cd\u4e86\uff0c\u5f53\u7136 Docker \u6df1\u53d7\u6b22\u8fce\u7684\u5f88\u5927\u4e00\u4e2a\u539f\u56e0\u5c31\u662f\u63d0\u4f9b\u4e86\u5f88\u591a\u5bf9\u7528\u6237\u64cd\u4f5c\u6bd4\u8f83\u53cb\u597d\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5bf9\u4e8e Kubernetes \u6765\u8bf4\u538b\u6839\u4e0d\u9700\u8981\u8fd9\u4e9b\u529f\u80fd\uff0c\u56e0\u4e3a\u90fd\u662f\u901a\u8fc7\u63a5\u53e3\u53bb\u64cd\u4f5c\u5bb9\u5668\u7684\uff0c\u6240\u4ee5\u81ea\u7136\u4e5f\u5c31\u53ef\u4ee5\u5c06\u5bb9\u5668\u8fd0\u884c\u65f6\u5207\u6362\u5230 containerd \u6765\u3002 \u5207\u6362\u5230 containerd \u53ef\u4ee5\u6d88\u9664\u6389\u4e2d\u95f4\u73af\u8282\uff0c\u64cd\u4f5c\u4f53\u9a8c\u4e5f\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4f46\u662f\u7531\u4e8e\u76f4\u63a5\u7528\u5bb9\u5668\u8fd0\u884c\u65f6\u8c03\u5ea6\u5bb9\u5668\uff0c\u6240\u4ee5\u5b83\u4eec\u5bf9 Docker \u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u56e0\u6b64\uff0c\u4f60\u4ee5\u524d\u7528\u6765\u68c0\u67e5\u8fd9\u4e9b\u5bb9\u5668\u7684 Docker \u5de5\u5177\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002 \u4f60\u4e0d\u80fd\u518d\u4f7f\u7528 docker ps \u6216 docker inspect \u547d\u4ee4\u6765\u83b7\u53d6\u5bb9\u5668\u4fe1\u606f\u3002\u7531\u4e8e\u4e0d\u80fd\u5217\u51fa\u5bb9\u5668\uff0c\u56e0\u6b64\u4e5f\u4e0d\u80fd\u83b7\u53d6\u65e5\u5fd7\u3001\u505c\u6b62\u5bb9\u5668\uff0c\u751a\u81f3\u4e0d\u80fd\u901a\u8fc7 docker exec \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4\u3002 \u5f53\u7136\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4e0b\u8f7d\u955c\u50cf\uff0c\u6216\u8005\u7528 docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u4f46\u7528 Docker \u6784\u5efa\u3001\u4e0b\u8f7d\u7684\u955c\u50cf\uff0c\u5bf9\u4e8e\u5bb9\u5668\u8fd0\u884c\u65f6\u548c Kubernetes\uff0c\u5747\u4e0d\u53ef\u89c1\u3002\u4e3a\u4e86\u5728 Kubernetes \u4e2d\u4f7f\u7528\uff0c\u9700\u8981\u628a\u955c\u50cf\u63a8\u9001\u5230\u955c\u50cf\u4ed3\u5e93\u4e2d\u53bb\u3002 \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\u5728 containerd 1.0 \u4e2d\uff0c\u5bf9 CRI \u7684\u9002\u914d\u662f\u901a\u8fc7\u4e00\u4e2a\u5355\u72ec\u7684 CRI-Containerd \u8fdb\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u6700\u5f00\u59cb containerd \u8fd8\u4f1a\u53bb\u9002\u914d\u5176\u4ed6\u7684\u7cfb\u7edf\uff08\u6bd4\u5982 swarm\uff09\uff0c\u6240\u4ee5\u6ca1\u6709\u76f4\u63a5\u5b9e\u73b0 CRI\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5bf9\u63a5\u5de5\u4f5c\u5c31\u4ea4\u7ed9 CRI-Containerd \u8fd9\u4e2a shim \u4e86\u3002 \u7136\u540e\u5230\u4e86 containerd 1.1 \u7248\u672c\u540e\u5c31\u53bb\u6389\u4e86 CRI-Containerd \u8fd9\u4e2a shim\uff0c\u76f4\u63a5\u628a\u9002\u914d\u903b\u8f91\u4f5c\u4e3a\u63d2\u4ef6\u7684\u65b9\u5f0f\u96c6\u6210\u5230\u4e86 containerd \u4e3b\u8fdb\u7a0b\u4e2d\uff0c\u73b0\u5728\u8fd9\u6837\u7684\u8c03\u7528\u5c31\u66f4\u52a0\u7b80\u6d01\u4e86\u3002 \u4e0e\u6b64\u540c\u65f6 Kubernetes \u793e\u533a\u4e5f\u505a\u4e86\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e Kubernetes \u7684 CRI \u8fd0\u884c\u65f6 CRI-O \uff0c\u76f4\u63a5\u517c\u5bb9 CRI \u548c OCI \u89c4\u8303\u3002 \u8fd9\u4e2a\u65b9\u6848\u548c containerd \u7684\u65b9\u6848\u663e\u7136\u6bd4\u9ed8\u8ba4\u7684 dockershim \u7b80\u6d01\u5f88\u591a\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5927\u90e8\u5206\u7528\u6237\u90fd\u6bd4\u8f83\u4e60\u60ef\u4f7f\u7528 Docker\uff0c\u6240\u4ee5\u5927\u5bb6\u8fd8\u662f\u66f4\u559c\u6b22\u4f7f\u7528 dockershim \u65b9\u6848\u3002 \u4f46\u662f\u968f\u7740 CRI \u65b9\u6848\u7684\u53d1\u5c55\uff0c\u4ee5\u53ca\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u5bf9 CRI \u7684\u652f\u6301\u8d8a\u6765\u8d8a\u5b8c\u5584\uff0cKubernetes \u793e\u533a\u57282020\u5e747\u6708\u4efd\u5c31\u5f00\u59cb\u7740\u624b\u79fb\u9664 dockershim \u65b9\u6848\u4e86\uff1a https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim \uff0c\u73b0\u5728\u7684\u79fb\u9664\u8ba1\u5212\u662f\u5728 1.20 \u7248\u672c\u4e2d\u5c06 kubelet \u4e2d\u5185\u7f6e\u7684 dockershim \u4ee3\u7801\u5206\u79bb\uff0c\u5c06\u5185\u7f6e\u7684 dockershim \u6807\u8bb0\u4e3a \u7ef4\u62a4\u6a21\u5f0f )\uff0c\u5f53\u7136\u8fd9\u4e2a\u65f6\u5019\u4ecd\u7136\u8fd8\u53ef\u4ee5\u4f7f\u7528 dockershim\uff0c\u76ee\u6807\u662f\u5728 1.23/1.24 \u7248\u672c\u53d1\u5e03\u6ca1\u6709 dockershim \u7684\u7248\u672c\uff08\u4ee3\u7801\u8fd8\u5728\uff0c\u4f46\u662f\u8981\u9ed8\u8ba4\u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684 docker \u9700\u8981\u81ea\u5df1\u6784\u5efa kubelet\uff0c\u4f1a\u5728\u67d0\u4e2a\u5bbd\u9650\u671f\u8fc7\u540e\u4ece kubelet \u4e2d\u5220\u9664\u5185\u7f6e\u7684 dockershim \u4ee3\u7801\uff09\u3002 \u90a3\u4e48\u8fd9\u662f\u5426\u5c31\u610f\u5473\u8fd9 Kubernetes \u4e0d\u518d\u652f\u6301 Docker \u4e86\u5462\uff1f\u5f53\u7136\u4e0d\u662f\u7684\uff0c\u8fd9\u53ea\u662f\u5e9f\u5f03\u4e86\u5185\u7f6e\u7684 dockershim \u529f\u80fd\u800c\u5df2\uff0cDocker \u548c\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u5c06\u4e00\u89c6\u540c\u4ec1\uff0c\u4e0d\u4f1a\u5355\u72ec\u5bf9\u5f85\u5185\u7f6e\u652f\u6301\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u60f3\u76f4\u63a5\u4f7f\u7528 Docker \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u53ef\u4ee5\u5c06 dockershim \u7684\u529f\u80fd\u5355\u72ec\u63d0\u53d6\u51fa\u6765\u72ec\u7acb\u7ef4\u62a4\u4e00\u4e2a cri-dockerd \u5373\u53ef\uff0c\u5c31\u7c7b\u4f3c\u4e8e containerd 1.0 \u7248\u672c\u4e2d\u63d0\u4f9b\u7684 CRI-Containerd \uff0c\u5f53\u7136\u8fd8\u6709\u4e00\u79cd\u529e\u6cd5\u5c31\u662f Docker \u5b98\u65b9\u793e\u533a\u5c06 CRI \u63a5\u53e3\u5185\u7f6e\u5230 Docker \u4e2d\u53bb\u5b9e\u73b0\u3002 \u4f46\u662f\u6211\u4eec\u4e5f\u6e05\u695a Docker \u4e5f\u662f\u53bb\u76f4\u63a5\u8c03\u7528\u7684 Containerd\uff0c\u800c containerd 1.1 \u7248\u672c\u540e\u5c31\u5185\u7f6e\u5b9e\u73b0\u4e86 CRI\uff0c\u6240\u4ee5 Docker \u4e5f\u6ca1\u5fc5\u8981\u518d\u53bb\u5355\u72ec\u5b9e\u73b0 CRI \u4e86\uff0c\u5f53 Kubernetes \u4e0d\u518d\u5185\u7f6e\u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684 Docker \u7684\u4ee5\u540e\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u5f53\u7136\u4e5f\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 Containerd \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u800c\u4e14\u8be5\u5bb9\u5668\u8fd0\u884c\u65f6\u4e5f\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u751f\u4ea7\u73af\u5883\u5b9e\u8df5\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b66\u4e60\u4e0b Containerd \u7684\u4f7f\u7528\u3002","title":"\u5bb9\u5668\u8fd0\u884c\u65f6\u4ecb\u7ecd"},{"location":"Container/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/#_1","text":"\u5728\u5b66\u4e60 Containerd \u4e4b\u524d\u6211\u4eec\u6709\u5fc5\u8981\u5bf9 Docker \u7684\u53d1\u5c55\u5386\u53f2\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u56de\u987e\uff0c\u56e0\u4e3a\u8fd9\u91cc\u9762\u7275\u6d89\u5230\u7684\u7ec4\u4ef6\u5b9e\u6218\u662f\u6709\u70b9\u591a\uff0c\u6709\u5f88\u591a\u6211\u4eec\u4f1a\u7ecf\u5e38\u542c\u5230\uff0c\u4f46\u662f\u4e0d\u6e05\u695a\u8fd9\u4e9b\u7ec4\u4ef6\u5230\u5e95\u662f\u5e72\u4ec0\u4e48\u7528\u7684\uff0c\u6bd4\u5982 libcontainer\u3001runc\u3001containerd\u3001CRI\u3001OCI \u7b49\u7b49\u3002","title":"\u5bb9\u5668\u8fd0\u884c\u65f6"},{"location":"Container/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/#docker","text":"\u4ece Docker 1.11 \u7248\u672c\u5f00\u59cb\uff0cDocker \u5bb9\u5668\u8fd0\u884c\u5c31\u4e0d\u662f\u7b80\u5355\u901a\u8fc7 Docker Daemon \u6765\u542f\u52a8\u4e86\uff0c\u800c\u662f\u901a\u8fc7\u96c6\u6210 containerd\u3001runc \u7b49\u591a\u4e2a\u7ec4\u4ef6\u6765\u5b8c\u6210\u7684\u3002\u867d\u7136 Docker Daemon \u5b88\u62a4\u8fdb\u7a0b\u6a21\u5757\u5728\u4e0d\u505c\u7684\u91cd\u6784\uff0c\u4f46\u662f\u57fa\u672c\u529f\u80fd\u548c\u5b9a\u4f4d\u6ca1\u6709\u592a\u5927\u7684\u53d8\u5316\uff0c\u4e00\u76f4\u90fd\u662f CS \u67b6\u6784\uff0c\u5b88\u62a4\u8fdb\u7a0b\u8d1f\u8d23\u548c Docker Client \u7aef\u4ea4\u4e92\uff0c\u5e76\u7ba1\u7406 Docker \u955c\u50cf\u548c\u5bb9\u5668\u3002\u73b0\u5728\u7684\u67b6\u6784\u4e2d\u7ec4\u4ef6 containerd \u5c31\u4f1a\u8d1f\u8d23\u96c6\u7fa4\u8282\u70b9\u4e0a\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u5e76\u5411\u4e0a\u4e3a Docker Daemon \u63d0\u4f9b gRPC \u63a5\u53e3\u3002 \u5f53\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u73b0\u5728 Docker Daemon \u5e76\u4e0d\u80fd\u76f4\u63a5\u5e2e\u6211\u4eec\u521b\u5efa\u4e86\uff0c\u800c\u662f\u8bf7\u6c42 containerd \u6765\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0ccontainerd \u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4e5f\u5e76\u4e0d\u4f1a\u76f4\u63a5\u53bb\u64cd\u4f5c\u5bb9\u5668\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u53eb\u505a containerd-shim \u7684\u8fdb\u7a0b\uff0c\u8ba9\u8fd9\u4e2a\u8fdb\u7a0b\u53bb\u64cd\u4f5c\u5bb9\u5668\uff0c\u6211\u4eec\u6307\u5b9a\u5bb9\u5668\u8fdb\u7a0b\u662f\u9700\u8981\u4e00\u4e2a\u7236\u8fdb\u7a0b\u6765\u505a\u72b6\u6001\u6536\u96c6\u3001\u7ef4\u6301 stdin \u7b49 fd \u6253\u5f00\u7b49\u5de5\u4f5c\u7684\uff0c\u5047\u5982\u8fd9\u4e2a\u7236\u8fdb\u7a0b\u5c31\u662f containerd\uff0c\u90a3\u5982\u679c containerd \u6302\u6389\u7684\u8bdd\uff0c\u6574\u4e2a\u5bbf\u4e3b\u673a\u4e0a\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5f97\u9000\u51fa\u4e86\uff0c\u800c\u5f15\u5165 containerd-shim \u8fd9\u4e2a\u57ab\u7247\u5c31\u53ef\u4ee5\u6765\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \u7136\u540e\u521b\u5efa\u5bb9\u5668\u9700\u8981\u505a\u4e00\u4e9b namespaces \u548c cgroups \u7684\u914d\u7f6e\uff0c\u4ee5\u53ca\u6302\u8f7d root \u6587\u4ef6\u7cfb\u7edf\u7b49\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5176\u5b9e\u5df2\u7ecf\u6709\u4e86\u6807\u51c6\u7684\u89c4\u8303\uff0c\u90a3\u5c31\u662f OCI\uff08\u5f00\u653e\u5bb9\u5668\u6807\u51c6\uff09\uff0c runc \u5c31\u662f\u5b83\u7684\u4e00\u4e2a\u53c2\u8003\u5b9e\u73b0\uff08Docker \u88ab\u903c\u65e0\u8010\u5c06 libcontainer \u6350\u732e\u51fa\u6765\u6539\u540d\u4e3a runc \u7684\uff09\uff0c\u8fd9\u4e2a\u6807\u51c6\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6587\u6863\uff0c\u4e3b\u8981\u89c4\u5b9a\u4e86\u5bb9\u5668\u955c\u50cf\u7684\u7ed3\u6784\u3001\u4ee5\u53ca\u5bb9\u5668\u9700\u8981\u63a5\u6536\u54ea\u4e9b\u64cd\u4f5c\u6307\u4ee4\uff0c\u6bd4\u5982 create\u3001start\u3001stop\u3001delete \u7b49\u8fd9\u4e9b\u547d\u4ee4\u3002 runc \u5c31\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a OCI \u6587\u6863\u6765\u521b\u5efa\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5bb9\u5668\uff0c\u65e2\u7136\u662f\u6807\u51c6\u80af\u5b9a\u5c31\u6709\u5176\u4ed6 OCI \u5b9e\u73b0\uff0c\u6bd4\u5982 Kata\u3001gVisor \u8fd9\u4e9b\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u662f\u7b26\u5408 OCI \u6807\u51c6\u7684\u3002 \u6240\u4ee5\u771f\u6b63\u542f\u52a8\u5bb9\u5668\u662f\u901a\u8fc7 containerd-shim \u53bb\u8c03\u7528 runc \u6765\u542f\u52a8\u5bb9\u5668\u7684\uff0c runc \u542f\u52a8\u5b8c\u5bb9\u5668\u540e\u672c\u8eab\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c containerd-shim \u5219\u4f1a\u6210\u4e3a\u5bb9\u5668\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b, \u8d1f\u8d23\u6536\u96c6\u5bb9\u5668\u8fdb\u7a0b\u7684\u72b6\u6001, \u4e0a\u62a5\u7ed9 containerd , \u5e76\u5728\u5bb9\u5668\u4e2d pid \u4e3a 1 \u7684\u8fdb\u7a0b\u9000\u51fa\u540e\u63a5\u7ba1\u5bb9\u5668\u4e2d\u7684\u5b50\u8fdb\u7a0b\u8fdb\u884c\u6e05\u7406, \u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u50f5\u5c38\u8fdb\u7a0b\u3002 \u800c Docker \u5c06\u5bb9\u5668\u64cd\u4f5c\u90fd\u8fc1\u79fb\u5230 containerd \u4e2d\u53bb\u662f\u56e0\u4e3a\u5f53\u524d\u505a Swarm\uff0c\u60f3\u8981\u8fdb\u519b PaaS \u5e02\u573a\uff0c\u505a\u4e86\u8fd9\u4e2a\u67b6\u6784\u5207\u5206\uff0c\u8ba9 Docker Daemon \u4e13\u95e8\u53bb\u8d1f\u8d23\u4e0a\u5c42\u7684\u5c01\u88c5\u7f16\u6392\uff0c\u5f53\u7136\u540e\u9762\u7684\u7ed3\u679c\u6211\u4eec\u77e5\u9053 Swarm \u5728 Kubernetes \u9762\u524d\u662f\u60e8\u8d25\uff0c\u7136\u540e Docker \u516c\u53f8\u5c31\u628a containerd \u9879\u76ee\u6350\u732e\u7ed9\u4e86 CNCF \u57fa\u91d1\u4f1a\uff0c\u8fd9\u4e2a\u4e5f\u662f\u73b0\u5728\u7684 Docker \u67b6\u6784\u3002","title":"Docker"},{"location":"Container/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/#cri","text":"\u6211\u4eec\u77e5\u9053 Kubernetes \u63d0\u4f9b\u4e86\u4e00\u4e2a CRI \u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\uff0c\u90a3\u4e48\u8fd9\u4e2a CRI \u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u5176\u5b9e\u4e5f\u548c Docker \u7684\u53d1\u5c55\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u5728 Kubernetes \u65e9\u671f\u7684\u65f6\u5019\uff0c\u5f53\u65f6 Docker \u5b9e\u5728\u662f\u592a\u706b\u4e86\uff0cKubernetes \u5f53\u7136\u4f1a\u5148\u9009\u62e9\u652f\u6301 Docker\uff0c\u800c\u4e14\u662f\u901a\u8fc7\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u76f4\u63a5\u8c03\u7528 Docker API\uff0c\u540e\u9762\u968f\u7740 Docker \u7684\u4e0d\u65ad\u53d1\u5c55\u4ee5\u53ca Google \u7684\u4e3b\u5bfc\uff0c\u51fa\u73b0\u4e86\u66f4\u591a\u5bb9\u5668\u8fd0\u884c\u65f6\uff0cKubernetes \u4e3a\u4e86\u652f\u6301\u66f4\u591a\u66f4\u7cbe\u7b80\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0cGoogle \u5c31\u548c\u7ea2\u5e3d\u4e3b\u5bfc\u63a8\u51fa\u4e86 CRI \u6807\u51c6\uff0c\u7528\u4e8e\u5c06 Kubernetes \u5e73\u53f0\u548c\u7279\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u5f53\u7136\u4e3b\u8981\u662f\u4e3a\u4e86\u5e72\u6389 Docker\uff09\u89e3\u8026\u3002 CRI \uff08Container Runtime Interface \u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\uff09\u672c\u8d28\u4e0a\u5c31\u662f Kubernetes \u5b9a\u4e49\u7684\u4e00\u7ec4\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u8fdb\u884c\u4ea4\u4e92\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u5957\u63a5\u53e3\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u53ef\u4ee5\u5bf9\u63a5\u5230 Kubernetes \u5e73\u53f0\u4e0a\u6765\u3002\u4e0d\u8fc7 Kubernetes \u63a8\u51fa CRI \u8fd9\u5957\u6807\u51c6\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u73b0\u5728\u7684\u7edf\u6cbb\u5730\u4f4d\uff0c\u6240\u4ee5\u6709\u4e00\u4e9b\u5bb9\u5668\u8fd0\u884c\u65f6\u53ef\u80fd\u4e0d\u4f1a\u81ea\u8eab\u5c31\u53bb\u5b9e\u73b0 CRI \u63a5\u53e3\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 shim\uff08\u57ab\u7247\uff09 \uff0c \u4e00\u4e2a shim \u7684\u804c\u8d23\u5c31\u662f\u4f5c\u4e3a\u9002\u914d\u5668\u5c06\u5404\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u672c\u8eab\u7684\u63a5\u53e3\u9002\u914d\u5230 Kubernetes \u7684 CRI \u63a5\u53e3\u4e0a\uff0c\u5176\u4e2d dockershim \u5c31\u662f Kubernetes \u5bf9\u63a5 Docker \u5230 CRI \u63a5\u53e3\u4e0a\u7684\u4e00\u4e2a\u57ab\u7247\u5b9e\u73b0\u3002 Kubelet \u901a\u8fc7 gRPC \u6846\u67b6\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u6216 shim \u8fdb\u884c\u901a\u4fe1\uff0c\u5176\u4e2d kubelet \u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0cCRI shim\uff08\u4e5f\u53ef\u80fd\u662f\u5bb9\u5668\u8fd0\u884c\u65f6\u672c\u8eab\uff09\u4f5c\u4e3a\u670d\u52a1\u5668\u3002 CRI \u5b9a\u4e49\u7684 API \u4e3b\u8981\u5305\u62ec\u4e24\u4e2a gRPC \u670d\u52a1\uff0c ImageService \u548c RuntimeService \uff0c ImageService \u670d\u52a1\u4e3b\u8981\u662f\u62c9\u53d6\u955c\u50cf\u3001\u67e5\u770b\u548c\u5220\u9664\u955c\u50cf\u7b49\u64cd\u4f5c\uff0c RuntimeService \u5219\u662f\u7528\u6765\u7ba1\u7406 Pod \u548c\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u53ca\u4e0e\u5bb9\u5668\u4ea4\u4e92\u7684\u8c03\u7528\uff08exec/attach/port-forward\uff09\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 kubelet \u4e2d\u7684\u6807\u5fd7 --container-runtime-endpoint \u548c --image-service-endpoint \u6765\u914d\u7f6e\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u5957\u63a5\u5b57\u3002 \u4e0d\u8fc7\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u90a3\u5c31\u662f Docker\uff0c\u7531\u4e8e Docker \u5f53\u65f6\u7684\u6c5f\u6e56\u5730\u4f4d\u5f88\u9ad8\uff0cKubernetes \u662f\u76f4\u63a5\u5185\u7f6e\u4e86 dockershim \u5728 kubelet \u4e2d\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Docker \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u8bdd\u662f\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\u914d\u7f6e\u9002\u914d\u5668\u4e4b\u7c7b\u7684\uff0c\u5f53\u7136\u8fd9\u4e2a\u4e3e\u52a8\u4f3c\u4e4e\u4e5f\u9ebb\u75f9\u4e86 Docker \u516c\u53f8\u3002 \u73b0\u5728\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f Docker \u7684\u8bdd\uff0c\u5f53\u6211\u4eec\u5728 Kubernetes \u4e2d\u521b\u5efa\u4e00\u4e2a Pod \u7684\u65f6\u5019\uff0c\u9996\u5148\u5c31\u662f kubelet \u901a\u8fc7 CRI \u63a5\u53e3\u8c03\u7528 dockershim \uff0c\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0ckubelet \u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684 CRI Client, \u800c dockershim \u5c31\u662f\u63a5\u6536\u8bf7\u6c42\u7684 Server\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u90fd\u662f\u5728 kubelet \u5185\u7f6e\u7684\u3002 dockershim \u6536\u5230\u8bf7\u6c42\u540e, \u8f6c\u5316\u6210 Docker Daemon \u80fd\u8bc6\u522b\u7684\u8bf7\u6c42, \u53d1\u5230 Docker Daemon \u4e0a\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u8bf7\u6c42\u5230\u4e86 Docker Daemon \u540e\u7eed\u5c31\u662f Docker \u521b\u5efa\u5bb9\u5668\u7684\u6d41\u7a0b\u4e86\uff0c\u53bb\u8c03\u7528 containerd \uff0c\u7136\u540e\u521b\u5efa containerd-shim \u8fdb\u7a0b\uff0c\u901a\u8fc7\u8be5\u8fdb\u7a0b\u53bb\u8c03\u7528 runc \u53bb\u771f\u6b63\u521b\u5efa\u5bb9\u5668\u3002 \u5176\u5b9e\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e5f\u4e0d\u96be\u53d1\u73b0\u4f7f\u7528 Docker \u7684\u8bdd\u5176\u5b9e\u662f\u8c03\u7528\u94fe\u6bd4\u8f83\u957f\u7684\uff0c\u771f\u6b63\u5bb9\u5668\u76f8\u5173\u7684\u64cd\u4f5c\u5176\u5b9e containerd \u5c31\u5b8c\u5168\u8db3\u591f\u4e86\uff0cDocker \u592a\u8fc7\u4e8e\u590d\u6742\u7b28\u91cd\u4e86\uff0c\u5f53\u7136 Docker \u6df1\u53d7\u6b22\u8fce\u7684\u5f88\u5927\u4e00\u4e2a\u539f\u56e0\u5c31\u662f\u63d0\u4f9b\u4e86\u5f88\u591a\u5bf9\u7528\u6237\u64cd\u4f5c\u6bd4\u8f83\u53cb\u597d\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5bf9\u4e8e Kubernetes \u6765\u8bf4\u538b\u6839\u4e0d\u9700\u8981\u8fd9\u4e9b\u529f\u80fd\uff0c\u56e0\u4e3a\u90fd\u662f\u901a\u8fc7\u63a5\u53e3\u53bb\u64cd\u4f5c\u5bb9\u5668\u7684\uff0c\u6240\u4ee5\u81ea\u7136\u4e5f\u5c31\u53ef\u4ee5\u5c06\u5bb9\u5668\u8fd0\u884c\u65f6\u5207\u6362\u5230 containerd \u6765\u3002 \u5207\u6362\u5230 containerd \u53ef\u4ee5\u6d88\u9664\u6389\u4e2d\u95f4\u73af\u8282\uff0c\u64cd\u4f5c\u4f53\u9a8c\u4e5f\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4f46\u662f\u7531\u4e8e\u76f4\u63a5\u7528\u5bb9\u5668\u8fd0\u884c\u65f6\u8c03\u5ea6\u5bb9\u5668\uff0c\u6240\u4ee5\u5b83\u4eec\u5bf9 Docker \u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u56e0\u6b64\uff0c\u4f60\u4ee5\u524d\u7528\u6765\u68c0\u67e5\u8fd9\u4e9b\u5bb9\u5668\u7684 Docker \u5de5\u5177\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002 \u4f60\u4e0d\u80fd\u518d\u4f7f\u7528 docker ps \u6216 docker inspect \u547d\u4ee4\u6765\u83b7\u53d6\u5bb9\u5668\u4fe1\u606f\u3002\u7531\u4e8e\u4e0d\u80fd\u5217\u51fa\u5bb9\u5668\uff0c\u56e0\u6b64\u4e5f\u4e0d\u80fd\u83b7\u53d6\u65e5\u5fd7\u3001\u505c\u6b62\u5bb9\u5668\uff0c\u751a\u81f3\u4e0d\u80fd\u901a\u8fc7 docker exec \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4\u3002 \u5f53\u7136\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4e0b\u8f7d\u955c\u50cf\uff0c\u6216\u8005\u7528 docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u4f46\u7528 Docker \u6784\u5efa\u3001\u4e0b\u8f7d\u7684\u955c\u50cf\uff0c\u5bf9\u4e8e\u5bb9\u5668\u8fd0\u884c\u65f6\u548c Kubernetes\uff0c\u5747\u4e0d\u53ef\u89c1\u3002\u4e3a\u4e86\u5728 Kubernetes \u4e2d\u4f7f\u7528\uff0c\u9700\u8981\u628a\u955c\u50cf\u63a8\u9001\u5230\u955c\u50cf\u4ed3\u5e93\u4e2d\u53bb\u3002 \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\u5728 containerd 1.0 \u4e2d\uff0c\u5bf9 CRI \u7684\u9002\u914d\u662f\u901a\u8fc7\u4e00\u4e2a\u5355\u72ec\u7684 CRI-Containerd \u8fdb\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u6700\u5f00\u59cb containerd \u8fd8\u4f1a\u53bb\u9002\u914d\u5176\u4ed6\u7684\u7cfb\u7edf\uff08\u6bd4\u5982 swarm\uff09\uff0c\u6240\u4ee5\u6ca1\u6709\u76f4\u63a5\u5b9e\u73b0 CRI\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5bf9\u63a5\u5de5\u4f5c\u5c31\u4ea4\u7ed9 CRI-Containerd \u8fd9\u4e2a shim \u4e86\u3002 \u7136\u540e\u5230\u4e86 containerd 1.1 \u7248\u672c\u540e\u5c31\u53bb\u6389\u4e86 CRI-Containerd \u8fd9\u4e2a shim\uff0c\u76f4\u63a5\u628a\u9002\u914d\u903b\u8f91\u4f5c\u4e3a\u63d2\u4ef6\u7684\u65b9\u5f0f\u96c6\u6210\u5230\u4e86 containerd \u4e3b\u8fdb\u7a0b\u4e2d\uff0c\u73b0\u5728\u8fd9\u6837\u7684\u8c03\u7528\u5c31\u66f4\u52a0\u7b80\u6d01\u4e86\u3002 \u4e0e\u6b64\u540c\u65f6 Kubernetes \u793e\u533a\u4e5f\u505a\u4e86\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e Kubernetes \u7684 CRI \u8fd0\u884c\u65f6 CRI-O \uff0c\u76f4\u63a5\u517c\u5bb9 CRI \u548c OCI \u89c4\u8303\u3002 \u8fd9\u4e2a\u65b9\u6848\u548c containerd \u7684\u65b9\u6848\u663e\u7136\u6bd4\u9ed8\u8ba4\u7684 dockershim \u7b80\u6d01\u5f88\u591a\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5927\u90e8\u5206\u7528\u6237\u90fd\u6bd4\u8f83\u4e60\u60ef\u4f7f\u7528 Docker\uff0c\u6240\u4ee5\u5927\u5bb6\u8fd8\u662f\u66f4\u559c\u6b22\u4f7f\u7528 dockershim \u65b9\u6848\u3002 \u4f46\u662f\u968f\u7740 CRI \u65b9\u6848\u7684\u53d1\u5c55\uff0c\u4ee5\u53ca\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u5bf9 CRI \u7684\u652f\u6301\u8d8a\u6765\u8d8a\u5b8c\u5584\uff0cKubernetes \u793e\u533a\u57282020\u5e747\u6708\u4efd\u5c31\u5f00\u59cb\u7740\u624b\u79fb\u9664 dockershim \u65b9\u6848\u4e86\uff1a https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim \uff0c\u73b0\u5728\u7684\u79fb\u9664\u8ba1\u5212\u662f\u5728 1.20 \u7248\u672c\u4e2d\u5c06 kubelet \u4e2d\u5185\u7f6e\u7684 dockershim \u4ee3\u7801\u5206\u79bb\uff0c\u5c06\u5185\u7f6e\u7684 dockershim \u6807\u8bb0\u4e3a \u7ef4\u62a4\u6a21\u5f0f )\uff0c\u5f53\u7136\u8fd9\u4e2a\u65f6\u5019\u4ecd\u7136\u8fd8\u53ef\u4ee5\u4f7f\u7528 dockershim\uff0c\u76ee\u6807\u662f\u5728 1.23/1.24 \u7248\u672c\u53d1\u5e03\u6ca1\u6709 dockershim \u7684\u7248\u672c\uff08\u4ee3\u7801\u8fd8\u5728\uff0c\u4f46\u662f\u8981\u9ed8\u8ba4\u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684 docker \u9700\u8981\u81ea\u5df1\u6784\u5efa kubelet\uff0c\u4f1a\u5728\u67d0\u4e2a\u5bbd\u9650\u671f\u8fc7\u540e\u4ece kubelet \u4e2d\u5220\u9664\u5185\u7f6e\u7684 dockershim \u4ee3\u7801\uff09\u3002 \u90a3\u4e48\u8fd9\u662f\u5426\u5c31\u610f\u5473\u8fd9 Kubernetes \u4e0d\u518d\u652f\u6301 Docker \u4e86\u5462\uff1f\u5f53\u7136\u4e0d\u662f\u7684\uff0c\u8fd9\u53ea\u662f\u5e9f\u5f03\u4e86\u5185\u7f6e\u7684 dockershim \u529f\u80fd\u800c\u5df2\uff0cDocker \u548c\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u5c06\u4e00\u89c6\u540c\u4ec1\uff0c\u4e0d\u4f1a\u5355\u72ec\u5bf9\u5f85\u5185\u7f6e\u652f\u6301\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u60f3\u76f4\u63a5\u4f7f\u7528 Docker \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u53ef\u4ee5\u5c06 dockershim \u7684\u529f\u80fd\u5355\u72ec\u63d0\u53d6\u51fa\u6765\u72ec\u7acb\u7ef4\u62a4\u4e00\u4e2a cri-dockerd \u5373\u53ef\uff0c\u5c31\u7c7b\u4f3c\u4e8e containerd 1.0 \u7248\u672c\u4e2d\u63d0\u4f9b\u7684 CRI-Containerd \uff0c\u5f53\u7136\u8fd8\u6709\u4e00\u79cd\u529e\u6cd5\u5c31\u662f Docker \u5b98\u65b9\u793e\u533a\u5c06 CRI \u63a5\u53e3\u5185\u7f6e\u5230 Docker \u4e2d\u53bb\u5b9e\u73b0\u3002 \u4f46\u662f\u6211\u4eec\u4e5f\u6e05\u695a Docker \u4e5f\u662f\u53bb\u76f4\u63a5\u8c03\u7528\u7684 Containerd\uff0c\u800c containerd 1.1 \u7248\u672c\u540e\u5c31\u5185\u7f6e\u5b9e\u73b0\u4e86 CRI\uff0c\u6240\u4ee5 Docker \u4e5f\u6ca1\u5fc5\u8981\u518d\u53bb\u5355\u72ec\u5b9e\u73b0 CRI \u4e86\uff0c\u5f53 Kubernetes \u4e0d\u518d\u5185\u7f6e\u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684 Docker \u7684\u4ee5\u540e\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u5f53\u7136\u4e5f\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 Containerd \u8fd9\u79cd\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u800c\u4e14\u8be5\u5bb9\u5668\u8fd0\u884c\u65f6\u4e5f\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u751f\u4ea7\u73af\u5883\u5b9e\u8df5\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b66\u4e60\u4e0b Containerd \u7684\u4f7f\u7528\u3002","title":"CRI"},{"location":"Controller/Admission/","text":"\u51c6\u5165\u63a7\u5236\u5668 \u00b6 Kubernetes \u63d0\u4f9b\u4e86\u9700\u8981\u6269\u5c55\u5176\u5185\u7f6e\u529f\u80fd\u7684\u65b9\u6cd5\uff0c \u6700\u5e38\u7528\u7684\u53ef\u80fd\u662f\u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4e86 \uff0c\u9664\u6b64\u4e4b\u5916\uff0cKubernetes \u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u975e\u5e38\u6709\u8da3\u7684\u529f\u80fd\uff0c\u6bd4\u5982 admission webhooks \u5c31\u53ef\u4ee5\u7528\u4e8e\u6269\u5c55 API\uff0c\u7528\u4e8e\u4fee\u6539\u67d0\u4e9b Kubernetes \u8d44\u6e90\u7684\u57fa\u672c\u884c\u4e3a \u3002 \u51c6\u5165\u63a7\u5236\u5668\u662f\u5728\u5bf9\u8c61\u6301\u4e45\u5316\u4e4b\u524d\u7528\u4e8e\u5bf9 Kubernetes API Server \u7684\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u7684\u4ee3\u7801\u6bb5\uff0c\u5728\u8bf7\u6c42\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u4e4b\u540e\u653e\u884c\u901a\u8fc7\u3002\u51c6\u5165\u63a7\u5236\u5668\u53ef\u80fd\u6b63\u5728 validating\u3001mutating \u6216\u8005\u90fd\u5728\u6267\u884c\uff0c Mutating \u63a7\u5236\u5668\u53ef\u4ee5\u4fee\u6539\u4ed6\u4eec\u5904\u7406\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c Validating \u63a7\u5236\u5668\u4e0d\u4f1a\uff0c\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u9636\u6bb5\u4e2d\u7684\u4efb\u4f55\u63a7\u5236\u5668\u62d2\u7edd\u4e86\u8bf7\u6c42\uff0c\u5219\u4f1a\u7acb\u5373\u62d2\u7edd\u6574\u4e2a\u8bf7\u6c42\uff0c\u5e76\u5c06\u9519\u8bef\u8fd4\u56de\u7ed9\u6700\u7ec8\u7684\u7528\u6237\u3002 \u8fd9\u610f\u5473\u7740\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u63a7\u5236\u5668\u53ef\u4ee5\u62e6\u622a Kubernetes API \u8bf7\u6c42\uff0c\u5e76\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\u4fee\u6539\u6216\u8005\u62d2\u7edd\u5b83\u4eec\u3002Kubernetes \u6709\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u4e2a \u63a7\u5236\u5668\u5217\u8868 \uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u63a7\u5236\u5668\uff0c\u867d\u7136\u8fd9\u4e9b\u63a7\u5236\u5668\u542c\u8d77\u6765\u529f\u80fd\u6bd4\u8f83\u5f3a\u5927\uff0c\u4f46\u662f\u8fd9\u4e9b\u63a7\u5236\u5668\u9700\u8981\u88ab\u7f16\u8bd1\u8fdb kube-apiserver\uff0c\u5e76\u4e14\u53ea\u80fd\u5728 apiserver \u542f\u52a8\u4e86\u518d\u968f\u4e4b\u542f\u52a8\u3002 \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 kube-apiserver \u542f\u52a8\u53c2\u6570\u67e5\u770b\u5185\u7f6e\u652f\u6301\u7684\u63a7\u5236\u5668\uff1a kube-apiserver --help | grep enable-admission-plugins \u7531\u4e8e\u4e0a\u9762\u7684\u63a7\u5236\u5668\u7684\u9650\u5236\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u52a8\u6001\u7684\u6982\u5ff5\u4e86\uff0c\u800c\u4e0d\u662f\u548c apiserver \u8026\u5408\u5728\u4e00\u8d77\uff0c Admission webhooks \u5c31\u901a\u8fc7\u4e00\u79cd\u52a8\u6001\u914d\u7f6e\u65b9\u6cd5\u89e3\u51b3\u4e86\u8fd9\u4e2a\u9650\u5236\u95ee\u9898 \u3002 admission webhook \u662f\u4ec0\u4e48? \u00b6 \u5728 Kubernetes apiserver \u4e2d\u5305\u542b\u4e24\u4e2a\u7279\u6b8a\u7684\u51c6\u5165\u63a7\u5236\u5668\uff1a MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \uff0c\u8fd9\u4e24\u4e2a\u63a7\u5236\u5668\u5c06\u53d1\u9001\u51c6\u5165\u8bf7\u6c42\u5230\u5916\u90e8\u7684 HTTP \u56de\u8c03\u670d\u52a1\u5e76\u63a5\u6536\u4e00\u4e2a\u51c6\u5165\u54cd\u5e94\u3002\u5982\u679c\u542f\u7528\u4e86\u8fd9\u4e24\u4e2a\u51c6\u5165\u63a7\u5236\u5668\uff0cKubernetes \u7ba1\u7406\u5458\u53ef\u4ee5\u5728\u96c6\u7fa4\u4e2d\u521b\u5efa\u548c\u914d\u7f6e\u4e00\u4e2a admission webhook \u3002 \u6574\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a \uff1a \u68c0\u67e5\u96c6\u7fa4\u4e2d\u662f\u5426\u542f\u7528\u4e86 admission webhook \u63a7\u5236\u5668\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u914d\u7f6e\u3002 \u7f16\u5199\u5904\u7406\u51c6\u5165\u8bf7\u6c42\u7684 HTTP \u56de\u8c03\uff0c\u56de\u8c03\u53ef\u4ee5\u662f\u4e00\u4e2a\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d\u7684\u7b80\u5355 HTTP \u670d\u52a1\uff0c\u751a\u81f3\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a serverless \u51fd\u6570 \u3002 \u901a\u8fc7 MutatingWebhookConfiguration \u548c ValidatingWebhookConfiguration \u8d44\u6e90\u914d\u7f6e admission webhook \u3002 \u8fd9\u4e24\u79cd\u7c7b\u578b\u7684 admission webhook \u4e4b\u95f4\u7684\u533a\u522b\u662f\u975e\u5e38\u660e\u663e\u7684 \uff1a validating webhooks \u53ef\u4ee5 \u62d2\u7edd\u8bf7\u6c42 \uff0c\u4f46\u662f\u5b83\u4eec\u5374 \u4e0d\u80fd\u4fee\u6539 \u51c6\u5165\u8bf7\u6c42\u4e2d\u83b7\u53d6\u7684\u5bf9\u8c61\uff0c\u800c mutating webhooks \u53ef\u4ee5\u5728\u8fd4\u56de\u51c6\u5165\u54cd\u5e94\u4e4b\u524d\u901a\u8fc7 \u521b\u5efa\u8865\u4e01\u6765\u4fee\u6539\u5bf9\u8c61 \uff0c\u5982\u679c webhook \u62d2\u7edd\u4e86\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5219\u4f1a\u5411\u6700\u7ec8\u7528\u6237\u8fd4\u56de\u9519\u8bef\u3002 \u73b0\u5728\u975e\u5e38\u706b\u70ed\u7684 Service Mesh \u5e94\u7528 istio \u5c31\u662f\u901a\u8fc7 mutating webhooks \u6765\u81ea\u52a8\u5c06 Envoy \u8fd9\u4e2a sidecar \u5bb9\u5668\u6ce8\u5165\u5230 Pod \u4e2d\u53bb\u7684\u3002 \u521b\u5efa\u914d\u7f6e\u4e00\u4e2a Admission Webhook \u00b6 \u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Admission Webhook \u7684\u7406\u8bba\u77e5\u8bc6\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u4e00\u4e2a\u771f\u5b9e\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u6765\u5b9e\u9645\u6d4b\u8bd5\u4f7f\u7528\u4e0b\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a webhook \u7684 webserver\uff0c\u5c06\u5176\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\uff0c\u7136\u540e\u521b\u5efa webhook \u914d\u7f6e\u67e5\u770b\u662f\u5426\u751f\u6548\u3002 \u9996\u5148\u786e\u4fdd\u5728 apiserver \u4e2d\u542f\u7528\u4e86 MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \u8fd9\u4e24\u4e2a\u63a7\u5236\u5668\uff0c\u901a\u8fc7\u53c2\u6570 --enable-admission-plugins \u8fdb\u884c\u914d\u7f6e\uff0c\u5f53\u524d v1.22 \u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u9ed8\u8ba4\u5f00\u542f\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u5f00\u542f\u5219\u9700\u8981\u6dfb\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u91cd\u542f apiserver\u3002 \u7136\u540e\u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u68c0\u67e5\u96c6\u7fa4\u4e2d\u662f\u5426\u542f\u7528\u4e86\u51c6\u5165\u6ce8\u518c API\uff1a \u279c ~ kubectl api-versions | grep admission admissionregistration.k8s.io/v1 \u7f16\u5199 webhook \u00b6 \u6ee1\u8db3\u4e86\u524d\u9762\u7684\u5148\u51b3\u6761\u4ef6\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b9e\u73b0\u4e00\u4e2a webhook \u793a\u4f8b\uff0c\u901a\u8fc7\u76d1\u542c\u4e24\u4e2a\u4e0d\u540c\u7684 HTTP \u7aef\u70b9\uff08validate \u548c mutate\uff09\u6765\u8fdb\u884c validating \u548c mutating webhook \u9a8c\u8bc1\u3002 \u8fd9\u4e2a webhook \u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728 Github \u4e0a\u83b7\u53d6\uff0c\u8be5\u4ed3\u5e93 Fork \u81ea\u9879\u76ee\u3002\u8fd9\u4e2a webhook \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e26 TLS \u8ba4\u8bc1\u7684 HTTP \u670d\u52a1\uff0c\u7528 Deployment \u65b9\u5f0f\u90e8\u7f72\u5728\u6211\u4eec\u7684\u96c6\u7fa4\u4e2d\u3002 \u4ee3\u7801\u4e2d\u4e3b\u8981\u7684\u903b\u8f91\u5728\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff1a main.go \u548c webhook.go \uff0cmain.go \u6587\u4ef6\u5305\u542b\u521b\u5efa HTTP \u670d\u52a1\u7684\u4ee3\u7801\uff0c\u800cwebhook.go \u5305\u542b validates \u548c mutates \u4e24\u4e2a webhook \u7684\u903b\u8f91\uff0c\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u9996\u5148\u67e5\u770b main.go \u6587\u4ef6\uff0c\u67e5\u770b\u5982\u4f55\u4f7f\u7528\u6807\u51c6 golang \u5305\u6765\u542f\u52a8 HTTP \u670d\u52a1\uff0c\u4ee5\u53ca\u5982\u4f55\u4ece\u547d\u4ee4\u884c\u6807\u5fd7\u4e2d\u8bfb\u53d6 TLS \u914d\u7f6e\u7684\u8bc1\u4e66\uff1a flag.StringVar(&parameters.certFile, \"tlsCertFile\", \"/etc/webhook/certs/cert.pem\", \"File containing the x509 Certificate for HTTPS.\") flag.StringVar(&parameters.keyFile, \"tlsKeyFile\", \"/etc/webhook/certs/key.pem\", \"File containing the x509 private key to --tlsCertFile.\") \u7136\u540e\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u662f serve \u51fd\u6570\uff0c\u7528\u6765\u5904\u7406\u4f20\u5165\u7684 mutate \u548c validating \u51fd\u6570 \u7684 HTTP \u8bf7\u6c42\u3002\u8be5\u51fd\u6570\u4ece\u8bf7\u6c42\u4e2d\u53cd\u5e8f\u5217\u5316 AdmissionReview \u5bf9\u8c61\uff0c\u6267\u884c\u4e00\u4e9b\u57fa\u672c\u7684\u5185\u5bb9\u6821\u9a8c\uff0c\u6839\u636e URL \u8def\u5f84\u8c03\u7528\u76f8\u5e94\u7684 mutate \u548c validate \u51fd\u6570\uff0c\u7136\u540e\u5e8f\u5217\u5316 AdmissionReview \u5bf9\u8c61\uff1a func ( whsvr * WebhookServer ) serve ( w http . ResponseWriter , r * http . Request ) { var body [] byte if r . Body != nil { if data , err := ioutil . ReadAll ( r . Body ); err == nil { body = data } } if len ( body ) == 0 { glog . Error ( \"empty body\" ) http . Error ( w , \"empty body\" , http . StatusBadRequest ) return } // \u6821\u9a8c Content-Type contentType := r . Header . Get ( \"Content-Type\" ) if contentType != \"application/json\" { glog . Errorf ( \"Content-Type=%s, expect application/json\" , contentType ) http . Error ( w , \"invalid Content-Type, expect `application/json`\" , http . StatusUnsupportedMediaType ) return } var admissionResponse * v1beta1 . AdmissionResponse ar := v1beta1 . AdmissionReview {} if _ , _ , err := deserializer . Decode ( body , nil , & ar ); err != nil { glog . Errorf ( \"Can't decode body: %v\" , err ) admissionResponse = & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } else { if r . URL . Path == \"/mutate\" { admissionResponse = whsvr . mutate ( & ar ) } else if r . URL . Path == \"/validate\" { admissionResponse = whsvr . validate ( & ar ) } } admissionReview := v1beta1 . AdmissionReview {} if admissionResponse != nil { admissionReview . Response = admissionResponse if ar . Request != nil { admissionReview . Response . UID = ar . Request . UID } } resp , err := json . Marshal ( admissionReview ) if err != nil { glog . Errorf ( \"Can't encode response: %v\" , err ) http . Error ( w , fmt . Sprintf ( \"could not encode response: %v\" , err ), http . StatusInternalServerError ) } glog . Infof ( \"Ready to write reponse ...\" ) if _ , err := w . Write ( resp ); err != nil { glog . Errorf ( \"Can't write response: %v\" , err ) http . Error ( w , fmt . Sprintf ( \"could not write response: %v\" , err ), http . StatusInternalServerError ) } } \u4e3b\u8981\u7684\u51c6\u5165\u903b\u8f91\u662f validate \u548c mutate \u4e24\u4e2a\u51fd\u6570\u3002validate \u51fd\u6570\u68c0\u67e5\u8d44\u6e90\u5bf9\u8c61\u662f\u5426\u9700\u8981\u6821\u9a8c\uff1a\u4e0d\u9a8c\u8bc1 kube-system \u548c kube-public \u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\uff0c\u5982\u679c\u60f3\u8981\u663e\u793a\u7684\u58f0\u660e\u4e0d\u9a8c\u8bc1\u67d0\u4e2a\u8d44\u6e90\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u8d44\u6e90\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e00\u4e2a admission-webhook-example.qikqiak.com/validate=false \u7684 annotation \u8fdb\u884c\u58f0\u660e\u3002\u5982\u679c\u9700\u8981\u9a8c\u8bc1\uff0c\u5219\u6839\u636e\u8d44\u6e90\u7c7b\u578b\u7684 kind\uff0c\u548c\u6807\u7b7e\u4e0e\u5176\u5bf9\u5e94\u9879\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c06 service \u6216\u8005 deployment \u8d44\u6e90\u4ece\u8bf7\u6c42\u4e2d\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u3002\u5982\u679c\u7f3a\u5c11\u67d0\u4e9b label \u6807\u7b7e\uff0c\u5219\u54cd\u5e94\u4e2d\u7684 Allowed \u4f1a\u88ab\u8bbe\u7f6e\u4e3a false \u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u5219\u4f1a\u5728\u54cd\u5e94\u4e2d\u5199\u5165\u5931\u8d25\u539f\u56e0\uff0c\u6700\u7ec8\u7528\u6237\u5728\u5c1d\u8bd5\u521b\u5efa\u8d44\u6e90\u65f6\u4f1a\u6536\u5230\u5931\u8d25\u7684\u4fe1\u606f\u3002validate \u51fd\u6570\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a // validate deployments and services func ( whsvr * WebhookServer ) validate ( ar * v1beta1 . AdmissionReview ) * v1beta1 . AdmissionResponse { req := ar . Request var ( availableLabels map [ string ] string objectMeta * metav1 . ObjectMeta resourceNamespace , resourceName string ) glog . Infof ( \"AdmissionReview for Kind=%v, Namespace=%v Name=%v (%v) UID=%v patchOperation=%v UserInfo=%v\" , req . Kind , req . Namespace , req . Name , resourceName , req . UID , req . Operation , req . UserInfo ) switch req . Kind . Kind { case \"Deployment\" : var deployment appsv1 . Deployment if err := json . Unmarshal ( req . Object . Raw , & deployment ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = deployment . Name , deployment . Namespace , & deployment . ObjectMeta availableLabels = deployment . Labels case \"Service\" : var service corev1 . Service if err := json . Unmarshal ( req . Object . Raw , & service ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = service . Name , service . Namespace , & service . ObjectMeta availableLabels = service . Labels } if ! validationRequired ( ignoredNamespaces , objectMeta ) { glog . Infof ( \"Skipping validation for %s/%s due to policy check\" , resourceNamespace , resourceName ) return & v1beta1 . AdmissionResponse { Allowed : true , } } allowed := true var result * metav1 . Status glog . Info ( \"available labels:\" , availableLabels ) glog . Info ( \"required labels\" , requiredLabels ) for _ , rl := range requiredLabels { if _ , ok := availableLabels [ rl ]; ! ok { allowed = false result = & metav1 . Status { Reason : \"required labels are not set\" , } break } } return & v1beta1 . AdmissionResponse { Allowed : allowed , Result : result , } } \u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u6821\u9a8c\u7684\u65b9\u6cd5\u5982\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7 namespace \u8fdb\u884c\u5ffd\u7565\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 annotations \u8bbe\u7f6e\u8fdb\u884c\u914d\u7f6e\uff1a func validationRequired ( ignoredList [] string , metadata * metav1 . ObjectMeta ) bool { required := admissionRequired ( ignoredList , admissionWebhookAnnotationValidateKey , metadata ) glog . Infof ( \"Validation policy for %v/%v: required:%v\" , metadata . Namespace , metadata . Name , required ) return required } func admissionRequired ( ignoredList [] string , admissionAnnotationKey string , metadata * metav1 . ObjectMeta ) bool { // skip special kubernetes system namespaces for _ , namespace := range ignoredList { if metadata . Namespace == namespace { glog . Infof ( \"Skip validation for %v for it's in special namespace:%v\" , metadata . Name , metadata . Namespace ) return false } } annotations := metadata . GetAnnotations () if annotations == nil { annotations = map [ string ] string {} } var required bool switch strings . ToLower ( annotations [ admissionAnnotationKey ]) { default : required = true case \"n\" , \"no\" , \"false\" , \"off\" : required = false } return required } mutate \u51fd\u6570\u7684\u4ee3\u7801\u662f\u975e\u5e38\u7c7b\u4f3c\u7684\uff0c\u4f46\u4e0d\u662f\u4ec5\u4ec5\u6bd4\u8f83\u6807\u7b7e\u5e76\u5728\u54cd\u5e94\u4e2d\u8bbe\u7f6e Allowed\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u8865\u4e01\uff0c\u5c06\u7f3a\u5931\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u8d44\u6e90\u4e2d\uff0c\u5e76\u5c06 not_available \u8bbe\u7f6e\u4e3a\u6807\u7b7e\u7684\u503c\u3002 // main mutation process func ( whsvr * WebhookServer ) mutate ( ar * v1beta1 . AdmissionReview ) * v1beta1 . AdmissionResponse { req := ar . Request var ( availableLabels , availableAnnotations map [ string ] string objectMeta * metav1 . ObjectMeta resourceNamespace , resourceName string ) glog . Infof ( \"AdmissionReview for Kind=%v, Namespace=%v Name=%v (%v) UID=%v patchOperation=%v UserInfo=%v\" , req . Kind , req . Namespace , req . Name , resourceName , req . UID , req . Operation , req . UserInfo ) switch req . Kind . Kind { case \"Deployment\" : var deployment appsv1 . Deployment if err := json . Unmarshal ( req . Object . Raw , & deployment ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = deployment . Name , deployment . Namespace , & deployment . ObjectMeta availableLabels = deployment . Labels case \"Service\" : var service corev1 . Service if err := json . Unmarshal ( req . Object . Raw , & service ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = service . Name , service . Namespace , & service . ObjectMeta availableLabels = service . Labels } if ! mutationRequired ( ignoredNamespaces , objectMeta ) { glog . Infof ( \"Skipping validation for %s/%s due to policy check\" , resourceNamespace , resourceName ) return & v1beta1 . AdmissionResponse { Allowed : true , } } annotations := map [ string ] string { admissionWebhookAnnotationStatusKey : \"mutated\" } patchBytes , err := createPatch ( availableAnnotations , annotations , availableLabels , addLabels ) if err != nil { return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } glog . Infof ( \"AdmissionResponse: patch=%v\\n\" , string ( patchBytes )) return & v1beta1 . AdmissionResponse { Allowed : true , Patch : patchBytes , PatchType : func () * v1beta1 . PatchType { pt := v1beta1 . PatchTypeJSONPatch return & pt }(), } } \u6784\u5efa \u00b6 \u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u5c06\u4ee3\u7801\u6253\u5305\u6210\u4e00\u4e2a docker \u955c\u50cf\u4e86\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u955c\u50cf\u4ed3\u5e93\u5730\u5740\u4e3a\uff1a cnych/admission-webhook-example:v1 \u3002\u5f53\u7136\u5982\u679c\u4f60\u5e0c\u671b\u66f4\u6539\u90e8\u5206\u4ee3\u7801\uff0c\u90a3\u5c31\u9700\u8981\u91cd\u65b0\u6784\u5efa\u9879\u76ee\u4e86\uff0c\u7531\u4e8e\u8fd9\u4e2a\u9879\u76ee\u91c7\u7528 go \u8bed\u8a00\u5f00\u53d1\uff0c\u5305\u7ba1\u7406\u5de5\u5177\u66f4\u6539\u4e3a\u4e86 go mod \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6784\u5efa\u73af\u5883\u63d0\u524d\u5b89\u88c5\u597d go \u73af\u5883\uff0c\u5f53\u7136 docker \u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u662f\u6253\u5305\u6210\u4e00\u4e2a docker \u955c\u50cf\u3002 \u83b7\u53d6\u9879\u76ee\uff1a mkdir admission-webhook && cd admission-webhook git clone https://github.com/cnych/admission-webhook-example.git \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a build \u7684\u811a\u672c\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u6211\u4eec\u81ea\u5df1\u7684 docker \u955c\u50cf\u7528\u6237\u540d\u7136\u540e\u76f4\u63a5\u6784\u5efa\u5373\u53ef\uff1a export DOCKER_USER = cnych ./build \u90e8\u7f72 \u00b6 \u4e3a\u4e86\u90e8\u7f72 webhook server\uff0c\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2a service \u548c deployment \u8d44\u6e90\u5bf9\u8c61\uff0c\u90e8\u7f72\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u53ea\u662f\u9700\u8981\u914d\u7f6e\u670d\u52a1\u7684 TLS \u914d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762\u7684 deployment \u6587\u4ef6\u5939\u4e0b\u9762\u67e5\u770b deployment.yaml \u6587\u4ef6\u4e2d\u5173\u4e8e\u8bc1\u4e66\u7684\u914d\u7f6e\u58f0\u660e\uff0c\u4f1a\u53d1\u73b0\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u8bfb\u53d6\u7684\u8bc1\u4e66\u548c\u79c1\u94a5\u6587\u4ef6\u662f\u901a\u8fc7\u4e00\u4e2a secret \u5bf9\u8c61\u6302\u8f7d\u8fdb\u6765\u7684\uff1a args : - -tlsCertFile=/etc/webhook/certs/cert.pem - -tlsKeyFile=/etc/webhook/certs/key.pem [ ... ] volumeMounts : - name : webhook-certs mountPath : /etc/webhook/certs readOnly : true volumes : - name : webhook-certs secret : secretName : admission-webhook-example-certs \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5bf9\u4e8e TLS \u8bc1\u4e66\uff08\u7279\u522b\u662f\u79c1\u94a5\uff09\u7684\u5904\u7406\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e cert-manager \u4e4b\u7c7b\u7684\u5de5\u5177\u6765\u81ea\u52a8\u5904\u7406 TLS \u8bc1\u4e66\uff0c\u6216\u8005\u5c06\u79c1\u94a5\u5bc6\u94a5\u5b58\u50a8\u5728 Vault \u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5b58\u5728 secret \u8d44\u6e90\u5bf9\u8c61\u4e2d \u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u8bc1\u4e66\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e\u7684 CA \u8bc1\u4e66\u662f\u9700\u8981\u8ba9 apiserver \u80fd\u591f\u9a8c\u8bc1\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u91cd\u7528 Istio \u9879\u76ee\u4e2d\u7684\u751f\u6210\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\u811a\u672c\u3002\u901a\u8fc7\u53d1\u9001\u8bf7\u6c42\u5230 apiserver\uff0c\u83b7\u53d6\u8ba4\u8bc1\u4fe1\u606f\uff0c\u7136\u540e\u4f7f\u7528\u83b7\u5f97\u7684\u7ed3\u679c\u6765\u521b\u5efa\u9700\u8981\u7684 secret \u5bf9\u8c61\u3002 \u9996\u5148\uff0c\u8fd0\u884c \u8be5\u811a\u672c \u68c0\u67e5 secret \u5bf9\u8c61\u4e2d\u662f\u5426\u6709\u8bc1\u4e66\u548c\u79c1\u94a5\u4fe1\u606f\uff1a \u279c ~ ./deployment/webhook-create-signed-cert.sh creating certs in tmpdir /var/folders/x3/wjy_1z155pdf8jg_jgpmf6kc0000gn/T/tmp.IboFfX97 Generating RSA private key, 2048 bit long modulus ( 2 primes ) ..................+++++ ........+++++ e is 65537 ( 0x010001 ) certificatesigningrequest.certificates.k8s.io/admission-webhook-example-svc.default created NAME AGE REQUESTOR CONDITION admission-webhook-example-svc.default 1s kubernetes-admin Pending certificatesigningrequest.certificates.k8s.io/admission-webhook-example-svc.default approved secret/admission-webhook-example-certs created \u279c ~ kubectl get secret admission-webhook-example-certs NAME TYPE DATA AGE admission-webhook-example-certs Opaque 2 28s \u4e00\u65e6 secret \u5bf9\u8c61\u521b\u5efa\u6210\u529f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa deployment \u548c service \u5bf9\u8c61\u3002 \u279c ~ kubectl apply -f deployment/rbac.yaml \u279c ~ kubectl apply -f deployment/deployment.yaml deployment.apps \"admission-webhook-example-deployment\" created \u279c ~ kubectl apply -f deployment/service.yaml service \"admission-webhook-example-svc\" created \u914d\u7f6e webhook \u00b6 \u73b0\u5728\u6211\u4eec\u7684 webhook \u670d\u52a1\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u5b83\u53ef\u4ee5\u63a5\u6536\u6765\u81ea apiserver \u7684\u8bf7\u6c42\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u5728 kubernetes \u4e0a\u521b\u5efa\u4e00\u4e9b\u914d\u7f6e\u8d44\u6e90\u3002\u9996\u5148\u6765\u914d\u7f6e validating \u8fd9\u4e2a webhook\uff0c\u67e5\u770b webhook \u914d\u7f6e\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u5b83\u91cc\u9762\u5305\u542b\u4e00\u4e2a CA_BUNDLE \u7684\u5360\u4f4d\u7b26\uff1a clientConfig : service : name : admission-webhook-example-svc namespace : default path : \"/validate\" caBundle : ${CA_BUNDLE} CA \u8bc1\u4e66\u5e94\u63d0\u4f9b\u7ed9 admission webhook \u914d\u7f6e\uff0c\u8fd9\u6837 apiserver \u624d\u53ef\u4ee5\u4fe1\u4efb webhook server \u63d0\u4f9b\u7684 TLS \u8bc1\u4e66\u3002\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u5df2\u7ecf\u4f7f\u7528 Kubernetes API \u7b7e\u7f72\u4e86\u8bc1\u4e66\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 kubeconfig \u4e2d\u7684 CA \u8bc1\u4e66\u6765\u7b80\u5316\u64cd\u4f5c\u3002\u4ee3\u7801\u4ed3\u5e93\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5c0f\u811a\u672c\u7528\u6765\u66ff\u6362 CA_BUNDLE \u8fd9\u4e2a\u5360\u4f4d\u7b26\uff0c\u521b\u5efa validating webhook \u4e4b\u524d\u8fd0\u884c\u8be5\u547d\u4ee4\u5373\u53ef\uff1a cat ./deployment/validatingwebhook.yaml | ./deployment/webhook-patch-ca-bundle.sh > ./deployment/validatingwebhook-ca-bundle.yaml \u6267\u884c\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b validatingwebhook-ca-bundle.yaml \u6587\u4ef6\u4e2d\u7684 CA_BUNDLE \u5360\u4f4d\u7b26\u7684\u503c\u662f\u5426\u5df2\u7ecf\u88ab\u66ff\u6362\u6389\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f clientConfig \u91cc\u9762\u7684 path \u8def\u5f84\u662f / validate \uff0c\u56e0\u4e3a\u6211\u4eec\u4ee3\u7801\u5728\u662f\u5c06 validate \u548c mutate \u96c6\u6210\u5728\u4e00\u4e2a\u670d\u52a1\u4e2d\u7684\u3002 \u7136\u540e\u5c31\u662f\u9700\u8981\u914d\u7f6e\u4e00\u4e9b RBAC \u89c4\u5219\uff0c\u6211\u4eec\u60f3\u5728 deployment \u6216 service \u521b\u5efa\u65f6\u62e6\u622a API \u8bf7\u6c42\uff0c\u6240\u4ee5 apiGroups \u548c apiVersions \u5bf9\u5e94\u7684\u503c\u5206\u522b\u4e3a apps / v1 \u5bf9\u5e94 deployment\uff0c v1 \u5bf9\u5e94 service\u3002 webhook \u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u914d\u7f6e\u4e00\u4e2a namespaceSelector \uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a webhook \u5de5\u4f5c\u7684\u547d\u540d\u7a7a\u95f4\u5b9a\u4e49\u4e00\u4e2a selector\uff0c\u8fd9\u4e2a\u914d\u7f6e\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e0b\u9762\u7684\u914d\u7f6e\uff1a namespaceSelector : matchLabels : admission-webhook-example : enabled \u5219\u6211\u4eec\u7684 webhook \u4f1a\u53ea\u9002\u7528\u4e8e\u8bbe\u7f6e\u4e86 admission-webhook-example = enabled \u6807\u7b7e\u7684 namespaces\u3002 \u6240\u4ee5\uff0c\u9996\u5148\u9700\u8981\u5728 default \u8fd9\u4e2a namespace \u4e2d\u6dfb\u52a0\u8be5\u6807\u7b7e\uff1a \u279c ~ kubectl label namespace default admission-webhook-example = enabled namespace \"default\" labeled \u6700\u540e\uff0c\u521b\u5efa\u8fd9\u4e2a validating webhook \u914d\u7f6e\u5bf9\u8c61\uff0c\u8fd9\u4f1a\u52a8\u6001\u5730\u5c06 webhook \u6dfb\u52a0\u5230 webhook \u94fe\u4e0a\uff0c\u6240\u4ee5\u4e00\u65e6\u521b\u5efa\u8d44\u6e90\uff0c\u5c31\u4f1a\u62e6\u622a\u8bf7\u6c42\u7136\u540e\u8c03\u7528\u6211\u4eec\u7684 webhook \u670d\u52a1\uff1a \u279c ~ kubectl apply -f deployment/validatingwebhook-ca-bundle.yaml validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" created \u6d4b\u8bd5 \u00b6 \u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a deployment \u8d44\u6e90\u6765\u9a8c\u8bc1\u4e0b\u662f\u5426\u6709\u6548\uff0c\u4ee3\u7801\u4ed3\u5e93\u4e0b\u6709\u4e00\u4e2a sleep.yaml \u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a \u279c ~ kubectl apply -f deployment/sleep.yaml Error from server ( required labels are not set ) : error when creating \"deployment/sleep.yaml\" : admission webhook \"required-labels.qikqiak.com\" denied the request: required labels are not set \u6b63\u5e38\u60c5\u51b5\u4e0b\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e0a\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u7136\u540e\u90e8\u7f72\u53e6\u5916\u4e00\u4e2a sleep-with-labels.yaml \u7684\u8d44\u6e90\u6e05\u5355\uff1a \u279c ~ kubectl apply -f deployment/sleep-with-labels.yaml deployment.apps \"sleep\" created \u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u6b63\u5e38\u90e8\u7f72\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4e0a\u9762\u7684 deployment \u5220\u9664\uff0c\u7136\u540e\u90e8\u7f72\u53e6\u5916\u4e00\u4e2a sleep-no-validation.yaml \u8d44\u6e90\u6e05\u5355\uff0c\u8be5\u6e05\u5355\u4e2d\u4e0d\u5b58\u5728\u6240\u9700\u7684\u6807\u7b7e\uff0c\u4f46\u662f\u914d\u7f6e\u4e86 admission-webhook-example.qikqiak.com/validate=false \u8fd9\u6837\u7684 annotation \uff0c\u6240\u4ee5\u6b63\u5e38\u4e5f\u662f\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\u7684\uff1a \u279c ~ kubectl delete deployment sleep \u279c ~ kubectl apply -f deployment/sleep-no-validation.yaml deployment.apps \"sleep\" created \u90e8\u7f72 mutating webhook \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u7684 validating webhook \u5220\u9664\uff0c\u9632\u6b62\u5bf9 mutating \u4ea7\u751f\u5e72\u6270\uff0c\u7136\u540e\u91cd\u65b0\u90e8\u7f72\u3002 mutating webhook \u4e0e validating webhook \u914d\u7f6e\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f webook server \u7684\u8def\u5f84\u662f / mutate \uff0c\u540c\u6837\u7684\u6211\u4eec\u4e5f\u9700\u8981\u5148\u586b\u5145\u4e0a CA_BUNDLE \u8fd9\u4e2a\u5360\u4f4d\u7b26\u3002 \u279c ~ kubectl delete validatingwebhookconfiguration validation-webhook-example-cfg validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" deleted \u279c ~ cat ./deployment/mutatingwebhook.yaml | ./deployment/webhook-patch-ca-bundle.sh > ./deployment/mutatingwebhook-ca-bundle.yaml \u279c ~ kubectl apply -f deployment/mutatingwebhook-ca-bundle.yaml mutatingwebhookconfiguration.admissionregistration.k8s.io \"mutating-webhook-example-cfg\" created \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u90e8\u7f72\u4e0a\u9762\u7684 sleep \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u67e5\u770b\u662f\u5426\u6b63\u786e\u6dfb\u52a0 label \u6807\u7b7e\uff1a \u279c ~ kubectl apply -f deployment/sleep.yaml deployment.apps \"sleep\" created \u279c ~ kubectl get deploy sleep -o yaml apiVersion : apps/v1 kind : Deployment metadata : annotations : admission-webhook-example.qikqiak.com/status : mutated deployment.kubernetes.io/revision : \"1\" creationTimestamp : \"2020-06-01T08:10:04Z\" generation : 1 labels : app.kubernetes.io/component : not_available app.kubernetes.io/instance : not_available app.kubernetes.io/managed-by : not_available app.kubernetes.io/name : not_available app.kubernetes.io/part-of : not_available app.kubernetes.io/version : not_available name : sleep namespace : default ... \u6700\u540e\uff0c\u6211\u4eec\u91cd\u65b0\u521b\u5efa validating webhook \uff0c\u6765\u4e00\u8d77\u6d4b\u8bd5\u3002\u73b0\u5728\uff0c\u5c1d\u8bd5\u518d\u6b21\u521b\u5efa sleep \u5e94\u7528\u3002\u6b63\u5e38\u662f\u53ef\u4ee5\u521b\u5efa\u6210\u529f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b admission-controllers \u7684\u6587\u6863\u3002 \u51c6\u5165\u63a7\u5236\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff0c\u7b2c\u4e00\u9636\u6bb5\uff0c\u8fd0\u884c mutating admission \u63a7\u5236\u5668\uff0c\u7b2c\u4e8c\u9636\u6bb5\u8fd0\u884c validating admission \u63a7\u5236\u5668\u3002 \u6240\u4ee5 mutating webhook \u5728\u7b2c\u4e00\u9636\u6bb5\u6dfb\u52a0\u4e0a\u7f3a\u5931\u7684 labels \u6807\u7b7e\uff0c\u7136\u540e validating webhook \u5728\u7b2c\u4e8c\u9636\u6bb5\u5c31\u4e0d\u4f1a\u62d2\u7edd\u8fd9\u4e2a deployment \u4e86\uff0c\u56e0\u4e3a\u6807\u7b7e\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u7528 not_available \u8bbe\u7f6e\u4ed6\u4eec\u7684\u503c \u3002 \u279c ~ kubectl apply -f deployment/validatingwebhook-ca-bundle.yaml validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" created \u279c ~ kubectl apply -f deployment/sleep.yaml deployment.apps \"sleep\" created \u4f46\u662f\u5982\u679c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u76f8\u5173\u9700\u6c42\u5c31\u5355\u72ec\u53bb\u5f00\u53d1\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u7684 webhook \u662f\u4e0d\u662f\u5c31\u663e\u5f97\u975e\u5e38\u9ebb\u70e6\uff0c\u4e0d\u591f\u7075\u6d3b\u4e86\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Kubernetes \u63d0\u4f9b\u7684\u4e00\u4e9b\u7b56\u7565\u7ba1\u7406\u5f15\u64ce\uff0c\u5728\u4e0d\u9700\u8981\u7f16\u5199\u4ee3\u7801\u7684\u60c5\u51b5\u4e5f\u53ef\u4ee5\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u8fd9\u4e9b\u9700\u6c42\uff0c\u6bd4\u5982 Kyverno \u3001 Gatekeeper \u7b49\u7b49\uff0c\u540e\u7eed\u6211\u4eec\u518d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002","title":"Admission"},{"location":"Controller/Admission/#_1","text":"Kubernetes \u63d0\u4f9b\u4e86\u9700\u8981\u6269\u5c55\u5176\u5185\u7f6e\u529f\u80fd\u7684\u65b9\u6cd5\uff0c \u6700\u5e38\u7528\u7684\u53ef\u80fd\u662f\u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4e86 \uff0c\u9664\u6b64\u4e4b\u5916\uff0cKubernetes \u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u975e\u5e38\u6709\u8da3\u7684\u529f\u80fd\uff0c\u6bd4\u5982 admission webhooks \u5c31\u53ef\u4ee5\u7528\u4e8e\u6269\u5c55 API\uff0c\u7528\u4e8e\u4fee\u6539\u67d0\u4e9b Kubernetes \u8d44\u6e90\u7684\u57fa\u672c\u884c\u4e3a \u3002 \u51c6\u5165\u63a7\u5236\u5668\u662f\u5728\u5bf9\u8c61\u6301\u4e45\u5316\u4e4b\u524d\u7528\u4e8e\u5bf9 Kubernetes API Server \u7684\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u7684\u4ee3\u7801\u6bb5\uff0c\u5728\u8bf7\u6c42\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u4e4b\u540e\u653e\u884c\u901a\u8fc7\u3002\u51c6\u5165\u63a7\u5236\u5668\u53ef\u80fd\u6b63\u5728 validating\u3001mutating \u6216\u8005\u90fd\u5728\u6267\u884c\uff0c Mutating \u63a7\u5236\u5668\u53ef\u4ee5\u4fee\u6539\u4ed6\u4eec\u5904\u7406\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c Validating \u63a7\u5236\u5668\u4e0d\u4f1a\uff0c\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u9636\u6bb5\u4e2d\u7684\u4efb\u4f55\u63a7\u5236\u5668\u62d2\u7edd\u4e86\u8bf7\u6c42\uff0c\u5219\u4f1a\u7acb\u5373\u62d2\u7edd\u6574\u4e2a\u8bf7\u6c42\uff0c\u5e76\u5c06\u9519\u8bef\u8fd4\u56de\u7ed9\u6700\u7ec8\u7684\u7528\u6237\u3002 \u8fd9\u610f\u5473\u7740\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u63a7\u5236\u5668\u53ef\u4ee5\u62e6\u622a Kubernetes API \u8bf7\u6c42\uff0c\u5e76\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\u4fee\u6539\u6216\u8005\u62d2\u7edd\u5b83\u4eec\u3002Kubernetes \u6709\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u4e2a \u63a7\u5236\u5668\u5217\u8868 \uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u63a7\u5236\u5668\uff0c\u867d\u7136\u8fd9\u4e9b\u63a7\u5236\u5668\u542c\u8d77\u6765\u529f\u80fd\u6bd4\u8f83\u5f3a\u5927\uff0c\u4f46\u662f\u8fd9\u4e9b\u63a7\u5236\u5668\u9700\u8981\u88ab\u7f16\u8bd1\u8fdb kube-apiserver\uff0c\u5e76\u4e14\u53ea\u80fd\u5728 apiserver \u542f\u52a8\u4e86\u518d\u968f\u4e4b\u542f\u52a8\u3002 \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 kube-apiserver \u542f\u52a8\u53c2\u6570\u67e5\u770b\u5185\u7f6e\u652f\u6301\u7684\u63a7\u5236\u5668\uff1a kube-apiserver --help | grep enable-admission-plugins \u7531\u4e8e\u4e0a\u9762\u7684\u63a7\u5236\u5668\u7684\u9650\u5236\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u52a8\u6001\u7684\u6982\u5ff5\u4e86\uff0c\u800c\u4e0d\u662f\u548c apiserver \u8026\u5408\u5728\u4e00\u8d77\uff0c Admission webhooks \u5c31\u901a\u8fc7\u4e00\u79cd\u52a8\u6001\u914d\u7f6e\u65b9\u6cd5\u89e3\u51b3\u4e86\u8fd9\u4e2a\u9650\u5236\u95ee\u9898 \u3002","title":"\u51c6\u5165\u63a7\u5236\u5668"},{"location":"Controller/Admission/#admission-webhook","text":"\u5728 Kubernetes apiserver \u4e2d\u5305\u542b\u4e24\u4e2a\u7279\u6b8a\u7684\u51c6\u5165\u63a7\u5236\u5668\uff1a MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \uff0c\u8fd9\u4e24\u4e2a\u63a7\u5236\u5668\u5c06\u53d1\u9001\u51c6\u5165\u8bf7\u6c42\u5230\u5916\u90e8\u7684 HTTP \u56de\u8c03\u670d\u52a1\u5e76\u63a5\u6536\u4e00\u4e2a\u51c6\u5165\u54cd\u5e94\u3002\u5982\u679c\u542f\u7528\u4e86\u8fd9\u4e24\u4e2a\u51c6\u5165\u63a7\u5236\u5668\uff0cKubernetes \u7ba1\u7406\u5458\u53ef\u4ee5\u5728\u96c6\u7fa4\u4e2d\u521b\u5efa\u548c\u914d\u7f6e\u4e00\u4e2a admission webhook \u3002 \u6574\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a \uff1a \u68c0\u67e5\u96c6\u7fa4\u4e2d\u662f\u5426\u542f\u7528\u4e86 admission webhook \u63a7\u5236\u5668\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u914d\u7f6e\u3002 \u7f16\u5199\u5904\u7406\u51c6\u5165\u8bf7\u6c42\u7684 HTTP \u56de\u8c03\uff0c\u56de\u8c03\u53ef\u4ee5\u662f\u4e00\u4e2a\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d\u7684\u7b80\u5355 HTTP \u670d\u52a1\uff0c\u751a\u81f3\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a serverless \u51fd\u6570 \u3002 \u901a\u8fc7 MutatingWebhookConfiguration \u548c ValidatingWebhookConfiguration \u8d44\u6e90\u914d\u7f6e admission webhook \u3002 \u8fd9\u4e24\u79cd\u7c7b\u578b\u7684 admission webhook \u4e4b\u95f4\u7684\u533a\u522b\u662f\u975e\u5e38\u660e\u663e\u7684 \uff1a validating webhooks \u53ef\u4ee5 \u62d2\u7edd\u8bf7\u6c42 \uff0c\u4f46\u662f\u5b83\u4eec\u5374 \u4e0d\u80fd\u4fee\u6539 \u51c6\u5165\u8bf7\u6c42\u4e2d\u83b7\u53d6\u7684\u5bf9\u8c61\uff0c\u800c mutating webhooks \u53ef\u4ee5\u5728\u8fd4\u56de\u51c6\u5165\u54cd\u5e94\u4e4b\u524d\u901a\u8fc7 \u521b\u5efa\u8865\u4e01\u6765\u4fee\u6539\u5bf9\u8c61 \uff0c\u5982\u679c webhook \u62d2\u7edd\u4e86\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5219\u4f1a\u5411\u6700\u7ec8\u7528\u6237\u8fd4\u56de\u9519\u8bef\u3002 \u73b0\u5728\u975e\u5e38\u706b\u70ed\u7684 Service Mesh \u5e94\u7528 istio \u5c31\u662f\u901a\u8fc7 mutating webhooks \u6765\u81ea\u52a8\u5c06 Envoy \u8fd9\u4e2a sidecar \u5bb9\u5668\u6ce8\u5165\u5230 Pod \u4e2d\u53bb\u7684\u3002","title":"admission webhook \u662f\u4ec0\u4e48?"},{"location":"Controller/Admission/#admission-webhook_1","text":"\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Admission Webhook \u7684\u7406\u8bba\u77e5\u8bc6\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u4e00\u4e2a\u771f\u5b9e\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u6765\u5b9e\u9645\u6d4b\u8bd5\u4f7f\u7528\u4e0b\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a webhook \u7684 webserver\uff0c\u5c06\u5176\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\uff0c\u7136\u540e\u521b\u5efa webhook \u914d\u7f6e\u67e5\u770b\u662f\u5426\u751f\u6548\u3002 \u9996\u5148\u786e\u4fdd\u5728 apiserver \u4e2d\u542f\u7528\u4e86 MutatingAdmissionWebhook \u548c ValidatingAdmissionWebhook \u8fd9\u4e24\u4e2a\u63a7\u5236\u5668\uff0c\u901a\u8fc7\u53c2\u6570 --enable-admission-plugins \u8fdb\u884c\u914d\u7f6e\uff0c\u5f53\u524d v1.22 \u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u9ed8\u8ba4\u5f00\u542f\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u5f00\u542f\u5219\u9700\u8981\u6dfb\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u91cd\u542f apiserver\u3002 \u7136\u540e\u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u68c0\u67e5\u96c6\u7fa4\u4e2d\u662f\u5426\u542f\u7528\u4e86\u51c6\u5165\u6ce8\u518c API\uff1a \u279c ~ kubectl api-versions | grep admission admissionregistration.k8s.io/v1","title":"\u521b\u5efa\u914d\u7f6e\u4e00\u4e2a Admission Webhook"},{"location":"Controller/Admission/#webhook","text":"\u6ee1\u8db3\u4e86\u524d\u9762\u7684\u5148\u51b3\u6761\u4ef6\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b9e\u73b0\u4e00\u4e2a webhook \u793a\u4f8b\uff0c\u901a\u8fc7\u76d1\u542c\u4e24\u4e2a\u4e0d\u540c\u7684 HTTP \u7aef\u70b9\uff08validate \u548c mutate\uff09\u6765\u8fdb\u884c validating \u548c mutating webhook \u9a8c\u8bc1\u3002 \u8fd9\u4e2a webhook \u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728 Github \u4e0a\u83b7\u53d6\uff0c\u8be5\u4ed3\u5e93 Fork \u81ea\u9879\u76ee\u3002\u8fd9\u4e2a webhook \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e26 TLS \u8ba4\u8bc1\u7684 HTTP \u670d\u52a1\uff0c\u7528 Deployment \u65b9\u5f0f\u90e8\u7f72\u5728\u6211\u4eec\u7684\u96c6\u7fa4\u4e2d\u3002 \u4ee3\u7801\u4e2d\u4e3b\u8981\u7684\u903b\u8f91\u5728\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff1a main.go \u548c webhook.go \uff0cmain.go \u6587\u4ef6\u5305\u542b\u521b\u5efa HTTP \u670d\u52a1\u7684\u4ee3\u7801\uff0c\u800cwebhook.go \u5305\u542b validates \u548c mutates \u4e24\u4e2a webhook \u7684\u903b\u8f91\uff0c\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u9996\u5148\u67e5\u770b main.go \u6587\u4ef6\uff0c\u67e5\u770b\u5982\u4f55\u4f7f\u7528\u6807\u51c6 golang \u5305\u6765\u542f\u52a8 HTTP \u670d\u52a1\uff0c\u4ee5\u53ca\u5982\u4f55\u4ece\u547d\u4ee4\u884c\u6807\u5fd7\u4e2d\u8bfb\u53d6 TLS \u914d\u7f6e\u7684\u8bc1\u4e66\uff1a flag.StringVar(&parameters.certFile, \"tlsCertFile\", \"/etc/webhook/certs/cert.pem\", \"File containing the x509 Certificate for HTTPS.\") flag.StringVar(&parameters.keyFile, \"tlsKeyFile\", \"/etc/webhook/certs/key.pem\", \"File containing the x509 private key to --tlsCertFile.\") \u7136\u540e\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u662f serve \u51fd\u6570\uff0c\u7528\u6765\u5904\u7406\u4f20\u5165\u7684 mutate \u548c validating \u51fd\u6570 \u7684 HTTP \u8bf7\u6c42\u3002\u8be5\u51fd\u6570\u4ece\u8bf7\u6c42\u4e2d\u53cd\u5e8f\u5217\u5316 AdmissionReview \u5bf9\u8c61\uff0c\u6267\u884c\u4e00\u4e9b\u57fa\u672c\u7684\u5185\u5bb9\u6821\u9a8c\uff0c\u6839\u636e URL \u8def\u5f84\u8c03\u7528\u76f8\u5e94\u7684 mutate \u548c validate \u51fd\u6570\uff0c\u7136\u540e\u5e8f\u5217\u5316 AdmissionReview \u5bf9\u8c61\uff1a func ( whsvr * WebhookServer ) serve ( w http . ResponseWriter , r * http . Request ) { var body [] byte if r . Body != nil { if data , err := ioutil . ReadAll ( r . Body ); err == nil { body = data } } if len ( body ) == 0 { glog . Error ( \"empty body\" ) http . Error ( w , \"empty body\" , http . StatusBadRequest ) return } // \u6821\u9a8c Content-Type contentType := r . Header . Get ( \"Content-Type\" ) if contentType != \"application/json\" { glog . Errorf ( \"Content-Type=%s, expect application/json\" , contentType ) http . Error ( w , \"invalid Content-Type, expect `application/json`\" , http . StatusUnsupportedMediaType ) return } var admissionResponse * v1beta1 . AdmissionResponse ar := v1beta1 . AdmissionReview {} if _ , _ , err := deserializer . Decode ( body , nil , & ar ); err != nil { glog . Errorf ( \"Can't decode body: %v\" , err ) admissionResponse = & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } else { if r . URL . Path == \"/mutate\" { admissionResponse = whsvr . mutate ( & ar ) } else if r . URL . Path == \"/validate\" { admissionResponse = whsvr . validate ( & ar ) } } admissionReview := v1beta1 . AdmissionReview {} if admissionResponse != nil { admissionReview . Response = admissionResponse if ar . Request != nil { admissionReview . Response . UID = ar . Request . UID } } resp , err := json . Marshal ( admissionReview ) if err != nil { glog . Errorf ( \"Can't encode response: %v\" , err ) http . Error ( w , fmt . Sprintf ( \"could not encode response: %v\" , err ), http . StatusInternalServerError ) } glog . Infof ( \"Ready to write reponse ...\" ) if _ , err := w . Write ( resp ); err != nil { glog . Errorf ( \"Can't write response: %v\" , err ) http . Error ( w , fmt . Sprintf ( \"could not write response: %v\" , err ), http . StatusInternalServerError ) } } \u4e3b\u8981\u7684\u51c6\u5165\u903b\u8f91\u662f validate \u548c mutate \u4e24\u4e2a\u51fd\u6570\u3002validate \u51fd\u6570\u68c0\u67e5\u8d44\u6e90\u5bf9\u8c61\u662f\u5426\u9700\u8981\u6821\u9a8c\uff1a\u4e0d\u9a8c\u8bc1 kube-system \u548c kube-public \u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90\uff0c\u5982\u679c\u60f3\u8981\u663e\u793a\u7684\u58f0\u660e\u4e0d\u9a8c\u8bc1\u67d0\u4e2a\u8d44\u6e90\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u8d44\u6e90\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e00\u4e2a admission-webhook-example.qikqiak.com/validate=false \u7684 annotation \u8fdb\u884c\u58f0\u660e\u3002\u5982\u679c\u9700\u8981\u9a8c\u8bc1\uff0c\u5219\u6839\u636e\u8d44\u6e90\u7c7b\u578b\u7684 kind\uff0c\u548c\u6807\u7b7e\u4e0e\u5176\u5bf9\u5e94\u9879\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c06 service \u6216\u8005 deployment \u8d44\u6e90\u4ece\u8bf7\u6c42\u4e2d\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u3002\u5982\u679c\u7f3a\u5c11\u67d0\u4e9b label \u6807\u7b7e\uff0c\u5219\u54cd\u5e94\u4e2d\u7684 Allowed \u4f1a\u88ab\u8bbe\u7f6e\u4e3a false \u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u5219\u4f1a\u5728\u54cd\u5e94\u4e2d\u5199\u5165\u5931\u8d25\u539f\u56e0\uff0c\u6700\u7ec8\u7528\u6237\u5728\u5c1d\u8bd5\u521b\u5efa\u8d44\u6e90\u65f6\u4f1a\u6536\u5230\u5931\u8d25\u7684\u4fe1\u606f\u3002validate \u51fd\u6570\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a // validate deployments and services func ( whsvr * WebhookServer ) validate ( ar * v1beta1 . AdmissionReview ) * v1beta1 . AdmissionResponse { req := ar . Request var ( availableLabels map [ string ] string objectMeta * metav1 . ObjectMeta resourceNamespace , resourceName string ) glog . Infof ( \"AdmissionReview for Kind=%v, Namespace=%v Name=%v (%v) UID=%v patchOperation=%v UserInfo=%v\" , req . Kind , req . Namespace , req . Name , resourceName , req . UID , req . Operation , req . UserInfo ) switch req . Kind . Kind { case \"Deployment\" : var deployment appsv1 . Deployment if err := json . Unmarshal ( req . Object . Raw , & deployment ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = deployment . Name , deployment . Namespace , & deployment . ObjectMeta availableLabels = deployment . Labels case \"Service\" : var service corev1 . Service if err := json . Unmarshal ( req . Object . Raw , & service ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = service . Name , service . Namespace , & service . ObjectMeta availableLabels = service . Labels } if ! validationRequired ( ignoredNamespaces , objectMeta ) { glog . Infof ( \"Skipping validation for %s/%s due to policy check\" , resourceNamespace , resourceName ) return & v1beta1 . AdmissionResponse { Allowed : true , } } allowed := true var result * metav1 . Status glog . Info ( \"available labels:\" , availableLabels ) glog . Info ( \"required labels\" , requiredLabels ) for _ , rl := range requiredLabels { if _ , ok := availableLabels [ rl ]; ! ok { allowed = false result = & metav1 . Status { Reason : \"required labels are not set\" , } break } } return & v1beta1 . AdmissionResponse { Allowed : allowed , Result : result , } } \u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u6821\u9a8c\u7684\u65b9\u6cd5\u5982\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7 namespace \u8fdb\u884c\u5ffd\u7565\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 annotations \u8bbe\u7f6e\u8fdb\u884c\u914d\u7f6e\uff1a func validationRequired ( ignoredList [] string , metadata * metav1 . ObjectMeta ) bool { required := admissionRequired ( ignoredList , admissionWebhookAnnotationValidateKey , metadata ) glog . Infof ( \"Validation policy for %v/%v: required:%v\" , metadata . Namespace , metadata . Name , required ) return required } func admissionRequired ( ignoredList [] string , admissionAnnotationKey string , metadata * metav1 . ObjectMeta ) bool { // skip special kubernetes system namespaces for _ , namespace := range ignoredList { if metadata . Namespace == namespace { glog . Infof ( \"Skip validation for %v for it's in special namespace:%v\" , metadata . Name , metadata . Namespace ) return false } } annotations := metadata . GetAnnotations () if annotations == nil { annotations = map [ string ] string {} } var required bool switch strings . ToLower ( annotations [ admissionAnnotationKey ]) { default : required = true case \"n\" , \"no\" , \"false\" , \"off\" : required = false } return required } mutate \u51fd\u6570\u7684\u4ee3\u7801\u662f\u975e\u5e38\u7c7b\u4f3c\u7684\uff0c\u4f46\u4e0d\u662f\u4ec5\u4ec5\u6bd4\u8f83\u6807\u7b7e\u5e76\u5728\u54cd\u5e94\u4e2d\u8bbe\u7f6e Allowed\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u8865\u4e01\uff0c\u5c06\u7f3a\u5931\u7684\u6807\u7b7e\u6dfb\u52a0\u5230\u8d44\u6e90\u4e2d\uff0c\u5e76\u5c06 not_available \u8bbe\u7f6e\u4e3a\u6807\u7b7e\u7684\u503c\u3002 // main mutation process func ( whsvr * WebhookServer ) mutate ( ar * v1beta1 . AdmissionReview ) * v1beta1 . AdmissionResponse { req := ar . Request var ( availableLabels , availableAnnotations map [ string ] string objectMeta * metav1 . ObjectMeta resourceNamespace , resourceName string ) glog . Infof ( \"AdmissionReview for Kind=%v, Namespace=%v Name=%v (%v) UID=%v patchOperation=%v UserInfo=%v\" , req . Kind , req . Namespace , req . Name , resourceName , req . UID , req . Operation , req . UserInfo ) switch req . Kind . Kind { case \"Deployment\" : var deployment appsv1 . Deployment if err := json . Unmarshal ( req . Object . Raw , & deployment ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = deployment . Name , deployment . Namespace , & deployment . ObjectMeta availableLabels = deployment . Labels case \"Service\" : var service corev1 . Service if err := json . Unmarshal ( req . Object . Raw , & service ); err != nil { glog . Errorf ( \"Could not unmarshal raw object: %v\" , err ) return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } resourceName , resourceNamespace , objectMeta = service . Name , service . Namespace , & service . ObjectMeta availableLabels = service . Labels } if ! mutationRequired ( ignoredNamespaces , objectMeta ) { glog . Infof ( \"Skipping validation for %s/%s due to policy check\" , resourceNamespace , resourceName ) return & v1beta1 . AdmissionResponse { Allowed : true , } } annotations := map [ string ] string { admissionWebhookAnnotationStatusKey : \"mutated\" } patchBytes , err := createPatch ( availableAnnotations , annotations , availableLabels , addLabels ) if err != nil { return & v1beta1 . AdmissionResponse { Result : & metav1 . Status { Message : err . Error (), }, } } glog . Infof ( \"AdmissionResponse: patch=%v\\n\" , string ( patchBytes )) return & v1beta1 . AdmissionResponse { Allowed : true , Patch : patchBytes , PatchType : func () * v1beta1 . PatchType { pt := v1beta1 . PatchTypeJSONPatch return & pt }(), } }","title":"\u7f16\u5199 webhook"},{"location":"Controller/Admission/#_2","text":"\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u5c06\u4ee3\u7801\u6253\u5305\u6210\u4e00\u4e2a docker \u955c\u50cf\u4e86\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u955c\u50cf\u4ed3\u5e93\u5730\u5740\u4e3a\uff1a cnych/admission-webhook-example:v1 \u3002\u5f53\u7136\u5982\u679c\u4f60\u5e0c\u671b\u66f4\u6539\u90e8\u5206\u4ee3\u7801\uff0c\u90a3\u5c31\u9700\u8981\u91cd\u65b0\u6784\u5efa\u9879\u76ee\u4e86\uff0c\u7531\u4e8e\u8fd9\u4e2a\u9879\u76ee\u91c7\u7528 go \u8bed\u8a00\u5f00\u53d1\uff0c\u5305\u7ba1\u7406\u5de5\u5177\u66f4\u6539\u4e3a\u4e86 go mod \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6784\u5efa\u73af\u5883\u63d0\u524d\u5b89\u88c5\u597d go \u73af\u5883\uff0c\u5f53\u7136 docker \u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u662f\u6253\u5305\u6210\u4e00\u4e2a docker \u955c\u50cf\u3002 \u83b7\u53d6\u9879\u76ee\uff1a mkdir admission-webhook && cd admission-webhook git clone https://github.com/cnych/admission-webhook-example.git \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a build \u7684\u811a\u672c\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u6211\u4eec\u81ea\u5df1\u7684 docker \u955c\u50cf\u7528\u6237\u540d\u7136\u540e\u76f4\u63a5\u6784\u5efa\u5373\u53ef\uff1a export DOCKER_USER = cnych ./build","title":"\u6784\u5efa"},{"location":"Controller/Admission/#_3","text":"\u4e3a\u4e86\u90e8\u7f72 webhook server\uff0c\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2a service \u548c deployment \u8d44\u6e90\u5bf9\u8c61\uff0c\u90e8\u7f72\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u53ea\u662f\u9700\u8981\u914d\u7f6e\u670d\u52a1\u7684 TLS \u914d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762\u7684 deployment \u6587\u4ef6\u5939\u4e0b\u9762\u67e5\u770b deployment.yaml \u6587\u4ef6\u4e2d\u5173\u4e8e\u8bc1\u4e66\u7684\u914d\u7f6e\u58f0\u660e\uff0c\u4f1a\u53d1\u73b0\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u8bfb\u53d6\u7684\u8bc1\u4e66\u548c\u79c1\u94a5\u6587\u4ef6\u662f\u901a\u8fc7\u4e00\u4e2a secret \u5bf9\u8c61\u6302\u8f7d\u8fdb\u6765\u7684\uff1a args : - -tlsCertFile=/etc/webhook/certs/cert.pem - -tlsKeyFile=/etc/webhook/certs/key.pem [ ... ] volumeMounts : - name : webhook-certs mountPath : /etc/webhook/certs readOnly : true volumes : - name : webhook-certs secret : secretName : admission-webhook-example-certs \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5bf9\u4e8e TLS \u8bc1\u4e66\uff08\u7279\u522b\u662f\u79c1\u94a5\uff09\u7684\u5904\u7406\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e cert-manager \u4e4b\u7c7b\u7684\u5de5\u5177\u6765\u81ea\u52a8\u5904\u7406 TLS \u8bc1\u4e66\uff0c\u6216\u8005\u5c06\u79c1\u94a5\u5bc6\u94a5\u5b58\u50a8\u5728 Vault \u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5b58\u5728 secret \u8d44\u6e90\u5bf9\u8c61\u4e2d \u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u8bc1\u4e66\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e\u7684 CA \u8bc1\u4e66\u662f\u9700\u8981\u8ba9 apiserver \u80fd\u591f\u9a8c\u8bc1\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u91cd\u7528 Istio \u9879\u76ee\u4e2d\u7684\u751f\u6210\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\u811a\u672c\u3002\u901a\u8fc7\u53d1\u9001\u8bf7\u6c42\u5230 apiserver\uff0c\u83b7\u53d6\u8ba4\u8bc1\u4fe1\u606f\uff0c\u7136\u540e\u4f7f\u7528\u83b7\u5f97\u7684\u7ed3\u679c\u6765\u521b\u5efa\u9700\u8981\u7684 secret \u5bf9\u8c61\u3002 \u9996\u5148\uff0c\u8fd0\u884c \u8be5\u811a\u672c \u68c0\u67e5 secret \u5bf9\u8c61\u4e2d\u662f\u5426\u6709\u8bc1\u4e66\u548c\u79c1\u94a5\u4fe1\u606f\uff1a \u279c ~ ./deployment/webhook-create-signed-cert.sh creating certs in tmpdir /var/folders/x3/wjy_1z155pdf8jg_jgpmf6kc0000gn/T/tmp.IboFfX97 Generating RSA private key, 2048 bit long modulus ( 2 primes ) ..................+++++ ........+++++ e is 65537 ( 0x010001 ) certificatesigningrequest.certificates.k8s.io/admission-webhook-example-svc.default created NAME AGE REQUESTOR CONDITION admission-webhook-example-svc.default 1s kubernetes-admin Pending certificatesigningrequest.certificates.k8s.io/admission-webhook-example-svc.default approved secret/admission-webhook-example-certs created \u279c ~ kubectl get secret admission-webhook-example-certs NAME TYPE DATA AGE admission-webhook-example-certs Opaque 2 28s \u4e00\u65e6 secret \u5bf9\u8c61\u521b\u5efa\u6210\u529f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa deployment \u548c service \u5bf9\u8c61\u3002 \u279c ~ kubectl apply -f deployment/rbac.yaml \u279c ~ kubectl apply -f deployment/deployment.yaml deployment.apps \"admission-webhook-example-deployment\" created \u279c ~ kubectl apply -f deployment/service.yaml service \"admission-webhook-example-svc\" created","title":"\u90e8\u7f72"},{"location":"Controller/Admission/#webhook_1","text":"\u73b0\u5728\u6211\u4eec\u7684 webhook \u670d\u52a1\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u5b83\u53ef\u4ee5\u63a5\u6536\u6765\u81ea apiserver \u7684\u8bf7\u6c42\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u5728 kubernetes \u4e0a\u521b\u5efa\u4e00\u4e9b\u914d\u7f6e\u8d44\u6e90\u3002\u9996\u5148\u6765\u914d\u7f6e validating \u8fd9\u4e2a webhook\uff0c\u67e5\u770b webhook \u914d\u7f6e\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u5b83\u91cc\u9762\u5305\u542b\u4e00\u4e2a CA_BUNDLE \u7684\u5360\u4f4d\u7b26\uff1a clientConfig : service : name : admission-webhook-example-svc namespace : default path : \"/validate\" caBundle : ${CA_BUNDLE} CA \u8bc1\u4e66\u5e94\u63d0\u4f9b\u7ed9 admission webhook \u914d\u7f6e\uff0c\u8fd9\u6837 apiserver \u624d\u53ef\u4ee5\u4fe1\u4efb webhook server \u63d0\u4f9b\u7684 TLS \u8bc1\u4e66\u3002\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u5df2\u7ecf\u4f7f\u7528 Kubernetes API \u7b7e\u7f72\u4e86\u8bc1\u4e66\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684 kubeconfig \u4e2d\u7684 CA \u8bc1\u4e66\u6765\u7b80\u5316\u64cd\u4f5c\u3002\u4ee3\u7801\u4ed3\u5e93\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5c0f\u811a\u672c\u7528\u6765\u66ff\u6362 CA_BUNDLE \u8fd9\u4e2a\u5360\u4f4d\u7b26\uff0c\u521b\u5efa validating webhook \u4e4b\u524d\u8fd0\u884c\u8be5\u547d\u4ee4\u5373\u53ef\uff1a cat ./deployment/validatingwebhook.yaml | ./deployment/webhook-patch-ca-bundle.sh > ./deployment/validatingwebhook-ca-bundle.yaml \u6267\u884c\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b validatingwebhook-ca-bundle.yaml \u6587\u4ef6\u4e2d\u7684 CA_BUNDLE \u5360\u4f4d\u7b26\u7684\u503c\u662f\u5426\u5df2\u7ecf\u88ab\u66ff\u6362\u6389\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f clientConfig \u91cc\u9762\u7684 path \u8def\u5f84\u662f / validate \uff0c\u56e0\u4e3a\u6211\u4eec\u4ee3\u7801\u5728\u662f\u5c06 validate \u548c mutate \u96c6\u6210\u5728\u4e00\u4e2a\u670d\u52a1\u4e2d\u7684\u3002 \u7136\u540e\u5c31\u662f\u9700\u8981\u914d\u7f6e\u4e00\u4e9b RBAC \u89c4\u5219\uff0c\u6211\u4eec\u60f3\u5728 deployment \u6216 service \u521b\u5efa\u65f6\u62e6\u622a API \u8bf7\u6c42\uff0c\u6240\u4ee5 apiGroups \u548c apiVersions \u5bf9\u5e94\u7684\u503c\u5206\u522b\u4e3a apps / v1 \u5bf9\u5e94 deployment\uff0c v1 \u5bf9\u5e94 service\u3002 webhook \u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u914d\u7f6e\u4e00\u4e2a namespaceSelector \uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a webhook \u5de5\u4f5c\u7684\u547d\u540d\u7a7a\u95f4\u5b9a\u4e49\u4e00\u4e2a selector\uff0c\u8fd9\u4e2a\u914d\u7f6e\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e0b\u9762\u7684\u914d\u7f6e\uff1a namespaceSelector : matchLabels : admission-webhook-example : enabled \u5219\u6211\u4eec\u7684 webhook \u4f1a\u53ea\u9002\u7528\u4e8e\u8bbe\u7f6e\u4e86 admission-webhook-example = enabled \u6807\u7b7e\u7684 namespaces\u3002 \u6240\u4ee5\uff0c\u9996\u5148\u9700\u8981\u5728 default \u8fd9\u4e2a namespace \u4e2d\u6dfb\u52a0\u8be5\u6807\u7b7e\uff1a \u279c ~ kubectl label namespace default admission-webhook-example = enabled namespace \"default\" labeled \u6700\u540e\uff0c\u521b\u5efa\u8fd9\u4e2a validating webhook \u914d\u7f6e\u5bf9\u8c61\uff0c\u8fd9\u4f1a\u52a8\u6001\u5730\u5c06 webhook \u6dfb\u52a0\u5230 webhook \u94fe\u4e0a\uff0c\u6240\u4ee5\u4e00\u65e6\u521b\u5efa\u8d44\u6e90\uff0c\u5c31\u4f1a\u62e6\u622a\u8bf7\u6c42\u7136\u540e\u8c03\u7528\u6211\u4eec\u7684 webhook \u670d\u52a1\uff1a \u279c ~ kubectl apply -f deployment/validatingwebhook-ca-bundle.yaml validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" created","title":"\u914d\u7f6e webhook"},{"location":"Controller/Admission/#_4","text":"\u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a deployment \u8d44\u6e90\u6765\u9a8c\u8bc1\u4e0b\u662f\u5426\u6709\u6548\uff0c\u4ee3\u7801\u4ed3\u5e93\u4e0b\u6709\u4e00\u4e2a sleep.yaml \u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a \u279c ~ kubectl apply -f deployment/sleep.yaml Error from server ( required labels are not set ) : error when creating \"deployment/sleep.yaml\" : admission webhook \"required-labels.qikqiak.com\" denied the request: required labels are not set \u6b63\u5e38\u60c5\u51b5\u4e0b\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e0a\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u7136\u540e\u90e8\u7f72\u53e6\u5916\u4e00\u4e2a sleep-with-labels.yaml \u7684\u8d44\u6e90\u6e05\u5355\uff1a \u279c ~ kubectl apply -f deployment/sleep-with-labels.yaml deployment.apps \"sleep\" created \u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u6b63\u5e38\u90e8\u7f72\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4e0a\u9762\u7684 deployment \u5220\u9664\uff0c\u7136\u540e\u90e8\u7f72\u53e6\u5916\u4e00\u4e2a sleep-no-validation.yaml \u8d44\u6e90\u6e05\u5355\uff0c\u8be5\u6e05\u5355\u4e2d\u4e0d\u5b58\u5728\u6240\u9700\u7684\u6807\u7b7e\uff0c\u4f46\u662f\u914d\u7f6e\u4e86 admission-webhook-example.qikqiak.com/validate=false \u8fd9\u6837\u7684 annotation \uff0c\u6240\u4ee5\u6b63\u5e38\u4e5f\u662f\u53ef\u4ee5\u6b63\u5e38\u521b\u5efa\u7684\uff1a \u279c ~ kubectl delete deployment sleep \u279c ~ kubectl apply -f deployment/sleep-no-validation.yaml deployment.apps \"sleep\" created","title":"\u6d4b\u8bd5"},{"location":"Controller/Admission/#mutating-webhook","text":"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u7684 validating webhook \u5220\u9664\uff0c\u9632\u6b62\u5bf9 mutating \u4ea7\u751f\u5e72\u6270\uff0c\u7136\u540e\u91cd\u65b0\u90e8\u7f72\u3002 mutating webhook \u4e0e validating webhook \u914d\u7f6e\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f webook server \u7684\u8def\u5f84\u662f / mutate \uff0c\u540c\u6837\u7684\u6211\u4eec\u4e5f\u9700\u8981\u5148\u586b\u5145\u4e0a CA_BUNDLE \u8fd9\u4e2a\u5360\u4f4d\u7b26\u3002 \u279c ~ kubectl delete validatingwebhookconfiguration validation-webhook-example-cfg validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" deleted \u279c ~ cat ./deployment/mutatingwebhook.yaml | ./deployment/webhook-patch-ca-bundle.sh > ./deployment/mutatingwebhook-ca-bundle.yaml \u279c ~ kubectl apply -f deployment/mutatingwebhook-ca-bundle.yaml mutatingwebhookconfiguration.admissionregistration.k8s.io \"mutating-webhook-example-cfg\" created \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u90e8\u7f72\u4e0a\u9762\u7684 sleep \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u67e5\u770b\u662f\u5426\u6b63\u786e\u6dfb\u52a0 label \u6807\u7b7e\uff1a \u279c ~ kubectl apply -f deployment/sleep.yaml deployment.apps \"sleep\" created \u279c ~ kubectl get deploy sleep -o yaml apiVersion : apps/v1 kind : Deployment metadata : annotations : admission-webhook-example.qikqiak.com/status : mutated deployment.kubernetes.io/revision : \"1\" creationTimestamp : \"2020-06-01T08:10:04Z\" generation : 1 labels : app.kubernetes.io/component : not_available app.kubernetes.io/instance : not_available app.kubernetes.io/managed-by : not_available app.kubernetes.io/name : not_available app.kubernetes.io/part-of : not_available app.kubernetes.io/version : not_available name : sleep namespace : default ... \u6700\u540e\uff0c\u6211\u4eec\u91cd\u65b0\u521b\u5efa validating webhook \uff0c\u6765\u4e00\u8d77\u6d4b\u8bd5\u3002\u73b0\u5728\uff0c\u5c1d\u8bd5\u518d\u6b21\u521b\u5efa sleep \u5e94\u7528\u3002\u6b63\u5e38\u662f\u53ef\u4ee5\u521b\u5efa\u6210\u529f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b admission-controllers \u7684\u6587\u6863\u3002 \u51c6\u5165\u63a7\u5236\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff0c\u7b2c\u4e00\u9636\u6bb5\uff0c\u8fd0\u884c mutating admission \u63a7\u5236\u5668\uff0c\u7b2c\u4e8c\u9636\u6bb5\u8fd0\u884c validating admission \u63a7\u5236\u5668\u3002 \u6240\u4ee5 mutating webhook \u5728\u7b2c\u4e00\u9636\u6bb5\u6dfb\u52a0\u4e0a\u7f3a\u5931\u7684 labels \u6807\u7b7e\uff0c\u7136\u540e validating webhook \u5728\u7b2c\u4e8c\u9636\u6bb5\u5c31\u4e0d\u4f1a\u62d2\u7edd\u8fd9\u4e2a deployment \u4e86\uff0c\u56e0\u4e3a\u6807\u7b7e\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u7528 not_available \u8bbe\u7f6e\u4ed6\u4eec\u7684\u503c \u3002 \u279c ~ kubectl apply -f deployment/validatingwebhook-ca-bundle.yaml validatingwebhookconfiguration.admissionregistration.k8s.io \"validation-webhook-example-cfg\" created \u279c ~ kubectl apply -f deployment/sleep.yaml deployment.apps \"sleep\" created \u4f46\u662f\u5982\u679c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u76f8\u5173\u9700\u6c42\u5c31\u5355\u72ec\u53bb\u5f00\u53d1\u4e00\u4e2a\u51c6\u5165\u63a7\u5236\u5668\u7684 webhook \u662f\u4e0d\u662f\u5c31\u663e\u5f97\u975e\u5e38\u9ebb\u70e6\uff0c\u4e0d\u591f\u7075\u6d3b\u4e86\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Kubernetes \u63d0\u4f9b\u7684\u4e00\u4e9b\u7b56\u7565\u7ba1\u7406\u5f15\u64ce\uff0c\u5728\u4e0d\u9700\u8981\u7f16\u5199\u4ee3\u7801\u7684\u60c5\u51b5\u4e5f\u53ef\u4ee5\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u8fd9\u4e9b\u9700\u6c42\uff0c\u6bd4\u5982 Kyverno \u3001 Gatekeeper \u7b49\u7b49\uff0c\u540e\u7eed\u6211\u4eec\u518d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002","title":"\u90e8\u7f72 mutating webhook"},{"location":"Controller/Crd/","text":"CRD \u00b6 Custom Resource Define \u7b80\u79f0 CRD\uff0c\u662f Kubernetes\uff08v1.7+\uff09\u4e3a\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\uff0c\u8ba9\u5f00\u53d1\u8005\u53bb\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u4e00\u79cd\u65b9\u5f0f\u3002CRD \u8d44\u6e90\u53ef\u4ee5\u52a8\u6001\u6ce8\u518c\u5230\u96c6\u7fa4\u4e2d\uff0c\u6ce8\u518c\u5b8c\u6bd5\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 kubectl \u6765\u521b\u5efa\u8bbf\u95ee\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u7c7b\u4f3c\u4e8e\u64cd\u4f5c Pod \u4e00\u6837\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f CRD \u4ec5\u4ec5\u662f\u8d44\u6e90\u7684\u5b9a\u4e49\u800c\u5df2\uff0c\u9700\u8981\u4e00\u4e2a Controller \u53bb\u76d1\u542c CRD \u7684\u5404\u79cd\u4e8b\u4ef6\u6765\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u4e1a\u52a1\u903b\u8f91\u3002 \u5b9a\u4e49 \u00b6 \u5982\u679c\u8bf4\u53ea\u662f\u5bf9 CRD \u8d44\u6e90\u672c\u8eab\u8fdb\u884c CRUD \u64cd\u4f5c\u7684\u8bdd\uff0c\u4e0d\u9700\u8981 Controller \u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u53ea\u6709\u6570\u636e\u5b58\u5165\u4e86 etcd \u4e2d\uff0c\u800c\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u6570\u636e\u7684\u76f8\u5173\u64cd\u4f5c\u800c\u5df2\u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 CRD \u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a # crd-demo.yaml apiVersion : apiextensions.k8s.io/v1 kind : CustomResourceDefinition metadata : # name \u5fc5\u987b\u5339\u914d\u4e0b\u9762\u7684spec\u5b57\u6bb5\uff1a<plural>.<group> name : crontabs.stable.example.com spec : # group \u540d\u7528\u4e8e REST API \u4e2d\u7684\u5b9a\u4e49\uff1a/apis/<group>/<version> group : stable.example.com # \u5217\u51fa\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u6240\u6709 API \u7248\u672c versions : - name : v1beta1 # \u7248\u672c\u540d\u79f0\uff0c\u6bd4\u5982 v1\u3001v2beta1 \u7b49\u7b49 served : true # \u662f\u5426\u5f00\u542f\u901a\u8fc7 REST APIs \u8bbf\u95ee `/apis/<group>/<version>/...` storage : true # \u5fc5\u987b\u5c06\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a\u7248\u672c\u6807\u8bb0\u4e3a\u5b58\u50a8\u7248\u672c schema : # \u5b9a\u4e49\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u58f0\u660e\u89c4\u8303 openAPIV3Schema : description : Define CronTab YAML Spec type : object properties : spec : type : object properties : cronSpec : type : string image : type : string replicas : type : integer # \u5b9a\u4e49\u4f5c\u7528\u8303\u56f4\uff1aNamespaced\uff08\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\uff09\u6216\u8005 Cluster\uff08\u6574\u4e2a\u96c6\u7fa4\uff09 scope : Namespaced names : # kind \u662f sigular \u7684\u4e00\u4e2a\u9a7c\u5cf0\u5f62\u5f0f\u5b9a\u4e49\uff0c\u5728\u8d44\u6e90\u6e05\u5355\u4e2d\u4f1a\u4f7f\u7528 kind : CronTab # plural \u540d\u5b57\u7528\u4e8e REST API \u4e2d\u7684\u5b9a\u4e49\uff1a/apis/<group>/<version>/<plural> plural : crontabs # singular \u540d\u79f0\u7528\u4e8e CLI \u64cd\u4f5c\u6216\u663e\u793a\u7684\u4e00\u4e2a\u522b\u540d singular : crontab # shortNames \u76f8\u5f53\u4e8e\u7f29\u5199\u5f62\u5f0f shortNames : - ct Warning \u9700\u8981\u6ce8\u610f\u7684\u662f v1.16 \u7248\u672c\u4ee5\u540e\u5df2\u7ecf GA \u4e86\uff0c\u4f7f\u7528\u7684\u662f v1 \u7248\u672c\uff0c\u4e4b\u524d\u90fd\u662f v1beta1\uff0c\u5b9a\u4e49\u89c4\u8303\u6709\u90e8\u5206\u53d8\u5316\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u7248\u672c\u53d8\u5316\u3002 \u8fd9\u4e2a\u5730\u65b9\u7684\u5b9a\u4e49\u548c\u6211\u4eec\u5b9a\u4e49\u666e\u901a\u7684\u8d44\u6e90\u5bf9\u8c61\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u6211\u4eec\u8bf4\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u4f46\u662f\u5728\u521b\u5efa\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u4e0d\u662f\u4efb\u7531\u6211\u4eec\u968f\u610f\u53bb\u7f16\u5199 YAML \u6587\u4ef6\u7684\uff0c\u5f53\u6211\u4eec\u628a\u4e0a\u9762\u7684 CRD \u6587\u4ef6\u63d0\u4ea4\u7ed9 Kubernetes \u4e4b\u540e\uff0cKubernetes \u4f1a\u5bf9\u6211\u4eec\u63d0\u4ea4\u7684\u58f0\u660e\u6587\u4ef6\u8fdb\u884c\u6821\u9a8c\uff0c\u4ece\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa CRD \u662f\u57fa\u4e8e OpenAPI v3 schem \u8fdb\u884c\u89c4\u8303\u7684\u3002 \u8fd9\u79cd\u6821\u9a8c\u53ea\u662f\u5bf9\u4e8e\u5b57\u6bb5\u7684\u7c7b\u578b\u8fdb\u884c\u6821\u9a8c\uff0c\u6bd4\u8f83\u521d\u7ea7 \uff0c \u5982\u679c\u60f3\u8981\u66f4\u52a0\u590d\u6742\u7684\u6821\u9a8c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7 Kubernetes \u7684 admission webhook \u6765\u5b9e\u73b0\u4e86 \u3002\u5173\u4e8e\u6821\u9a8c\u7684\u66f4\u591a\u7528\u6cd5\uff0c\u53ef\u4ee5\u524d\u5f80 \u5b98\u65b9\u6587\u6863 \u67e5\u770b\u3002 \u540c\u6837\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 kubectl \u6765\u521b\u5efa\u8fd9\u4e2a CRD \u8d44\u6e90\u6e05\u5355\uff1a \u279c ~ kubectl apply -f crd-demo.yaml customresourcedefinition.apiextensions.k8s.io/crontabs.stable.example.com created \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5230\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u6709\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\u4e86\uff1a \u279c ~ kubectl get crd | grep example crontabs.stable.example.com 2019 -12-19T02:37:54Z \u8fd9\u4e2a\u65f6\u5019\u4e00\u4e2a\u65b0\u7684 namespace \u7ea7\u522b\u7684 RESTful API \u5c31\u4f1a\u88ab\u521b\u5efa\uff1a /apis/stable/example.com/v1beta1/namespaces/*/crontabs/... \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a API \u7aef\u70b9\u6765\u521b\u5efa\u548c\u7ba1\u7406\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\u578b\u5c31\u662f\u4e0a\u9762\u521b\u5efa\u7684 CRD \u5bf9\u8c61\u89c4\u8303\u4e2d\u7684 CronTab \u3002 \u73b0\u5728\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u6211\u4eec\u5c31\u591a\u4e86\u4e00\u79cd\u65b0\u7684\u8d44\u6e90\u53eb\u505a crontabs.stable.example.com \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5b9a\u4e49\u4e00\u4e2a CronTab \u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u91cc\u9762\u53ef\u4ee5\u5305\u542b\u7684\u5b57\u6bb5\u6211\u4eec\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u901a\u8fc7 schema \u8fdb\u884c\u4e86\u89c4\u8303\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a # crd-crontab-demo.yaml apiVersion : stable.example.com/v1beta1 kind : CronTab metadata : name : my-new-cron-object spec : cronSpec : \"* * * * */5\" image : my-awesome-cron-image \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f crd-crontab-demo.yaml crontab.stable.example.com/my-new-cron-object created \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 kubectl \u6765\u7ba1\u7406\u6211\u4eec\u8fd9\u91cc\u521b\u5efa CronTab \u5bf9\u8c61\u4e86\uff0c\u6bd4\u5982\uff1a \u279c ~ kubectl get ct # \u7b80\u5199 NAME AGE my-new-cron-object 42s \u279c ~ kubectl get crontab NAME AGE my-new-cron-object 88s \u5728\u4f7f\u7528 kubectl \u7684\u65f6\u5019\uff0c\u8d44\u6e90\u540d\u79f0\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CRD \u4e2d\u5b9a\u4e49\u7684\u5355\u6570\u6216\u8005\u590d\u6570\u5f62\u5f0f\u4ee5\u53ca\u4efb\u4f55\u7b80\u5199 \u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u521b\u5efa\u7684\u8fd9\u4e2a\u5bf9\u8c61\u7684\u539f\u59cb YAML \u6570\u636e\uff1a \u279c ~ kubectl get ct -o yaml apiVersion: v1 items: - apiVersion: stable.example.com/v1beta1 kind: CronTab metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | { \"apiVersion\" : \"stable.example.com/v1beta1\" , \"kind\" : \"CronTab\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"my-new-cron-object\" , \"namespace\" : \"default\" } , \"spec\" : { \"cronSpec\" : \"* * * * */5\" , \"image\" : \"my-awesome-cron-image\" }} creationTimestamp: \"2019-12-19T02:52:55Z\" generation: 1 name: my-new-cron-object namespace: default resourceVersion: \"12342275\" selfLink: /apis/stable.example.com/v1beta1/namespaces/default/crontabs/my-new-cron-object uid: dace308d-5f54-4232-9c7b-841adf6bab62 spec: cronSpec: '* * * * */5' image: my-awesome-cron-image kind: List metadata: resourceVersion: \"\" selfLink: \"\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u5305\u542b\u4e86\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u7684 cronSpec \u548c image \u5b57\u6bb5\u3002 Controller \u00b6 \u5c31\u5982\u4e0a\u9762\u6211\u4eec\u8bf4\u7684\uff0c\u73b0\u5728\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u4e5f\u53ea\u662f\u5355\u7eaf\u7684\u628a\u8d44\u6e90\u6e05\u5355\u6570\u636e\u5b58\u653e\u5230\u4e86 etcd \u4e2d\u800c\u5df2\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u7528\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u5e94\u7684 Controller \u6765\u5904\u7406\u4ed6\u3002 \u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49 Controller \u7684 \u793a\u4f8b \uff1a \u5982\u4f55\u6ce8\u518c\u8d44\u6e90 Foo \u5982\u4f55\u521b\u5efa\u3001\u5220\u9664\u548c\u67e5\u8be2 Foo \u5bf9\u8c61 \u5982\u4f55\u76d1\u542c Foo \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5 \u8981\u60f3\u4e86\u89e3 Controller \u7684\u5b9e\u73b0\u539f\u7406\u548c\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e86\u89e3\u4e0b client-go \u8fd9\u4e2a\u5e93\u7684\u5b9e\u73b0\uff0cKubernetes \u90e8\u5206\u4ee3\u7801\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u5e93\u5b9e\u73b0\u7684\uff0c\u4e5f\u5305\u542b\u4e86\u5f00\u53d1\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u5404\u79cd\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u5728 client-go \u6e90\u7801\u7684 css tools/cache \u76ee\u5f55\u4e0b\u9762\u6709\u5b9a\u4e49\u3002 \u4e0b\u56fe\u663e\u793a\u4e86 client-go \u4e2d\u7684\u5404\u4e2a\u7ec4\u4ef6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u4ee5\u53ca\u4e0e\u6211\u4eec\u8981\u7f16\u5199\u7684\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4ee3\u7801\u7684\u4ea4\u4e92\u5165\u53e3\uff1a client-go \u7ec4\u4ef6 \uff1a Reflector \uff1a\u901a\u8fc7 Kubernetes API \u76d1\u63a7 Kubernetes \u7684\u8d44\u6e90\u7c7b\u578b \u91c7\u7528 List / Watch \u673a\u5236, \u53ef\u4ee5 Watch \u4efb\u4f55\u8d44\u6e90\u5305\u62ec CRD \u6dfb\u52a0 object \u5bf9\u8c61\u5230 FIFO \u961f\u5217\uff0c\u7136\u540e Informer \u4f1a\u4ece\u961f\u5217\u91cc\u9762\u53d6\u6570\u636e Informer \uff1acontroller \u673a\u5236\u7684\u57fa\u7840\uff0c \u5faa\u73af\u5904\u7406 \u4ece Reflector \u53d6\u51fa\u6570\u636e\u7684object \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u6570\u636e\u7ed9\u5230 Indexer \u53bb \u7f13\u5b58 \uff0c\u63d0\u4f9b\u5bf9\u8c61\u4e8b\u4ef6\u7684 handler \u63a5\u53e3\uff0c\u53ea\u8981\u7ed9 Informer \u6dfb\u52a0 ResourceEventHandler \u5b9e\u4f8b\u7684\u56de\u8c03\u51fd\u6570\uff0c\u53bb\u5b9e\u73b0 OnAdd(obj interface{}) \u3001 OnUpdate(oldObj, newObj interface{}) \u548c OnDelete(obj interface{}) \uff0c\u5c31\u53ef\u4ee5\u5904\u7406\u597d\u8d44\u6e90\u7684\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u4e86\u3002 \u8fd9\u4e09\u4e2a\u65b9\u6cd5 Indexer \uff1a\u63d0\u4f9b object \u5bf9\u8c61\u7684\u7d22\u5f15\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u7f13\u5b58\u5bf9\u8c61\u7684\u4fe1\u606f controller \u7ec4\u4ef6 \uff1a Informer reference : controller \u9700\u8981\u521b\u5efa\u5408\u9002\u7684 Informer \u624d\u80fd\u901a\u8fc7 Informer reference \u64cd\u4f5c\u8d44\u6e90\u5bf9\u8c61 Indexer reference : controller \u521b\u5efa Indexer reference \u7136\u540e\u53bb\u5229\u7528\u7d22\u5f15\u505a\u76f8\u5173\u5904\u7406 Resource Event Handlers \uff1aInformer \u4f1a\u56de\u8c03\u8fd9\u4e9b handlers Work queue : Resource Event Handlers \u88ab\u56de\u8c03\u540e\u5c06 key \u5199\u5230\u5de5\u4f5c\u961f\u5217\uff0c\u8fd9\u91cc\u7684 key \u76f8\u5f53\u4e8e\u4e8b\u4ef6\u901a\u77e5\uff0c\u540e\u9762\u6839\u636e\u53d6\u51fa\u4e8b\u4ef6\u540e\uff0c\u505a\u540e\u7eed\u7684\u5904\u7406 Process Item \uff1a\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u53d6\u51fa key \u540e\u8fdb\u884c\u540e\u7eed\u5904\u7406\uff0c\u5177\u4f53\u5904\u7406\u53ef\u4ee5\u901a\u8fc7 Indexer reference controller \u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e0a\u8ff0\u4e24\u4e2a\u5f15\u7528\u5bf9\u8c61\u53bb\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528\u5de5\u5382\u6a21\u5f0f\uff0c\u5b98\u65b9\u90fd\u6709\u76f8\u5173\u793a\u4f8b client-go/tool/cache/ \u548c\u81ea\u5b9a\u4e49 Controller \u7684 \u63a7\u5236\u6d41 \uff1a \u5982\u4e0a\u56fe\u6240\u793a\u4e3b\u8981\u6709 \u4e24\u4e2a\u90e8\u5206 \uff0c\u4e00\u4e2a\u662f\u53d1\u751f\u5728 SharedIndexInformer \u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5728\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4e2d\u3002 Reflector \u901a\u8fc7 Kubernetes APIServer \u6267\u884c\u5bf9\u8c61\uff08\u6bd4\u5982 Pod\uff09\u7684 ListAndWatch \u67e5\u8be2\uff0c\u8bb0\u5f55\u548c\u5bf9\u8c61\u76f8\u5173\u7684\u4e09\u79cd\u4e8b\u4ef6\u7c7b\u578b Added \u3001 Updated \u3001 Deleted \uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4f20\u9012\u5230 DeltaFIFO \u4e2d\u53bb\u3002 DeltaFIFO \u63a5\u6536\u5230\u4e8b\u4ef6\u548c watch \u4e8b\u4ef6\u5bf9\u5e94\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u8f6c\u6362\u4e3a Delta \u5bf9\u8c61 \uff0c\u8fd9\u4e9b Delta \u5bf9\u8c61\u88ab\u9644\u52a0\u5230\u961f\u5217\u4e2d\u53bb\u7b49\u5f85\u5904\u7406\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u5220\u9664\u7684\uff0c\u4f1a\u68c0\u67e5\u7ebf\u7a0b\u5b89\u5168\u7684 store \u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u6587\u4ef6\uff0c\u4ece\u800c\u53ef\u4ee5\u907f\u514d\u5728\u4e0d\u5b58\u5728\u67d0\u4e9b\u5185\u5bb9\u65f6\u6392\u961f\u6267\u884c\u5220\u9664\u64cd\u4f5c\u3002 Cache \u63a7\u5236\u5668 \uff08\u4e0d\u8981\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u6df7\u6dc6\uff09\u8c03\u7528 Pop () \u65b9\u6cd5\u4ece DeltaFIFO \u961f\u5217\u4e2d\u51fa\u961f\u5217\uff0cDelta \u5bf9\u8c61\u5c06\u4f20\u9012\u5230 SharedIndexInformer \u7684 HandleDelta () \u65b9\u6cd5\u4e2d\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002 \u6839\u636e Delta \u5bf9\u8c61\u7684\u64cd\u4f5c\uff08\u4e8b\u4ef6\uff09\u7c7b\u578b \uff0c\u9996\u5148\u5728 HandleDeltas \u65b9\u6cd5\u4e2d\u901a\u8fc7 indexer \u7684\u65b9\u6cd5\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u7ebf\u7a0b\u5b89\u5168\u7684 Store \u4e2d\uff0c\u7136\u540e\u901a\u8fc7 SharedIndexInformer \u4e0b\u9762 sharedProcessor \u7684 distribution () \u65b9\u6cd5\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u53d1\u9001\u5230\u4e8b\u4ef6 handlers\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5904\u7406\u5668\u7531\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u901a\u8fc7 SharedInformer \u7684\u65b9\u6cd5\u6bd4\u5982 AddEventHandlerWithResyncPeriod() \u8fdb\u884c\u6ce8\u518c\u3002 \u5df2\u6ce8\u518c\u7684\u4e8b\u4ef6\u5904\u7406\u5668 \u901a\u8fc7\u6dfb\u52a0\u6216\u66f4\u65b0\u65f6\u95f4\u7684 MetaNamespaceKeyFunc () \u6216\u5220\u9664\u4e8b\u4ef6\u7684 DeletionHandingMetaNamespaceKeyFunc () \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u683c\u5f0f\u4e3a namespace/name \u6216\u53ea\u662f name \u7684 key\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a key \u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u7684 workqueue \u4e2d\uff0cworkqueues \u7684\u5b9e\u73b0\u53ef\u4ee5\u5728 util/workqueue \u4e2d\u627e\u5230\u3002 \u81ea\u5b9a\u4e49\u7684\u63a7\u5236\u5668 \u901a\u8fc7\u8c03\u7528\u5b9a\u4e49\u7684 handlers \u5904\u7406\u5668\u4ece workqueue \u4e2d pop \u4e00\u4e2a key \u51fa\u6765\u8fdb\u884c\u5904\u7406\uff0chandlers \u5c06\u8c03\u7528 indexer \u7684 GetByKey () \u4ece\u7ebf\u7a0b\u5b89\u5168\u7684 store \u4e2d\u83b7\u53d6\u5bf9\u8c61\uff0c\u6211\u4eec\u7684\u4e1a\u52a1\u903b\u8f91\u5c31\u662f\u5728\u8fd9\u4e2a handlers \u91cc\u9762\u5b9e\u73b0 client-go \u4e2d\u4e5f\u6709\u81ea\u5b9a\u4e49 Controller \u7684\u6837\u4f8b\u4ee3\u7801\uff0c\u4f4d\u4e8e\uff1a k8s.io/client-go/examples/workqueue/main.go \u3002 Operator \u00b6 Operator \u5c31\u53ef\u4ee5\u770b\u6210\u662f CRD \u548c Controller \u7684 \u4e00\u79cd\u7ec4\u5408\u7279\u4f8b \uff0cOperator \u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5b83\u7ed3\u5408\u4e86\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\u5e76\u901a\u8fc7 CRD \u673a\u5236\u6269\u5c55\u4e86 Kubernetes API \u8d44\u6e90\uff0c\u4f7f\u7528\u6237\u7ba1\u7406 Kubernetes \u7684\u5185\u7f6e\u8d44\u6e90\uff08Pod\u3001Deployment\u7b49\uff09\u4e00\u6837\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff0c Operator \u662f\u4e00\u4e2a\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u63a7\u5236\u5668\uff0c\u901a\u8fc7\u6269\u5c55 Kubernetes API \u8d44\u6e90\u4ee5\u4ee3\u8868 Kubernetes \u7528\u6237\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u590d\u6742\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u4f8b \u3002\u901a\u5e38\u5305\u542b\u8d44\u6e90\u6a21\u578b\u5b9a\u4e49\u548c\u63a7\u5236\u5668\uff0c\u901a\u8fc7 Operator \u901a\u5e38\u662f\u4e3a\u4e86\u5b9e\u73b0 \u67d0\u79cd\u7279\u5b9a\u8f6f\u4ef6\uff08\u901a\u5e38\u662f\u6709\u72b6\u6001\u670d\u52a1\uff09\u7684\u81ea\u52a8\u5316\u8fd0\u7ef4 \u3002 \u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u5f0f\u7f16\u5199\u4e00\u4e2a CRD \u5bf9\u8c61\uff0c\u7136\u540e\u53bb\u624b\u52a8\u5b9e\u73b0\u4e00\u4e2a\u5bf9\u5e94\u7684 Controller \u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a Operator\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53d1\u73b0\u4ece\u5934\u5f00\u59cb\u53bb\u6784\u5efa\u4e00\u4e2a CRD \u63a7\u5236\u5668\u5e76\u4e0d\u5bb9\u6613\uff0c\u9700\u8981\u5bf9 Kubernetes \u7684 API \u6709\u6df1\u5165\u4e86\u89e3\uff0c\u5e76\u4e14 RBAC \u96c6\u6210\u3001\u955c\u50cf\u6784\u5efa\u3001\u6301\u7eed\u96c6\u6210\u548c\u90e8\u7f72\u7b49\u90fd\u9700\u8981\u5f88\u5927\u5de5\u4f5c\u91cf\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u793e\u533a\u5c31\u63a8\u51fa\u4e86\u5bf9\u5e94\u7684\u7b80\u5355\u6613\u7528\u7684 Operator \u6846\u67b6\uff0c \u6bd4\u8f83\u4e3b\u6d41\u7684\u662f kubebuilder \u548c Operator Framework \uff0c\u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u4f7f\u7528\u57fa\u672c\u4e0a\u5dee\u522b\u4e0d\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u4e60\u60ef\u9009\u62e9\u4e00\u4e2a\u5373\u53ef\u3002 \u53c2\u8003\u6587\u6863 \u00b6 How to Create a Kubernetes Custom Controller Using client-go A deep dive into Kubernetes controllers","title":"Crd"},{"location":"Controller/Crd/#crd","text":"Custom Resource Define \u7b80\u79f0 CRD\uff0c\u662f Kubernetes\uff08v1.7+\uff09\u4e3a\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\uff0c\u8ba9\u5f00\u53d1\u8005\u53bb\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u4e00\u79cd\u65b9\u5f0f\u3002CRD \u8d44\u6e90\u53ef\u4ee5\u52a8\u6001\u6ce8\u518c\u5230\u96c6\u7fa4\u4e2d\uff0c\u6ce8\u518c\u5b8c\u6bd5\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 kubectl \u6765\u521b\u5efa\u8bbf\u95ee\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u7c7b\u4f3c\u4e8e\u64cd\u4f5c Pod \u4e00\u6837\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f CRD \u4ec5\u4ec5\u662f\u8d44\u6e90\u7684\u5b9a\u4e49\u800c\u5df2\uff0c\u9700\u8981\u4e00\u4e2a Controller \u53bb\u76d1\u542c CRD \u7684\u5404\u79cd\u4e8b\u4ef6\u6765\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u4e1a\u52a1\u903b\u8f91\u3002","title":"CRD"},{"location":"Controller/Crd/#_1","text":"\u5982\u679c\u8bf4\u53ea\u662f\u5bf9 CRD \u8d44\u6e90\u672c\u8eab\u8fdb\u884c CRUD \u64cd\u4f5c\u7684\u8bdd\uff0c\u4e0d\u9700\u8981 Controller \u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u53ea\u6709\u6570\u636e\u5b58\u5165\u4e86 etcd \u4e2d\uff0c\u800c\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u6570\u636e\u7684\u76f8\u5173\u64cd\u4f5c\u800c\u5df2\u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 CRD \u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a # crd-demo.yaml apiVersion : apiextensions.k8s.io/v1 kind : CustomResourceDefinition metadata : # name \u5fc5\u987b\u5339\u914d\u4e0b\u9762\u7684spec\u5b57\u6bb5\uff1a<plural>.<group> name : crontabs.stable.example.com spec : # group \u540d\u7528\u4e8e REST API \u4e2d\u7684\u5b9a\u4e49\uff1a/apis/<group>/<version> group : stable.example.com # \u5217\u51fa\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u6240\u6709 API \u7248\u672c versions : - name : v1beta1 # \u7248\u672c\u540d\u79f0\uff0c\u6bd4\u5982 v1\u3001v2beta1 \u7b49\u7b49 served : true # \u662f\u5426\u5f00\u542f\u901a\u8fc7 REST APIs \u8bbf\u95ee `/apis/<group>/<version>/...` storage : true # \u5fc5\u987b\u5c06\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a\u7248\u672c\u6807\u8bb0\u4e3a\u5b58\u50a8\u7248\u672c schema : # \u5b9a\u4e49\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u58f0\u660e\u89c4\u8303 openAPIV3Schema : description : Define CronTab YAML Spec type : object properties : spec : type : object properties : cronSpec : type : string image : type : string replicas : type : integer # \u5b9a\u4e49\u4f5c\u7528\u8303\u56f4\uff1aNamespaced\uff08\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\uff09\u6216\u8005 Cluster\uff08\u6574\u4e2a\u96c6\u7fa4\uff09 scope : Namespaced names : # kind \u662f sigular \u7684\u4e00\u4e2a\u9a7c\u5cf0\u5f62\u5f0f\u5b9a\u4e49\uff0c\u5728\u8d44\u6e90\u6e05\u5355\u4e2d\u4f1a\u4f7f\u7528 kind : CronTab # plural \u540d\u5b57\u7528\u4e8e REST API \u4e2d\u7684\u5b9a\u4e49\uff1a/apis/<group>/<version>/<plural> plural : crontabs # singular \u540d\u79f0\u7528\u4e8e CLI \u64cd\u4f5c\u6216\u663e\u793a\u7684\u4e00\u4e2a\u522b\u540d singular : crontab # shortNames \u76f8\u5f53\u4e8e\u7f29\u5199\u5f62\u5f0f shortNames : - ct Warning \u9700\u8981\u6ce8\u610f\u7684\u662f v1.16 \u7248\u672c\u4ee5\u540e\u5df2\u7ecf GA \u4e86\uff0c\u4f7f\u7528\u7684\u662f v1 \u7248\u672c\uff0c\u4e4b\u524d\u90fd\u662f v1beta1\uff0c\u5b9a\u4e49\u89c4\u8303\u6709\u90e8\u5206\u53d8\u5316\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u7248\u672c\u53d8\u5316\u3002 \u8fd9\u4e2a\u5730\u65b9\u7684\u5b9a\u4e49\u548c\u6211\u4eec\u5b9a\u4e49\u666e\u901a\u7684\u8d44\u6e90\u5bf9\u8c61\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u6211\u4eec\u8bf4\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u4f46\u662f\u5728\u521b\u5efa\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u4e0d\u662f\u4efb\u7531\u6211\u4eec\u968f\u610f\u53bb\u7f16\u5199 YAML \u6587\u4ef6\u7684\uff0c\u5f53\u6211\u4eec\u628a\u4e0a\u9762\u7684 CRD \u6587\u4ef6\u63d0\u4ea4\u7ed9 Kubernetes \u4e4b\u540e\uff0cKubernetes \u4f1a\u5bf9\u6211\u4eec\u63d0\u4ea4\u7684\u58f0\u660e\u6587\u4ef6\u8fdb\u884c\u6821\u9a8c\uff0c\u4ece\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa CRD \u662f\u57fa\u4e8e OpenAPI v3 schem \u8fdb\u884c\u89c4\u8303\u7684\u3002 \u8fd9\u79cd\u6821\u9a8c\u53ea\u662f\u5bf9\u4e8e\u5b57\u6bb5\u7684\u7c7b\u578b\u8fdb\u884c\u6821\u9a8c\uff0c\u6bd4\u8f83\u521d\u7ea7 \uff0c \u5982\u679c\u60f3\u8981\u66f4\u52a0\u590d\u6742\u7684\u6821\u9a8c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7 Kubernetes \u7684 admission webhook \u6765\u5b9e\u73b0\u4e86 \u3002\u5173\u4e8e\u6821\u9a8c\u7684\u66f4\u591a\u7528\u6cd5\uff0c\u53ef\u4ee5\u524d\u5f80 \u5b98\u65b9\u6587\u6863 \u67e5\u770b\u3002 \u540c\u6837\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 kubectl \u6765\u521b\u5efa\u8fd9\u4e2a CRD \u8d44\u6e90\u6e05\u5355\uff1a \u279c ~ kubectl apply -f crd-demo.yaml customresourcedefinition.apiextensions.k8s.io/crontabs.stable.example.com created \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5230\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u6709\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\u4e86\uff1a \u279c ~ kubectl get crd | grep example crontabs.stable.example.com 2019 -12-19T02:37:54Z \u8fd9\u4e2a\u65f6\u5019\u4e00\u4e2a\u65b0\u7684 namespace \u7ea7\u522b\u7684 RESTful API \u5c31\u4f1a\u88ab\u521b\u5efa\uff1a /apis/stable/example.com/v1beta1/namespaces/*/crontabs/... \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a API \u7aef\u70b9\u6765\u521b\u5efa\u548c\u7ba1\u7406\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\u578b\u5c31\u662f\u4e0a\u9762\u521b\u5efa\u7684 CRD \u5bf9\u8c61\u89c4\u8303\u4e2d\u7684 CronTab \u3002 \u73b0\u5728\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u6211\u4eec\u5c31\u591a\u4e86\u4e00\u79cd\u65b0\u7684\u8d44\u6e90\u53eb\u505a crontabs.stable.example.com \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5b9a\u4e49\u4e00\u4e2a CronTab \u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u91cc\u9762\u53ef\u4ee5\u5305\u542b\u7684\u5b57\u6bb5\u6211\u4eec\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u901a\u8fc7 schema \u8fdb\u884c\u4e86\u89c4\u8303\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a # crd-crontab-demo.yaml apiVersion : stable.example.com/v1beta1 kind : CronTab metadata : name : my-new-cron-object spec : cronSpec : \"* * * * */5\" image : my-awesome-cron-image \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f crd-crontab-demo.yaml crontab.stable.example.com/my-new-cron-object created \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 kubectl \u6765\u7ba1\u7406\u6211\u4eec\u8fd9\u91cc\u521b\u5efa CronTab \u5bf9\u8c61\u4e86\uff0c\u6bd4\u5982\uff1a \u279c ~ kubectl get ct # \u7b80\u5199 NAME AGE my-new-cron-object 42s \u279c ~ kubectl get crontab NAME AGE my-new-cron-object 88s \u5728\u4f7f\u7528 kubectl \u7684\u65f6\u5019\uff0c\u8d44\u6e90\u540d\u79f0\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CRD \u4e2d\u5b9a\u4e49\u7684\u5355\u6570\u6216\u8005\u590d\u6570\u5f62\u5f0f\u4ee5\u53ca\u4efb\u4f55\u7b80\u5199 \u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u521b\u5efa\u7684\u8fd9\u4e2a\u5bf9\u8c61\u7684\u539f\u59cb YAML \u6570\u636e\uff1a \u279c ~ kubectl get ct -o yaml apiVersion: v1 items: - apiVersion: stable.example.com/v1beta1 kind: CronTab metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | { \"apiVersion\" : \"stable.example.com/v1beta1\" , \"kind\" : \"CronTab\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"my-new-cron-object\" , \"namespace\" : \"default\" } , \"spec\" : { \"cronSpec\" : \"* * * * */5\" , \"image\" : \"my-awesome-cron-image\" }} creationTimestamp: \"2019-12-19T02:52:55Z\" generation: 1 name: my-new-cron-object namespace: default resourceVersion: \"12342275\" selfLink: /apis/stable.example.com/v1beta1/namespaces/default/crontabs/my-new-cron-object uid: dace308d-5f54-4232-9c7b-841adf6bab62 spec: cronSpec: '* * * * */5' image: my-awesome-cron-image kind: List metadata: resourceVersion: \"\" selfLink: \"\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u5305\u542b\u4e86\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u7684 cronSpec \u548c image \u5b57\u6bb5\u3002","title":"\u5b9a\u4e49"},{"location":"Controller/Crd/#controller","text":"\u5c31\u5982\u4e0a\u9762\u6211\u4eec\u8bf4\u7684\uff0c\u73b0\u5728\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8d44\u6e90\u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u4e5f\u53ea\u662f\u5355\u7eaf\u7684\u628a\u8d44\u6e90\u6e05\u5355\u6570\u636e\u5b58\u653e\u5230\u4e86 etcd \u4e2d\u800c\u5df2\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u7528\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u5e94\u7684 Controller \u6765\u5904\u7406\u4ed6\u3002 \u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49 Controller \u7684 \u793a\u4f8b \uff1a \u5982\u4f55\u6ce8\u518c\u8d44\u6e90 Foo \u5982\u4f55\u521b\u5efa\u3001\u5220\u9664\u548c\u67e5\u8be2 Foo \u5bf9\u8c61 \u5982\u4f55\u76d1\u542c Foo \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5 \u8981\u60f3\u4e86\u89e3 Controller \u7684\u5b9e\u73b0\u539f\u7406\u548c\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e86\u89e3\u4e0b client-go \u8fd9\u4e2a\u5e93\u7684\u5b9e\u73b0\uff0cKubernetes \u90e8\u5206\u4ee3\u7801\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u5e93\u5b9e\u73b0\u7684\uff0c\u4e5f\u5305\u542b\u4e86\u5f00\u53d1\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u5404\u79cd\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u5728 client-go \u6e90\u7801\u7684 css tools/cache \u76ee\u5f55\u4e0b\u9762\u6709\u5b9a\u4e49\u3002 \u4e0b\u56fe\u663e\u793a\u4e86 client-go \u4e2d\u7684\u5404\u4e2a\u7ec4\u4ef6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u4ee5\u53ca\u4e0e\u6211\u4eec\u8981\u7f16\u5199\u7684\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4ee3\u7801\u7684\u4ea4\u4e92\u5165\u53e3\uff1a client-go \u7ec4\u4ef6 \uff1a Reflector \uff1a\u901a\u8fc7 Kubernetes API \u76d1\u63a7 Kubernetes \u7684\u8d44\u6e90\u7c7b\u578b \u91c7\u7528 List / Watch \u673a\u5236, \u53ef\u4ee5 Watch \u4efb\u4f55\u8d44\u6e90\u5305\u62ec CRD \u6dfb\u52a0 object \u5bf9\u8c61\u5230 FIFO \u961f\u5217\uff0c\u7136\u540e Informer \u4f1a\u4ece\u961f\u5217\u91cc\u9762\u53d6\u6570\u636e Informer \uff1acontroller \u673a\u5236\u7684\u57fa\u7840\uff0c \u5faa\u73af\u5904\u7406 \u4ece Reflector \u53d6\u51fa\u6570\u636e\u7684object \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u6570\u636e\u7ed9\u5230 Indexer \u53bb \u7f13\u5b58 \uff0c\u63d0\u4f9b\u5bf9\u8c61\u4e8b\u4ef6\u7684 handler \u63a5\u53e3\uff0c\u53ea\u8981\u7ed9 Informer \u6dfb\u52a0 ResourceEventHandler \u5b9e\u4f8b\u7684\u56de\u8c03\u51fd\u6570\uff0c\u53bb\u5b9e\u73b0 OnAdd(obj interface{}) \u3001 OnUpdate(oldObj, newObj interface{}) \u548c OnDelete(obj interface{}) \uff0c\u5c31\u53ef\u4ee5\u5904\u7406\u597d\u8d44\u6e90\u7684\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u4e86\u3002 \u8fd9\u4e09\u4e2a\u65b9\u6cd5 Indexer \uff1a\u63d0\u4f9b object \u5bf9\u8c61\u7684\u7d22\u5f15\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u7f13\u5b58\u5bf9\u8c61\u7684\u4fe1\u606f controller \u7ec4\u4ef6 \uff1a Informer reference : controller \u9700\u8981\u521b\u5efa\u5408\u9002\u7684 Informer \u624d\u80fd\u901a\u8fc7 Informer reference \u64cd\u4f5c\u8d44\u6e90\u5bf9\u8c61 Indexer reference : controller \u521b\u5efa Indexer reference \u7136\u540e\u53bb\u5229\u7528\u7d22\u5f15\u505a\u76f8\u5173\u5904\u7406 Resource Event Handlers \uff1aInformer \u4f1a\u56de\u8c03\u8fd9\u4e9b handlers Work queue : Resource Event Handlers \u88ab\u56de\u8c03\u540e\u5c06 key \u5199\u5230\u5de5\u4f5c\u961f\u5217\uff0c\u8fd9\u91cc\u7684 key \u76f8\u5f53\u4e8e\u4e8b\u4ef6\u901a\u77e5\uff0c\u540e\u9762\u6839\u636e\u53d6\u51fa\u4e8b\u4ef6\u540e\uff0c\u505a\u540e\u7eed\u7684\u5904\u7406 Process Item \uff1a\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u53d6\u51fa key \u540e\u8fdb\u884c\u540e\u7eed\u5904\u7406\uff0c\u5177\u4f53\u5904\u7406\u53ef\u4ee5\u901a\u8fc7 Indexer reference controller \u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e0a\u8ff0\u4e24\u4e2a\u5f15\u7528\u5bf9\u8c61\u53bb\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528\u5de5\u5382\u6a21\u5f0f\uff0c\u5b98\u65b9\u90fd\u6709\u76f8\u5173\u793a\u4f8b client-go/tool/cache/ \u548c\u81ea\u5b9a\u4e49 Controller \u7684 \u63a7\u5236\u6d41 \uff1a \u5982\u4e0a\u56fe\u6240\u793a\u4e3b\u8981\u6709 \u4e24\u4e2a\u90e8\u5206 \uff0c\u4e00\u4e2a\u662f\u53d1\u751f\u5728 SharedIndexInformer \u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5728\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u4e2d\u3002 Reflector \u901a\u8fc7 Kubernetes APIServer \u6267\u884c\u5bf9\u8c61\uff08\u6bd4\u5982 Pod\uff09\u7684 ListAndWatch \u67e5\u8be2\uff0c\u8bb0\u5f55\u548c\u5bf9\u8c61\u76f8\u5173\u7684\u4e09\u79cd\u4e8b\u4ef6\u7c7b\u578b Added \u3001 Updated \u3001 Deleted \uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4f20\u9012\u5230 DeltaFIFO \u4e2d\u53bb\u3002 DeltaFIFO \u63a5\u6536\u5230\u4e8b\u4ef6\u548c watch \u4e8b\u4ef6\u5bf9\u5e94\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u8f6c\u6362\u4e3a Delta \u5bf9\u8c61 \uff0c\u8fd9\u4e9b Delta \u5bf9\u8c61\u88ab\u9644\u52a0\u5230\u961f\u5217\u4e2d\u53bb\u7b49\u5f85\u5904\u7406\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u5220\u9664\u7684\uff0c\u4f1a\u68c0\u67e5\u7ebf\u7a0b\u5b89\u5168\u7684 store \u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u6587\u4ef6\uff0c\u4ece\u800c\u53ef\u4ee5\u907f\u514d\u5728\u4e0d\u5b58\u5728\u67d0\u4e9b\u5185\u5bb9\u65f6\u6392\u961f\u6267\u884c\u5220\u9664\u64cd\u4f5c\u3002 Cache \u63a7\u5236\u5668 \uff08\u4e0d\u8981\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u6df7\u6dc6\uff09\u8c03\u7528 Pop () \u65b9\u6cd5\u4ece DeltaFIFO \u961f\u5217\u4e2d\u51fa\u961f\u5217\uff0cDelta \u5bf9\u8c61\u5c06\u4f20\u9012\u5230 SharedIndexInformer \u7684 HandleDelta () \u65b9\u6cd5\u4e2d\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002 \u6839\u636e Delta \u5bf9\u8c61\u7684\u64cd\u4f5c\uff08\u4e8b\u4ef6\uff09\u7c7b\u578b \uff0c\u9996\u5148\u5728 HandleDeltas \u65b9\u6cd5\u4e2d\u901a\u8fc7 indexer \u7684\u65b9\u6cd5\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u7ebf\u7a0b\u5b89\u5168\u7684 Store \u4e2d\uff0c\u7136\u540e\u901a\u8fc7 SharedIndexInformer \u4e0b\u9762 sharedProcessor \u7684 distribution () \u65b9\u6cd5\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u53d1\u9001\u5230\u4e8b\u4ef6 handlers\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5904\u7406\u5668\u7531\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u901a\u8fc7 SharedInformer \u7684\u65b9\u6cd5\u6bd4\u5982 AddEventHandlerWithResyncPeriod() \u8fdb\u884c\u6ce8\u518c\u3002 \u5df2\u6ce8\u518c\u7684\u4e8b\u4ef6\u5904\u7406\u5668 \u901a\u8fc7\u6dfb\u52a0\u6216\u66f4\u65b0\u65f6\u95f4\u7684 MetaNamespaceKeyFunc () \u6216\u5220\u9664\u4e8b\u4ef6\u7684 DeletionHandingMetaNamespaceKeyFunc () \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u683c\u5f0f\u4e3a namespace/name \u6216\u53ea\u662f name \u7684 key\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a key \u6dfb\u52a0\u5230\u81ea\u5b9a\u4e49\u63a7\u5236\u5668\u7684 workqueue \u4e2d\uff0cworkqueues \u7684\u5b9e\u73b0\u53ef\u4ee5\u5728 util/workqueue \u4e2d\u627e\u5230\u3002 \u81ea\u5b9a\u4e49\u7684\u63a7\u5236\u5668 \u901a\u8fc7\u8c03\u7528\u5b9a\u4e49\u7684 handlers \u5904\u7406\u5668\u4ece workqueue \u4e2d pop \u4e00\u4e2a key \u51fa\u6765\u8fdb\u884c\u5904\u7406\uff0chandlers \u5c06\u8c03\u7528 indexer \u7684 GetByKey () \u4ece\u7ebf\u7a0b\u5b89\u5168\u7684 store \u4e2d\u83b7\u53d6\u5bf9\u8c61\uff0c\u6211\u4eec\u7684\u4e1a\u52a1\u903b\u8f91\u5c31\u662f\u5728\u8fd9\u4e2a handlers \u91cc\u9762\u5b9e\u73b0 client-go \u4e2d\u4e5f\u6709\u81ea\u5b9a\u4e49 Controller \u7684\u6837\u4f8b\u4ee3\u7801\uff0c\u4f4d\u4e8e\uff1a k8s.io/client-go/examples/workqueue/main.go \u3002","title":"Controller"},{"location":"Controller/Crd/#operator","text":"Operator \u5c31\u53ef\u4ee5\u770b\u6210\u662f CRD \u548c Controller \u7684 \u4e00\u79cd\u7ec4\u5408\u7279\u4f8b \uff0cOperator \u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5b83\u7ed3\u5408\u4e86\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\u5e76\u901a\u8fc7 CRD \u673a\u5236\u6269\u5c55\u4e86 Kubernetes API \u8d44\u6e90\uff0c\u4f7f\u7528\u6237\u7ba1\u7406 Kubernetes \u7684\u5185\u7f6e\u8d44\u6e90\uff08Pod\u3001Deployment\u7b49\uff09\u4e00\u6837\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\uff0c Operator \u662f\u4e00\u4e2a\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u63a7\u5236\u5668\uff0c\u901a\u8fc7\u6269\u5c55 Kubernetes API \u8d44\u6e90\u4ee5\u4ee3\u8868 Kubernetes \u7528\u6237\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u590d\u6742\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u4f8b \u3002\u901a\u5e38\u5305\u542b\u8d44\u6e90\u6a21\u578b\u5b9a\u4e49\u548c\u63a7\u5236\u5668\uff0c\u901a\u8fc7 Operator \u901a\u5e38\u662f\u4e3a\u4e86\u5b9e\u73b0 \u67d0\u79cd\u7279\u5b9a\u8f6f\u4ef6\uff08\u901a\u5e38\u662f\u6709\u72b6\u6001\u670d\u52a1\uff09\u7684\u81ea\u52a8\u5316\u8fd0\u7ef4 \u3002 \u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u5f0f\u7f16\u5199\u4e00\u4e2a CRD \u5bf9\u8c61\uff0c\u7136\u540e\u53bb\u624b\u52a8\u5b9e\u73b0\u4e00\u4e2a\u5bf9\u5e94\u7684 Controller \u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a Operator\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53d1\u73b0\u4ece\u5934\u5f00\u59cb\u53bb\u6784\u5efa\u4e00\u4e2a CRD \u63a7\u5236\u5668\u5e76\u4e0d\u5bb9\u6613\uff0c\u9700\u8981\u5bf9 Kubernetes \u7684 API \u6709\u6df1\u5165\u4e86\u89e3\uff0c\u5e76\u4e14 RBAC \u96c6\u6210\u3001\u955c\u50cf\u6784\u5efa\u3001\u6301\u7eed\u96c6\u6210\u548c\u90e8\u7f72\u7b49\u90fd\u9700\u8981\u5f88\u5927\u5de5\u4f5c\u91cf\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u793e\u533a\u5c31\u63a8\u51fa\u4e86\u5bf9\u5e94\u7684\u7b80\u5355\u6613\u7528\u7684 Operator \u6846\u67b6\uff0c \u6bd4\u8f83\u4e3b\u6d41\u7684\u662f kubebuilder \u548c Operator Framework \uff0c\u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u4f7f\u7528\u57fa\u672c\u4e0a\u5dee\u522b\u4e0d\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u4e60\u60ef\u9009\u62e9\u4e00\u4e2a\u5373\u53ef\u3002","title":"Operator"},{"location":"Controller/Crd/#_2","text":"How to Create a Kubernetes Custom Controller Using client-go A deep dive into Kubernetes controllers","title":"\u53c2\u8003\u6587\u6863"},{"location":"Controller/DaemonSet/","text":"DaemonSet \u63a7\u5236\u5668 \u00b6 \u901a\u8fc7\u8be5\u63a7\u5236\u5668\u7684\u540d\u79f0\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u6cd5\uff1a Daemon \uff0c\u5c31\u662f\u7528\u6765\u90e8\u7f72\u5b88\u62a4\u8fdb\u7a0b\u7684\uff0c DaemonSet \u7528\u4e8e\u5728\u6bcf\u4e2a Kubernetes \u8282\u70b9\u4e2d\u5c06\u5b88\u62a4\u8fdb\u7a0b\u7684\u526f\u672c\u4f5c\u4e3a\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u5728\u6bcf\u4e2a\u8282\u70b9\u90e8\u7f72\u4e00\u4e2a Pod\u526f\u672c \u3002\u5f53\u8282\u70b9\u52a0\u5165\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff0cPod \u4f1a\u88ab\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u5f53\u8282\u70b9\u4ece\u96c6\u7fa4\u91cc\u88ab\u79fb\u9664\u540e\uff0c\u8be5\u8282\u70b9\u4e0a\u7684\u8fd9\u4e2a Pod \u4e5f\u4f1a\u88ab\u79fb\u9664\uff0c\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u5220\u9664 DaemonSet\uff0c\u6240\u6709\u548c\u8fd9\u4e2a\u5bf9\u8c61\u76f8\u5173\u7684 Pods\u90fd\u4f1a\u88ab\u5220\u9664\u3002\u90a3\u4e48\u5728\u54ea\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u4f1a\u9700\u8981\u7528\u5230\u8fd9\u79cd\u4e1a\u52a1\u573a\u666f\u5462\uff1f\u5176\u5b9e\u8fd9\u79cd\u573a\u666f\u8fd8\u662f\u6bd4\u8f83\u666e\u901a\u7684\uff0c\u6bd4\u5982\uff1a \u96c6\u7fa4\u5b58\u50a8\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5982 glusterd\u3001ceph \u8981\u90e8\u7f72\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4ee5\u63d0\u4f9b\u6301\u4e45\u6027\u5b58\u50a8\uff1b \u8282\u70b9\u76d1\u63a7\u5b88\u62a4\u8fdb\u7a0b\uff0c\u5982 Prometheus \u76d1\u63a7\u96c6\u7fa4\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a node-exporter \u8fdb\u7a0b\u6765\u6536\u96c6\u76d1\u63a7\u8282\u70b9\u7684\u4fe1\u606f\uff1b \u65e5\u5fd7\u6536\u96c6\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5982 fluentd \u6216 logstash\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4ee5\u6536\u96c6\u5bb9\u5668\u7684\u65e5\u5fd7 \u8282\u70b9\u7f51\u7edc\u63d2\u4ef6\uff0c\u6bd4\u5982 flannel\u3001calico\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e3a Pod \u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\u3002 \u8fd9\u91cc\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u4e00\u4e2a\u5c31\u662f\u5173\u4e8e DaemonSet \u8fd0\u884c Pod \u7684\u8c03\u5ea6\u95ee\u9898\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cPod \u8fd0\u884c\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a\u662f\u7531 Kubernetes \u7684\u8c03\u5ea6\u5668\u7b56\u7565\u6765\u51b3\u5b9a\u7684\uff0c\u7136\u800c\uff0c\u7531 DaemonSet \u63a7\u5236\u5668\u521b\u5efa\u7684 Pod \u5b9e\u9645\u4e0a\u63d0\u524d\u5df2\u7ecf\u786e\u5b9a\u4e86\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a\u4e86\uff08Pod\u521b\u5efa\u65f6\u6307\u5b9a\u4e86 .spec.nodeName \uff09\uff0c\u6240\u4ee5\uff1a DaemonSet \u5e76\u4e0d\u5173\u5fc3\u4e00\u4e2a\u8282\u70b9\u7684 unshedulable \u5b57\u6bb5\uff0c\u8fd9\u4e2a\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u8c03\u5ea6\u7ae0\u8282\u548c\u5927\u5bb6\u8bb2\u89e3\u7684\u3002 DaemonSet \u53ef\u4ee5\u521b\u5efa Pod\uff0c\u5373\u4f7f\u8c03\u5ea6\u5668\u8fd8\u6ca1\u6709\u542f\u52a8\u3002 \u4e0b\u9762\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u793a\u4f8b\u6765\u6f14\u793a\u4e0b\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90e8\u7f72\u4e00\u4e2a Nginx Pod\uff1a # nginx-ds.yaml apiVersion : apps/v1 kind : DaemonSet metadata : name : nginx-ds namespace : default spec : selector : matchLabels : k8s-app : nginx template : metadata : labels : k8s-app : nginx spec : containers : - image : nginx:1.7.9 name : nginx ports : - name : http containerPort : 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a \u279c ~ kubectl apply -f nginx-ds.yaml daemonset.apps/nginx-ds created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u67e5\u770b Pod \u7684\u72b6\u6001\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION master1 Ready control-plane,master 18d v1.22.2 node1 Ready <none> 18d v1.22.2 node2 Ready <none> 18d v1.22.2 \u279c ~ kubectl get pods -l k8s-app = nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES nginx-ds-5b2m7 1 /1 Running 0 15s 10 .244.2.165 node2 <none> <none> nginx-ds-jfr89 1 /1 Running 0 15s 10 .244.1.170 node1 <none> <none> \u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86 master1 \u8282\u70b9\u4e4b\u5916\u76842\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u76f8\u5e94\u7684 Pod \u8fd0\u884c\uff0c\u56e0\u4e3a master1 \u8282\u70b9\u4e0a\u9ed8\u8ba4\u88ab\u6253\u4e0a\u4e86 \u6c61\u70b9 \uff0c\u6240\u4ee5\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u80fd\u8c03\u5ea6\u666e\u901a\u7684 Pod \u4e0a\u53bb\uff0c\u540e\u9762\u8bb2\u89e3\u8c03\u5ea6\u5668\u7684\u65f6\u5019\u4f1a\u548c\u5927\u5bb6\u5b66\u4e60\u5982\u4f55\u8c03\u5ea6\u4e0a\u53bb\u3002 \u57fa\u672c\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u56fe\u6765\u63cf\u8ff0 DaemonSet \u7684\u62d3\u6251\u56fe\uff1a \u96c6\u7fa4\u4e2d\u7684 Pod \u548c Node \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u800c DaemonSet \u4f1a\u7ba1\u7406\u5168\u90e8\u673a\u5668\u4e0a\u7684 Pod \u526f\u672c\uff0c\u8d1f\u8d23\u5bf9\u5b83\u4eec\u8fdb\u884c\u66f4\u65b0\u548c\u5220\u9664\u3002 \u90a3\u4e48\uff0cDaemonSet \u63a7\u5236\u5668\u662f\u5982\u4f55\u4fdd\u8bc1\u6bcf\u4e2a Node \u4e0a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u88ab\u7ba1\u7406\u7684 Pod \u5462\uff1f \u9996\u5148\u63a7\u5236\u5668\u4ece API\u2192Etcd \u83b7\u53d6\u5230\u6240\u6709\u7684 Node \u5217\u8868\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684 Node\u3002 \u6839\u636e\u8d44\u6e90\u5bf9\u8c61\u5b9a\u4e49\u662f\u5426\u6709\u8c03\u5ea6\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u7136\u540e\u5206\u522b\u68c0\u67e5 Node \u662f\u5426\u7b26\u5408\u8981\u6c42\u3002 \u5728\u53ef\u8fd0\u884c Pod \u7684\u8282\u70b9\u4e0a\u68c0\u67e5\u662f\u5426\u5df2\u6709\u5bf9\u5e94\u7684 Pod\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5728\u8fd9\u4e2a Node \u4e0a\u521b\u5efa\u8be5 Pod\uff1b\u5982\u679c\u6709\uff0c\u5e76\u4e14\u6570\u91cf\u5927\u4e8e 1\uff0c\u90a3\u5c31\u628a\u591a\u4f59\u7684 Pod \u4ece\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5220\u9664\uff1b\u5982\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a Pod\uff0c\u90a3\u5c31\u8bf4\u660e\u662f\u6b63\u5e38\u60c5\u51b5\u3002 \u5b9e\u9645\u4e0a\u5f53\u6211\u4eec\u5b66\u4e60\u4e86\u8d44\u6e90\u8c03\u5ea6\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528 Deployment \u6765\u5b9e\u73b0 DaemonSet \u7684\u6548\u679c\uff0c\u8fd9\u91cc\u6211\u4eec\u660e\u767d DaemonSet \u5982\u4f55\u4f7f\u7528\u7684\u5373\u53ef\uff0c\u5f53\u7136\u8be5\u8d44\u6e90\u5bf9\u8c61\u4e5f\u6709\u5bf9\u5e94\u7684\u66f4\u65b0\u7b56\u7565\uff0c\u6709 OnDelete \u548c RollingUpdate \u4e24\u79cd\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u662f\u6eda\u52a8\u66f4\u65b0\u3002","title":"DaemonSet"},{"location":"Controller/DaemonSet/#daemonset","text":"\u901a\u8fc7\u8be5\u63a7\u5236\u5668\u7684\u540d\u79f0\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u7528\u6cd5\uff1a Daemon \uff0c\u5c31\u662f\u7528\u6765\u90e8\u7f72\u5b88\u62a4\u8fdb\u7a0b\u7684\uff0c DaemonSet \u7528\u4e8e\u5728\u6bcf\u4e2a Kubernetes \u8282\u70b9\u4e2d\u5c06\u5b88\u62a4\u8fdb\u7a0b\u7684\u526f\u672c\u4f5c\u4e3a\u540e\u53f0\u8fdb\u7a0b\u8fd0\u884c\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u5728\u6bcf\u4e2a\u8282\u70b9\u90e8\u7f72\u4e00\u4e2a Pod\u526f\u672c \u3002\u5f53\u8282\u70b9\u52a0\u5165\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff0cPod \u4f1a\u88ab\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u5f53\u8282\u70b9\u4ece\u96c6\u7fa4\u91cc\u88ab\u79fb\u9664\u540e\uff0c\u8be5\u8282\u70b9\u4e0a\u7684\u8fd9\u4e2a Pod \u4e5f\u4f1a\u88ab\u79fb\u9664\uff0c\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u5220\u9664 DaemonSet\uff0c\u6240\u6709\u548c\u8fd9\u4e2a\u5bf9\u8c61\u76f8\u5173\u7684 Pods\u90fd\u4f1a\u88ab\u5220\u9664\u3002\u90a3\u4e48\u5728\u54ea\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u4f1a\u9700\u8981\u7528\u5230\u8fd9\u79cd\u4e1a\u52a1\u573a\u666f\u5462\uff1f\u5176\u5b9e\u8fd9\u79cd\u573a\u666f\u8fd8\u662f\u6bd4\u8f83\u666e\u901a\u7684\uff0c\u6bd4\u5982\uff1a \u96c6\u7fa4\u5b58\u50a8\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5982 glusterd\u3001ceph \u8981\u90e8\u7f72\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4ee5\u63d0\u4f9b\u6301\u4e45\u6027\u5b58\u50a8\uff1b \u8282\u70b9\u76d1\u63a7\u5b88\u62a4\u8fdb\u7a0b\uff0c\u5982 Prometheus \u76d1\u63a7\u96c6\u7fa4\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a node-exporter \u8fdb\u7a0b\u6765\u6536\u96c6\u76d1\u63a7\u8282\u70b9\u7684\u4fe1\u606f\uff1b \u65e5\u5fd7\u6536\u96c6\u5b88\u62a4\u7a0b\u5e8f\uff0c\u5982 fluentd \u6216 logstash\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4ee5\u6536\u96c6\u5bb9\u5668\u7684\u65e5\u5fd7 \u8282\u70b9\u7f51\u7edc\u63d2\u4ef6\uff0c\u6bd4\u5982 flannel\u3001calico\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e3a Pod \u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\u3002 \u8fd9\u91cc\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u4e00\u4e2a\u5c31\u662f\u5173\u4e8e DaemonSet \u8fd0\u884c Pod \u7684\u8c03\u5ea6\u95ee\u9898\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cPod \u8fd0\u884c\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a\u662f\u7531 Kubernetes \u7684\u8c03\u5ea6\u5668\u7b56\u7565\u6765\u51b3\u5b9a\u7684\uff0c\u7136\u800c\uff0c\u7531 DaemonSet \u63a7\u5236\u5668\u521b\u5efa\u7684 Pod \u5b9e\u9645\u4e0a\u63d0\u524d\u5df2\u7ecf\u786e\u5b9a\u4e86\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a\u4e86\uff08Pod\u521b\u5efa\u65f6\u6307\u5b9a\u4e86 .spec.nodeName \uff09\uff0c\u6240\u4ee5\uff1a DaemonSet \u5e76\u4e0d\u5173\u5fc3\u4e00\u4e2a\u8282\u70b9\u7684 unshedulable \u5b57\u6bb5\uff0c\u8fd9\u4e2a\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u8c03\u5ea6\u7ae0\u8282\u548c\u5927\u5bb6\u8bb2\u89e3\u7684\u3002 DaemonSet \u53ef\u4ee5\u521b\u5efa Pod\uff0c\u5373\u4f7f\u8c03\u5ea6\u5668\u8fd8\u6ca1\u6709\u542f\u52a8\u3002 \u4e0b\u9762\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u793a\u4f8b\u6765\u6f14\u793a\u4e0b\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90e8\u7f72\u4e00\u4e2a Nginx Pod\uff1a # nginx-ds.yaml apiVersion : apps/v1 kind : DaemonSet metadata : name : nginx-ds namespace : default spec : selector : matchLabels : k8s-app : nginx template : metadata : labels : k8s-app : nginx spec : containers : - image : nginx:1.7.9 name : nginx ports : - name : http containerPort : 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a \u279c ~ kubectl apply -f nginx-ds.yaml daemonset.apps/nginx-ds created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u67e5\u770b Pod \u7684\u72b6\u6001\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION master1 Ready control-plane,master 18d v1.22.2 node1 Ready <none> 18d v1.22.2 node2 Ready <none> 18d v1.22.2 \u279c ~ kubectl get pods -l k8s-app = nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES nginx-ds-5b2m7 1 /1 Running 0 15s 10 .244.2.165 node2 <none> <none> nginx-ds-jfr89 1 /1 Running 0 15s 10 .244.1.170 node1 <none> <none> \u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86 master1 \u8282\u70b9\u4e4b\u5916\u76842\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u76f8\u5e94\u7684 Pod \u8fd0\u884c\uff0c\u56e0\u4e3a master1 \u8282\u70b9\u4e0a\u9ed8\u8ba4\u88ab\u6253\u4e0a\u4e86 \u6c61\u70b9 \uff0c\u6240\u4ee5\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u80fd\u8c03\u5ea6\u666e\u901a\u7684 Pod \u4e0a\u53bb\uff0c\u540e\u9762\u8bb2\u89e3\u8c03\u5ea6\u5668\u7684\u65f6\u5019\u4f1a\u548c\u5927\u5bb6\u5b66\u4e60\u5982\u4f55\u8c03\u5ea6\u4e0a\u53bb\u3002 \u57fa\u672c\u4e0a\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u56fe\u6765\u63cf\u8ff0 DaemonSet \u7684\u62d3\u6251\u56fe\uff1a \u96c6\u7fa4\u4e2d\u7684 Pod \u548c Node \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u800c DaemonSet \u4f1a\u7ba1\u7406\u5168\u90e8\u673a\u5668\u4e0a\u7684 Pod \u526f\u672c\uff0c\u8d1f\u8d23\u5bf9\u5b83\u4eec\u8fdb\u884c\u66f4\u65b0\u548c\u5220\u9664\u3002 \u90a3\u4e48\uff0cDaemonSet \u63a7\u5236\u5668\u662f\u5982\u4f55\u4fdd\u8bc1\u6bcf\u4e2a Node \u4e0a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u88ab\u7ba1\u7406\u7684 Pod \u5462\uff1f \u9996\u5148\u63a7\u5236\u5668\u4ece API\u2192Etcd \u83b7\u53d6\u5230\u6240\u6709\u7684 Node \u5217\u8868\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684 Node\u3002 \u6839\u636e\u8d44\u6e90\u5bf9\u8c61\u5b9a\u4e49\u662f\u5426\u6709\u8c03\u5ea6\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u7136\u540e\u5206\u522b\u68c0\u67e5 Node \u662f\u5426\u7b26\u5408\u8981\u6c42\u3002 \u5728\u53ef\u8fd0\u884c Pod \u7684\u8282\u70b9\u4e0a\u68c0\u67e5\u662f\u5426\u5df2\u6709\u5bf9\u5e94\u7684 Pod\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5728\u8fd9\u4e2a Node \u4e0a\u521b\u5efa\u8be5 Pod\uff1b\u5982\u679c\u6709\uff0c\u5e76\u4e14\u6570\u91cf\u5927\u4e8e 1\uff0c\u90a3\u5c31\u628a\u591a\u4f59\u7684 Pod \u4ece\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5220\u9664\uff1b\u5982\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a Pod\uff0c\u90a3\u5c31\u8bf4\u660e\u662f\u6b63\u5e38\u60c5\u51b5\u3002 \u5b9e\u9645\u4e0a\u5f53\u6211\u4eec\u5b66\u4e60\u4e86\u8d44\u6e90\u8c03\u5ea6\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528 Deployment \u6765\u5b9e\u73b0 DaemonSet \u7684\u6548\u679c\uff0c\u8fd9\u91cc\u6211\u4eec\u660e\u767d DaemonSet \u5982\u4f55\u4f7f\u7528\u7684\u5373\u53ef\uff0c\u5f53\u7136\u8be5\u8d44\u6e90\u5bf9\u8c61\u4e5f\u6709\u5bf9\u5e94\u7684\u66f4\u65b0\u7b56\u7565\uff0c\u6709 OnDelete \u548c RollingUpdate \u4e24\u79cd\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u662f\u6eda\u52a8\u66f4\u65b0\u3002","title":"DaemonSet \u63a7\u5236\u5668"},{"location":"Controller/Deployment/","text":"Deployment \u63a7\u5236\u5668 \u00b6 \u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86 ReplicaSet \u63a7\u5236\u5668\uff0c\u4e86\u89e3\u5230\u8be5\u63a7\u5236\u5668\u662f\u7528\u6765\u7ef4\u62a4\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u6570\u91cf\u7684\uff0c\u4f46\u662f\u5f80\u5f80\u5728\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53cd\u800c\u4e0d\u4f1a\u53bb\u76f4\u63a5\u4f7f\u7528 RS\uff0c\u800c\u662f\u4f1a\u4f7f\u7528\u66f4\u4e0a\u5c42\u7684\u63a7\u5236\u5668\uff0c\u6bd4\u5982\u6211\u4eec\u4eca\u5929\u8981\u5b66\u4e60\u7684\u4e3b\u89d2 Deployment\uff0c Deployment \u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u5b9e\u73b0\u4e86 Pod \u7684\u6eda\u52a8\u66f4\u65b0 \uff0c\u6bd4\u5982\u6211\u4eec\u5e94\u7528\u66f4\u65b0\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u6211\u4eec\u7684\u5bb9\u5668\u955c\u50cf\uff0c\u7136\u540e\u4fee\u6539 Deployment \u91cc\u9762\u7684 Pod \u6a21\u677f\u955c\u50cf\uff0c\u90a3\u4e48 Deployment \u5c31\u4f1a\u7528\u6eda\u52a8\u66f4\u65b0\uff08Rolling Update\uff09\u7684\u65b9\u5f0f\u6765\u5347\u7ea7\u73b0\u5728\u7684 Pod\uff0c\u8fd9\u4e2a\u80fd\u529b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7ebf\u4e0a\u7684\u670d\u52a1\u6211\u4eec\u9700\u8981\u505a\u5230\u4e0d\u4e2d\u65ad\u670d\u52a1\uff0c\u6240\u4ee5\u6eda\u52a8\u66f4\u65b0\u5c31\u6210\u4e86\u5fc5\u987b\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u800c Deployment \u8fd9\u4e2a\u80fd\u529b\u7684\u5b9e\u73b0\uff0c\u4f9d\u8d56\u7684\u5c31\u662f\u4e0a\u8282\u8bfe\u6211\u4eec\u5b66\u4e60\u7684 ReplicaSet \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u4fd7\u7684\u7406\u89e3\u5c31\u662f\u6bcf\u4e2a Deployment \u5c31\u5bf9\u5e94\u96c6\u7fa4\u4e2d\u7684\u4e00\u6b21\u90e8\u7f72\uff0c\u8fd9\u6837\u5c31\u66f4\u597d\u7406\u89e3\u4e86\u3002 Deployment \u00b6 Deployment \u8d44\u6e90\u5bf9\u8c61\u7684\u683c\u5f0f\u548c ReplicaSet \u51e0\u4e4e\u4e00\u81f4\uff0c\u5982\u4e0b\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 Deployment \u8d44\u6e90\u7c7b\u578b\uff1a # nginx-deploy.yaml apiVersion : apps/v1 kind : Deployment metadata : name : nginx-deploy namespace : default spec : replicas : 3 # \u671f\u671b\u7684 Pod \u526f\u672c\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a1 selector : # Label Selector\uff0c\u5fc5\u987b\u5339\u914d Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e matchLabels : app : nginx template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u5c06\u7c7b\u578b\u66ff\u6362\u6210\u4e86 Deployment\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u521b\u5efa\u4e0b\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f nginx-deploy.yaml deployment.apps/nginx-deploy created \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 3 /3 3 3 58s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u67e5\u770b Pod \u72b6\u6001\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-85ff79dd56-7r76h 1 /1 Running 0 41s nginx-deploy-85ff79dd56-d5gjs 1 /1 Running 0 41s nginx-deploy-85ff79dd56-txc4h 1 /1 Running 0 41s \u5230\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u548c\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u662f\u5426\u6ca1\u6709\u4ec0\u4e48\u4e24\u6837\uff0c\u90fd\u662f\u6839\u636e spec . replicas \u6765\u7ef4\u6301\u7684\u526f\u672c\u6570\u91cf\uff0c\u6211\u4eec\u968f\u610f\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod nginx-deploy-85ff79dd56-txc4h Name: nginx-deploy-85ff79dd56-txc4h Namespace: default Priority: 0 PriorityClassName: <none> Node: node1/10.151.30.22 Start Time: Sat, 16 Nov 2019 16 :01:25 +0800 Labels: app = nginx pod-template-hash = 85ff79dd56 Annotations: podpreset.admission.kubernetes.io/podpreset-time-preset: 2062768 Status: Running IP: 10 .244.1.166 Controlled By: ReplicaSet/nginx-deploy-85ff79dd56 ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled <unknown> default-scheduler Successfully assigned default/nginx-deploy-85ff79dd56-txc4h to node1 Normal Pulling 2m kubelet, node1 Pulling image \"nginx\" Normal Pulled 117s kubelet, node1 Successfully pulled image \"nginx\" Normal Created 117s kubelet, node1 Created container nginx Normal Started 116s kubelet, node1 Started container nginx \u6211\u4eec\u4ed4\u7ec6\u67e5\u770b\u5176\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u4fe1\u606f Controlled By : ReplicaSet / nginx-deploy-85ff79dd56 \uff0c\u4ec0\u4e48\u610f\u601d\uff1f\u662f\u4e0d\u662f\u8868\u793a\u5f53\u524d\u6211\u4eec\u8fd9\u4e2a Pod \u7684\u63a7\u5236\u5668\u662f\u4e00\u4e2a ReplicaSet \u5bf9\u8c61\u554a\uff0c\u6211\u4eec\u4e0d\u662f\u521b\u5efa\u7684\u4e00\u4e2a Deployment \u5417\uff1f\u4e3a\u4ec0\u4e48 Pod \u4f1a\u88ab RS \u6240\u63a7\u5236\u5462\uff1f\u90a3\u6211\u4eec\u518d\u53bb\u770b\u4e0b\u8fd9\u4e2a\u5bf9\u5e94\u7684 RS \u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u5982\u4f55\u5462\uff1a \u279c ~ kubectl get pod nginx-deploy-69f668cd84-qvcc4 -o yaml apiVersion: v1 kind: Pod metadata: ... spec: ... preemptionPolicy: PreemptLowerPriority priority: 0 restartPolicy: Always schedulerName: default-scheduler securityContext: {} serviceAccount: default serviceAccountName: default terminationGracePeriodSeconds: 30 ... \u901a\u8fc7\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u770b\u5230\uff0c\u5b9a\u4e49\u4e863\u4e2a\u526f\u672c\u7684 Deployment \u4e0e ReplicaSet \u548c Pod \u7684\u5173\u7cfb\uff0c\u5c31\u662f\u4e00\u5c42\u4e00\u5c42\u8fdb\u884c\u63a7\u5236\u7684\u3002ReplicaSet \u4f5c\u7528\u548c\u4e4b\u524d\u4e00\u6837\u8fd8\u662f\u6765\u4fdd\u8bc1 Pod \u7684\u4e2a\u6570\u59cb\u7ec8\u4fdd\u5b58\u6307\u5b9a\u7684\u6570\u91cf\uff0c\u6240\u4ee5 Deployment \u4e2d\u7684\u5bb9\u5668 restartPolicy = Always \u662f\u552f\u4e00\u7684\u5c31\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u56e0\u4e3a\u5bb9\u5668\u5fc5\u987b\u59cb\u7ec8\u4fdd\u8bc1\u81ea\u5df1\u5904\u4e8e Running \u72b6\u6001\uff0cReplicaSet \u624d\u53ef\u4ee5\u53bb\u660e\u786e\u8c03\u6574 Pod \u7684\u4e2a\u6570\u3002\u800c Deployment \u662f\u901a\u8fc7\u7ba1\u7406 ReplicaSet \u7684\u6570\u91cf\u548c\u5c5e\u6027\u6765\u5b9e\u73b0 \u6c34\u5e73\u6269\u5c55 / \u6536\u7f29 \u4ee5\u53ca \u6eda\u52a8\u66f4\u65b0 \u4e24\u4e2a\u529f\u80fd\u7684\u3002 \u6c34\u5e73\u4f38\u7f29 \u00b6 \u6c34\u5e73\u6269\u5c55 / \u6536\u7f29 \u7684\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a ReplicaSet \u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u6240\u4ee5 Deployment \u63a7\u5236\u5668\u53ea\u9700\u8981\u53bb\u4fee\u6539\u5b83\u7f29\u63a7\u5236\u7684 ReplicaSet \u7684 Pod \u526f\u672c\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u628a Pod \u7684\u526f\u672c\u8c03\u6574\u5230 4 \u4e2a\uff0c\u90a3\u4e48 Deployment \u6240\u5bf9\u5e94\u7684 ReplicaSet \u5c31\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod \u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u6c34\u5e73\u6269\u5c55\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4 kubectl scale \u547d\u4ee4\u6765\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\uff1a \u279c ~ kubectl scale deployment nginx-deploy --replicas = 4 deployment.apps/nginx-deployment scaled \u53ef\u4ee5\u770b\u5230\u671f\u671b\u7684 Pod \u6570\u91cf\u5df2\u7ecf\u53d8\u6210 4 \u4e86\uff0c\u53ea\u662f Pod \u8fd8\u6ca1\u51c6\u5907\u5b8c\u6210\uff0c\u6240\u4ee5 READY \u72b6\u6001\u6570\u91cf\u8fd8\u662f 3\uff0c\u540c\u6837\u67e5\u770b RS \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe rs nginx-deploy-85ff79dd56 Name: nginx-deploy-85ff79dd56 Namespace: default Selector: app = nginx,pod-template-hash = 85ff79dd56 ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-7r76h Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-d5gjs Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-txc4h Normal SuccessfulCreate 17s replicaset-controller Created pod: nginx-deploy-85ff79dd56-tph9g \u53ef\u4ee5\u770b\u5230 ReplicaSet \u63a7\u5236\u5668\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u540c\u6837\u7684 Deployment \u8d44\u6e90\u5bf9\u8c61\u7684\u4e8b\u4ef6\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u5b8c\u6210\u4e86\u6269\u5bb9\u7684\u64cd\u4f5c\uff1a \u279c ~ kubectl describe deploy nginx-deploy Name: nginx-deploy Namespace: default ...... OldReplicaSets: <none> NewReplicaSet: nginx-deploy-85ff79dd56 ( 4 /4 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 43m deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 3 Normal ScalingReplicaSet 3m16s deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 4 \u6eda\u52a8\u66f4\u65b0 \u00b6 \u5982\u679c\u53ea\u662f \u6c34\u5e73\u6269\u5c55/\u6536\u7f29 \u8fd9\u4e24\u4e2a\u529f\u80fd\uff0c\u5c31\u5b8c\u5168\u6ca1\u5fc5\u8981\u8bbe\u8ba1 Deployment \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c Deployment \u6700\u7a81\u51fa\u7684\u4e00\u4e2a\u529f\u80fd\u662f\u652f\u6301\u6eda\u52a8\u66f4\u65b0 \uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u5e94\u7528\u5bb9\u5668\u66f4\u6539\u4e3a nginx:1.7.9 \u7248\u672c\uff0c\u4fee\u6539\u540e\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx-deploy namespace : default spec : replicas : 3 selector : matchLabels : app : nginx minReadySeconds : 5 strategy : type : RollingUpdate # \u6307\u5b9a\u66f4\u65b0\u7b56\u7565\uff1aRollingUpdate\u548cRecreate rollingUpdate : maxSurge : 1 maxUnavailable : 1 template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 \u548c\u524d\u9762\u76f8\u6bd4\u8f83\uff0c\u9664\u4e86\u66f4\u6539\u4e86\u955c\u50cf\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6307\u5b9a\u4e86\u66f4\u65b0\u7b56\u7565\uff1a minReadySeconds : 5 strategy : type : RollingUpdate rollingUpdate : maxSurge : 1 maxUnavailable : 1 minReadySeconds \uff1a\u8868\u793a Kubernetes \u5728\u7b49\u5f85\u8bbe\u7f6e\u7684\u65f6\u95f4\u540e\u624d\u8fdb\u884c\u5347\u7ea7\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8be5\u503c\uff0cKubernetes \u4f1a\u5047\u8bbe\u8be5\u5bb9\u5668\u542f\u52a8\u8d77\u6765\u540e\u5c31\u63d0\u4f9b\u670d\u52a1\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8be5\u503c\uff0c\u5728\u67d0\u4e9b\u6781\u7aef\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u9020\u6210\u670d\u52a1\u4e0d\u6b63\u5e38\u8fd0\u884c\uff0c\u9ed8\u8ba4\u503c\u5c31\u662f0\u3002 type=RollingUpdate \uff1a\u8868\u793a\u8bbe\u7f6e\u66f4\u65b0\u7b56\u7565\u4e3a\u6eda\u52a8\u66f4\u65b0\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Recreate \u548c RollingUpdate \u4e24\u4e2a\u503c\uff0cRecreate\u8868\u793a\u5168\u90e8\u91cd\u65b0\u521b\u5efa\uff0c\u9ed8\u8ba4\u503c\u5c31\u662f RollingUpdate \u3002 maxSurge \uff1a\u8868\u793a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u53ef\u4ee5\u6bd4\u539f\u5148\u8bbe\u7f6e\u591a\u51fa\u7684 Pod \u6570\u91cf\uff0c\u4f8b\u5982\uff1a maxSurage=1\uff0creplicas=5 \uff0c\u5c31\u8868\u793aKubernetes \u4f1a\u5148\u542f\u52a8\u4e00\u4e2a\u65b0\u7684Pod\uff0c\u7136\u540e\u624d\u5220\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u6574\u4e2a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u4f1a\u6709 5+1 \u4e2a Pod\u3002 maxUnavaible \uff1a\u8868\u793a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a Pod \u5904\u4e8e\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5f53 maxSurge \u4e0d\u4e3a0\u65f6\uff0c\u8be5\u503c\u4e5f\u4e0d\u80fd\u4e3a0\uff0c\u4f8b\u5982\uff1a maxUnavaible=1 \uff0c\u5219\u8868\u793a Kubernetes \u6574\u4e2a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u4f1a\u67091\u4e2a Pod \u5904\u4e8e\u65e0\u6cd5\u670d\u52a1\u7684\u72b6\u6001\u3002 \u73b0\u5728\u6211\u4eec\u6765\u76f4\u63a5\u66f4\u65b0\u4e0a\u9762\u7684 Deployment \u8d44\u6e90\u5bf9\u8c61\uff1a kubectl apply -f nginx-deploy.yaml record \u53c2\u6570 \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684 --record \u53c2\u6570\u6765\u8bb0\u5f55\u4e0b\u6211\u4eec\u7684\u6bcf\u6b21\u64cd\u4f5c\u6240\u6267\u884c\u7684\u547d\u4ee4\uff0c\u4ee5\u65b9\u4fbf\u540e\u9762\u67e5\u770b\u3002 \u66f4\u65b0\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684 kubectl rollout status \u547d\u4ee4\u6765\u67e5\u770b\u6211\u4eec\u6b64\u6b21\u6eda\u52a8\u66f4\u65b0\u7684\u72b6\u6001\uff1a \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 2 out of 3 new replicas have been updated... \u4ece\u4e0a\u9762\u7684\u4fe1\u606f\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5df2\u7ecf\u6709\u4e24\u4e2a Pod \u5df2\u7ecf\u66f4\u65b0\u5b8c\u6210\u4e86\uff0c\u5728\u6eda\u52a8\u66f4\u65b0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u6682\u505c\u66f4\u65b0\uff1a \u279c ~ kubectl rollout pause deployment/nginx-deploy deployment.apps/nginx-deploy paused \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5c31\u6682\u505c\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b Deployment \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe deploy nginx-deploy Name: nginx-deploy Namespace: default CreationTimestamp: Sat, 16 Nov 2019 16 :01:24 +0800 Labels: <none> Annotations: deployment.kubernetes.io/revision: 2 kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"Deployment\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-deploy\" , \"namespace\" : \"default\" } , \"spec\" : { \"minReadySec... Selector: app=nginx Replicas: 3 desired | 2 updated | 4 total | 4 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 5 RollingUpdateStrategy: 1 max unavailable, 1 max surge ...... OldReplicaSets: nginx-deploy-85ff79dd56 (2/2 replicas created) NewReplicaSet: nginx-deploy-5b7b9ccb95 (2/2 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 26m deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 4 Normal ScalingReplicaSet 3m44s deployment-controller Scaled down replica set nginx-deploy-85ff79dd56 to 3 Normal ScalingReplicaSet 3m44s deployment-controller Scaled up replica set nginx-deploy-5b7b9ccb95 to 1 Normal ScalingReplicaSet 3m44s deployment-controller Scaled down replica set nginx-deploy-85ff79dd56 to 2 Normal ScalingReplicaSet 3m44s deployment-controller Scaled up replica set nginx-deploy-5b7b9ccb95 to 2 \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf Events \u4e8b\u4ef6\u533a\u57df\u7684\u53d8\u5316\uff0c\u4e0a\u9762\u6211\u4eec\u7528 kubectl scale \u547d\u4ee4\u5c06 Pod \u526f\u672c\u8c03\u6574\u5230\u4e86 4\uff0c\u73b0\u5728\u6211\u4eec\u66f4\u65b0\u7684\u65f6\u5019\u662f\u4e0d\u662f\u58f0\u660e\u53c8\u53d8\u6210 3 \u4e86\uff0c\u6240\u4ee5 Deployment \u63a7\u5236\u5668\u9996\u5148\u662f\u5c06\u4e4b\u524d\u63a7\u5236\u7684 nginx-deploy-85ff79dd56 \u8fd9\u4e2a RS \u8d44\u6e90\u5bf9\u8c61\u8fdb\u884c\u7f29\u5bb9\u64cd\u4f5c\uff0c\u7136\u540e\u6eda\u52a8\u66f4\u65b0\u5f00\u59cb\u4e86\uff0c\u53ef\u4ee5\u53d1\u73b0 Deployment \u4e3a\u4e00\u4e2a\u65b0\u7684 nginx-deploy-5b7b9ccb95 RS \u8d44\u6e90\u5bf9\u8c61\u9996\u5148\u65b0\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u7136\u540e\u5c06\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u7f29\u5bb9\u5230 2 \u4e86\uff0c\u518d\u7136\u540e\u65b0\u7684 RS \u5bf9\u8c61\u6269\u5bb9\u5230 2\uff0c\u540e\u9762\u7531\u4e8e\u6211\u4eec\u6682\u505c\u6eda\u52a8\u5347\u7ea7\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u540e\u7eed\u7684\u4e8b\u4ef6\u4e86\uff0c\u5927\u5bb6\u6709\u770b\u660e\u767d\u8fd9\u4e2a\u8fc7\u7a0b\u5427\uff1f\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6eda\u52a8\u66f4\u65b0\u7684\u8fc7\u7a0b\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u6740\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u7136\u540e\u518d\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u6837\u6eda\u52a8\u66f4\u65b0\u4e0b\u53bb\uff0c\u76f4\u5230\u5168\u90fd\u53d8\u6210\u65b0\u7684 Pod\uff0c\u8fd9\u4e2a\u65f6\u5019\u7cfb\u7edf\u4e2d\u5e94\u8be5\u5b58\u5728 4 \u4e2a Pod\uff0c\u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u7684\u7b56\u7565maxSurge=1\uff0c\u6240\u4ee5\u5728\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u662f\u5141\u8bb8\u7684\uff0c\u800c\u4e14\u662f\u4e24\u4e2a\u65b0\u7684 Pod\uff0c\u4e24\u4e2a\u65e7\u7684 Pod\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-5b7b9ccb95-k6pkh 1 /1 Running 0 11m nginx-deploy-5b7b9ccb95-l6lmx 1 /1 Running 0 11m nginx-deploy-85ff79dd56-7r76h 1 /1 Running 0 75m nginx-deploy-85ff79dd56-txc4h 1 /1 Running 0 75m \u67e5\u770b Deployment \u7684\u72b6\u6001\u4e5f\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u7684 Pod \u72b6\u6001\uff1a \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 4 /3 2 4 75m \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl rollout resume \u6765\u6062\u590d\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\uff1a \u279c ~ kubectl rollout resume deployment/nginx-deploy deployment.apps/nginx-deploy resumed \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deploy\" successfully rolled out \u770b\u5230\u4e0a\u9762\u7684\u4fe1\u606f\u8bc1\u660e\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u4e0b\u8d44\u6e90\u72b6\u6001\uff1a \u279c ~ kubectl get pod -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-5b7b9ccb95-gmq7v 1 /1 Running 0 115s nginx-deploy-5b7b9ccb95-k6pkh 1 /1 Running 0 15m nginx-deploy-5b7b9ccb95-l6lmx 1 /1 Running 0 15m \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 3 /3 3 3 79m \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u67e5\u770b ReplicaSet \u5bf9\u8c61\uff0c\u53ef\u4ee5\u53d1\u73b0\u4f1a\u51fa\u73b0\u4e24\u4e2a\uff1a \u279c ~ kubectl get rs -l app = nginx NAME DESIRED CURRENT READY AGE nginx-deploy-5b7b9ccb95 3 3 3 18m nginx-deploy-85ff79dd56 0 0 0 81m \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u6eda\u52a8\u66f4\u65b0\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u7684 Pod \u526f\u672c\u6570\u5df2\u7ecf\u53d8\u6210 0 \u4e86\uff0c\u800c\u6eda\u52a8\u66f4\u65b0\u540e\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u53d8\u6210\u4e86 3 \u4e2a\u526f\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bfc\u51fa\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u67e5\u770b\uff1a \u279c ~ kubectl get rs nginx-deploy-85ff79dd56 -o yaml apiVersion: apps/v1 kind: ReplicaSet metadata: annotations: deployment.kubernetes.io/desired-replicas: \"3\" deployment.kubernetes.io/max-replicas: \"4\" deployment.kubernetes.io/revision: \"1\" creationTimestamp: \"2019-11-16T08:01:24Z\" generation: 5 labels: app: nginx pod-template-hash: 85ff79dd56 name: nginx-deploy-85ff79dd56 namespace: default ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: Deployment name: nginx-deploy uid: b0fc5614-ef58-496c-9111-740353bd90d4 resourceVersion: \"2140545\" selfLink: /apis/apps/v1/namespaces/default/replicasets/nginx-deploy-85ff79dd56 uid: 8eca2998-3610-4f80-9c21-5482ba579892 spec: replicas: 0 selector: matchLabels: app: nginx pod-template-hash: 85ff79dd56 template: metadata: creationTimestamp: null labels: app: nginx pod-template-hash: 85ff79dd56 spec: containers: - image: nginx imagePullPolicy: Always name: nginx ports: - containerPort: 80 protocol: TCP resources: {} terminationMessagePath: /dev/termination-log terminationMessagePolicy: File dnsPolicy: ClusterFirst restartPolicy: Always schedulerName: default-scheduler securityContext: {} terminationGracePeriodSeconds: 30 status: observedGeneration: 5 replicas: 0 \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u91cc\u9762\u7684\u63cf\u8ff0\u4fe1\u606f\u9664\u4e86\u526f\u672c\u6570\u53d8\u6210\u4e86 replicas = 0 \u4e4b\u5916\uff0c\u548c\u66f4\u65b0\u4e4b\u524d\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u5427\uff1f\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u6709\u4e86\u8fd9\u4e2a RS \u7684\u8bb0\u5f55\u5b58\u5728\uff0c\u662f\u4e0d\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u56de\u6eda\u4e86\u554a\uff1f\u800c\u4e14\u8fd8\u53ef\u4ee5\u56de\u6eda\u5230\u524d\u9762\u7684\u4efb\u610f\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u5982\u4f55\u5b9a\u4e49\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 rollout history \u6765\u83b7\u53d6\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy deployment.apps/nginx-deploy REVISION CHANGE-CAUSE 1 <none> 2 <none> \u5176\u5b9e rollout history \u4e2d\u8bb0\u5f55\u7684 revision \u662f\u548c ReplicaSets \u4e00\u4e00\u5bf9\u5e94\u3002\u5982\u679c\u6211\u4eec\u624b\u52a8\u5220\u9664\u67d0\u4e2a ReplicaSet \uff0c\u5bf9\u5e94\u7684 rollout history \u5c31\u4f1a\u88ab\u5220\u9664\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u65e0\u6cd5\u56de\u6eda\u5230\u8fd9\u4e2a revison \u4e86\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u53ef\u4ee5\u67e5\u770b\u4e00\u4e2a revison \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy --revision = 1 deployment.apps/nginx-deploy with revision #1 Pod Template: Labels: app = nginx pod-template-hash = 85ff79dd56 Containers: nginx: Image: nginx Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> \u5047\u5982\u73b0\u5728\u8981\u76f4\u63a5\u56de\u9000\u5230\u5f53\u524d\u7248\u672c\u7684\u524d\u4e00\u4e2a\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u64cd\u4f5c\uff1a \u279c ~ kubectl rollout undo deployment nginx-deploy \u5f53\u7136\u4e5f\u53ef\u4ee5\u56de\u9000\u5230\u6307\u5b9a\u7684 revision \u7248\u672c\uff1a \u279c ~ kubectl rollout undo deployment nginx-deploy --to-revision = 1 deployment \"nginx-deploy\" rolled back \u56de\u6eda\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u56de\u6eda\u72b6\u6001\uff1a \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deploy\" successfully rolled out \u8fd9\u4e2a\u65f6\u5019\u67e5\u770b\u5bf9\u5e94\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u53ef\u4ee5\u770b\u5230 Pod \u526f\u672c\u5df2\u7ecf\u56de\u5230\u4e4b\u524d\u7684 RS \u91cc\u9762\u53bb\u4e86\u3002 \u279c ~ kubectl get rs -l app = nginx NAME DESIRED CURRENT READY AGE nginx-deploy-5b7b9ccb95 0 0 0 31m nginx-deploy-85ff79dd56 3 3 3 95m \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u56de\u6eda\u7684\u64cd\u4f5c\u6eda\u52a8\u7684revision\u59cb\u7ec8\u662f\u9012\u589e\u7684\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy deployment.apps/nginx-deploy REVISION CHANGE-CAUSE 2 <none> 3 <none> \u4fdd\u7559\u65e7\u7248\u672c \u5728\u5f88\u65e9\u4e4b\u524d\u7684 Kubernetes \u7248\u672c\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4e3a\u6211\u4eec\u66b4\u9732\u4e0b\u6240\u6709\u6eda\u52a8\u5347\u7ea7\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u4e5f\u5c31\u662f ReplicaSet \u5bf9\u8c61\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\u6ca1\u5fc5\u8981\u4fdd\u7559\u6240\u6709\u7684\u7248\u672c\uff0c\u6bd5\u7adf\u4f1a\u5b58\u5728 etcd \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e spec . revisionHistoryLimit \u5c5e\u6027\u6765\u8bbe\u7f6e\u4fdd\u7559\u7684\u5386\u53f2\u8bb0\u5f55\u6570\u91cf\uff0c\u4e0d\u8fc7\u65b0\u7248\u672c\u4e2d\u8be5\u503c\u9ed8\u8ba4\u4e3a 10\uff0c\u5982\u679c\u5e0c\u671b\u591a\u4fdd\u5b58\u51e0\u4e2a\u7248\u672c\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u3002","title":"Deployment"},{"location":"Controller/Deployment/#deployment","text":"\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86 ReplicaSet \u63a7\u5236\u5668\uff0c\u4e86\u89e3\u5230\u8be5\u63a7\u5236\u5668\u662f\u7528\u6765\u7ef4\u62a4\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u6570\u91cf\u7684\uff0c\u4f46\u662f\u5f80\u5f80\u5728\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53cd\u800c\u4e0d\u4f1a\u53bb\u76f4\u63a5\u4f7f\u7528 RS\uff0c\u800c\u662f\u4f1a\u4f7f\u7528\u66f4\u4e0a\u5c42\u7684\u63a7\u5236\u5668\uff0c\u6bd4\u5982\u6211\u4eec\u4eca\u5929\u8981\u5b66\u4e60\u7684\u4e3b\u89d2 Deployment\uff0c Deployment \u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u5b9e\u73b0\u4e86 Pod \u7684\u6eda\u52a8\u66f4\u65b0 \uff0c\u6bd4\u5982\u6211\u4eec\u5e94\u7528\u66f4\u65b0\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u6211\u4eec\u7684\u5bb9\u5668\u955c\u50cf\uff0c\u7136\u540e\u4fee\u6539 Deployment \u91cc\u9762\u7684 Pod \u6a21\u677f\u955c\u50cf\uff0c\u90a3\u4e48 Deployment \u5c31\u4f1a\u7528\u6eda\u52a8\u66f4\u65b0\uff08Rolling Update\uff09\u7684\u65b9\u5f0f\u6765\u5347\u7ea7\u73b0\u5728\u7684 Pod\uff0c\u8fd9\u4e2a\u80fd\u529b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7ebf\u4e0a\u7684\u670d\u52a1\u6211\u4eec\u9700\u8981\u505a\u5230\u4e0d\u4e2d\u65ad\u670d\u52a1\uff0c\u6240\u4ee5\u6eda\u52a8\u66f4\u65b0\u5c31\u6210\u4e86\u5fc5\u987b\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u800c Deployment \u8fd9\u4e2a\u80fd\u529b\u7684\u5b9e\u73b0\uff0c\u4f9d\u8d56\u7684\u5c31\u662f\u4e0a\u8282\u8bfe\u6211\u4eec\u5b66\u4e60\u7684 ReplicaSet \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u4fd7\u7684\u7406\u89e3\u5c31\u662f\u6bcf\u4e2a Deployment \u5c31\u5bf9\u5e94\u96c6\u7fa4\u4e2d\u7684\u4e00\u6b21\u90e8\u7f72\uff0c\u8fd9\u6837\u5c31\u66f4\u597d\u7406\u89e3\u4e86\u3002","title":"Deployment \u63a7\u5236\u5668"},{"location":"Controller/Deployment/#deployment_1","text":"Deployment \u8d44\u6e90\u5bf9\u8c61\u7684\u683c\u5f0f\u548c ReplicaSet \u51e0\u4e4e\u4e00\u81f4\uff0c\u5982\u4e0b\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 Deployment \u8d44\u6e90\u7c7b\u578b\uff1a # nginx-deploy.yaml apiVersion : apps/v1 kind : Deployment metadata : name : nginx-deploy namespace : default spec : replicas : 3 # \u671f\u671b\u7684 Pod \u526f\u672c\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a1 selector : # Label Selector\uff0c\u5fc5\u987b\u5339\u914d Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e matchLabels : app : nginx template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u5c06\u7c7b\u578b\u66ff\u6362\u6210\u4e86 Deployment\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u521b\u5efa\u4e0b\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f nginx-deploy.yaml deployment.apps/nginx-deploy created \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 3 /3 3 3 58s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u67e5\u770b Pod \u72b6\u6001\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-85ff79dd56-7r76h 1 /1 Running 0 41s nginx-deploy-85ff79dd56-d5gjs 1 /1 Running 0 41s nginx-deploy-85ff79dd56-txc4h 1 /1 Running 0 41s \u5230\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u548c\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u662f\u5426\u6ca1\u6709\u4ec0\u4e48\u4e24\u6837\uff0c\u90fd\u662f\u6839\u636e spec . replicas \u6765\u7ef4\u6301\u7684\u526f\u672c\u6570\u91cf\uff0c\u6211\u4eec\u968f\u610f\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod nginx-deploy-85ff79dd56-txc4h Name: nginx-deploy-85ff79dd56-txc4h Namespace: default Priority: 0 PriorityClassName: <none> Node: node1/10.151.30.22 Start Time: Sat, 16 Nov 2019 16 :01:25 +0800 Labels: app = nginx pod-template-hash = 85ff79dd56 Annotations: podpreset.admission.kubernetes.io/podpreset-time-preset: 2062768 Status: Running IP: 10 .244.1.166 Controlled By: ReplicaSet/nginx-deploy-85ff79dd56 ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled <unknown> default-scheduler Successfully assigned default/nginx-deploy-85ff79dd56-txc4h to node1 Normal Pulling 2m kubelet, node1 Pulling image \"nginx\" Normal Pulled 117s kubelet, node1 Successfully pulled image \"nginx\" Normal Created 117s kubelet, node1 Created container nginx Normal Started 116s kubelet, node1 Started container nginx \u6211\u4eec\u4ed4\u7ec6\u67e5\u770b\u5176\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u4fe1\u606f Controlled By : ReplicaSet / nginx-deploy-85ff79dd56 \uff0c\u4ec0\u4e48\u610f\u601d\uff1f\u662f\u4e0d\u662f\u8868\u793a\u5f53\u524d\u6211\u4eec\u8fd9\u4e2a Pod \u7684\u63a7\u5236\u5668\u662f\u4e00\u4e2a ReplicaSet \u5bf9\u8c61\u554a\uff0c\u6211\u4eec\u4e0d\u662f\u521b\u5efa\u7684\u4e00\u4e2a Deployment \u5417\uff1f\u4e3a\u4ec0\u4e48 Pod \u4f1a\u88ab RS \u6240\u63a7\u5236\u5462\uff1f\u90a3\u6211\u4eec\u518d\u53bb\u770b\u4e0b\u8fd9\u4e2a\u5bf9\u5e94\u7684 RS \u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u5982\u4f55\u5462\uff1a \u279c ~ kubectl get pod nginx-deploy-69f668cd84-qvcc4 -o yaml apiVersion: v1 kind: Pod metadata: ... spec: ... preemptionPolicy: PreemptLowerPriority priority: 0 restartPolicy: Always schedulerName: default-scheduler securityContext: {} serviceAccount: default serviceAccountName: default terminationGracePeriodSeconds: 30 ... \u901a\u8fc7\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u770b\u5230\uff0c\u5b9a\u4e49\u4e863\u4e2a\u526f\u672c\u7684 Deployment \u4e0e ReplicaSet \u548c Pod \u7684\u5173\u7cfb\uff0c\u5c31\u662f\u4e00\u5c42\u4e00\u5c42\u8fdb\u884c\u63a7\u5236\u7684\u3002ReplicaSet \u4f5c\u7528\u548c\u4e4b\u524d\u4e00\u6837\u8fd8\u662f\u6765\u4fdd\u8bc1 Pod \u7684\u4e2a\u6570\u59cb\u7ec8\u4fdd\u5b58\u6307\u5b9a\u7684\u6570\u91cf\uff0c\u6240\u4ee5 Deployment \u4e2d\u7684\u5bb9\u5668 restartPolicy = Always \u662f\u552f\u4e00\u7684\u5c31\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u56e0\u4e3a\u5bb9\u5668\u5fc5\u987b\u59cb\u7ec8\u4fdd\u8bc1\u81ea\u5df1\u5904\u4e8e Running \u72b6\u6001\uff0cReplicaSet \u624d\u53ef\u4ee5\u53bb\u660e\u786e\u8c03\u6574 Pod \u7684\u4e2a\u6570\u3002\u800c Deployment \u662f\u901a\u8fc7\u7ba1\u7406 ReplicaSet \u7684\u6570\u91cf\u548c\u5c5e\u6027\u6765\u5b9e\u73b0 \u6c34\u5e73\u6269\u5c55 / \u6536\u7f29 \u4ee5\u53ca \u6eda\u52a8\u66f4\u65b0 \u4e24\u4e2a\u529f\u80fd\u7684\u3002","title":"Deployment"},{"location":"Controller/Deployment/#_1","text":"\u6c34\u5e73\u6269\u5c55 / \u6536\u7f29 \u7684\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a ReplicaSet \u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u6240\u4ee5 Deployment \u63a7\u5236\u5668\u53ea\u9700\u8981\u53bb\u4fee\u6539\u5b83\u7f29\u63a7\u5236\u7684 ReplicaSet \u7684 Pod \u526f\u672c\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u628a Pod \u7684\u526f\u672c\u8c03\u6574\u5230 4 \u4e2a\uff0c\u90a3\u4e48 Deployment \u6240\u5bf9\u5e94\u7684 ReplicaSet \u5c31\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod \u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u6c34\u5e73\u6269\u5c55\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4 kubectl scale \u547d\u4ee4\u6765\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\uff1a \u279c ~ kubectl scale deployment nginx-deploy --replicas = 4 deployment.apps/nginx-deployment scaled \u53ef\u4ee5\u770b\u5230\u671f\u671b\u7684 Pod \u6570\u91cf\u5df2\u7ecf\u53d8\u6210 4 \u4e86\uff0c\u53ea\u662f Pod \u8fd8\u6ca1\u51c6\u5907\u5b8c\u6210\uff0c\u6240\u4ee5 READY \u72b6\u6001\u6570\u91cf\u8fd8\u662f 3\uff0c\u540c\u6837\u67e5\u770b RS \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe rs nginx-deploy-85ff79dd56 Name: nginx-deploy-85ff79dd56 Namespace: default Selector: app = nginx,pod-template-hash = 85ff79dd56 ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-7r76h Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-d5gjs Normal SuccessfulCreate 40m replicaset-controller Created pod: nginx-deploy-85ff79dd56-txc4h Normal SuccessfulCreate 17s replicaset-controller Created pod: nginx-deploy-85ff79dd56-tph9g \u53ef\u4ee5\u770b\u5230 ReplicaSet \u63a7\u5236\u5668\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u540c\u6837\u7684 Deployment \u8d44\u6e90\u5bf9\u8c61\u7684\u4e8b\u4ef6\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u5b8c\u6210\u4e86\u6269\u5bb9\u7684\u64cd\u4f5c\uff1a \u279c ~ kubectl describe deploy nginx-deploy Name: nginx-deploy Namespace: default ...... OldReplicaSets: <none> NewReplicaSet: nginx-deploy-85ff79dd56 ( 4 /4 replicas created ) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 43m deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 3 Normal ScalingReplicaSet 3m16s deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 4","title":"\u6c34\u5e73\u4f38\u7f29"},{"location":"Controller/Deployment/#_2","text":"\u5982\u679c\u53ea\u662f \u6c34\u5e73\u6269\u5c55/\u6536\u7f29 \u8fd9\u4e24\u4e2a\u529f\u80fd\uff0c\u5c31\u5b8c\u5168\u6ca1\u5fc5\u8981\u8bbe\u8ba1 Deployment \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c Deployment \u6700\u7a81\u51fa\u7684\u4e00\u4e2a\u529f\u80fd\u662f\u652f\u6301\u6eda\u52a8\u66f4\u65b0 \uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u5e94\u7528\u5bb9\u5668\u66f4\u6539\u4e3a nginx:1.7.9 \u7248\u672c\uff0c\u4fee\u6539\u540e\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx-deploy namespace : default spec : replicas : 3 selector : matchLabels : app : nginx minReadySeconds : 5 strategy : type : RollingUpdate # \u6307\u5b9a\u66f4\u65b0\u7b56\u7565\uff1aRollingUpdate\u548cRecreate rollingUpdate : maxSurge : 1 maxUnavailable : 1 template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 \u548c\u524d\u9762\u76f8\u6bd4\u8f83\uff0c\u9664\u4e86\u66f4\u6539\u4e86\u955c\u50cf\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6307\u5b9a\u4e86\u66f4\u65b0\u7b56\u7565\uff1a minReadySeconds : 5 strategy : type : RollingUpdate rollingUpdate : maxSurge : 1 maxUnavailable : 1 minReadySeconds \uff1a\u8868\u793a Kubernetes \u5728\u7b49\u5f85\u8bbe\u7f6e\u7684\u65f6\u95f4\u540e\u624d\u8fdb\u884c\u5347\u7ea7\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8be5\u503c\uff0cKubernetes \u4f1a\u5047\u8bbe\u8be5\u5bb9\u5668\u542f\u52a8\u8d77\u6765\u540e\u5c31\u63d0\u4f9b\u670d\u52a1\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8be5\u503c\uff0c\u5728\u67d0\u4e9b\u6781\u7aef\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u9020\u6210\u670d\u52a1\u4e0d\u6b63\u5e38\u8fd0\u884c\uff0c\u9ed8\u8ba4\u503c\u5c31\u662f0\u3002 type=RollingUpdate \uff1a\u8868\u793a\u8bbe\u7f6e\u66f4\u65b0\u7b56\u7565\u4e3a\u6eda\u52a8\u66f4\u65b0\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Recreate \u548c RollingUpdate \u4e24\u4e2a\u503c\uff0cRecreate\u8868\u793a\u5168\u90e8\u91cd\u65b0\u521b\u5efa\uff0c\u9ed8\u8ba4\u503c\u5c31\u662f RollingUpdate \u3002 maxSurge \uff1a\u8868\u793a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u53ef\u4ee5\u6bd4\u539f\u5148\u8bbe\u7f6e\u591a\u51fa\u7684 Pod \u6570\u91cf\uff0c\u4f8b\u5982\uff1a maxSurage=1\uff0creplicas=5 \uff0c\u5c31\u8868\u793aKubernetes \u4f1a\u5148\u542f\u52a8\u4e00\u4e2a\u65b0\u7684Pod\uff0c\u7136\u540e\u624d\u5220\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u6574\u4e2a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u4f1a\u6709 5+1 \u4e2a Pod\u3002 maxUnavaible \uff1a\u8868\u793a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a Pod \u5904\u4e8e\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5f53 maxSurge \u4e0d\u4e3a0\u65f6\uff0c\u8be5\u503c\u4e5f\u4e0d\u80fd\u4e3a0\uff0c\u4f8b\u5982\uff1a maxUnavaible=1 \uff0c\u5219\u8868\u793a Kubernetes \u6574\u4e2a\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u6700\u591a\u4f1a\u67091\u4e2a Pod \u5904\u4e8e\u65e0\u6cd5\u670d\u52a1\u7684\u72b6\u6001\u3002 \u73b0\u5728\u6211\u4eec\u6765\u76f4\u63a5\u66f4\u65b0\u4e0a\u9762\u7684 Deployment \u8d44\u6e90\u5bf9\u8c61\uff1a kubectl apply -f nginx-deploy.yaml record \u53c2\u6570 \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684 --record \u53c2\u6570\u6765\u8bb0\u5f55\u4e0b\u6211\u4eec\u7684\u6bcf\u6b21\u64cd\u4f5c\u6240\u6267\u884c\u7684\u547d\u4ee4\uff0c\u4ee5\u65b9\u4fbf\u540e\u9762\u67e5\u770b\u3002 \u66f4\u65b0\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4e0b\u9762\u7684 kubectl rollout status \u547d\u4ee4\u6765\u67e5\u770b\u6211\u4eec\u6b64\u6b21\u6eda\u52a8\u66f4\u65b0\u7684\u72b6\u6001\uff1a \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 2 out of 3 new replicas have been updated... \u4ece\u4e0a\u9762\u7684\u4fe1\u606f\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5df2\u7ecf\u6709\u4e24\u4e2a Pod \u5df2\u7ecf\u66f4\u65b0\u5b8c\u6210\u4e86\uff0c\u5728\u6eda\u52a8\u66f4\u65b0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u6682\u505c\u66f4\u65b0\uff1a \u279c ~ kubectl rollout pause deployment/nginx-deploy deployment.apps/nginx-deploy paused \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5c31\u6682\u505c\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b Deployment \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe deploy nginx-deploy Name: nginx-deploy Namespace: default CreationTimestamp: Sat, 16 Nov 2019 16 :01:24 +0800 Labels: <none> Annotations: deployment.kubernetes.io/revision: 2 kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"Deployment\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-deploy\" , \"namespace\" : \"default\" } , \"spec\" : { \"minReadySec... Selector: app=nginx Replicas: 3 desired | 2 updated | 4 total | 4 available | 0 unavailable StrategyType: RollingUpdate MinReadySeconds: 5 RollingUpdateStrategy: 1 max unavailable, 1 max surge ...... OldReplicaSets: nginx-deploy-85ff79dd56 (2/2 replicas created) NewReplicaSet: nginx-deploy-5b7b9ccb95 (2/2 replicas created) Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 26m deployment-controller Scaled up replica set nginx-deploy-85ff79dd56 to 4 Normal ScalingReplicaSet 3m44s deployment-controller Scaled down replica set nginx-deploy-85ff79dd56 to 3 Normal ScalingReplicaSet 3m44s deployment-controller Scaled up replica set nginx-deploy-5b7b9ccb95 to 1 Normal ScalingReplicaSet 3m44s deployment-controller Scaled down replica set nginx-deploy-85ff79dd56 to 2 Normal ScalingReplicaSet 3m44s deployment-controller Scaled up replica set nginx-deploy-5b7b9ccb95 to 2 \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf Events \u4e8b\u4ef6\u533a\u57df\u7684\u53d8\u5316\uff0c\u4e0a\u9762\u6211\u4eec\u7528 kubectl scale \u547d\u4ee4\u5c06 Pod \u526f\u672c\u8c03\u6574\u5230\u4e86 4\uff0c\u73b0\u5728\u6211\u4eec\u66f4\u65b0\u7684\u65f6\u5019\u662f\u4e0d\u662f\u58f0\u660e\u53c8\u53d8\u6210 3 \u4e86\uff0c\u6240\u4ee5 Deployment \u63a7\u5236\u5668\u9996\u5148\u662f\u5c06\u4e4b\u524d\u63a7\u5236\u7684 nginx-deploy-85ff79dd56 \u8fd9\u4e2a RS \u8d44\u6e90\u5bf9\u8c61\u8fdb\u884c\u7f29\u5bb9\u64cd\u4f5c\uff0c\u7136\u540e\u6eda\u52a8\u66f4\u65b0\u5f00\u59cb\u4e86\uff0c\u53ef\u4ee5\u53d1\u73b0 Deployment \u4e3a\u4e00\u4e2a\u65b0\u7684 nginx-deploy-5b7b9ccb95 RS \u8d44\u6e90\u5bf9\u8c61\u9996\u5148\u65b0\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u7136\u540e\u5c06\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u7f29\u5bb9\u5230 2 \u4e86\uff0c\u518d\u7136\u540e\u65b0\u7684 RS \u5bf9\u8c61\u6269\u5bb9\u5230 2\uff0c\u540e\u9762\u7531\u4e8e\u6211\u4eec\u6682\u505c\u6eda\u52a8\u5347\u7ea7\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u540e\u7eed\u7684\u4e8b\u4ef6\u4e86\uff0c\u5927\u5bb6\u6709\u770b\u660e\u767d\u8fd9\u4e2a\u8fc7\u7a0b\u5427\uff1f\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6eda\u52a8\u66f4\u65b0\u7684\u8fc7\u7a0b\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u6740\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u7136\u540e\u518d\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u6837\u6eda\u52a8\u66f4\u65b0\u4e0b\u53bb\uff0c\u76f4\u5230\u5168\u90fd\u53d8\u6210\u65b0\u7684 Pod\uff0c\u8fd9\u4e2a\u65f6\u5019\u7cfb\u7edf\u4e2d\u5e94\u8be5\u5b58\u5728 4 \u4e2a Pod\uff0c\u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u7684\u7b56\u7565maxSurge=1\uff0c\u6240\u4ee5\u5728\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u662f\u5141\u8bb8\u7684\uff0c\u800c\u4e14\u662f\u4e24\u4e2a\u65b0\u7684 Pod\uff0c\u4e24\u4e2a\u65e7\u7684 Pod\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-5b7b9ccb95-k6pkh 1 /1 Running 0 11m nginx-deploy-5b7b9ccb95-l6lmx 1 /1 Running 0 11m nginx-deploy-85ff79dd56-7r76h 1 /1 Running 0 75m nginx-deploy-85ff79dd56-txc4h 1 /1 Running 0 75m \u67e5\u770b Deployment \u7684\u72b6\u6001\u4e5f\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u7684 Pod \u72b6\u6001\uff1a \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 4 /3 2 4 75m \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl rollout resume \u6765\u6062\u590d\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\uff1a \u279c ~ kubectl rollout resume deployment/nginx-deploy deployment.apps/nginx-deploy resumed \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deploy\" successfully rolled out \u770b\u5230\u4e0a\u9762\u7684\u4fe1\u606f\u8bc1\u660e\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u4e0b\u8d44\u6e90\u72b6\u6001\uff1a \u279c ~ kubectl get pod -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-5b7b9ccb95-gmq7v 1 /1 Running 0 115s nginx-deploy-5b7b9ccb95-k6pkh 1 /1 Running 0 15m nginx-deploy-5b7b9ccb95-l6lmx 1 /1 Running 0 15m \u279c ~ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 3 /3 3 3 79m \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u67e5\u770b ReplicaSet \u5bf9\u8c61\uff0c\u53ef\u4ee5\u53d1\u73b0\u4f1a\u51fa\u73b0\u4e24\u4e2a\uff1a \u279c ~ kubectl get rs -l app = nginx NAME DESIRED CURRENT READY AGE nginx-deploy-5b7b9ccb95 3 3 3 18m nginx-deploy-85ff79dd56 0 0 0 81m \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u6eda\u52a8\u66f4\u65b0\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u7684 Pod \u526f\u672c\u6570\u5df2\u7ecf\u53d8\u6210 0 \u4e86\uff0c\u800c\u6eda\u52a8\u66f4\u65b0\u540e\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u53d8\u6210\u4e86 3 \u4e2a\u526f\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bfc\u51fa\u4e4b\u524d\u7684 RS \u5bf9\u8c61\u67e5\u770b\uff1a \u279c ~ kubectl get rs nginx-deploy-85ff79dd56 -o yaml apiVersion: apps/v1 kind: ReplicaSet metadata: annotations: deployment.kubernetes.io/desired-replicas: \"3\" deployment.kubernetes.io/max-replicas: \"4\" deployment.kubernetes.io/revision: \"1\" creationTimestamp: \"2019-11-16T08:01:24Z\" generation: 5 labels: app: nginx pod-template-hash: 85ff79dd56 name: nginx-deploy-85ff79dd56 namespace: default ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: Deployment name: nginx-deploy uid: b0fc5614-ef58-496c-9111-740353bd90d4 resourceVersion: \"2140545\" selfLink: /apis/apps/v1/namespaces/default/replicasets/nginx-deploy-85ff79dd56 uid: 8eca2998-3610-4f80-9c21-5482ba579892 spec: replicas: 0 selector: matchLabels: app: nginx pod-template-hash: 85ff79dd56 template: metadata: creationTimestamp: null labels: app: nginx pod-template-hash: 85ff79dd56 spec: containers: - image: nginx imagePullPolicy: Always name: nginx ports: - containerPort: 80 protocol: TCP resources: {} terminationMessagePath: /dev/termination-log terminationMessagePolicy: File dnsPolicy: ClusterFirst restartPolicy: Always schedulerName: default-scheduler securityContext: {} terminationGracePeriodSeconds: 30 status: observedGeneration: 5 replicas: 0 \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u91cc\u9762\u7684\u63cf\u8ff0\u4fe1\u606f\u9664\u4e86\u526f\u672c\u6570\u53d8\u6210\u4e86 replicas = 0 \u4e4b\u5916\uff0c\u548c\u66f4\u65b0\u4e4b\u524d\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u5427\uff1f\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u6709\u4e86\u8fd9\u4e2a RS \u7684\u8bb0\u5f55\u5b58\u5728\uff0c\u662f\u4e0d\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u56de\u6eda\u4e86\u554a\uff1f\u800c\u4e14\u8fd8\u53ef\u4ee5\u56de\u6eda\u5230\u524d\u9762\u7684\u4efb\u610f\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u5982\u4f55\u5b9a\u4e49\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 rollout history \u6765\u83b7\u53d6\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy deployment.apps/nginx-deploy REVISION CHANGE-CAUSE 1 <none> 2 <none> \u5176\u5b9e rollout history \u4e2d\u8bb0\u5f55\u7684 revision \u662f\u548c ReplicaSets \u4e00\u4e00\u5bf9\u5e94\u3002\u5982\u679c\u6211\u4eec\u624b\u52a8\u5220\u9664\u67d0\u4e2a ReplicaSet \uff0c\u5bf9\u5e94\u7684 rollout history \u5c31\u4f1a\u88ab\u5220\u9664\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u65e0\u6cd5\u56de\u6eda\u5230\u8fd9\u4e2a revison \u4e86\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u53ef\u4ee5\u67e5\u770b\u4e00\u4e2a revison \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy --revision = 1 deployment.apps/nginx-deploy with revision #1 Pod Template: Labels: app = nginx pod-template-hash = 85ff79dd56 Containers: nginx: Image: nginx Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> \u5047\u5982\u73b0\u5728\u8981\u76f4\u63a5\u56de\u9000\u5230\u5f53\u524d\u7248\u672c\u7684\u524d\u4e00\u4e2a\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u64cd\u4f5c\uff1a \u279c ~ kubectl rollout undo deployment nginx-deploy \u5f53\u7136\u4e5f\u53ef\u4ee5\u56de\u9000\u5230\u6307\u5b9a\u7684 revision \u7248\u672c\uff1a \u279c ~ kubectl rollout undo deployment nginx-deploy --to-revision = 1 deployment \"nginx-deploy\" rolled back \u56de\u6eda\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u56de\u6eda\u72b6\u6001\uff1a \u279c ~ kubectl rollout status deployment/nginx-deploy Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 1 old replicas are pending termination... Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... Waiting for deployment \"nginx-deploy\" rollout to finish: 2 of 3 updated replicas are available... deployment \"nginx-deploy\" successfully rolled out \u8fd9\u4e2a\u65f6\u5019\u67e5\u770b\u5bf9\u5e94\u7684 RS \u8d44\u6e90\u5bf9\u8c61\u53ef\u4ee5\u770b\u5230 Pod \u526f\u672c\u5df2\u7ecf\u56de\u5230\u4e4b\u524d\u7684 RS \u91cc\u9762\u53bb\u4e86\u3002 \u279c ~ kubectl get rs -l app = nginx NAME DESIRED CURRENT READY AGE nginx-deploy-5b7b9ccb95 0 0 0 31m nginx-deploy-85ff79dd56 3 3 3 95m \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u56de\u6eda\u7684\u64cd\u4f5c\u6eda\u52a8\u7684revision\u59cb\u7ec8\u662f\u9012\u589e\u7684\uff1a \u279c ~ kubectl rollout history deployment nginx-deploy deployment.apps/nginx-deploy REVISION CHANGE-CAUSE 2 <none> 3 <none> \u4fdd\u7559\u65e7\u7248\u672c \u5728\u5f88\u65e9\u4e4b\u524d\u7684 Kubernetes \u7248\u672c\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4e3a\u6211\u4eec\u66b4\u9732\u4e0b\u6240\u6709\u6eda\u52a8\u5347\u7ea7\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u4e5f\u5c31\u662f ReplicaSet \u5bf9\u8c61\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\u6ca1\u5fc5\u8981\u4fdd\u7559\u6240\u6709\u7684\u7248\u672c\uff0c\u6bd5\u7adf\u4f1a\u5b58\u5728 etcd \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e spec . revisionHistoryLimit \u5c5e\u6027\u6765\u8bbe\u7f6e\u4fdd\u7559\u7684\u5386\u53f2\u8bb0\u5f55\u6570\u91cf\uff0c\u4e0d\u8fc7\u65b0\u7248\u672c\u4e2d\u8be5\u503c\u9ed8\u8ba4\u4e3a 10\uff0c\u5982\u679c\u5e0c\u671b\u591a\u4fdd\u5b58\u51e0\u4e2a\u7248\u672c\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u3002","title":"\u6eda\u52a8\u66f4\u65b0"},{"location":"Controller/HPA/","text":"HPA \u00b6 \u5728\u524d\u9762\u7684\u5b66\u4e60\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a kubectl scale \u547d\u4ee4\u53ef\u4ee5\u6765\u5b9e\u73b0 Pod \u7684\u6269\u7f29\u5bb9\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u662f\u5b8c\u5168\u624b\u52a8\u64cd\u4f5c\u7684\uff0c\u8981\u5e94\u5bf9\u7ebf\u4e0a\u7684\u5404\u79cd\u590d\u6742\u60c5\u51b5\uff0c \u6211\u4eec\u9700\u8981\u80fd\u591f\u505a\u5230\u81ea\u52a8\u5316\u53bb\u611f\u77e5\u4e1a\u52a1 \uff0c \u6765\u81ea\u52a8\u8fdb\u884c\u6269\u7f29\u5bb9 \u3002\u4e3a\u6b64\uff0cKubernetes \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a \u8d44\u6e90\u5bf9\u8c61 \uff1a Horizontal Pod Autoscaling \uff08 Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29 \uff09\uff0c \u7b80\u79f0 HPA \uff0c HPA \u901a\u8fc7\u76d1\u63a7\u5206\u6790\u4e00\u4e9b\u63a7\u5236\u5668\uff0c\u5176\u63a7\u5236\u7684\u6240\u6709 Pod \u7684\u8d1f\u8f7d\u53d8\u5316\u60c5\u51b5\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u8c03\u6574 Pod \u7684\u526f\u672c\u6570\u91cf\uff0c\u8fd9\u662f HPA \u6700\u57fa\u672c\u7684\u539f\u7406\uff1a \u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c HPA Controller \u9ed8\u8ba4 30s \u8f6e\u8be2\u4e00\u6b21\uff08\u53ef\u901a\u8fc7 kube-controller-manager \u7684 --horizontal-pod-autoscaler-sync-period \u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff09\uff0c\u67e5\u8be2\u6307\u5b9a\u7684\u8d44\u6e90\u4e2d\u7684 Pod \u8d44\u6e90\u4f7f\u7528\u7387\uff0c\u5e76\u4e14\u4e0e\u521b\u5efa\u65f6\u8bbe\u5b9a\u7684\u503c\u548c\u6307\u6807\u505a\u5bf9\u6bd4\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u52a8\u4f38\u7f29\u7684\u529f\u80fd\u3002 Metrics Server \u00b6 \u5728 HPA \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Heapster \u63d0\u4f9b CPU \u548c\u5185\u5b58\u6307\u6807\uff0c\u5728 HPA v2 \u8fc7\u540e\u5c31\u9700\u8981\u5b89\u88c5 Metrcis Server \u4e86\uff0c Metrics Server \u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u628a\u76d1\u63a7\u6570\u636e\u66b4\u9732\u51fa\u6765\uff0c\u6709\u4e86 Metrics Server \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u6765\u8bbf\u95ee\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u7684\u76d1\u63a7\u6570\u636e\u4e86\uff1a https://10.96.0.1/apis/metrics.k8s.io/v1beta1/namespaces/<namespace-name>/pods/<pod-name> \u6bd4\u5982\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u7684 API \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u8be5 Pod \u7684\u8d44\u6e90\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5176\u5b9e\u662f\u6765\u81ea\u4e8e kubelet \u7684 Summary API \u91c7\u96c6\u800c\u6765\u7684\u3002\u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 API \u6765\u83b7\u53d6\u8d44\u6e90\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a Metrics Server \u5c31\u662f APIServer \u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f \u901a\u8fc7 Kubernetes \u63d0\u4f9b\u7684 Aggregator \u6c47\u805a\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\uff0c\u662f\u72ec\u7acb\u4e8e APIServer \u4e4b\u5916\u8fd0\u884c\u7684 \u3002 \u805a\u5408 API \u00b6 Aggregator \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230 Kubernetes \u7684 APIServer \u91cc\u9762\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u539f\u751f\u7684 APIServer \u63d0\u4f9b\u7684 API \u4f7f\u7528\u81ea\u5df1\u7684 API \u4e86\uff0c\u6211\u4eec\u628a\u81ea\u5df1\u7684\u670d\u52a1\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u91cc\u9762\uff0c\u7136\u540e Kubernetes \u7684 Aggregator \u901a\u8fc7 Service \u540d\u79f0\u5c31\u53ef\u4ee5\u8f6c\u53d1\u5230\u6211\u4eec\u81ea\u5df1\u5199\u7684 Service \u91cc\u9762\u53bb\u4e86 \u3002\u8fd9\u6837\u8fd9\u4e2a\u805a\u5408\u5c42\u5c31\u5e26\u6765\u4e86\u5f88\u591a\u597d\u5904\uff1a \u589e\u52a0\u4e86 API \u7684\u6269\u5c55\u6027 \uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684 API \u670d\u52a1\u6765\u66b4\u9732\u4ed6\u4eec\u60f3\u8981\u7684 API\u3002 \u4e30\u5bcc\u4e86 API \uff0c\u6838\u5fc3 kubernetes \u56e2\u961f\u963b\u6b62\u4e86\u5f88\u591a\u65b0\u7684 API \u63d0\u6848\uff0c\u901a\u8fc7\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5c06\u4ed6\u4eec\u7684 API \u4f5c\u4e3a\u5355\u72ec\u7684\u670d\u52a1\u516c\u5f00\uff0c\u8fd9\u6837\u5c31\u65e0\u987b\u793e\u533a\u7e41\u6742\u7684\u5ba1\u67e5\u4e86\u3002 \u5f00\u53d1\u5206\u9636\u6bb5\u5b9e\u9a8c\u6027 API \uff0c\u65b0\u7684 API \u53ef\u4ee5\u5728\u5355\u72ec\u7684\u805a\u5408\u670d\u52a1\u4e2d\u5f00\u53d1\uff0c\u5f53\u5b83\u7a33\u5b9a\u4e4b\u540e\uff0c\u5728\u5408\u5e76\u56de APIServer \u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u786e\u4fdd\u65b0 API \u9075\u5faa Kubernetes \u7ea6\u5b9a \uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u91cc\u63d0\u51fa\u7684\u673a\u5236\uff0c\u793e\u533a\u6210\u5458\u53ef\u80fd\u4f1a\u88ab\u8feb\u63a8\u51fa\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u9020\u6210\u793e\u533a\u6210\u5458\u548c\u793e\u533a\u7ea6\u5b9a\u4e0d\u4e00\u81f4\u3002 \u5b89\u88c5 \u00b6 \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4f7f\u7528 HPA\uff0c\u5c31\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u5b89\u88c5 Metrics Server \u670d\u52a1\uff0c\u8981\u5b89\u88c5 Metrics Server \u5c31\u9700\u8981\u5f00\u542f Aggregator \uff0c\u56e0\u4e3a Metrics Server \u5c31\u662f\u901a\u8fc7\u8be5\u4ee3\u7406\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u96c6\u7fa4\u662f\u901a\u8fc7 Kubeadm \u642d\u5efa\u7684\uff0c\u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\uff0c\u5982\u679c\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b89\u88c5\u7684\u96c6\u7fa4\uff0c\u9700\u8981\u5355\u72ec\u914d\u7f6e kube-apsierver \u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u53c2\u6570\uff1a --requestheader-client-ca-file=<path to aggregator CA cert> --requestheader-allowed-names=aggregator --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --proxy-client-cert-file=<path to aggregator proxy cert> --proxy-client-key-file=<path to aggregator proxy key> \u5982\u679c kube-proxy \u6ca1\u6709\u548c APIServer \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u90a3\u4e48\u9700\u8981\u786e\u4fdd\u542f\u7528\u4e86\u5982\u4e0b kube-apsierver \u7684\u53c2\u6570\uff1a --enable-aggregator-routing=true \u5bf9\u4e8e\u8fd9\u4e9b\u8bc1\u4e66\u7684\u751f\u6210\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://github.com/kubernetes-sigs/apiserver-builder-alpha/blob/master/docs/concepts/auth.md \u3002 Aggregator \u805a\u5408\u5c42\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Metrics Server \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u8be5\u4ed3\u5e93\u7684\u5b98\u65b9\u5b89\u88c5\u8d44\u6e90\u6e05\u5355\uff1a # \u5b98\u65b9\u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/kubernetes-sigs/metrics-server \u279c ~ wget https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.5.1/components.yaml \u5728\u90e8\u7f72\u4e4b\u524d\uff0c\u4fee\u6539 components.yaml \u7684\u955c\u50cf\u5730\u5740\u4e3a\uff1a hostNetwork : true # \u4f7f\u7528hostNetwork\u6a21\u5f0f containers : - name : metrics-server image : cnych/metrics-server:v0.5.1 \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a \u279c ~ kubectl apply -f components.yaml \u279c ~ kubectl get pods -n kube-system -l k8s-app = metrics-server NAME READY STATUS RESTARTS AGE metrics-server-6f667d74b6-6c9ps 0 /1 Running 0 7m52s # manifests \u279c ~ kubectl logs -f metrics-server-6f667d74b6-6c9ps -n kube-system I1115 10 :06:02.381541 1 serving.go:341 ] Generated self-signed cert ( /tmp/apiserver.crt, /tmp/apiserver.key ) E1115 10 :06:02.735837 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.31:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.31 because it doesn't contain any IP SANs\" node = \"master1\" E1115 10 :06:02.744967 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.108:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\" node = \"node1\" I1115 10 :06:02.751391 1 requestheader_controller.go:169 ] Starting RequestHeaderAuthRequestController I1115 10 :06:02.751410 1 shared_informer.go:240 ] Waiting for caches to sync for RequestHeaderAuthRequestController I1115 10 :06:02.751413 1 configmap_cafile_content.go:202 ] Starting client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.751397 1 configmap_cafile_content.go:202 ] Starting client-ca::kube-system::extension-apiserver-authentication::client-ca-file I1115 10 :06:02.751423 1 shared_informer.go:240 ] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.751424 1 shared_informer.go:240 ] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file I1115 10 :06:02.751473 1 dynamic_serving_content.go:130 ] Starting serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key I1115 10 :06:02.751822 1 secure_serving.go:202 ] Serving securely on [ :: ] :443 I1115 10 :06:02.751896 1 tlsconfig.go:240 ] Starting DynamicServingCertificateController E1115 10 :06:02.756987 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.46:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.46 because it doesn't contain any IP SANs\" node = \"node2\" I1115 10 :06:02.851642 1 shared_informer.go:247 ] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.851739 1 shared_informer.go:247 ] Caches are synced for RequestHeaderAuthRequestController I1115 10 :06:02.851748 1 shared_informer.go:247 ] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file E1115 10 :06:17.742350 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.108:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\" node = \"node1\" ...... \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0cCA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc Metrics Server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u5f97\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP \uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\uff09 \uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c\uff1a args : - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d\u91cd\u65b0\u5b89\u88c5\u5373\u53ef\u6210\u529f\uff01\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u9a8c\u8bc1\uff1a \u279c ~ kubectl apply -f components.yaml \u279c ~ kubectl get pods -n kube-system -l k8s-app = metrics-server NAME READY STATUS RESTARTS AGE metrics-server-85499dc4f5-mgpcb 1 /1 Running 0 32s \u279c ~ kubectl logs -f metrics-server-85499dc4f5-mgpcb -n kube-system I1115 10 :14:19.401808 1 serving.go:341 ] Generated self-signed cert ( /tmp/apiserver.crt, /tmp/apiserver.key ) I1115 10 :14:19.840290 1 secure_serving.go:202 ] Serving securely on [ :: ] :443 I1115 10 :14:19.840395 1 requestheader_controller.go:169 ] Starting RequestHeaderAuthRequestController I1115 10 :14:19.840403 1 shared_informer.go:240 ] Waiting for caches to sync for RequestHeaderAuthRequestController I1115 10 :14:19.840411 1 dynamic_serving_content.go:130 ] Starting serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key I1115 10 :14:19.840438 1 tlsconfig.go:240 ] Starting DynamicServingCertificateController ...... \u279c ~ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io kube-system/metrics-server True 10m \u279c ~ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" { \"kind\" : \"NodeMetricsList\" , \"apiVersion\" : \"metrics.k8s.io/v1beta1\" , \"metadata\" : {} , \"items\" : [{ \"metadata\" : { \"name\" : \"master1\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"master1\" , \"kubernetes.io/os\" : \"linux\" , \"node-role.kubernetes.io/control-plane\" : \"\" , \"node-role.kubernetes.io/master\" : \"\" , \"node.kubernetes.io/exclude-from-external-load-balancers\" : \"\" }} , \"timestamp\" : \"2021-11-15T10:15:33Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"132348072n\" , \"memory\" : \"813200Ki\" }} , { \"metadata\" : { \"name\" : \"node1\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"node1\" , \"kubernetes.io/os\" : \"linux\" }} , \"timestamp\" : \"2021-11-15T10:15:32Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"60153492n\" , \"memory\" : \"520628Ki\" }} , { \"metadata\" : { \"name\" : \"node2\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"node2\" , \"kubernetes.io/os\" : \"linux\" }} , \"timestamp\" : \"2021-11-15T10:15:29Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"81697469n\" , \"memory\" : \"557208Ki\" }}]} \u279c ~ kubectl top nodes NAME CPU ( cores ) CPU% MEMORY ( bytes ) MEMORY% master1 115m 5 % 794Mi 21 % node1 58m 1 % 505Mi 6 % node2 55m 1 % 545Mi 7 % \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl top \u547d\u4ee4\u6765\u83b7\u53d6\u5230\u8d44\u6e90\u6570\u636e\u4e86\uff0c\u8bc1\u660e Metrics Server \u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u3002 HPA \u00b6 \u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # hpa-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa Deployment\uff0c\u6ce8\u610f\u4e00\u5b9a\u5148\u628a\u4e4b\u524d\u521b\u5efa\u7684\u5177\u6709 app=nginx \u7684 Pod \u5148\u6e05\u9664\u6389\uff1a \u279c ~ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo created \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-demo-7848d4b86f-khndb 1 /1 Running 0 56s \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\uff1a \u279c ~ kubectl autoscale deployment hpa-demo --cpu-percent = 10 --min = 1 --max = 10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo <unknown>/10% 1 10 0 6s \u6b64\u547d\u4ee4\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u8054\u8d44\u6e90 hpa-demo \u7684 HPA\uff0c\u6700\u5c0f\u7684 Pod \u526f\u672c\u6570\u4e3a1\uff0c\u6700\u5927\u4e3a10\u3002HPA \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 cpu \u4f7f\u7528\u7387\uff0810%\uff09\u52a8\u6001\u7684\u589e\u52a0\u6216\u8005\u51cf\u5c11 Pod \u6570\u91cf\u3002 \u5f53\u7136\u6211\u4eec\u4f9d\u7136\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa HPA \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u7f16\u5199\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u547d\u4ee4\u884c\u521b\u5efaHPA\u65f6\u7684YAML\u6587\u4ef6\uff1a \u279c ~ kubectl get hpa hpa-demo -o yaml apiVersion : autoscaling/v1 kind : HorizontalPodAutoscaler metadata : annotations : autoscaling.alpha.kubernetes.io/conditions : '[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2021-11-15T10:19:06Z\",\"reason\":\"SucceededGetScale\",\"message\":\"the HPA controller was able to get the target '' s current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2021-11-15T10:19:06Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the HPA was unable to compute the replica count: failed to get cpu utilization: missing request for cpu\"}]' creationTimestamp : \"2021-11-15T10:18:51Z\" managedFields : - apiVersion : autoscaling/v1 fieldsType : FieldsV1 fieldsV1 : f:spec : f:maxReplicas : {} f:minReplicas : {} f:scaleTargetRef : {} f:targetCPUUtilizationPercentage : {} manager : kubectl operation : Update time : \"2021-11-15T10:18:51Z\" - apiVersion : autoscaling/v1 fieldsType : FieldsV1 fieldsV1 : f:metadata : f:annotations : . : {} f:autoscaling.alpha.kubernetes.io/conditions : {} f:status : f:currentReplicas : {} manager : kube-controller-manager operation : Update subresource : status time : \"2021-11-15T10:19:06Z\" name : hpa-demo namespace : default resourceVersion : \"631809\" uid : 34b91709-d003-4039-9cf0-05bb3fa4da73 spec : maxReplicas : 10 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-demo targetCPUUtilizationPercentage : 10 status : currentReplicas : 1 desiredReplicas : 0 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u5c31\u53ef\u4ee5\u81ea\u5df1\u6765\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e YAML \u7684 HPA \u63cf\u8ff0\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b Fail \u4fe1\u606f\uff0c\u6211\u4eec\u6765\u67e5\u770b\u4e0b\u8fd9\u4e2a HPA \u5bf9\u8c61\u7684\u4fe1\u606f\uff1a \u279c ~ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Mon, 15 Nov 2021 18 :18:51 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods ( as a percentage of request ) : <unknown> / 10 % Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 0 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededGetScale the HPA controller was able to get the target ' s current scale ScalingActive False FailedGetResourceMetric the HPA was unable to compute the replica count: failed to get cpu utilization: missing request for cpu Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedGetResourceMetric 1s ( x3 over 31s ) horizontal-pod-autoscaler failed to get cpu utilization: missing request for cpu Warning FailedComputeMetricsReplicas 1s ( x3 over 31s ) horizontal-pod-autoscaler invalid metrics ( 1 invalid out of 1 ) , first error is: failed to get cpu utilization: missing request for cpu \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4e8b\u4ef6\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86 failed to get cpu utilization : missing request for cpu \u8fd9\u6837\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Pod \u5bf9\u8c61\u6ca1\u6709\u6dfb\u52a0 request \u8d44\u6e90\u58f0\u660e\uff0c\u8fd9\u6837\u5bfc\u81f4 HPA \u8bfb\u53d6\u4e0d\u5230 CPU \u6307\u6807\u4fe1\u606f\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u8ba9 HPA \u751f\u6548\uff0c\u5bf9\u5e94\u7684 Pod \u8d44\u6e90\u5fc5\u987b\u6dfb\u52a0 requests \u8d44\u6e90\u58f0\u660e\uff0c\u66f4\u65b0\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a # hpa-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 resources : requests : memory : 50Mi cpu : 50m \u7136\u540e\u91cd\u65b0\u66f4\u65b0 Deployment\uff0c\u91cd\u65b0\u521b\u5efa HPA \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo configured \u279c ~ kubectl get pods -o wide -l app = nginx NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-6b4467b546-h489x 1 /1 Running 0 18s 10 .244.1.11 node1 <none> <none> \u279c ~ kubectl delete hpa hpa-demo horizontalpodautoscaler.autoscaling \"hpa-demo\" deleted \u279c ~ kubectl autoscale deployment hpa-demo --cpu-percent = 10 --min = 1 --max = 10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled \u279c ~ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Mon, 15 Nov 2021 18 :21:12 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods ( as a percentage of request ) : 0 % ( 0 ) / 10 % Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization ( percentage of request ) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: <none> \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0 %/10% 1 10 1 35s \u73b0\u5728\u53ef\u4ee5\u770b\u5230 HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u589e\u5927\u8d1f\u8f7d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a busybox \u7684 Pod\uff0c\u5e76\u4e14\u5faa\u73af\u8bbf\u95ee\u4e0a\u9762\u521b\u5efa\u7684 Pod\uff1a \u279c ~ kubectl run -it --image busybox test-hpa --restart = Never --rm /bin/sh If you don ' t see a command prompt, try pressing enter. / # while true; do wget -q -O- http://10.244.1.11; done \u7136\u540e\u89c2\u5bdf Pod \u5217\u8868\uff0c\u53ef\u4ee5\u770b\u5230\uff0cHPA \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\uff1a \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 310 %/10% 1 10 1 105s \u279c ~ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE hpa-demo-6b4467b546-h489x 1 /1 Running 0 2m25s hpa-demo-6b4467b546-pg4fz 0 /1 ContainerCreating 0 9s hpa-demo-6b4467b546-qrwv5 0 /1 ContainerCreating 0 9s hpa-demo-6b4467b546-s4vdz 0 /1 ContainerCreating 0 9s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u62c9\u8d77\u4e86\u5f88\u591a\u65b0\u7684 Pod\uff0c\u6700\u540e\u4f1a\u5b9a\u683c\u5728\u4e86\u6211\u4eec\u4e0a\u9762\u8bbe\u7f6e\u7684 10 \u4e2a Pod\uff0c\u540c\u65f6\u67e5\u770b\u8d44\u6e90 hpa-demo \u7684\u526f\u672c\u6570\u91cf\uff0c\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u4ece\u539f\u6765\u76841\u53d8\u6210\u4e8610\u4e2a\uff1a \u279c ~ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 10 /10 10 10 2m56s \u67e5\u770b HPA \u8d44\u6e90\u7684\u5bf9\u8c61\u4e86\u89e3\u5de5\u4f5c\u8fc7\u7a0b\uff1a \u279c ~ kubectl describe hpa hpa-demo Name : hpa-demo Namespace : default Labels : <none> Annotations : <none> CreationTimestamp : Mon, 15 Nov 2021 18:21:12 +0800 Reference : Deployment/hpa-demo Metrics : ( current / target ) resource cpu on pods (as a percentage of request) : 110% (55m) / 10% Min replicas : 1 Max replicas : 10 Deployment pods : 10 current / 10 desired Conditions : Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooManyReplicas the desired replica count is more than the maximum replica count Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 67s horizontal-pod-autoscaler New size : 4; reason : cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 52s horizontal-pod-autoscaler New size: 8; reason : cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 37s horizontal-pod-autoscaler New size: 10; reason : cpu resource utilization (percentage of request) above target \u540c\u6837\u7684\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u5173\u6389 busybox \u6765\u51cf\u5c11\u8d1f\u8f7d\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u89c2\u5bdf\u4e0b HPA \u548c Deployment \u5bf9\u8c61\uff1a \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0 %/10% 1 10 10 3m46s \u279c ~ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 1 /1 1 1 24m \u7f29\u653e\u95f4\u9699 \u4ece Kubernetes v1.12 \u7248\u672c\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e kube-controller-manager \u7ec4\u4ef6\u7684--horizontal-pod-autoscaler-downscale-stabilization \u53c2\u6570\u6765\u8bbe\u7f6e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u5f53\u524d\u64cd\u4f5c\u5b8c\u6210\u540e\uff0cHPA \u5fc5\u987b\u7b49\u5f85\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\u53e6\u4e00\u6b21\u7f29\u653e\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4e3a5\u5206\u949f\uff0c\u4e5f\u5c31\u662f \u9ed8\u8ba4\u9700\u8981\u7b49\u5f855\u5206\u949f\u540e\u624d\u4f1a\u5f00\u59cb\u81ea\u52a8\u7f29\u653e \u3002 \u53ef\u4ee5\u770b\u5230\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u7531 10 \u53d8\u4e3a 1 \uff0c\u5f53\u524d\u6211\u4eec\u53ea\u662f\u6f14\u793a\u4e86 CPU \u4f7f\u7528\u7387\u8fd9\u4e00\u4e2a\u6307\u6807\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u5b66\u4e60\u5230\u6839\u636e \u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807 ( Prometheus ) \u6765\u81ea\u52a8\u5bf9 Pod \u8fdb\u884c\u6269\u7f29\u5bb9\u3002 \u5185\u5b58 \u00b6 \u8981\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u6216\u8005\u81ea\u5b9a\u4e49\u6307\u6807\u8fdb\u884c\u6269\u7f29\u5bb9 \uff08 \u73b0\u5728\u7684\u7248\u672c\u90fd\u5fc5\u987b\u4f9d\u8d56 metrics-server \u8fd9\u4e2a\u9879\u76ee \uff09 \u3002\u73b0\u5728\u6211\u4eec\u518d\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # hpa-mem-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-mem-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : volumes : - name : increase-mem-script configMap : name : increase-mem-config containers : - name : nginx image : nginx ports : - containerPort : 80 volumeMounts : - name : increase-mem-script mountPath : /etc/script resources : requests : memory : 50Mi cpu : 50m securityContext : privileged : true \u8fd9\u91cc\u548c\u524d\u9762\u666e\u901a\u7684\u5e94\u7528\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u540d\u4e3a increase-mem-config \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u662f\u7528\u4e8e\u540e\u9762\u589e\u52a0\u5bb9\u5668\u5185\u5b58\u5360\u7528\u7684\u811a\u672c\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # increase-mem-cm.yaml apiVersion : v1 kind : ConfigMap metadata : name : increase-mem-config data : increase-mem.sh : | #!/bin/bash mkdir /tmp/memory mount -t tmpfs -o size=40M tmpfs /tmp/memory dd if=/dev/zero of=/tmp/memory/block sleep 60 rm /tmp/memory/block umount /tmp/memory rmdir /tmp/memory \u7531\u4e8e\u8fd9\u91cc\u589e\u52a0\u5185\u5b58\u7684\u811a\u672c\u9700\u8981\u4f7f\u7528\u5230 mount \u547d\u4ee4\uff0c\u8fd9\u9700\u8981\u58f0\u660e\u4e3a \u7279\u6743\u6a21\u5f0f \uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e86 securityContext . privileged = true \u8fd9\u4e2a\u914d\u7f6e\u3002\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c ~ kubectl apply -f increase-mem-cm.yaml \u279c ~ kubectl apply -f hpa-mem-demo.yaml \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-74675cc6c9-sqz2l 1 /1 Running 0 17s \u7136\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u8d44\u6e90\u5bf9\u8c61\uff1a # hpa-mem.yaml apiVersion : autoscaling/v2beta1 kind : HorizontalPodAutoscaler metadata : name : hpa-mem-demo namespace : default spec : maxReplicas : 5 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-mem-demo metrics : # \u6307\u5b9a\u5185\u5b58\u7684\u4e00\u4e2a\u914d\u7f6e - type : Resource resource : name : memory targetAverageUtilization : 30 \u8981\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u7684 apiVersion \u662f autoscaling/v2beta1 \uff0c\u7136\u540e metrics \u5c5e\u6027\u91cc\u9762\u6307\u5b9a\u7684\u662f\u5185\u5b58\u7684\u914d\u7f6e\uff0c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c ~ kubectl apply -f hpa-mem.yaml horizontalpodautoscaler.autoscaling/hpa-mem-demo created \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-mem-demo Deployment/hpa-mem-demo 6 %/30% 1 5 1 32s \u53c2\u8003\u5b98\u65b9\u76f8\u5173API\u7248\u672c\u5b9a\u4e49 \uff0c\u5728 autoscaling / v2beta2 \u4e2d\uff0c metrics \u5c5e\u6027\u5982\u4f55\u5982\u4e0b\u914d\u7f6e\uff1a #hpa-mem.yaml apiVersion : autoscaling/v2beta2 kind : HorizontalPodAutoscaler metadata : name : hpa-mem-demo namespace : default spec : maxReplicas : 5 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-mem-demo metrics : - type : Resource resource : name : memory target : type : Utilization averageUtilization : 30 \u5230\u8fd9\u91cc\u8bc1\u660e HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff0c\u5c06\u5185\u5b58\u538b\u4e0a\u53bb\uff0c\u76f4\u63a5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 increase-mem.sh \u811a\u672c\u5373\u53ef\uff1a \u279c ~ kubectl exec -it hpa-mem-demo-74675cc6c9-sqz2l -- /bin/bash root@hpa-mem-demo-74675cc6c9-sqz2l:/# ls /etc/script/ increase-mem.sh root@hpa-mem-demo-74675cc6c9-sqz2l:/# source /etc/script/increase-mem.sh dd: writing to '/tmp/memory/block' : No space left on device 81921 +0 records in 81920 +0 records out 41943040 bytes ( 42 MB, 40 MiB ) copied, 0 .0908717 s, 462 MB/s \u7136\u540e\u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5\uff1a \u279c ~ kubectl get hpa -w NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-mem-demo Deployment/hpa-mem-demo 87 %/30% 1 5 3 90s \u279c ~ kubectl describe hpa hpa-mem-demo Name: hpa-mem-demo Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"autoscaling/v2beta1\" , \"kind\" : \"HorizontalPodAutoscaler\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"hpa-mem-demo\" , \"namespace\" : \"defau... CreationTimestamp: Mon, 15 Nov 2021 18:40:37 +0800 Reference: Deployment/hpa-mem-demo Metrics: ( current / target ) resource memory on pods (as a percentage of request): 87% (45752320) / 30% Min replicas: 1 Max replicas: 5 Deployment pods: 3 current / 3 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from memory resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedGetResourceMetric 87s horizontal-pod-autoscaler failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API Warning FailedComputeMetricsReplicas 87s horizontal-pod-autoscaler invalid metrics (1 invalid out of 1), first error is: failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API Normal SuccessfulRescale 27s horizontal-pod-autoscaler New size: 3; reason: memory resource utilization (percentage of request) above target Normal SuccessfulRescale 46s horizontal-pod-autoscaler New size: 4; reason: memory resource utilization (percentage of request) above target \u279c ~ kubectl top pod hpa-mem-demo-74675cc6c9-gbj9t NAME CPU(cores) MEMORY(bytes) hpa-mem-demo-66944b79bf-tqrn9 0m 41Mi \u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4f7f\u7528\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684 30 % \u8fd9\u4e2a\u9608\u503c\u4e86\uff0cHPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u5df2\u7ecf\u89e6\u53d1\u4e86\u81ea\u52a8\u6269\u5bb9\uff0c\u53d8\u6210\u4e864\u4e2a\u526f\u672c\u4e86\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-74675cc6c9-cpdw4 1 /1 Running 0 69s hpa-mem-demo-74675cc6c9-s8bz4 1 /1 Running 0 114s hpa-mem-demo-74675cc6c9-sqz2l 1 /1 Running 0 3m9s hpa-mem-demo-74675cc6c9-z8cx8 1 /1 Running 0 114s \u5f53\u5185\u5b58\u91ca\u653e\u6389\u540e\uff0c controller-manager \u9ed8\u8ba45\u5206\u949f\u8fc7\u540e \u4f1a\u8fdb\u884c\u7f29\u653e\uff0c\u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u64cd\u4f5c\u3002","title":"HPA"},{"location":"Controller/HPA/#hpa","text":"\u5728\u524d\u9762\u7684\u5b66\u4e60\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a kubectl scale \u547d\u4ee4\u53ef\u4ee5\u6765\u5b9e\u73b0 Pod \u7684\u6269\u7f29\u5bb9\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u662f\u5b8c\u5168\u624b\u52a8\u64cd\u4f5c\u7684\uff0c\u8981\u5e94\u5bf9\u7ebf\u4e0a\u7684\u5404\u79cd\u590d\u6742\u60c5\u51b5\uff0c \u6211\u4eec\u9700\u8981\u80fd\u591f\u505a\u5230\u81ea\u52a8\u5316\u53bb\u611f\u77e5\u4e1a\u52a1 \uff0c \u6765\u81ea\u52a8\u8fdb\u884c\u6269\u7f29\u5bb9 \u3002\u4e3a\u6b64\uff0cKubernetes \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a \u8d44\u6e90\u5bf9\u8c61 \uff1a Horizontal Pod Autoscaling \uff08 Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29 \uff09\uff0c \u7b80\u79f0 HPA \uff0c HPA \u901a\u8fc7\u76d1\u63a7\u5206\u6790\u4e00\u4e9b\u63a7\u5236\u5668\uff0c\u5176\u63a7\u5236\u7684\u6240\u6709 Pod \u7684\u8d1f\u8f7d\u53d8\u5316\u60c5\u51b5\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u8c03\u6574 Pod \u7684\u526f\u672c\u6570\u91cf\uff0c\u8fd9\u662f HPA \u6700\u57fa\u672c\u7684\u539f\u7406\uff1a \u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c HPA Controller \u9ed8\u8ba4 30s \u8f6e\u8be2\u4e00\u6b21\uff08\u53ef\u901a\u8fc7 kube-controller-manager \u7684 --horizontal-pod-autoscaler-sync-period \u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff09\uff0c\u67e5\u8be2\u6307\u5b9a\u7684\u8d44\u6e90\u4e2d\u7684 Pod \u8d44\u6e90\u4f7f\u7528\u7387\uff0c\u5e76\u4e14\u4e0e\u521b\u5efa\u65f6\u8bbe\u5b9a\u7684\u503c\u548c\u6307\u6807\u505a\u5bf9\u6bd4\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u52a8\u4f38\u7f29\u7684\u529f\u80fd\u3002","title":"HPA"},{"location":"Controller/HPA/#metrics-server","text":"\u5728 HPA \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Heapster \u63d0\u4f9b CPU \u548c\u5185\u5b58\u6307\u6807\uff0c\u5728 HPA v2 \u8fc7\u540e\u5c31\u9700\u8981\u5b89\u88c5 Metrcis Server \u4e86\uff0c Metrics Server \u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u628a\u76d1\u63a7\u6570\u636e\u66b4\u9732\u51fa\u6765\uff0c\u6709\u4e86 Metrics Server \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u6765\u8bbf\u95ee\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u7684\u76d1\u63a7\u6570\u636e\u4e86\uff1a https://10.96.0.1/apis/metrics.k8s.io/v1beta1/namespaces/<namespace-name>/pods/<pod-name> \u6bd4\u5982\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u7684 API \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u8be5 Pod \u7684\u8d44\u6e90\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5176\u5b9e\u662f\u6765\u81ea\u4e8e kubelet \u7684 Summary API \u91c7\u96c6\u800c\u6765\u7684\u3002\u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 API \u6765\u83b7\u53d6\u8d44\u6e90\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a Metrics Server \u5c31\u662f APIServer \u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f \u901a\u8fc7 Kubernetes \u63d0\u4f9b\u7684 Aggregator \u6c47\u805a\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\uff0c\u662f\u72ec\u7acb\u4e8e APIServer \u4e4b\u5916\u8fd0\u884c\u7684 \u3002","title":"Metrics Server"},{"location":"Controller/HPA/#api","text":"Aggregator \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230 Kubernetes \u7684 APIServer \u91cc\u9762\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u539f\u751f\u7684 APIServer \u63d0\u4f9b\u7684 API \u4f7f\u7528\u81ea\u5df1\u7684 API \u4e86\uff0c\u6211\u4eec\u628a\u81ea\u5df1\u7684\u670d\u52a1\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u91cc\u9762\uff0c\u7136\u540e Kubernetes \u7684 Aggregator \u901a\u8fc7 Service \u540d\u79f0\u5c31\u53ef\u4ee5\u8f6c\u53d1\u5230\u6211\u4eec\u81ea\u5df1\u5199\u7684 Service \u91cc\u9762\u53bb\u4e86 \u3002\u8fd9\u6837\u8fd9\u4e2a\u805a\u5408\u5c42\u5c31\u5e26\u6765\u4e86\u5f88\u591a\u597d\u5904\uff1a \u589e\u52a0\u4e86 API \u7684\u6269\u5c55\u6027 \uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684 API \u670d\u52a1\u6765\u66b4\u9732\u4ed6\u4eec\u60f3\u8981\u7684 API\u3002 \u4e30\u5bcc\u4e86 API \uff0c\u6838\u5fc3 kubernetes \u56e2\u961f\u963b\u6b62\u4e86\u5f88\u591a\u65b0\u7684 API \u63d0\u6848\uff0c\u901a\u8fc7\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5c06\u4ed6\u4eec\u7684 API \u4f5c\u4e3a\u5355\u72ec\u7684\u670d\u52a1\u516c\u5f00\uff0c\u8fd9\u6837\u5c31\u65e0\u987b\u793e\u533a\u7e41\u6742\u7684\u5ba1\u67e5\u4e86\u3002 \u5f00\u53d1\u5206\u9636\u6bb5\u5b9e\u9a8c\u6027 API \uff0c\u65b0\u7684 API \u53ef\u4ee5\u5728\u5355\u72ec\u7684\u805a\u5408\u670d\u52a1\u4e2d\u5f00\u53d1\uff0c\u5f53\u5b83\u7a33\u5b9a\u4e4b\u540e\uff0c\u5728\u5408\u5e76\u56de APIServer \u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u786e\u4fdd\u65b0 API \u9075\u5faa Kubernetes \u7ea6\u5b9a \uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u91cc\u63d0\u51fa\u7684\u673a\u5236\uff0c\u793e\u533a\u6210\u5458\u53ef\u80fd\u4f1a\u88ab\u8feb\u63a8\u51fa\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u9020\u6210\u793e\u533a\u6210\u5458\u548c\u793e\u533a\u7ea6\u5b9a\u4e0d\u4e00\u81f4\u3002","title":"\u805a\u5408 API"},{"location":"Controller/HPA/#_1","text":"\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4f7f\u7528 HPA\uff0c\u5c31\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u5b89\u88c5 Metrics Server \u670d\u52a1\uff0c\u8981\u5b89\u88c5 Metrics Server \u5c31\u9700\u8981\u5f00\u542f Aggregator \uff0c\u56e0\u4e3a Metrics Server \u5c31\u662f\u901a\u8fc7\u8be5\u4ee3\u7406\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u96c6\u7fa4\u662f\u901a\u8fc7 Kubeadm \u642d\u5efa\u7684\uff0c\u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\uff0c\u5982\u679c\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b89\u88c5\u7684\u96c6\u7fa4\uff0c\u9700\u8981\u5355\u72ec\u914d\u7f6e kube-apsierver \u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u53c2\u6570\uff1a --requestheader-client-ca-file=<path to aggregator CA cert> --requestheader-allowed-names=aggregator --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --proxy-client-cert-file=<path to aggregator proxy cert> --proxy-client-key-file=<path to aggregator proxy key> \u5982\u679c kube-proxy \u6ca1\u6709\u548c APIServer \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u90a3\u4e48\u9700\u8981\u786e\u4fdd\u542f\u7528\u4e86\u5982\u4e0b kube-apsierver \u7684\u53c2\u6570\uff1a --enable-aggregator-routing=true \u5bf9\u4e8e\u8fd9\u4e9b\u8bc1\u4e66\u7684\u751f\u6210\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://github.com/kubernetes-sigs/apiserver-builder-alpha/blob/master/docs/concepts/auth.md \u3002 Aggregator \u805a\u5408\u5c42\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Metrics Server \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u8be5\u4ed3\u5e93\u7684\u5b98\u65b9\u5b89\u88c5\u8d44\u6e90\u6e05\u5355\uff1a # \u5b98\u65b9\u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/kubernetes-sigs/metrics-server \u279c ~ wget https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.5.1/components.yaml \u5728\u90e8\u7f72\u4e4b\u524d\uff0c\u4fee\u6539 components.yaml \u7684\u955c\u50cf\u5730\u5740\u4e3a\uff1a hostNetwork : true # \u4f7f\u7528hostNetwork\u6a21\u5f0f containers : - name : metrics-server image : cnych/metrics-server:v0.5.1 \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a \u279c ~ kubectl apply -f components.yaml \u279c ~ kubectl get pods -n kube-system -l k8s-app = metrics-server NAME READY STATUS RESTARTS AGE metrics-server-6f667d74b6-6c9ps 0 /1 Running 0 7m52s # manifests \u279c ~ kubectl logs -f metrics-server-6f667d74b6-6c9ps -n kube-system I1115 10 :06:02.381541 1 serving.go:341 ] Generated self-signed cert ( /tmp/apiserver.crt, /tmp/apiserver.key ) E1115 10 :06:02.735837 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.31:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.31 because it doesn't contain any IP SANs\" node = \"master1\" E1115 10 :06:02.744967 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.108:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\" node = \"node1\" I1115 10 :06:02.751391 1 requestheader_controller.go:169 ] Starting RequestHeaderAuthRequestController I1115 10 :06:02.751410 1 shared_informer.go:240 ] Waiting for caches to sync for RequestHeaderAuthRequestController I1115 10 :06:02.751413 1 configmap_cafile_content.go:202 ] Starting client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.751397 1 configmap_cafile_content.go:202 ] Starting client-ca::kube-system::extension-apiserver-authentication::client-ca-file I1115 10 :06:02.751423 1 shared_informer.go:240 ] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.751424 1 shared_informer.go:240 ] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file I1115 10 :06:02.751473 1 dynamic_serving_content.go:130 ] Starting serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key I1115 10 :06:02.751822 1 secure_serving.go:202 ] Serving securely on [ :: ] :443 I1115 10 :06:02.751896 1 tlsconfig.go:240 ] Starting DynamicServingCertificateController E1115 10 :06:02.756987 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.46:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.46 because it doesn't contain any IP SANs\" node = \"node2\" I1115 10 :06:02.851642 1 shared_informer.go:247 ] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file I1115 10 :06:02.851739 1 shared_informer.go:247 ] Caches are synced for RequestHeaderAuthRequestController I1115 10 :06:02.851748 1 shared_informer.go:247 ] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file E1115 10 :06:17.742350 1 scraper.go:139 ] \"Failed to scrape node\" err = \"Get \\\"https://192.168.31.108:10250/stats/summary?only_cpu_and_memory=true\\\": x509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\" node = \"node1\" ...... \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0cCA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc Metrics Server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u5f97\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP \uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 192.168.31.108 because it doesn't contain any IP SANs\uff09 \uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c\uff1a args : - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d\u91cd\u65b0\u5b89\u88c5\u5373\u53ef\u6210\u529f\uff01\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u9a8c\u8bc1\uff1a \u279c ~ kubectl apply -f components.yaml \u279c ~ kubectl get pods -n kube-system -l k8s-app = metrics-server NAME READY STATUS RESTARTS AGE metrics-server-85499dc4f5-mgpcb 1 /1 Running 0 32s \u279c ~ kubectl logs -f metrics-server-85499dc4f5-mgpcb -n kube-system I1115 10 :14:19.401808 1 serving.go:341 ] Generated self-signed cert ( /tmp/apiserver.crt, /tmp/apiserver.key ) I1115 10 :14:19.840290 1 secure_serving.go:202 ] Serving securely on [ :: ] :443 I1115 10 :14:19.840395 1 requestheader_controller.go:169 ] Starting RequestHeaderAuthRequestController I1115 10 :14:19.840403 1 shared_informer.go:240 ] Waiting for caches to sync for RequestHeaderAuthRequestController I1115 10 :14:19.840411 1 dynamic_serving_content.go:130 ] Starting serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key I1115 10 :14:19.840438 1 tlsconfig.go:240 ] Starting DynamicServingCertificateController ...... \u279c ~ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io kube-system/metrics-server True 10m \u279c ~ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" { \"kind\" : \"NodeMetricsList\" , \"apiVersion\" : \"metrics.k8s.io/v1beta1\" , \"metadata\" : {} , \"items\" : [{ \"metadata\" : { \"name\" : \"master1\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"master1\" , \"kubernetes.io/os\" : \"linux\" , \"node-role.kubernetes.io/control-plane\" : \"\" , \"node-role.kubernetes.io/master\" : \"\" , \"node.kubernetes.io/exclude-from-external-load-balancers\" : \"\" }} , \"timestamp\" : \"2021-11-15T10:15:33Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"132348072n\" , \"memory\" : \"813200Ki\" }} , { \"metadata\" : { \"name\" : \"node1\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"node1\" , \"kubernetes.io/os\" : \"linux\" }} , \"timestamp\" : \"2021-11-15T10:15:32Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"60153492n\" , \"memory\" : \"520628Ki\" }} , { \"metadata\" : { \"name\" : \"node2\" , \"creationTimestamp\" : \"2021-11-15T10:15:38Z\" , \"labels\" : { \"beta.kubernetes.io/arch\" : \"amd64\" , \"beta.kubernetes.io/os\" : \"linux\" , \"kubernetes.io/arch\" : \"amd64\" , \"kubernetes.io/hostname\" : \"node2\" , \"kubernetes.io/os\" : \"linux\" }} , \"timestamp\" : \"2021-11-15T10:15:29Z\" , \"window\" : \"20s\" , \"usage\" : { \"cpu\" : \"81697469n\" , \"memory\" : \"557208Ki\" }}]} \u279c ~ kubectl top nodes NAME CPU ( cores ) CPU% MEMORY ( bytes ) MEMORY% master1 115m 5 % 794Mi 21 % node1 58m 1 % 505Mi 6 % node2 55m 1 % 545Mi 7 % \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl top \u547d\u4ee4\u6765\u83b7\u53d6\u5230\u8d44\u6e90\u6570\u636e\u4e86\uff0c\u8bc1\u660e Metrics Server \u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u3002","title":"\u5b89\u88c5"},{"location":"Controller/HPA/#hpa_1","text":"\u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # hpa-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa Deployment\uff0c\u6ce8\u610f\u4e00\u5b9a\u5148\u628a\u4e4b\u524d\u521b\u5efa\u7684\u5177\u6709 app=nginx \u7684 Pod \u5148\u6e05\u9664\u6389\uff1a \u279c ~ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo created \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-demo-7848d4b86f-khndb 1 /1 Running 0 56s \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\uff1a \u279c ~ kubectl autoscale deployment hpa-demo --cpu-percent = 10 --min = 1 --max = 10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo <unknown>/10% 1 10 0 6s \u6b64\u547d\u4ee4\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u8054\u8d44\u6e90 hpa-demo \u7684 HPA\uff0c\u6700\u5c0f\u7684 Pod \u526f\u672c\u6570\u4e3a1\uff0c\u6700\u5927\u4e3a10\u3002HPA \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 cpu \u4f7f\u7528\u7387\uff0810%\uff09\u52a8\u6001\u7684\u589e\u52a0\u6216\u8005\u51cf\u5c11 Pod \u6570\u91cf\u3002 \u5f53\u7136\u6211\u4eec\u4f9d\u7136\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa HPA \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u7f16\u5199\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u547d\u4ee4\u884c\u521b\u5efaHPA\u65f6\u7684YAML\u6587\u4ef6\uff1a \u279c ~ kubectl get hpa hpa-demo -o yaml apiVersion : autoscaling/v1 kind : HorizontalPodAutoscaler metadata : annotations : autoscaling.alpha.kubernetes.io/conditions : '[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2021-11-15T10:19:06Z\",\"reason\":\"SucceededGetScale\",\"message\":\"the HPA controller was able to get the target '' s current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2021-11-15T10:19:06Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the HPA was unable to compute the replica count: failed to get cpu utilization: missing request for cpu\"}]' creationTimestamp : \"2021-11-15T10:18:51Z\" managedFields : - apiVersion : autoscaling/v1 fieldsType : FieldsV1 fieldsV1 : f:spec : f:maxReplicas : {} f:minReplicas : {} f:scaleTargetRef : {} f:targetCPUUtilizationPercentage : {} manager : kubectl operation : Update time : \"2021-11-15T10:18:51Z\" - apiVersion : autoscaling/v1 fieldsType : FieldsV1 fieldsV1 : f:metadata : f:annotations : . : {} f:autoscaling.alpha.kubernetes.io/conditions : {} f:status : f:currentReplicas : {} manager : kube-controller-manager operation : Update subresource : status time : \"2021-11-15T10:19:06Z\" name : hpa-demo namespace : default resourceVersion : \"631809\" uid : 34b91709-d003-4039-9cf0-05bb3fa4da73 spec : maxReplicas : 10 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-demo targetCPUUtilizationPercentage : 10 status : currentReplicas : 1 desiredReplicas : 0 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u5c31\u53ef\u4ee5\u81ea\u5df1\u6765\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e YAML \u7684 HPA \u63cf\u8ff0\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b Fail \u4fe1\u606f\uff0c\u6211\u4eec\u6765\u67e5\u770b\u4e0b\u8fd9\u4e2a HPA \u5bf9\u8c61\u7684\u4fe1\u606f\uff1a \u279c ~ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Mon, 15 Nov 2021 18 :18:51 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods ( as a percentage of request ) : <unknown> / 10 % Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 0 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededGetScale the HPA controller was able to get the target ' s current scale ScalingActive False FailedGetResourceMetric the HPA was unable to compute the replica count: failed to get cpu utilization: missing request for cpu Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedGetResourceMetric 1s ( x3 over 31s ) horizontal-pod-autoscaler failed to get cpu utilization: missing request for cpu Warning FailedComputeMetricsReplicas 1s ( x3 over 31s ) horizontal-pod-autoscaler invalid metrics ( 1 invalid out of 1 ) , first error is: failed to get cpu utilization: missing request for cpu \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4e8b\u4ef6\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86 failed to get cpu utilization : missing request for cpu \u8fd9\u6837\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Pod \u5bf9\u8c61\u6ca1\u6709\u6dfb\u52a0 request \u8d44\u6e90\u58f0\u660e\uff0c\u8fd9\u6837\u5bfc\u81f4 HPA \u8bfb\u53d6\u4e0d\u5230 CPU \u6307\u6807\u4fe1\u606f\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u8ba9 HPA \u751f\u6548\uff0c\u5bf9\u5e94\u7684 Pod \u8d44\u6e90\u5fc5\u987b\u6dfb\u52a0 requests \u8d44\u6e90\u58f0\u660e\uff0c\u66f4\u65b0\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a # hpa-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 resources : requests : memory : 50Mi cpu : 50m \u7136\u540e\u91cd\u65b0\u66f4\u65b0 Deployment\uff0c\u91cd\u65b0\u521b\u5efa HPA \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo configured \u279c ~ kubectl get pods -o wide -l app = nginx NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-6b4467b546-h489x 1 /1 Running 0 18s 10 .244.1.11 node1 <none> <none> \u279c ~ kubectl delete hpa hpa-demo horizontalpodautoscaler.autoscaling \"hpa-demo\" deleted \u279c ~ kubectl autoscale deployment hpa-demo --cpu-percent = 10 --min = 1 --max = 10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled \u279c ~ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Mon, 15 Nov 2021 18 :21:12 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods ( as a percentage of request ) : 0 % ( 0 ) / 10 % Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization ( percentage of request ) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: <none> \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0 %/10% 1 10 1 35s \u73b0\u5728\u53ef\u4ee5\u770b\u5230 HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u589e\u5927\u8d1f\u8f7d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a busybox \u7684 Pod\uff0c\u5e76\u4e14\u5faa\u73af\u8bbf\u95ee\u4e0a\u9762\u521b\u5efa\u7684 Pod\uff1a \u279c ~ kubectl run -it --image busybox test-hpa --restart = Never --rm /bin/sh If you don ' t see a command prompt, try pressing enter. / # while true; do wget -q -O- http://10.244.1.11; done \u7136\u540e\u89c2\u5bdf Pod \u5217\u8868\uff0c\u53ef\u4ee5\u770b\u5230\uff0cHPA \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\uff1a \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 310 %/10% 1 10 1 105s \u279c ~ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE hpa-demo-6b4467b546-h489x 1 /1 Running 0 2m25s hpa-demo-6b4467b546-pg4fz 0 /1 ContainerCreating 0 9s hpa-demo-6b4467b546-qrwv5 0 /1 ContainerCreating 0 9s hpa-demo-6b4467b546-s4vdz 0 /1 ContainerCreating 0 9s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u62c9\u8d77\u4e86\u5f88\u591a\u65b0\u7684 Pod\uff0c\u6700\u540e\u4f1a\u5b9a\u683c\u5728\u4e86\u6211\u4eec\u4e0a\u9762\u8bbe\u7f6e\u7684 10 \u4e2a Pod\uff0c\u540c\u65f6\u67e5\u770b\u8d44\u6e90 hpa-demo \u7684\u526f\u672c\u6570\u91cf\uff0c\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u4ece\u539f\u6765\u76841\u53d8\u6210\u4e8610\u4e2a\uff1a \u279c ~ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 10 /10 10 10 2m56s \u67e5\u770b HPA \u8d44\u6e90\u7684\u5bf9\u8c61\u4e86\u89e3\u5de5\u4f5c\u8fc7\u7a0b\uff1a \u279c ~ kubectl describe hpa hpa-demo Name : hpa-demo Namespace : default Labels : <none> Annotations : <none> CreationTimestamp : Mon, 15 Nov 2021 18:21:12 +0800 Reference : Deployment/hpa-demo Metrics : ( current / target ) resource cpu on pods (as a percentage of request) : 110% (55m) / 10% Min replicas : 1 Max replicas : 10 Deployment pods : 10 current / 10 desired Conditions : Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooManyReplicas the desired replica count is more than the maximum replica count Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 67s horizontal-pod-autoscaler New size : 4; reason : cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 52s horizontal-pod-autoscaler New size: 8; reason : cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 37s horizontal-pod-autoscaler New size: 10; reason : cpu resource utilization (percentage of request) above target \u540c\u6837\u7684\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u5173\u6389 busybox \u6765\u51cf\u5c11\u8d1f\u8f7d\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u89c2\u5bdf\u4e0b HPA \u548c Deployment \u5bf9\u8c61\uff1a \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0 %/10% 1 10 10 3m46s \u279c ~ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 1 /1 1 1 24m \u7f29\u653e\u95f4\u9699 \u4ece Kubernetes v1.12 \u7248\u672c\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e kube-controller-manager \u7ec4\u4ef6\u7684--horizontal-pod-autoscaler-downscale-stabilization \u53c2\u6570\u6765\u8bbe\u7f6e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u5f53\u524d\u64cd\u4f5c\u5b8c\u6210\u540e\uff0cHPA \u5fc5\u987b\u7b49\u5f85\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\u53e6\u4e00\u6b21\u7f29\u653e\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4e3a5\u5206\u949f\uff0c\u4e5f\u5c31\u662f \u9ed8\u8ba4\u9700\u8981\u7b49\u5f855\u5206\u949f\u540e\u624d\u4f1a\u5f00\u59cb\u81ea\u52a8\u7f29\u653e \u3002 \u53ef\u4ee5\u770b\u5230\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u7531 10 \u53d8\u4e3a 1 \uff0c\u5f53\u524d\u6211\u4eec\u53ea\u662f\u6f14\u793a\u4e86 CPU \u4f7f\u7528\u7387\u8fd9\u4e00\u4e2a\u6307\u6807\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u5b66\u4e60\u5230\u6839\u636e \u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807 ( Prometheus ) \u6765\u81ea\u52a8\u5bf9 Pod \u8fdb\u884c\u6269\u7f29\u5bb9\u3002","title":"HPA"},{"location":"Controller/HPA/#_2","text":"\u8981\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u6216\u8005\u81ea\u5b9a\u4e49\u6307\u6807\u8fdb\u884c\u6269\u7f29\u5bb9 \uff08 \u73b0\u5728\u7684\u7248\u672c\u90fd\u5fc5\u987b\u4f9d\u8d56 metrics-server \u8fd9\u4e2a\u9879\u76ee \uff09 \u3002\u73b0\u5728\u6211\u4eec\u518d\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # hpa-mem-demo.yaml apiVersion : apps/v1 kind : Deployment metadata : name : hpa-mem-demo spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : volumes : - name : increase-mem-script configMap : name : increase-mem-config containers : - name : nginx image : nginx ports : - containerPort : 80 volumeMounts : - name : increase-mem-script mountPath : /etc/script resources : requests : memory : 50Mi cpu : 50m securityContext : privileged : true \u8fd9\u91cc\u548c\u524d\u9762\u666e\u901a\u7684\u5e94\u7528\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u540d\u4e3a increase-mem-config \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u662f\u7528\u4e8e\u540e\u9762\u589e\u52a0\u5bb9\u5668\u5185\u5b58\u5360\u7528\u7684\u811a\u672c\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # increase-mem-cm.yaml apiVersion : v1 kind : ConfigMap metadata : name : increase-mem-config data : increase-mem.sh : | #!/bin/bash mkdir /tmp/memory mount -t tmpfs -o size=40M tmpfs /tmp/memory dd if=/dev/zero of=/tmp/memory/block sleep 60 rm /tmp/memory/block umount /tmp/memory rmdir /tmp/memory \u7531\u4e8e\u8fd9\u91cc\u589e\u52a0\u5185\u5b58\u7684\u811a\u672c\u9700\u8981\u4f7f\u7528\u5230 mount \u547d\u4ee4\uff0c\u8fd9\u9700\u8981\u58f0\u660e\u4e3a \u7279\u6743\u6a21\u5f0f \uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e86 securityContext . privileged = true \u8fd9\u4e2a\u914d\u7f6e\u3002\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c ~ kubectl apply -f increase-mem-cm.yaml \u279c ~ kubectl apply -f hpa-mem-demo.yaml \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-74675cc6c9-sqz2l 1 /1 Running 0 17s \u7136\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u8d44\u6e90\u5bf9\u8c61\uff1a # hpa-mem.yaml apiVersion : autoscaling/v2beta1 kind : HorizontalPodAutoscaler metadata : name : hpa-mem-demo namespace : default spec : maxReplicas : 5 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-mem-demo metrics : # \u6307\u5b9a\u5185\u5b58\u7684\u4e00\u4e2a\u914d\u7f6e - type : Resource resource : name : memory targetAverageUtilization : 30 \u8981\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u7684 apiVersion \u662f autoscaling/v2beta1 \uff0c\u7136\u540e metrics \u5c5e\u6027\u91cc\u9762\u6307\u5b9a\u7684\u662f\u5185\u5b58\u7684\u914d\u7f6e\uff0c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c ~ kubectl apply -f hpa-mem.yaml horizontalpodautoscaler.autoscaling/hpa-mem-demo created \u279c ~ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-mem-demo Deployment/hpa-mem-demo 6 %/30% 1 5 1 32s \u53c2\u8003\u5b98\u65b9\u76f8\u5173API\u7248\u672c\u5b9a\u4e49 \uff0c\u5728 autoscaling / v2beta2 \u4e2d\uff0c metrics \u5c5e\u6027\u5982\u4f55\u5982\u4e0b\u914d\u7f6e\uff1a #hpa-mem.yaml apiVersion : autoscaling/v2beta2 kind : HorizontalPodAutoscaler metadata : name : hpa-mem-demo namespace : default spec : maxReplicas : 5 minReplicas : 1 scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : hpa-mem-demo metrics : - type : Resource resource : name : memory target : type : Utilization averageUtilization : 30 \u5230\u8fd9\u91cc\u8bc1\u660e HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff0c\u5c06\u5185\u5b58\u538b\u4e0a\u53bb\uff0c\u76f4\u63a5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 increase-mem.sh \u811a\u672c\u5373\u53ef\uff1a \u279c ~ kubectl exec -it hpa-mem-demo-74675cc6c9-sqz2l -- /bin/bash root@hpa-mem-demo-74675cc6c9-sqz2l:/# ls /etc/script/ increase-mem.sh root@hpa-mem-demo-74675cc6c9-sqz2l:/# source /etc/script/increase-mem.sh dd: writing to '/tmp/memory/block' : No space left on device 81921 +0 records in 81920 +0 records out 41943040 bytes ( 42 MB, 40 MiB ) copied, 0 .0908717 s, 462 MB/s \u7136\u540e\u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5\uff1a \u279c ~ kubectl get hpa -w NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-mem-demo Deployment/hpa-mem-demo 87 %/30% 1 5 3 90s \u279c ~ kubectl describe hpa hpa-mem-demo Name: hpa-mem-demo Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"autoscaling/v2beta1\" , \"kind\" : \"HorizontalPodAutoscaler\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"hpa-mem-demo\" , \"namespace\" : \"defau... CreationTimestamp: Mon, 15 Nov 2021 18:40:37 +0800 Reference: Deployment/hpa-mem-demo Metrics: ( current / target ) resource memory on pods (as a percentage of request): 87% (45752320) / 30% Min replicas: 1 Max replicas: 5 Deployment pods: 3 current / 3 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from memory resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedGetResourceMetric 87s horizontal-pod-autoscaler failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API Warning FailedComputeMetricsReplicas 87s horizontal-pod-autoscaler invalid metrics (1 invalid out of 1), first error is: failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API Normal SuccessfulRescale 27s horizontal-pod-autoscaler New size: 3; reason: memory resource utilization (percentage of request) above target Normal SuccessfulRescale 46s horizontal-pod-autoscaler New size: 4; reason: memory resource utilization (percentage of request) above target \u279c ~ kubectl top pod hpa-mem-demo-74675cc6c9-gbj9t NAME CPU(cores) MEMORY(bytes) hpa-mem-demo-66944b79bf-tqrn9 0m 41Mi \u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4f7f\u7528\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684 30 % \u8fd9\u4e2a\u9608\u503c\u4e86\uff0cHPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u5df2\u7ecf\u89e6\u53d1\u4e86\u81ea\u52a8\u6269\u5bb9\uff0c\u53d8\u6210\u4e864\u4e2a\u526f\u672c\u4e86\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-74675cc6c9-cpdw4 1 /1 Running 0 69s hpa-mem-demo-74675cc6c9-s8bz4 1 /1 Running 0 114s hpa-mem-demo-74675cc6c9-sqz2l 1 /1 Running 0 3m9s hpa-mem-demo-74675cc6c9-z8cx8 1 /1 Running 0 114s \u5f53\u5185\u5b58\u91ca\u653e\u6389\u540e\uff0c controller-manager \u9ed8\u8ba45\u5206\u949f\u8fc7\u540e \u4f1a\u8fdb\u884c\u7f29\u653e\uff0c\u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u64cd\u4f5c\u3002","title":"\u5185\u5b58"},{"location":"Controller/Job%26CronJob/","text":"Job&CronJob \u00b6 \u63a5\u4e0b\u6765\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u53e6\u5916\u4e00\u7c7b\u8d44\u6e90\u5bf9\u8c61\uff1a Job \uff0c \u6211\u4eec\u5728\u65e5\u5e38\u7684\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u90fd\u4f1a\u9047\u5230\u4e00\u4e9b\u9700\u8981\u8fdb\u884c\u6279\u91cf\u6570\u636e\u5904\u7406\u548c\u5206\u6790\u7684\u9700\u6c42\uff0c\u5f53\u7136\u4e5f\u4f1a\u6709\u6309\u65f6\u95f4\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\u5de5\u4f5c\uff0c\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 Job \u548c CronJob \u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u6765\u5e94\u5bf9\u6211\u4eec\u7684\u8fd9\u79cd\u9700\u6c42 \u3002 Job \u8d1f\u8d23\u5904\u7406\u4efb\u52a1\uff0c\u5373\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u4efb\u52a1\uff0c\u5b83\u4fdd\u8bc1\u6279\u5904\u7406\u4efb\u52a1\u7684\u4e00\u4e2a\u6216\u591a\u4e2a Pod \u6210\u529f\u7ed3\u675f\u3002\u800c CronJob \u5219\u5c31\u662f\u5728 Job \u4e0a\u52a0\u4e0a\u4e86\u65f6\u95f4\u8c03\u5ea6\u3002 Job \u00b6 \u6211\u4eec\u7528 Job \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u6765\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a Job \u6765\u6267\u884c\u4e00\u4e2a\u5012\u8ba1\u65f6\u7684\u4efb\u52a1\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # job-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-demo spec : template : spec : restartPolicy : Never containers : - name : counter image : busybox command : - \"bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Job \u4e2d\u4e5f\u662f\u4e00\u4e2a Pod \u6a21\u677f\uff0c\u548c\u4e4b\u524d\u7684 Deployment\u3001StatefulSet \u4e4b\u7c7b\u7684\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662f Pod \u4e2d\u7684\u5bb9\u5668\u8981\u6c42\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\u4e86\uff0c\u56e0\u4e3a\u9700\u8981\u9000\u51fa\u3002\u53e6\u5916\u503c\u5f97\u6ce8\u610f\u7684\u662f Job \u7684 RestartPolicy \u4ec5\u652f\u6301 Never \u548c OnFailure \u4e24\u79cd\uff0c\u4e0d\u652f\u6301 Always \u3002\u6211\u4eec\u77e5\u9053 Job \u5c31\u76f8\u5f53\u4e8e\u6765\u6267\u884c\u4e00\u4e2a\u6279\u5904\u7406\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u5c31\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u652f\u6301 Always \u7684\u8bdd\u662f\u4e0d\u662f\u5c31\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u4e86\uff1f \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a Job \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f job-demo.yaml job.batch/job-demo created \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-demo 1 /1 19s 42s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE job-demo--1-p9s5r 0 /1 Completed 0 52s Job \u5bf9\u8c61\u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b\u5bf9\u8c61\u7684\u8be6\u7ec6\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe job job-demo Name: job-demo Namespace: default Selector: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 Labels: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 job-name = job-demo Annotations: <none> Parallelism: 1 Completions: 1 Completion Mode: NonIndexed Start Time: Sat, 13 Nov 2021 18 :34:17 +0800 Completed At: Sat, 13 Nov 2021 18 :34:36 +0800 Duration: 19s Pods Statuses: 0 Running / 1 Succeeded / 0 Failed Pod Template: Labels: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 job-name = job-demo Containers: counter: Image: busybox Port: <none> Host Port: <none> Command: bin/sh -c for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 73s job-controller Created pod: job-demo--1-p9s5r Normal Completed 54s job-controller Job completed \u53ef\u4ee5\u770b\u5230\uff0cJob \u5bf9\u8c61\u5728\u521b\u5efa\u540e\uff0c\u5b83\u7684 Pod \u6a21\u677f\uff0c\u88ab\u81ea\u52a8\u52a0\u4e0a\u4e86\u4e00\u4e2a controller-uid =< \u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 > \u8fd9\u6837\u7684 Label \u6807\u7b7e\uff0c\u800c\u8fd9\u4e2a Job \u5bf9\u8c61\u672c\u8eab\uff0c\u5219\u88ab\u81ea\u52a8\u52a0\u4e0a\u4e86\u8fd9\u4e2a Label \u5bf9\u5e94\u7684 Selector\uff0c\u4ece\u800c \u4fdd\u8bc1\u4e86 Job \u4e0e\u5b83\u6240\u7ba1\u7406\u7684 Pod \u4e4b\u95f4\u7684\u5339\u914d\u5173\u7cfb\u3002\u800c Job \u63a7\u5236\u5668\u4e4b\u6240\u4ee5\u8981\u4f7f\u7528\u8fd9\u79cd\u643a\u5e26\u4e86 UID \u7684 Label\uff0c\u5c31\u662f\u4e3a\u4e86\u907f\u514d\u4e0d\u540c Job \u5bf9\u8c61\u6240\u7ba1\u7406\u7684 Pod \u53d1\u751f\u91cd\u5408\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f88\u5feb Pod \u53d8\u6210\u4e86 Completed \u72b6\u6001\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bb9\u5668\u7684\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u6b63\u5e38\u9000\u51fa\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684\u65e5\u5fd7\uff1a \u279c ~ kubectl logs job-demo--1-p9s5r 9 8 7 6 5 4 3 2 1 \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-demo--1-p9s5r 0 /1 Completed 0 11m \u4e0a\u9762\u6211\u4eec\u8fd9\u91cc\u7684 Job \u4efb\u52a1\u5bf9\u5e94\u7684 Pod \u5728\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u53d8\u6210 Completed \u72b6\u6001\uff0c\u4f46\u662f\u5982\u679c\u6267\u884c\u4efb\u52a1\u7684 Pod \u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u4e00\u76f4\u6ca1\u6709\u7ed3\u675f\u600e\u4e48\u529e\u5462\uff1f\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u5728 Job \u5bf9\u8c61\u4e2d\u901a\u8fc7\u8bbe\u7f6e\u5b57\u6bb5 spec . activeDeadlineSeconds \u6765\u9650\u5236\u4efb\u52a1\u8fd0\u884c\u7684\u6700\u957f\u65f6\u95f4\uff0c\u6bd4\u5982\uff1a spec : activeDeadlineSeconds : 100 \u90a3\u4e48\u5f53\u6211\u4eec\u7684\u4efb\u52a1 Pod \u8fd0\u884c\u8d85\u8fc7\u4e86 100s \u540e\uff0c\u8fd9\u4e2a Job \u7684\u6240\u6709 Pod \u90fd\u4f1a\u88ab\u7ec8\u6b62\uff0c\u5e76\u4e14\uff0c Pod \u7684\u7ec8\u6b62\u539f\u56e0\u4f1a\u53d8\u6210 DeadlineExceeded \u3002 \u5982\u679c\u7684\u4efb\u52a1\u6267\u884c\u5931\u8d25\u4e86\uff0c\u4f1a\u600e\u4e48\u5904\u7406\u5462\uff0c\u8fd9\u4e2a\u548c\u5b9a\u4e49\u7684 restartPolicy \u6709\u5173\u7cfb\uff0c\u6bd4\u5982\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684 Job \u4efb\u52a1\uff0c\u5b9a\u4e49 restartPolicy: Never \u7684\u91cd\u542f\u7b56\u7565\uff1a # job-failed-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-failed-demo spec : template : spec : containers : - name : test-job image : busybox command : [ \"echo123\" , \"test failed job!\" ] restartPolicy : Never \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f job-failed-demo.yaml job.batch/job-failed-demo created \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-failed-demo--1-87wvj 0 /1 StartError 0 4m40s job-failed-demo--1-bl7jm 0 /1 StartError 0 5m7s job-failed-demo--1-dcmph 0 /1 StartError 0 3m job-failed-demo--1-hb24j 0 /1 StartError 0 20s job-failed-demo--1-n7h24 0 /1 StartError 0 4m20s job-failed-demo--1-q7vxq 0 /1 StartError 0 5m24s \u53ef\u4ee5\u770b\u5230\u5f53\u6211\u4eec\u8bbe\u7f6e\u6210 Never \u91cd\u542f\u7b56\u7565\u7684\u65f6\u5019\uff0cJob \u4efb\u52a1\u6267\u884c\u5931\u8d25\u540e\u4f1a\u4e0d\u65ad\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u521b\u5efa\u4e0b\u53bb\uff0c\u4f1a\u6839\u636e spec . backoffLimit \u53c2\u6570\u8fdb\u884c\u9650\u5236\uff0c\u9ed8\u8ba4\u4e3a 6 \uff0c\u901a\u8fc7\u8be5\u5b57\u6bb5\u53ef\u4ee5\u5b9a\u4e49\u91cd\u5efa Pod \u7684\u6b21\u6570\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f Job \u63a7\u5236\u5668\u91cd\u65b0\u521b\u5efa Pod \u7684\u95f4\u9694\u662f\u5448\u6307\u6570\u589e\u52a0\u7684\uff0c\u5373\u4e0b\u4e00\u6b21\u91cd\u65b0\u521b\u5efa Pod \u7684\u52a8\u4f5c\u4f1a\u5206\u522b\u53d1\u751f\u5728 10s\u300120s\u300140s\u2026 \u540e\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u7684 restartPolicy : OnFailure \u91cd\u542f\u7b56\u7565\uff0c\u5219\u5f53 Job \u4efb\u52a1\u6267\u884c\u5931\u8d25\u540e\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684 Pod \u51fa\u6765\uff0c\u53ea\u4f1a\u4e0d\u65ad\u91cd\u542f Pod\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e spec . parallelism \u53c2\u6570\u6765\u8fdb\u884c\u5e76\u884c\u63a7\u5236\uff0c\u8be5\u53c2\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a Job \u5728\u4efb\u610f\u65f6\u95f4\u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a Pod \u540c\u65f6\u8fd0\u884c\u3002 spec . completions \u53c2\u6570\u53ef\u4ee5\u5b9a\u4e49 Job \u81f3\u5c11\u8981\u5b8c\u6210\u7684 Pod \u6570\u76ee\u3002\u5982\u4e0b\u6240\u793a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Job \u4efb\u52a1\uff0c\u8bbe\u7f6e\u5141\u8bb8\u5e76\u884c\u6570\u4e3a2\uff0c\u81f3\u5c11\u8981\u5b8c\u6210\u7684 Pod \u6570\u4e3a8\uff1a # job-para-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-para-test spec : parallelism : 2 completions : 8 template : spec : containers : - name : test-job image : busybox command : [ \"echo\" , \"test paralle job!\" ] restartPolicy : Never \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-para-test--1-rwxm8 0 /1 ContainerCreating 0 6s job-para-test--1-vgtxf 0 /1 ContainerCreating 0 2s \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-para-test 0 /8 29s 29s \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-para-test 8 /8 111s 2m34s \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-para-test--1-7nk2x 0 /1 Completed 0 76s job-para-test--1-dcdvp 0 /1 Completed 0 2m2s job-para-test--1-k9sgw 0 /1 Completed 0 2m36s job-para-test--1-rwkkb 0 /1 Completed 0 2m17s job-para-test--1-rwxm8 0 /1 Completed 0 2m36s job-para-test--1-tqlzd 0 /1 Completed 0 106s job-para-test--1-vgtxf 0 /1 Completed 0 2m32s job-para-test--1-vxj6b 0 /1 Completed 0 91s \u53ef\u4ee5\u770b\u5230\u4e00\u6b21\u53ef\u4ee5\u67092\u4e2a Pod \u540c\u65f6\u8fd0\u884c\uff0c\u9700\u89818\u4e2a Pod \u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u4e0d\u662f8\u4e2a\u6210\u529f\uff0c\u90a3\u4e48\u4f1a\u6839\u636e restartPolicy \u7684\u7b56\u7565\u8fdb\u884c\u5904\u7406\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u68c0\u67e5\u673a\u5236\u3002 CronJob \u00b6 CronJob \u5176\u5b9e\u5c31\u662f\u5728 Job \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e86\u65f6\u95f4\u8c03\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5468\u671f\u6027\u5730\u5728\u7ed9\u5b9a\u65f6\u95f4\u70b9\u8fd0\u884c\u3002\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u548c\u6211\u4eec Linux \u4e2d\u7684 crontab \u5c31\u975e\u5e38\u7c7b\u4f3c\u4e86\u3002 \u4e00\u4e2a CronJob \u5bf9\u8c61\u5176\u5b9e\u5c31\u5bf9\u5e94\u4e2d crontab \u6587\u4ef6\u4e2d\u7684\u4e00\u884c\uff0c\u5b83\u6839\u636e\u914d\u7f6e\u7684\u65f6\u95f4\u683c\u5f0f\u5468\u671f\u6027\u5730\u8fd0\u884c\u4e00\u4e2a Job \uff0c\u683c\u5f0f\u548c crontab \u4e5f\u662f\u4e00\u6837\u7684\u3002 crontab \u7684\u683c\u5f0f\u4e3a\uff1a\u5206 \u65f6 \u65e5 \u6708 \u661f\u671f \u8981\u8fd0\u884c\u7684\u547d\u4ee4 \u3002 \u7b2c1\u5217\u5206\u949f 0\uff5e59 \u7b2c2\u5217\u5c0f\u65f6 0\uff5e23 \u7b2c3\u5217\u65e5 1\uff5e31 \u7b2c4\u5217\u6708 1\uff5e12 \u7b2c5\u5217\u661f\u671f 0\uff5e7\uff080\u548c7\u8868\u793a\u661f\u671f\u5929\uff09 \u7b2c6\u5217\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \u73b0\u5728\uff0c\u6211\u4eec\u7528 CronJob \u6765\u7ba1\u7406\u6211\u4eec\u4e0a\u9762\u7684 Job \u4efb\u52a1\uff0c\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a # cronjob-demo.yaml apiVersion : batch/v1 kind : CronJob metadata : name : cronjob-demo spec : schedule : \"*/1 * * * *\" jobTemplate : spec : template : spec : restartPolicy : OnFailure containers : - name : hello image : busybox args : - \"bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u8fd9\u91cc\u7684 Kind \u53d8\u6210\u4e86 CronJob \u4e86\uff0c\u8981\u6ce8\u610f\u7684\u662f . spec . schedule \u5b57\u6bb5\u662f\u5fc5\u987b\u586b\u5199\u7684\uff0c\u7528\u6765\u6307\u5b9a\u4efb\u52a1\u8fd0\u884c\u7684\u5468\u671f\uff0c\u683c\u5f0f\u5c31\u548c crontab \u4e00\u6837\uff0c\u53e6\u5916\u4e00\u4e2a\u5b57\u6bb5\u662f . spec . jobTemplate , \u7528\u6765\u6307\u5b9a\u9700\u8981\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u683c\u5f0f\u5f53\u7136\u548c Job \u662f\u4e00\u81f4\u7684\u3002\u8fd8\u6709\u4e00\u4e9b\u503c\u5f97\u6211\u4eec\u5173\u6ce8\u7684\u5b57\u6bb5 . spec . successfulJobsHistoryLimit (\u9ed8\u8ba4\u4e3a 3 ) \u548c . spec . failedJobsHistoryLimit (\u9ed8\u8ba4\u4e3a 1 )\uff0c\u8868\u793a\u5386\u53f2\u9650\u5236\uff0c\u662f\u53ef\u9009\u7684\u5b57\u6bb5\uff0c\u6307\u5b9a\u53ef\u4ee5\u4fdd\u7559\u591a\u5c11\u5b8c\u6210\u548c\u5931\u8d25\u7684 Job \u3002\u7136\u800c\uff0c\u5f53\u8fd0\u884c\u4e00\u4e2a CronJob \u65f6\uff0c Job \u53ef\u4ee5\u5f88\u5feb\u5c31\u5806\u79ef\u5f88\u591a\uff0c\u6240\u4ee5\u4e00\u822c\u63a8\u8350\u8bbe\u7f6e\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\uff0c\u5982\u679c\u8bbe\u7f6e\u9650\u5236\u7684\u503c\u4e3a 0\uff0c\u90a3\u4e48\u76f8\u5173\u7c7b\u578b\u7684 Job \u5b8c\u6210\u540e\u5c06\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u76f4\u63a5\u65b0\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f cronjob-demo.yaml cronjob \"cronjob-demo\" created \u7136\u540e\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684 Cronjob \u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl get cronjob NAME SCHEDULE SUSPEND ACTIVE LAST SCHEDULE AGE cronjob-demo */1 * * * * False 0 28s 36s \u7a0d\u5fae\u7b49\u4e00\u4f1a\u513f\u67e5\u770b\u53ef\u4ee5\u53d1\u73b0\u591a\u4e86\u51e0\u4e2a Job \u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5c31\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u8bbe\u7f6e\u7684 CronJob \u8d44\u6e90\u5bf9\u8c61\uff0c\u6bcf1\u5206\u949f\u6267\u884c\u4e00\u4e2a\u65b0\u7684 Job\uff1a \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE cronjob-demo-27280016 1 /1 17s 118s cronjob-demo-27280017 1 /1 16s 58s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE cronjob-demo-27280016--1-kvkt4 0 /1 Completed 0 2m9s cronjob-demo-27280017--1-pkwdb 0 /1 Completed 0 69s cronjob-demo-27280018--1-q9n7w 0 /1 ContainerCreating 0 9s \u8fd9\u4e2a\u5c31\u662f CronJob \u7684\u57fa\u672c\u7528\u6cd5\uff0c\u4e00\u65e6\u4e0d\u518d\u9700\u8981 CronJob\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u5220\u9664\u5b83\uff1a \u279c ~ kubectl delete cronjob cronjob-demo cronjob \"cronjob-demo\" deleted \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u5c06\u4f1a\u7ec8\u6b62\u6b63\u5728\u521b\u5efa\u7684 Job\uff0c\u4f46\u662f\u8fd0\u884c\u4e2d\u7684 Job \u5c06\u4e0d\u4f1a\u88ab\u7ec8\u6b62\uff0c\u4e0d\u4f1a\u5220\u9664 Job \u6216 \u5b83\u4eec\u7684 Pod\u3002 \u601d\u8003\uff1a\u90a3\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53bb\u6267\u884c\u4e00\u4e2a Job \u6216\u8005 Cronjob \u53c8\u8be5\u600e\u4e48\u6765\u5b9e\u73b0\u5462\uff1f","title":"Job"},{"location":"Controller/Job%26CronJob/#jobcronjob","text":"\u63a5\u4e0b\u6765\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u53e6\u5916\u4e00\u7c7b\u8d44\u6e90\u5bf9\u8c61\uff1a Job \uff0c \u6211\u4eec\u5728\u65e5\u5e38\u7684\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u90fd\u4f1a\u9047\u5230\u4e00\u4e9b\u9700\u8981\u8fdb\u884c\u6279\u91cf\u6570\u636e\u5904\u7406\u548c\u5206\u6790\u7684\u9700\u6c42\uff0c\u5f53\u7136\u4e5f\u4f1a\u6709\u6309\u65f6\u95f4\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\u5de5\u4f5c\uff0c\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 Job \u548c CronJob \u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u6765\u5e94\u5bf9\u6211\u4eec\u7684\u8fd9\u79cd\u9700\u6c42 \u3002 Job \u8d1f\u8d23\u5904\u7406\u4efb\u52a1\uff0c\u5373\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u4efb\u52a1\uff0c\u5b83\u4fdd\u8bc1\u6279\u5904\u7406\u4efb\u52a1\u7684\u4e00\u4e2a\u6216\u591a\u4e2a Pod \u6210\u529f\u7ed3\u675f\u3002\u800c CronJob \u5219\u5c31\u662f\u5728 Job \u4e0a\u52a0\u4e0a\u4e86\u65f6\u95f4\u8c03\u5ea6\u3002","title":"Job&amp;CronJob"},{"location":"Controller/Job%26CronJob/#job","text":"\u6211\u4eec\u7528 Job \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u6765\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a Job \u6765\u6267\u884c\u4e00\u4e2a\u5012\u8ba1\u65f6\u7684\u4efb\u52a1\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # job-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-demo spec : template : spec : restartPolicy : Never containers : - name : counter image : busybox command : - \"bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Job \u4e2d\u4e5f\u662f\u4e00\u4e2a Pod \u6a21\u677f\uff0c\u548c\u4e4b\u524d\u7684 Deployment\u3001StatefulSet \u4e4b\u7c7b\u7684\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662f Pod \u4e2d\u7684\u5bb9\u5668\u8981\u6c42\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\u4e86\uff0c\u56e0\u4e3a\u9700\u8981\u9000\u51fa\u3002\u53e6\u5916\u503c\u5f97\u6ce8\u610f\u7684\u662f Job \u7684 RestartPolicy \u4ec5\u652f\u6301 Never \u548c OnFailure \u4e24\u79cd\uff0c\u4e0d\u652f\u6301 Always \u3002\u6211\u4eec\u77e5\u9053 Job \u5c31\u76f8\u5f53\u4e8e\u6765\u6267\u884c\u4e00\u4e2a\u6279\u5904\u7406\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u5c31\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u652f\u6301 Always \u7684\u8bdd\u662f\u4e0d\u662f\u5c31\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u4e86\uff1f \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a Job \u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f job-demo.yaml job.batch/job-demo created \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-demo 1 /1 19s 42s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE job-demo--1-p9s5r 0 /1 Completed 0 52s Job \u5bf9\u8c61\u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b\u5bf9\u8c61\u7684\u8be6\u7ec6\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe job job-demo Name: job-demo Namespace: default Selector: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 Labels: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 job-name = job-demo Annotations: <none> Parallelism: 1 Completions: 1 Completion Mode: NonIndexed Start Time: Sat, 13 Nov 2021 18 :34:17 +0800 Completed At: Sat, 13 Nov 2021 18 :34:36 +0800 Duration: 19s Pods Statuses: 0 Running / 1 Succeeded / 0 Failed Pod Template: Labels: controller-uid = 10618fc6-5610-41c6-bdeb-531167716179 job-name = job-demo Containers: counter: Image: busybox Port: <none> Host Port: <none> Command: bin/sh -c for i in 9 8 7 6 5 4 3 2 1 ; do echo $i ; done Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 73s job-controller Created pod: job-demo--1-p9s5r Normal Completed 54s job-controller Job completed \u53ef\u4ee5\u770b\u5230\uff0cJob \u5bf9\u8c61\u5728\u521b\u5efa\u540e\uff0c\u5b83\u7684 Pod \u6a21\u677f\uff0c\u88ab\u81ea\u52a8\u52a0\u4e0a\u4e86\u4e00\u4e2a controller-uid =< \u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 > \u8fd9\u6837\u7684 Label \u6807\u7b7e\uff0c\u800c\u8fd9\u4e2a Job \u5bf9\u8c61\u672c\u8eab\uff0c\u5219\u88ab\u81ea\u52a8\u52a0\u4e0a\u4e86\u8fd9\u4e2a Label \u5bf9\u5e94\u7684 Selector\uff0c\u4ece\u800c \u4fdd\u8bc1\u4e86 Job \u4e0e\u5b83\u6240\u7ba1\u7406\u7684 Pod \u4e4b\u95f4\u7684\u5339\u914d\u5173\u7cfb\u3002\u800c Job \u63a7\u5236\u5668\u4e4b\u6240\u4ee5\u8981\u4f7f\u7528\u8fd9\u79cd\u643a\u5e26\u4e86 UID \u7684 Label\uff0c\u5c31\u662f\u4e3a\u4e86\u907f\u514d\u4e0d\u540c Job \u5bf9\u8c61\u6240\u7ba1\u7406\u7684 Pod \u53d1\u751f\u91cd\u5408\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f88\u5feb Pod \u53d8\u6210\u4e86 Completed \u72b6\u6001\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bb9\u5668\u7684\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u6b63\u5e38\u9000\u51fa\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684\u65e5\u5fd7\uff1a \u279c ~ kubectl logs job-demo--1-p9s5r 9 8 7 6 5 4 3 2 1 \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-demo--1-p9s5r 0 /1 Completed 0 11m \u4e0a\u9762\u6211\u4eec\u8fd9\u91cc\u7684 Job \u4efb\u52a1\u5bf9\u5e94\u7684 Pod \u5728\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u53d8\u6210 Completed \u72b6\u6001\uff0c\u4f46\u662f\u5982\u679c\u6267\u884c\u4efb\u52a1\u7684 Pod \u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u4e00\u76f4\u6ca1\u6709\u7ed3\u675f\u600e\u4e48\u529e\u5462\uff1f\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u5728 Job \u5bf9\u8c61\u4e2d\u901a\u8fc7\u8bbe\u7f6e\u5b57\u6bb5 spec . activeDeadlineSeconds \u6765\u9650\u5236\u4efb\u52a1\u8fd0\u884c\u7684\u6700\u957f\u65f6\u95f4\uff0c\u6bd4\u5982\uff1a spec : activeDeadlineSeconds : 100 \u90a3\u4e48\u5f53\u6211\u4eec\u7684\u4efb\u52a1 Pod \u8fd0\u884c\u8d85\u8fc7\u4e86 100s \u540e\uff0c\u8fd9\u4e2a Job \u7684\u6240\u6709 Pod \u90fd\u4f1a\u88ab\u7ec8\u6b62\uff0c\u5e76\u4e14\uff0c Pod \u7684\u7ec8\u6b62\u539f\u56e0\u4f1a\u53d8\u6210 DeadlineExceeded \u3002 \u5982\u679c\u7684\u4efb\u52a1\u6267\u884c\u5931\u8d25\u4e86\uff0c\u4f1a\u600e\u4e48\u5904\u7406\u5462\uff0c\u8fd9\u4e2a\u548c\u5b9a\u4e49\u7684 restartPolicy \u6709\u5173\u7cfb\uff0c\u6bd4\u5982\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684 Job \u4efb\u52a1\uff0c\u5b9a\u4e49 restartPolicy: Never \u7684\u91cd\u542f\u7b56\u7565\uff1a # job-failed-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-failed-demo spec : template : spec : containers : - name : test-job image : busybox command : [ \"echo123\" , \"test failed job!\" ] restartPolicy : Never \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f job-failed-demo.yaml job.batch/job-failed-demo created \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-failed-demo--1-87wvj 0 /1 StartError 0 4m40s job-failed-demo--1-bl7jm 0 /1 StartError 0 5m7s job-failed-demo--1-dcmph 0 /1 StartError 0 3m job-failed-demo--1-hb24j 0 /1 StartError 0 20s job-failed-demo--1-n7h24 0 /1 StartError 0 4m20s job-failed-demo--1-q7vxq 0 /1 StartError 0 5m24s \u53ef\u4ee5\u770b\u5230\u5f53\u6211\u4eec\u8bbe\u7f6e\u6210 Never \u91cd\u542f\u7b56\u7565\u7684\u65f6\u5019\uff0cJob \u4efb\u52a1\u6267\u884c\u5931\u8d25\u540e\u4f1a\u4e0d\u65ad\u521b\u5efa\u65b0\u7684 Pod\uff0c\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u521b\u5efa\u4e0b\u53bb\uff0c\u4f1a\u6839\u636e spec . backoffLimit \u53c2\u6570\u8fdb\u884c\u9650\u5236\uff0c\u9ed8\u8ba4\u4e3a 6 \uff0c\u901a\u8fc7\u8be5\u5b57\u6bb5\u53ef\u4ee5\u5b9a\u4e49\u91cd\u5efa Pod \u7684\u6b21\u6570\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f Job \u63a7\u5236\u5668\u91cd\u65b0\u521b\u5efa Pod \u7684\u95f4\u9694\u662f\u5448\u6307\u6570\u589e\u52a0\u7684\uff0c\u5373\u4e0b\u4e00\u6b21\u91cd\u65b0\u521b\u5efa Pod \u7684\u52a8\u4f5c\u4f1a\u5206\u522b\u53d1\u751f\u5728 10s\u300120s\u300140s\u2026 \u540e\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u7684 restartPolicy : OnFailure \u91cd\u542f\u7b56\u7565\uff0c\u5219\u5f53 Job \u4efb\u52a1\u6267\u884c\u5931\u8d25\u540e\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684 Pod \u51fa\u6765\uff0c\u53ea\u4f1a\u4e0d\u65ad\u91cd\u542f Pod\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e spec . parallelism \u53c2\u6570\u6765\u8fdb\u884c\u5e76\u884c\u63a7\u5236\uff0c\u8be5\u53c2\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a Job \u5728\u4efb\u610f\u65f6\u95f4\u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a Pod \u540c\u65f6\u8fd0\u884c\u3002 spec . completions \u53c2\u6570\u53ef\u4ee5\u5b9a\u4e49 Job \u81f3\u5c11\u8981\u5b8c\u6210\u7684 Pod \u6570\u76ee\u3002\u5982\u4e0b\u6240\u793a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Job \u4efb\u52a1\uff0c\u8bbe\u7f6e\u5141\u8bb8\u5e76\u884c\u6570\u4e3a2\uff0c\u81f3\u5c11\u8981\u5b8c\u6210\u7684 Pod \u6570\u4e3a8\uff1a # job-para-demo.yaml apiVersion : batch/v1 kind : Job metadata : name : job-para-test spec : parallelism : 2 completions : 8 template : spec : containers : - name : test-job image : busybox command : [ \"echo\" , \"test paralle job!\" ] restartPolicy : Never \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-para-test--1-rwxm8 0 /1 ContainerCreating 0 6s job-para-test--1-vgtxf 0 /1 ContainerCreating 0 2s \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-para-test 0 /8 29s 29s \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE job-para-test 8 /8 111s 2m34s \u279c ~ kubectl get pod NAME READY STATUS RESTARTS AGE job-para-test--1-7nk2x 0 /1 Completed 0 76s job-para-test--1-dcdvp 0 /1 Completed 0 2m2s job-para-test--1-k9sgw 0 /1 Completed 0 2m36s job-para-test--1-rwkkb 0 /1 Completed 0 2m17s job-para-test--1-rwxm8 0 /1 Completed 0 2m36s job-para-test--1-tqlzd 0 /1 Completed 0 106s job-para-test--1-vgtxf 0 /1 Completed 0 2m32s job-para-test--1-vxj6b 0 /1 Completed 0 91s \u53ef\u4ee5\u770b\u5230\u4e00\u6b21\u53ef\u4ee5\u67092\u4e2a Pod \u540c\u65f6\u8fd0\u884c\uff0c\u9700\u89818\u4e2a Pod \u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u4e0d\u662f8\u4e2a\u6210\u529f\uff0c\u90a3\u4e48\u4f1a\u6839\u636e restartPolicy \u7684\u7b56\u7565\u8fdb\u884c\u5904\u7406\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u68c0\u67e5\u673a\u5236\u3002","title":"Job"},{"location":"Controller/Job%26CronJob/#cronjob","text":"CronJob \u5176\u5b9e\u5c31\u662f\u5728 Job \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e86\u65f6\u95f4\u8c03\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5468\u671f\u6027\u5730\u5728\u7ed9\u5b9a\u65f6\u95f4\u70b9\u8fd0\u884c\u3002\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u548c\u6211\u4eec Linux \u4e2d\u7684 crontab \u5c31\u975e\u5e38\u7c7b\u4f3c\u4e86\u3002 \u4e00\u4e2a CronJob \u5bf9\u8c61\u5176\u5b9e\u5c31\u5bf9\u5e94\u4e2d crontab \u6587\u4ef6\u4e2d\u7684\u4e00\u884c\uff0c\u5b83\u6839\u636e\u914d\u7f6e\u7684\u65f6\u95f4\u683c\u5f0f\u5468\u671f\u6027\u5730\u8fd0\u884c\u4e00\u4e2a Job \uff0c\u683c\u5f0f\u548c crontab \u4e5f\u662f\u4e00\u6837\u7684\u3002 crontab \u7684\u683c\u5f0f\u4e3a\uff1a\u5206 \u65f6 \u65e5 \u6708 \u661f\u671f \u8981\u8fd0\u884c\u7684\u547d\u4ee4 \u3002 \u7b2c1\u5217\u5206\u949f 0\uff5e59 \u7b2c2\u5217\u5c0f\u65f6 0\uff5e23 \u7b2c3\u5217\u65e5 1\uff5e31 \u7b2c4\u5217\u6708 1\uff5e12 \u7b2c5\u5217\u661f\u671f 0\uff5e7\uff080\u548c7\u8868\u793a\u661f\u671f\u5929\uff09 \u7b2c6\u5217\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \u73b0\u5728\uff0c\u6211\u4eec\u7528 CronJob \u6765\u7ba1\u7406\u6211\u4eec\u4e0a\u9762\u7684 Job \u4efb\u52a1\uff0c\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a # cronjob-demo.yaml apiVersion : batch/v1 kind : CronJob metadata : name : cronjob-demo spec : schedule : \"*/1 * * * *\" jobTemplate : spec : template : spec : restartPolicy : OnFailure containers : - name : hello image : busybox args : - \"bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u8fd9\u91cc\u7684 Kind \u53d8\u6210\u4e86 CronJob \u4e86\uff0c\u8981\u6ce8\u610f\u7684\u662f . spec . schedule \u5b57\u6bb5\u662f\u5fc5\u987b\u586b\u5199\u7684\uff0c\u7528\u6765\u6307\u5b9a\u4efb\u52a1\u8fd0\u884c\u7684\u5468\u671f\uff0c\u683c\u5f0f\u5c31\u548c crontab \u4e00\u6837\uff0c\u53e6\u5916\u4e00\u4e2a\u5b57\u6bb5\u662f . spec . jobTemplate , \u7528\u6765\u6307\u5b9a\u9700\u8981\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u683c\u5f0f\u5f53\u7136\u548c Job \u662f\u4e00\u81f4\u7684\u3002\u8fd8\u6709\u4e00\u4e9b\u503c\u5f97\u6211\u4eec\u5173\u6ce8\u7684\u5b57\u6bb5 . spec . successfulJobsHistoryLimit (\u9ed8\u8ba4\u4e3a 3 ) \u548c . spec . failedJobsHistoryLimit (\u9ed8\u8ba4\u4e3a 1 )\uff0c\u8868\u793a\u5386\u53f2\u9650\u5236\uff0c\u662f\u53ef\u9009\u7684\u5b57\u6bb5\uff0c\u6307\u5b9a\u53ef\u4ee5\u4fdd\u7559\u591a\u5c11\u5b8c\u6210\u548c\u5931\u8d25\u7684 Job \u3002\u7136\u800c\uff0c\u5f53\u8fd0\u884c\u4e00\u4e2a CronJob \u65f6\uff0c Job \u53ef\u4ee5\u5f88\u5feb\u5c31\u5806\u79ef\u5f88\u591a\uff0c\u6240\u4ee5\u4e00\u822c\u63a8\u8350\u8bbe\u7f6e\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\uff0c\u5982\u679c\u8bbe\u7f6e\u9650\u5236\u7684\u503c\u4e3a 0\uff0c\u90a3\u4e48\u76f8\u5173\u7c7b\u578b\u7684 Job \u5b8c\u6210\u540e\u5c06\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u76f4\u63a5\u65b0\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f cronjob-demo.yaml cronjob \"cronjob-demo\" created \u7136\u540e\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684 Cronjob \u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl get cronjob NAME SCHEDULE SUSPEND ACTIVE LAST SCHEDULE AGE cronjob-demo */1 * * * * False 0 28s 36s \u7a0d\u5fae\u7b49\u4e00\u4f1a\u513f\u67e5\u770b\u53ef\u4ee5\u53d1\u73b0\u591a\u4e86\u51e0\u4e2a Job \u8d44\u6e90\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5c31\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u8bbe\u7f6e\u7684 CronJob \u8d44\u6e90\u5bf9\u8c61\uff0c\u6bcf1\u5206\u949f\u6267\u884c\u4e00\u4e2a\u65b0\u7684 Job\uff1a \u279c ~ kubectl get job NAME COMPLETIONS DURATION AGE cronjob-demo-27280016 1 /1 17s 118s cronjob-demo-27280017 1 /1 16s 58s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE cronjob-demo-27280016--1-kvkt4 0 /1 Completed 0 2m9s cronjob-demo-27280017--1-pkwdb 0 /1 Completed 0 69s cronjob-demo-27280018--1-q9n7w 0 /1 ContainerCreating 0 9s \u8fd9\u4e2a\u5c31\u662f CronJob \u7684\u57fa\u672c\u7528\u6cd5\uff0c\u4e00\u65e6\u4e0d\u518d\u9700\u8981 CronJob\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u5220\u9664\u5b83\uff1a \u279c ~ kubectl delete cronjob cronjob-demo cronjob \"cronjob-demo\" deleted \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u5c06\u4f1a\u7ec8\u6b62\u6b63\u5728\u521b\u5efa\u7684 Job\uff0c\u4f46\u662f\u8fd0\u884c\u4e2d\u7684 Job \u5c06\u4e0d\u4f1a\u88ab\u7ec8\u6b62\uff0c\u4e0d\u4f1a\u5220\u9664 Job \u6216 \u5b83\u4eec\u7684 Pod\u3002 \u601d\u8003\uff1a\u90a3\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53bb\u6267\u884c\u4e00\u4e2a Job \u6216\u8005 Cronjob \u53c8\u8be5\u600e\u4e48\u6765\u5b9e\u73b0\u5462\uff1f","title":"CronJob"},{"location":"Controller/OpenKruise/","text":"OpenKruise \u00b6 OpenKruise \u662f\u4e00\u4e2a\u57fa\u4e8e Kubernetes \u7684 \u6269\u5c55\u5957\u4ef6 \uff0c\u4e3b\u8981\u805a\u7126\u4e8e\u4e91\u539f\u751f\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff0c\u6bd4\u5982\u90e8\u7f72\u3001\u53d1\u5e03\u3001\u8fd0\u7ef4\u4ee5\u53ca\u53ef\u7528\u6027\u9632\u62a4\u3002 OpenKruise \u63d0\u4f9b\u7684\u7edd\u5927\u90e8\u5206\u80fd\u529b\u90fd\u662f\u57fa\u4e8e CRD \u6269\u5c55\u6765\u5b9a\u4e49\u7684\uff0c\u5b83\u4eec\u4e0d\u5b58\u5728\u4e8e\u4efb\u4f55\u5916\u90e8\u4f9d\u8d56\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u4efb\u610f\u7eaf\u51c0\u7684 Kubernetes \u96c6\u7fa4\u4e2d \u3002Kubernetes \u81ea\u8eab\u63d0\u4f9b\u7684\u4e00\u4e9b\u5e94\u7528\u90e8\u7f72\u7ba1\u7406\u529f\u80fd\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u5e94\u7528\u4e0e\u96c6\u7fa4\u7684\u573a\u666f\u8fd9\u4e9b\u529f\u80fd\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\uff0c OpenKruise \u5f25\u8865\u4e86 Kubernetes \u5728\u5e94\u7528\u90e8\u7f72\u3001\u5347\u7ea7\u3001\u9632\u62a4\u3001\u8fd0\u7ef4\u7b49\u9886\u57df\u7684\u4e0d\u8db3 \u3002 OpenKruise \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7684\u4e00\u4e9b\u6838\u5fc3\u80fd\u529b\uff1a \u589e\u5f3a\u7248\u672c\u7684 Workloads \uff1aOpenKruise \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u589e\u5f3a\u7248\u672c\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u6bd4\u5982 CloneSet\u3001Advanced StatefulSet\u3001Advanced DaemonSet\u3001BroadcastJob \u7b49\u3002\u5b83\u4eec\u4e0d\u4ec5\u652f\u6301\u7c7b\u4f3c\u4e8e Kubernetes \u539f\u751f Workloads \u7684\u57fa\u7840\u529f\u80fd\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5982\u539f\u5730\u5347\u7ea7\u3001\u53ef\u914d\u7f6e\u7684\u6269\u7f29\u5bb9/\u53d1\u5e03\u7b56\u7565\u3001\u5e76\u53d1\u64cd\u4f5c\u7b49\u3002\u5176\u4e2d\uff0c\u539f\u5730\u5347\u7ea7\u662f\u4e00\u79cd\u5347\u7ea7\u5e94\u7528\u5bb9\u5668\u955c\u50cf\u751a\u81f3\u73af\u5883\u53d8\u91cf\u7684\u5168\u65b0\u65b9\u5f0f\uff0c\u5b83\u53ea\u4f1a\u7528\u65b0\u7684\u955c\u50cf\u91cd\u5efa Pod \u4e2d\u7684\u7279\u5b9a\u5bb9\u5668\uff0c\u6574\u4e2a Pod \u4ee5\u53ca\u5176\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u90fd\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002\u56e0\u6b64\u5b83\u5e26\u6765\u4e86\u66f4\u5feb\u7684\u53d1\u5e03\u901f\u5ea6\uff0c\u4ee5\u53ca\u907f\u514d\u4e86\u5bf9\u5176\u4ed6 Scheduler\u3001CNI\u3001CSI \u7b49\u7ec4\u4ef6\u7684\u8d1f\u9762\u5f71\u54cd\u3002 \u5e94\u7528\u7684\u65c1\u8def\u7ba1\u7406 \uff1aOpenKruise \u63d0\u4f9b\u4e86\u591a\u79cd\u901a\u8fc7\u65c1\u8def\u7ba1\u7406\u5e94\u7528 sidecar \u5bb9\u5668\u3001\u591a\u533a\u57df\u90e8\u7f72\u7684\u65b9\u5f0f\uff0c\u201c\u65c1\u8def\u201d \u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4e0d\u9700\u8981\u4fee\u6539\u5e94\u7528\u7684 Workloads \u6765\u5b9e\u73b0\u5b83\u4eec\u3002\u6bd4\u5982\uff0cSidecarSet \u80fd\u5e2e\u52a9\u4f60\u5728\u6240\u6709\u5339\u914d\u7684 Pod \u521b\u5efa\u7684\u65f6\u5019\u90fd\u6ce8\u5165\u7279\u5b9a\u7684 sidecar \u5bb9\u5668\uff0c\u751a\u81f3\u53ef\u4ee5\u539f\u5730\u5347\u7ea7\u5df2\u7ecf\u6ce8\u5165\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u3001\u5e76\u4e14\u5bf9 Pod \u4e2d\u5176\u4ed6\u5bb9\u5668\u4e0d\u9020\u6210\u5f71\u54cd\u3002\u800c WorkloadSpread \u53ef\u4ee5\u7ea6\u675f\u65e0\u72b6\u6001 Workload \u6269\u5bb9\u51fa\u6765 Pod \u7684\u533a\u57df\u5206\u5e03\uff0c\u8d4b\u4e88\u5355\u4e00 Workload \u7684\u591a\u533a\u57df\u548c\u5f39\u6027\u90e8\u7f72\u7684\u80fd\u529b\u3002 \u9ad8\u53ef\u7528\u6027\u9632\u62a4 \uff1aOpenKruise \u53ef\u4ee5\u4fdd\u62a4\u4f60\u7684 Kubernetes \u8d44\u6e90\u4e0d\u53d7\u7ea7\u8054\u5220\u9664\u673a\u5236\u7684\u5e72\u6270\uff0c\u5305\u62ec CRD\u3001Namespace\u3001\u4ee5\u53ca\u51e0\u4e4e\u5168\u90e8\u7684 Workloads \u7c7b\u578b\u8d44\u6e90\u3002\u76f8\u6bd4\u4e8e Kubernetes \u539f\u751f\u7684 PDB \u53ea\u63d0\u4f9b\u9488\u5bf9 Pod Eviction \u7684\u9632\u62a4\uff0cPodUnavailableBudget \u80fd\u591f\u9632\u62a4 Pod Deletion\u3001Eviction\u3001Update \u7b49\u8bb8\u591a\u79cd voluntary disruption \u573a\u666f\u3002 \u9ad8\u7ea7\u7684\u5e94\u7528\u8fd0\u7ef4\u80fd\u529b \uff1aOpenKruise \u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u9ad8\u7ea7\u7684\u8fd0\u7ef4\u80fd\u529b\u6765\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7ba1\u7406\u5e94\u7528\uff0c\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7 ImagePullJob \u6765\u5728\u4efb\u610f\u8303\u56f4\u7684\u8282\u70b9\u4e0a\u9884\u5148\u62c9\u53d6\u67d0\u4e9b\u955c\u50cf\uff0c\u6216\u8005\u6307\u5b9a\u67d0\u4e2a Pod \u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u88ab\u539f\u5730\u91cd\u542f\u3002 \u67b6\u6784 \u00b6 \u4e0b\u56fe\u662f OpenKruise \u7684\u6574\u4f53\u67b6\u6784\uff1a \u9996\u5148\u6211\u4eec\u8981\u6e05\u695a\u6240\u6709 OpenKruise \u7684\u529f\u80fd\u90fd\u662f\u901a\u8fc7 Kubernetes CRD \u6765\u63d0\u4f9b\u7684\uff1a \u279c kubectl get crd | grep kruise.io advancedcronjobs.apps.kruise.io 2021 -09-16T06:02:36Z broadcastjobs.apps.kruise.io 2021 -09-16T06:02:36Z clonesets.apps.kruise.io 2021 -09-16T06:02:36Z containerrecreaterequests.apps.kruise.io 2021 -09-16T06:02:36Z daemonsets.apps.kruise.io 2021 -09-16T06:02:36Z imagepulljobs.apps.kruise.io 2021 -09-16T06:02:36Z nodeimages.apps.kruise.io 2021 -09-16T06:02:36Z podunavailablebudgets.policy.kruise.io 2021 -09-16T06:02:36Z resourcedistributions.apps.kruise.io 2021 -09-16T06:02:36Z sidecarsets.apps.kruise.io 2021 -09-16T06:02:36Z statefulsets.apps.kruise.io 2021 -09-16T06:02:36Z uniteddeployments.apps.kruise.io 2021 -09-16T06:02:37Z workloadspreads.apps.kruise.io 2021 -09-16T06:02:37Z \u5176\u4e2d Kruise-manager \u662f\u4e00\u4e2a\u8fd0\u884c\u63a7\u5236\u5668\u548c webhook \u7684\u4e2d\u5fc3\u7ec4\u4ef6\uff0c\u5b83\u901a\u8fc7 Deployment \u90e8\u7f72\u5728 kruise-system \u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u4ece\u903b\u8f91\u4e0a\u6765\u770b\uff0c\u5982 cloneset-controller \u3001 sidecarset-controller \u8fd9\u4e9b\u7684\u63a7\u5236\u5668\u90fd\u662f\u72ec\u7acb\u8fd0\u884c\u7684\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u51cf\u5c11\u590d\u6742\u5ea6\uff0c\u5b83\u4eec\u90fd\u88ab\u6253\u5305\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u5e76\u8fd0\u884c\u5728 kruise-controller-manager-xxx \u8fd9\u4e2a Pod \u4e2d\u3002\u9664\u4e86\u63a7\u5236\u5668\u4e4b\u5916\uff0ckruise-controller-manager-xxx \u4e2d\u8fd8\u5305\u542b\u4e86\u9488\u5bf9 Kruise CRD \u4ee5\u53ca Pod \u8d44\u6e90\u7684 admission webhook \u3002 Kruise-manager \u4f1a\u521b\u5efa\u4e00\u4e9b webhook configurations \u6765\u914d\u7f6e\u54ea\u4e9b\u8d44\u6e90\u9700\u8981\u611f\u77e5\u5904\u7406\u3001\u4ee5\u53ca\u63d0\u4f9b\u4e00\u4e2a Service \u6765\u7ed9 kube-apiserver \u8c03\u7528\u3002 \u4ece v0.8.0 \u7248\u672c\u5f00\u59cb\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684 Kruise-daemon \u7ec4\u4ef6\uff0c\u5b83\u901a\u8fc7 DaemonSet \u90e8\u7f72\u5230\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u63d0\u4f9b\u955c\u50cf\u9884\u70ed\u3001\u5bb9\u5668\u91cd\u542f\u7b49\u529f\u80fd\u3002 \u53ef\u4ee5\u901a\u8fc7\u67e5\u9605\u8fd9\u4e9b \u53d1\u5e03\u7684\u65b0\u529f\u80fd \u3002 \u5b89\u88c5 \u00b6 \u8fd9\u91cc\u6211\u4eec\u540c\u6837\u8fd8\u662f\u4f7f\u7528 Helm \u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c \u9700\u8981\u6ce8\u610f\u4ece v1.0.0 \u5f00\u59cb\uff0cOpenKruise \u8981\u6c42\u5728 Kubernetes >= 1.16 \u4ee5\u4e0a\u7248\u672c\u7684\u96c6\u7fa4\u4e2d\u5b89\u88c5\u548c\u4f7f\u7528 \u3002 \u9996\u5148\u6dfb\u52a0 charts \u4ed3\u5e93\uff1a \u279c helm repo add openkruise https://openkruise.github.io/charts \u279c helm repo update \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684\u5e94\u7528\uff1a \u279c helm upgrade --install kruise openkruise/kruise --version 1 .1.0 \u8be5 charts \u5728\u6a21\u677f\u4e2d\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u547d\u540d\u7a7a\u95f4\u4e3a kruise-system \uff0c\u6240\u4ee5\u5728\u5b89\u88c5\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u5982\u679c\u4f60\u7684\u73af\u5883\u8bbf\u95ee DockerHub \u5b98\u65b9\u955c\u50cf\u8f83\u6162\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u955c\u50cf\u66ff\u6362\u6210\u963f\u91cc\u4e91\u7684\u955c\u50cf\uff1a \u279c helm upgrade --install kruise openkruise/kruise --set manager.image.repository = openkruise-registry.cn-hangzhou.cr.aliyuncs.com/openkruise/kruise-manager --version 1 .0.1 \u5e94\u7528\u90e8\u7f72\u5b8c\u6210\u540e\u4f1a\u5728 kruise-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u8fd0\u884c2\u4e2a kruise-manager \u7684 Pod\uff0c\u540c\u6837\u5b83\u4eec\u4e4b\u95f4\u91c7\u7528 leader-election \u7684\u65b9\u5f0f\u9009\u4e3b\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u63d0\u4f9b\u670d\u52a1\uff0c\u8fbe\u5230\u9ad8\u53ef\u7528\u7684\u76ee\u7684\uff0c\u6b64\u5916\u8fd8\u4f1a\u4ee5 DaemonSet \u7684\u5f62\u5f0f\u542f\u52a8 kruise-daemon \u7ec4\u4ef6\uff1a \u279c kubectl get pods -n kruise-system NAME READY STATUS RESTARTS AGE kruise-controller-manager-f5c9b55c5-7hgt9 1 /1 Running 0 4m3s kruise-controller-manager-f5c9b55c5-v9ptf 1 /1 Running 0 4m3s kruise-daemon-bqf5v 1 /1 Running 0 4m3s kruise-daemon-hvgwv 1 /1 Running 0 4m3s kruise-daemon-tnqsx 1 /1 Running 0 4m3s \u5982\u679c\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684\u53c2\u6570\u8fdb\u884c\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u53ef\u914d\u7f6e\u7684 values \u503c\u53ef\u4ee5\u53c2\u8003 charts \u6587\u6863 \u8fdb\u884c\u5b9a\u5236\u3002 CloneSet \u00b6 CloneSet \u63a7\u5236\u5668\u662f OpenKruise \u63d0\u4f9b\u7684\u5bf9\u539f\u751f Deployment \u7684\u589e\u5f3a\u63a7\u5236\u5668\uff0c\u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\u548c Deployment \u51e0\u4e4e\u4e00\u81f4\uff0c\u5982\u4e0b\u6240\u793a\u662f\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a CloneSet \u8d44\u6e90\u5bf9\u8c61\uff1a # cloneset-demo.yaml apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : name : cs-demo spec : replicas : 3 selector : matchLabels : app : cs template : metadata : labels : app : cs spec : containers : - name : nginx image : nginx:alpine imagePullPolicy : IfNotPresent ports : - containerPort : 80 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8fd9\u4e2a CloneSet \u5bf9\u8c61\uff1a \u279c kubectl apply -f cloneset-demo.yaml \u279c kubectl get cloneset cs-demo NAME DESIRED UPDATED UPDATED_READY READY TOTAL AGE cs-demo 3 3 3 3 3 112s \u279c kubectl describe cloneset cs-demo Name : cs-demo Namespace : default Labels : <none> Annotations: kubectl.kubernetes.io/last-applied-configuration : { \"apiVersion\" : \"apps.kruise.io/v1alpha1\" , \"kind\" : \"CloneSet\" , \"metadata\" :{ \"annotations\" :{}, \"name\" : \"cs-demo\" , \"namespace\" : \"default\" }, \"spec\" :{ \"re... API Version: apps.kruise.io/v1alpha1 Kind: CloneSet ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-b6r6t Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-fsbx5 Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-fv5gb \u8be5\u5bf9\u8c61\u521b\u5efa\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl describe \u547d\u4ee4\u67e5\u770b\u5bf9\u5e94\u7684 Events \u4fe1\u606f\uff0c\u53ef\u4ee5\u53d1\u73b0 cloneset-controller \u662f\u76f4\u63a5\u521b\u5efa\u7684 Pod\uff0c \u8fd9\u4e2a\u548c\u539f\u751f\u7684 Deployment \u5c31\u6709\u4e00\u4e9b\u533a\u522b\u4e86 \uff0cDeployment \u662f\u901a\u8fc7 ReplicaSet \u53bb\u521b\u5efa\u7684 Pod\uff0c\u6240\u4ee5\u4ece\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765 CloneSet \u662f\u76f4\u63a5\u7ba1\u7406 Pod \u7684 \uff0c3\u4e2a\u526f\u672c\u7684 Pod \u6b64\u65f6\u4e5f\u521b\u5efa\u6210\u529f\u4e86\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-b6r6t 1 /1 Running 0 5m19s cs-demo-fsbx5 1 /1 Running 0 5m19s cs-demo-fv5gb 1 /1 Running 0 5m19s CloneSet \u867d\u7136\u5728\u4f7f\u7528\u4e0a\u548c Deployment \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4f46\u8fd8\u662f\u6709\u975e\u5e38\u591a\u6bd4 Deployment \u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u4ecb\u7ecd\u4e0b\u3002 \u6269\u7f29\u5bb9 \u00b6 CloneSet \u5728\u6269\u5bb9\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 ScaleStrategy . MaxUnavailable \u6765\u9650\u5236\u6269\u5bb9\u7684\u6b65\u957f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bf9\u670d\u52a1\u5e94\u7528\u7684\u5f71\u54cd\u6700\u5c0f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7edd\u5bf9\u503c\u6216\u767e\u5206\u6bd4\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u503c\uff0c\u5219\u8868\u793a\u4e0d\u9650\u5236\u3002 \u6bd4\u5982\u6211\u4eec\u5728\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u7684Pod\u2192Spec\u91cc\u9762\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u6570\u636e\uff1a spec : minReadySeconds : 60 scaleStrategy : maxUnavailable : 1 replicas : 5 ...... \u4e0a\u9762\u6211\u4eec\u914d\u7f6e scaleStrategy . maxUnavailable \u4e3a1\uff0c\u7ed3\u5408 minReadySeconds \u53c2\u6570\uff0c\u8868\u793a\u5728\u6269\u5bb9\u65f6\uff0c\u53ea\u6709\u5f53\u4e0a\u4e00\u4e2a\u6269\u5bb9\u51fa\u7684 Pod \u5df2\u7ecf Ready \u8d85\u8fc7\u4e00\u5206\u949f\u540e\uff0cCloneSet \u624d\u4f1a\u6267\u884c\u521b\u5efa\u4e0b\u4e00\u4e2a Pod\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u6269\u5bb9\u62105\u4e2a\u526f\u672c\uff0c\u66f4\u65b0\u4e0a\u9762\u5bf9\u8c61\u540e\u67e5\u770b CloneSet \u7684\u4e8b\u4ef6\uff1a \u279c kubectl describe cloneset cs-demo ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-b6r6t Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-fsbx5 Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-fv5gb Warning ScaleUpLimited 2m39s cloneset-controller scaleUp is limited because of scaleStrategy.maxUnavailable, limit: 1 Normal SuccessfulCreate 2m39s cloneset-controller succeed to create pod cs-demo-xlsdg Normal SuccessfulCreate 98s cloneset-controller succeed to create pod cs-demo-8w7h4 Warning ScaleUpLimited 68s ( x12 over 2m39s ) cloneset-controller scaleUp is limited because of scaleStrategy.maxUnavailable, limit: 0 Normal SuccessfulCreate 37s cloneset-controller succeed to create pod cs-demo-79rcx \u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u65f6\u95f4\u6269\u5bb9\u4e86\u4e00\u4e2a Pod\uff0c\u7531\u4e8e\u6211\u4eec\u914d\u7f6e\u4e86 minReadySeconds : 60 \uff0c\u4e5f\u5c31\u662f\u65b0\u6269\u5bb9\u7684 Pod \u521b\u5efa\u6210\u529f\u8d85\u8fc71\u5206\u949f\u540e\u624d\u4f1a\u6269\u5bb9\u53e6\u5916\u4e00\u4e2a Pod\uff0c\u4e0a\u9762\u7684 Events \u4fe1\u606f\u4e5f\u80fd\u8868\u73b0\u51fa\u6765\uff0c\u67e5\u770b Pod \u7684 AGE \u4e5f\u80fd\u770b\u51fa\u6765\u6269\u5bb9\u76842\u4e2a Pod \u4e4b\u95f4\u95f4\u9694\u4e861\u5206\u949f\u5de6\u53f3\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-79rcx 1 /1 Running 0 2m3s cs-demo-8w7h4 1 /1 Running 0 3m4s cs-demo-b6r6t 1 /1 Running 0 36m cs-demo-fv5gb 1 /1 Running 0 36m cs-demo-p4kmw 1 /1 Running 0 36s \u5f53 CloneSet \u88ab\u7f29\u5bb9\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b Pod \u6765\u5220\u9664\uff0c \u8fd9\u5bf9\u4e8e StatefulSet \u6216\u8005 Deployment \u6765\u8bf4\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c StatefulSet \u662f\u6839\u636e\u5e8f\u53f7\u6765\u5220\u9664 Pod\uff0c\u800c Deployment/ReplicaSet \u76ee\u524d\u53ea\u80fd\u6839\u636e\u63a7\u5236\u5668\u91cc\u5b9a\u4e49\u7684\u6392\u5e8f\u6765\u5220\u9664 \u3002\u800c CloneSet \u5141\u8bb8\u7528\u6237\u5728\u7f29\u5c0f replicas \u6570\u91cf\u7684\u540c\u65f6\uff0c\u6307\u5b9a\u60f3\u8981\u5220\u9664\u7684 Pod \u540d\u5b57\uff0c\u5982\u4e0b\u6240\u793a\uff1a spec : minReadySeconds : 60 scaleStrategy : maxUnavailable : 1 podsToDelete : - cs-demo-79rcx replicas : 4 ...... \u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u5c06\u5e94\u7528\u7f29\u52304\u4e2a Pod\uff0c\u5982\u679c\u5728 podsToDelete \u5217\u8868\u4e2d\u6307\u5b9a\u4e86 Pod \u540d\u5b57\uff0c\u5219\u63a7\u5236\u5668\u4f1a\u4f18\u5148\u5220\u9664\u8fd9\u4e9b Pod\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u5220\u9664\u7684 Pod\uff0c\u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u4ece podsToDelete \u5217\u8868\u4e2d\u6e05\u7406\u6389\u3002\u6bd4\u5982\u6211\u4eec\u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u540e cs-demo-79rcx \u8fd9\u4e2a Pod \u4f1a\u88ab\u79fb\u9664\uff0c\u5176\u4f59\u4f1a\u4fdd\u7559\u4e0b\u6765\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-8w7h4 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-b6r6t 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-fv5gb 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-p4kmw 1 /1 Running 4 ( 51m ago ) 3d6h \u5982\u679c\u4f60\u53ea\u628a Pod \u540d\u5b57\u52a0\u5230 podsToDelete\uff0c\u4f46\u6ca1\u6709\u4fee\u6539 replicas \u6570\u91cf\uff0c\u90a3\u4e48\u63a7\u5236\u5668\u4f1a\u5148\u628a\u6307\u5b9a\u7684 Pod \u5220\u6389\uff0c\u7136\u540e\u518d\u6269\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u53e6\u4e00\u79cd\u76f4\u63a5\u5220\u9664 Pod \u7684\u65b9\u5f0f\u662f\u5728\u8981\u5220\u9664\u7684 Pod \u4e0a\u6253 apps.kruise.io/specified-delete : true \u6807\u7b7e\u3002 # cs-demo-b6r6t will be deleted by label \u279c kubectl label pod cs-demo-b6r6t apps.kruise.io/specified-delete = true \u76f8\u6bd4\u4e8e\u624b\u52a8\u76f4\u63a5\u5220\u9664 Pod\uff0c\u4f7f\u7528 podsToDelete \u6216 apps.kruise.io/specified-delete: true \u65b9\u5f0f\u4f1a\u6709 CloneSet \u7684 maxUnavailable/maxSurge \u6765\u4fdd\u62a4\u5220\u9664\uff0c \u5e76\u4e14\u4f1a\u89e6\u53d1 PreparingDelete \u751f\u547d\u5468\u671f\u7684\u94a9\u5b50 \u3002 CloneSet \u00b6 CloneSet \u4e00\u5171\u63d0\u4f9b\u4e86 3 \u79cd\u5347\u7ea7\u65b9\u5f0f\uff1a ReCreate : \u5220\u9664\u65e7 Pod \u548c\u5b83\u7684 PVC\uff0c\u7136\u540e\u7528\u65b0\u7248\u672c\u91cd\u65b0\u521b\u5efa\u51fa\u6765\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u65b9\u5f0f InPlaceIfPossible : \u4f1a\u4f18\u5148\u5c1d\u8bd5\u539f\u5730\u5347\u7ea7 Pod\uff0c\u5982\u679c\u4e0d\u884c\u518d\u91c7\u7528\u91cd\u5efa\u5347\u7ea7 InPlaceOnly : \u53ea\u5141\u8bb8\u91c7\u7528\u539f\u5730\u5347\u7ea7\uff0c\u56e0\u6b64\uff0c\u7528\u6237\u53ea\u80fd\u4fee\u6539\u4e0a\u4e00\u6761\u4e2d\u7684\u9650\u5236\u5b57\u6bb5\uff0c\u5982\u679c\u5c1d\u8bd5\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5\u4f1a\u88ab\u62d2\u7edd \u8fd9\u91cc\u6709\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u539f\u5730\u5347\u7ea7 \uff0c\u8fd9\u4e5f\u662f OpenKruise \u63d0\u4f9b\u7684\u6838\u5fc3\u529f\u80fd\u4e4b\u4e00\uff0c\u5f53\u6211\u4eec\u8981\u5347\u7ea7\u4e00\u4e2a Pod \u4e2d\u955c\u50cf\u7684\u65f6\u5019\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u91cd\u5efa\u5347\u7ea7\u548c\u539f\u5730\u5347\u7ea7\u7684\u533a\u522b\uff1a \u91cd\u5efa\u5347\u7ea7\u65f6\u6211\u4eec\u9700\u8981\u5220\u9664\u65e7 Pod\u3001\u521b\u5efa\u65b0 Pod Pod \u540d\u5b57\u548c uid \u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e24\u4e2a Pod \u5bf9\u8c61\uff08\u6bd4\u5982 Deployment \u5347\u7ea7\uff09 Pod \u540d\u5b57\u53ef\u80fd\u4e0d\u53d8\u3001\u4f46 uid \u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u540c\u7684 Pod \u5bf9\u8c61\uff0c\u53ea\u662f\u590d\u7528\u4e86\u540c\u4e00\u4e2a\u540d\u5b57\uff08\u6bd4\u5982 StatefulSet \u5347\u7ea7\uff09 Pod \u6240\u5728 Node \u540d\u5b57\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u65b0 Pod \u5f88\u53ef\u80fd\u4e0d\u4f1a\u8c03\u5ea6\u5230\u4e4b\u524d\u6240\u5728\u7684 Node \u8282\u70b9 Pod IP \u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u65b0 Pod \u5f88\u5927\u53ef\u80fd\u6027\u662f\u4e0d\u4f1a\u88ab\u5206\u914d\u5230\u4e4b\u524d\u7684 IP \u5730\u5740 \u4f46\u662f\u5bf9\u4e8e\u539f\u5730\u5347\u7ea7\uff0c\u6211\u4eec\u4ecd\u7136\u590d\u7528\u540c\u4e00\u4e2a Pod \u5bf9\u8c61\uff0c\u53ea\u662f\u4fee\u6539\u5b83\u91cc\u9762\u7684\u5b57\u6bb5 \u53ef\u4ee5\u907f\u514d\u5982\u8c03\u5ea6\u3001\u5206\u914d IP\u3001\u6302\u8f7d\u76d8\u7b49\u989d\u5916\u7684\u64cd\u4f5c\u548c\u4ee3\u4ef7 \u66f4\u5feb\u7684\u955c\u50cf\u62c9\u53d6\uff0c\u56e0\u4e3a\u4f1a\u590d\u7528\u5df2\u6709\u65e7\u955c\u50cf\u7684\u5927\u90e8\u5206 layer \u5c42\uff0c\u53ea\u9700\u8981\u62c9\u53d6\u65b0\u955c\u50cf\u53d8\u5316\u7684\u4e00\u4e9b layer \u5f53\u4e00\u4e2a\u5bb9\u5668\u5728\u539f\u5730\u5347\u7ea7\u65f6\uff0cPod \u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u4ecd\u7136\u7ef4\u6301\u8fd0\u884c \u663e\u7136\uff0c\u5982\u679c\u80fd\u7528\u539f\u5730\u5347\u7ea7\u65b9\u5f0f\u6765\u5347\u7ea7\u6211\u4eec\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5bf9\u5728\u7ebf\u5e94\u7528\u7684\u5f71\u54cd\u662f\u6700\u5c0f\u7684\u3002\u4e0a\u9762\u6211\u4eec\u63d0\u5230 CloneSet \u5347\u7ea7\u7c7b\u578b\u652f\u6301 InPlaceIfPossible \uff0c\u8fd9\u610f\u5473\u7740 Kruise \u4f1a\u5c3d\u91cf\u5bf9 Pod \u91c7\u53d6\u539f\u5730\u5347\u7ea7\uff0c\u5982\u679c\u4e0d\u80fd\u5219\u9000\u5316\u5230\u91cd\u5efa\u5347\u7ea7\uff0c\u4ee5\u4e0b\u7684\u6539\u52a8\u4f1a\u88ab\u5141\u8bb8\u6267\u884c\u539f\u5730\u5347\u7ea7 \u66f4\u65b0 workload \u4e2d\u7684 spec.template.metadata.*\uff0c\u6bd4\u5982 labels/annotations\uff0cKruise \u53ea\u4f1a\u5c06 metadata \u4e2d\u7684\u6539\u52a8\u66f4\u65b0\u5230\u5b58\u91cf Pod \u4e0a\u3002 \u66f4\u65b0 workload \u4e2d\u7684 spec.template.spec.containers[x].image\uff0cKruise \u4f1a\u539f\u5730\u5347\u7ea7 Pod \u4e2d\u8fd9\u4e9b\u5bb9\u5668\u7684\u955c\u50cf\uff0c\u800c\u4e0d\u4f1a\u91cd\u5efa\u6574\u4e2a Pod\u3002 \u4ece Kruise v1.0 \u7248\u672c\u5f00\u59cb\uff0c\u66f4\u65b0 spec.template.metadata.labels/annotations \u5e76\u4e14 container \u4e2d\u6709\u914d\u7f6e env from \u8fd9\u4e9b\u6539\u52a8\u7684 labels/anntations\uff0cKruise \u4f1a\u539f\u5730\u5347\u7ea7\u8fd9\u4e9b\u5bb9\u5668\u6765\u751f\u6548\u65b0\u7684 env \u503c\u3002 \u5426\u5219\uff0c\u5176\u4ed6\u5b57\u6bb5\u7684\u6539\u52a8\uff0c\u6bd4\u5982 spec.template.spec.containers[x].env \u6216 spec.template.spec.containers[x].resources \uff0c\u90fd\u662f\u4f1a\u56de\u9000\u4e3a\u91cd\u5efa\u5347\u7ea7\u3002 \u6bd4\u5982\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5e94\u7528\u5347\u7ea7\u65b9\u5f0f\u8bbe\u7f6e\u4e3a InPlaceIfPossible \uff0c\u53ea\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u4e2d\u6dfb\u52a0 spec.updateStrategy.type : InPlaceIfPossible \u5373\u53ef\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : name : cs-demo spec : updateStrategy : type : InPlaceIfPossible ...... \u66f4\u65b0\u540e\u53ef\u4ee5\u53d1\u73b0 Pod \u7684\u72b6\u6001\u5e76\u6ca1\u6709\u53d1\u751f\u4ec0\u4e48\u5927\u7684\u53d8\u5316\uff0c\u540d\u79f0\u3001IP \u90fd\u4e00\u6837\uff0c\u552f\u4e00\u53d8\u5316\u7684\u662f\u955c\u50cf tag\uff1a \u279c kubectl get pods -l app=cs NAME READY STATUS RESTARTS AGE cs-demo-8w7h4 1/1 Running 4 (55m ago) 3d6h cs-demo-b6r6t 1/1 Running 4 (55m ago) 3d6h cs-demo-fv5gb 1/1 Running 5 (20s ago) 3d6h cs-demo-p4kmw 1/1 Running 5 (83s ago) 3d6h \u279c kubectl describe cloneset cs-demo Name : cs-demo Namespace : default Labels : <none> Annotations : <none> API Version : apps.kruise.io/v1alpha1 Kind : CloneSet ...... Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulDelete 4m44s cloneset-controller succeed to delete pod cs-demo-79rcx Normal SuccessfulUpdatePodInPlace 97s cloneset-controller successfully update pod cs-demo-p4kmw in-place(revision cs-demo-7cb9c88699) Normal SuccessfulUpdatePodInPlace 34s cloneset-controller successfully update pod cs-demo-fv5gb in-place(revision cs-demo-7cb9c88699) \u279c kubectl describe pod cs-demo-p4kmw ...... Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal Pulled 56m kubelet Container image \"nginx:alpine\" already present on machine Normal Created 2m28s (x2 over 56m) kubelet Created container nginx Normal Killing 2m28s kubelet Container nginx definition changed, will be restarted Normal Pulled 2m28s kubelet Container image \"nginx:1.7.9\" already present on machine Normal Started 2m27s (x2 over 56m) kubelet Started container nginx \u8fd9\u5c31\u662f\u539f\u5730\u5347\u7ea7\u7684\u6548\u679c\uff0c\u539f\u5730\u5347\u7ea7\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u5728\u5b89\u88c5\u6216\u5347\u7ea7 Kruise \u7684\u65f6\u5019\u542f\u7528\u4e86 PreDownloadImageForInPlaceUpdate \u8fd9\u4e2a feature-gate\uff0cCloneSet \u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u5728\u6240\u6709\u65e7\u7248\u672c pod \u6240\u5728\u8282\u70b9\u4e0a\u9884\u70ed\u4f60\u6b63\u5728\u7070\u5ea6\u53d1\u5e03\u7684\u65b0\u7248\u672c\u955c\u50cf\uff0c\u8fd9\u5bf9\u4e8e\u5e94\u7528\u53d1\u5e03\u52a0\u901f\u5f88\u6709\u5e2e\u52a9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b CloneSet \u6bcf\u4e2a\u65b0\u955c\u50cf\u9884\u70ed\u65f6\u7684\u5e76\u53d1\u5ea6\u90fd\u662f 1\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u4e2a\u8282\u70b9\u62c9\u955c\u50cf\uff0c\u5982\u679c\u9700\u8981\u8c03\u6574\uff0c\u4f60\u53ef\u4ee5\u5728 CloneSet annotation \u4e0a\u8bbe\u7f6e\u5e76\u53d1\u5ea6\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : annotations : apps.kruise.io/image-predownload-parallelism : \"5\" Warning \u4e3a\u4e86\u907f\u514d\u5927\u90e8\u5206\u4e0d\u5fc5\u8981\u7684\u955c\u50cf\u62c9\u53d6\uff0c\u76ee\u524d\u53ea\u9488\u5bf9 replicas > 3 \u7684 CloneSet \u505a\u81ea\u52a8\u9884\u70ed\u3002 \u6b64\u5916 CloneSet \u8fd8\u652f\u6301\u5206\u6279\u8fdb\u884c\u7070\u5ea6\uff0c\u5728 updateStrategy \u5c5e\u6027\u4e2d\u53ef\u4ee5\u914d\u7f6e partition \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\u6216\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u4e3a0\uff1a \u5982\u679c\u662f\u6570\u5b57\uff0c\u63a7\u5236\u5668\u4f1a\u5c06 (replicas - partition) \u6570\u91cf\u7684 Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c \u5982\u679c\u662f\u767e\u5206\u6bd4\uff0c\u63a7\u5236\u5668\u4f1a\u5c06 (replicas * (100% - partition)) \u6570\u91cf\u7684 Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c \u6bd4\u5982\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684\u7684 image \u66f4\u65b0\u4e3a nginx:latest \u5e76\u4e14\u8bbe\u7f6e partition=2\uff0c\u66f4\u65b0\u540e\uff0c\u8fc7\u4e00\u4f1a\u67e5\u770b\u53ef\u4ee5\u53d1\u73b0\u53ea\u5347\u7ea7\u4e862\u4e2a Pod\uff1a \u279c kubectl get pods -l app = cs -L controller-revision-hash NAME READY STATUS RESTARTS AGE CONTROLLER-REVISION-HASH cs-demo-dx4lb 1 /1 Running 0 69s cs-demo-6599fc6cdd cs-demo-fv5gb 1 /1 Running 0 3d7h cs-demo-7cb9c88699 cs-demo-nngtm 1 /1 Running 0 8s cs-demo-6599fc6cdd cs-demo-p4kmw 1 /1 Running 0 3d6h cs-demo-7cb9c88699 \u6b64\u5916 CloneSet \u8fd8\u652f\u6301\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\uff0c\u6bd4\u5982\u53ef\u4ee5\u5b9a\u4e49\u4f18\u5148\u7ea7\u7b56\u7565\u6765\u63a7\u5236 Pod \u53d1\u5e03\u7684\u4f18\u5148\u7ea7\u89c4\u5219\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u7b56\u7565\u6765\u5c06\u4e00\u7c7b Pod \u6253\u6563\u5230\u6574\u4e2a\u53d1\u5e03\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u6682\u505c Pod \u53d1\u5e03\u7b49\u64cd\u4f5c\u3002 Advanced StatefulSet \u00b6 \u8be5\u63a7\u5236\u5668\u5728\u539f\u751f\u7684 StatefulSet \u57fa\u7840\u4e0a\u589e\u5f3a\u4e86\u53d1\u5e03\u80fd\u529b\uff0c\u6bd4\u5982 maxUnavailable \u5e76\u884c\u53d1\u5e03\u3001\u539f\u5730\u5347\u7ea7\u7b49\uff0c\u8be5\u5bf9\u8c61\u7684\u540d\u79f0\u4e5f\u662f StatefulSet\uff0c\u4f46\u662f apiVersion \u662f apps.kruise.io/v1beta1 \uff0c\u8fd9\u4e2a CRD \u7684\u6240\u6709\u9ed8\u8ba4\u5b57\u6bb5\u3001\u9ed8\u8ba4\u884c\u4e3a\u4e0e\u539f\u751f StatefulSet \u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b optional \u5b57\u6bb5\u6765\u6269\u5c55\u589e\u5f3a\u7684\u7b56\u7565\u3002\u56e0\u6b64\uff0c\u7528\u6237\u4ece\u539f\u751f StatefulSet \u8fc1\u79fb\u5230 Advanced StatefulSet\uff0c\u53ea\u9700\u8981\u628a apiVersion \u4fee\u6539\u540e\u63d0\u4ea4\u5373\u53ef\uff1a - apiVersion : apps/v1 + apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : sample spec : #... \u6700\u5927\u4e0d\u53ef\u7528 \u00b6 Advanced StatefulSet \u5728\u6eda\u52a8\u66f4\u65b0\u7b56\u7565\u4e2d\u65b0\u589e\u4e86 maxUnavailable \u6765\u652f\u6301\u5e76\u884c Pod \u53d1\u5e03\uff0c\u5b83\u4f1a\u4fdd\u8bc1\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a Pod \u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001\u3002\u6ce8\u610f\uff0cmaxUnavailable \u53ea\u80fd\u914d\u5408 podManagementPolicy \u4e3a Parallel \u6765\u4f7f\u7528\u3002 \u8fd9\u4e2a\u7b56\u7565\u7684\u6548\u679c\u548c Deployment \u4e2d\u7684\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u7684 order \u987a\u5e8f\u4e0d\u80fd\u4e25\u683c\u4fdd\u8bc1\uff0c\u5982\u679c\u4e0d\u914d\u7f6e maxUnavailable\uff0c\u5b83\u7684\u9ed8\u8ba4\u503c\u4e3a 1\uff0c\u4e5f\u5c31\u662f\u548c\u539f\u751f StatefulSet \u4e00\u6837\u53ea\u80fd\u4e32\u884c\u53d1\u5e03 Pod\uff0c\u5373\u4f7f\u628a podManagementPolicy \u914d\u7f6e\u4e3a Parallel \u4e5f\u662f\u8fd9\u6837\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Advanced StatefulSet\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx-headless\" podManagementPolicy : Parallel replicas : 5 updateStrategy : type : RollingUpdate rollingUpdate : maxUnavailable : 3 # partition: 4 selector : matchLabels : app : nginx template : metadata : labels : app : nginx # @ spec : containers : - name : nginx image : nginx ports : - name : web containerPort : 80 \u76f4\u63a5\u521b\u5efa\u8be5\u5bf9\u8c61\uff0c\u7531\u4e8e\u5bf9\u8c61\u540d\u79f0\u4e5f\u662f StatefulSet\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7528 get sts \u6765\u83b7\u53d6\u4e86\uff0c\u8981\u901a\u8fc7 get asts \u83b7\u53d6\uff1a \u279c kubectl get asts NAME DESIRED CURRENT UPDATED READY AGE web 5 5 5 5 8m28s \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 7m52s web-1 1 /1 Running 0 7m52s web-2 1 /1 Running 0 7m52s web-3 1 /1 Running 0 7m52s web-4 1 /1 Running 0 7m52s \u8be5\u5e94\u7528\u4e0b\u6709\u4e94\u4e2a Pod\uff0c\u5047\u8bbe\u5e94\u7528\u80fd\u5bb9\u5fcd 3 \u4e2a\u526f\u672c\u4e0d\u53ef\u7528\uff0c\u5f53\u6211\u4eec\u628a StatefulSet \u91cc\u7684 Pod \u5347\u7ea7\u7248\u672c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u6765\u505a\uff1a \u8bbe\u7f6e maxUnavailable=3 (\u53ef\u9009) \u5982\u679c\u9700\u8981\u7070\u5ea6\u5347\u7ea7\uff0c\u8bbe\u7f6e partition=4\uff0cPartition \u9ed8\u8ba4\u7684\u610f\u601d\u662f order \u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u503c\u7684 Pod \u624d\u4f1a\u66f4\u65b0\uff0c\u5728\u8fd9\u91cc\u5c31\u53ea\u4f1a\u66f4\u65b0 P4\uff0c\u5373\u4f7f\u6211\u4eec\u8bbe\u7f6e\u4e86 maxUnavailable=3\u3002 \u5728 P4 \u5347\u7ea7\u5b8c\u6210\u540e\uff0c\u628a partition \u8c03\u6574\u4e3a 0\uff0c\u6b64\u65f6\uff0c\u63a7\u5236\u5668\u4f1a\u540c\u65f6\u5347\u7ea7 P1\u3001P2\u3001P3 \u4e09\u4e2a Pod\u3002\u6ce8\u610f\uff0c\u5982\u679c\u662f\u539f\u751f StatefulSet\uff0c\u53ea\u80fd\u4e32\u884c\u5347\u7ea7 P3\u3001P2\u3001P1\u3002 \u4e00\u65e6\u8fd9\u4e09\u4e2a Pod \u4e2d\u6709\u4e00\u4e2a\u5347\u7ea7\u5b8c\u6210\u4e86\uff0c\u63a7\u5236\u5668\u4f1a\u7acb\u5373\u5f00\u59cb\u5347\u7ea7 P0\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u628a\u4e0a\u9762\u5e94\u7528\u7684\u955c\u50cf\u7248\u672c\u8fdb\u884c\u4fee\u6539\uff0c\u66f4\u65b0\u540e\u67e5\u770b Pod \u72b6\u6001\uff0c\u53ef\u4ee5\u770b\u5230\u67093\u4e2a Pod \u5e76\u884c\u5347\u7ea7\u7684\uff1a \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 2m41s web-1 1 /1 Running 0 2m41s web-2 0 /1 ContainerCreating 0 10s web-3 0 /1 ContainerCreating 0 10s web-4 0 /1 ContainerCreating 0 10s \u539f\u5730\u5347\u7ea7 \u00b6 Advanced StatefulSet \u589e\u52a0\u4e86 podUpdatePolicy \u6765\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u91cd\u5efa\u5347\u7ea7\u8fd8\u662f\u539f\u5730\u5347\u7ea7\u3002\u6b64\u5916\u8fd8\u5728\u539f\u5730\u5347\u7ea7\u4e2d\u63d0\u4f9b\u4e86 graceful period \u9009\u9879\uff0c\u4f5c\u4e3a\u4f18\u96c5\u539f\u5730\u5347\u7ea7\u7684\u7b56\u7565\u3002\u7528\u6237\u5982\u679c\u914d\u7f6e\u4e86 gracePeriodSeconds \u8fd9\u4e2a\u5b57\u6bb5\uff0c\u63a7\u5236\u5668\u5728\u539f\u5730\u5347\u7ea7\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5148\u628a Pod status \u6539\u4e3a not-ready\uff0c\u7136\u540e\u7b49\u4e00\u6bb5\u65f6\u95f4\uff08 gracePeriodSeconds \uff09\uff0c\u6700\u540e\u518d\u53bb\u4fee\u6539 Pod spec \u4e2d\u7684\u955c\u50cf\u7248\u672c\u3002\u8fd9\u6837\uff0c\u5c31\u4e3a endpoints-controller\u8fd9\u4e9b\u63a7\u5236\u5668\u7559\u51fa\u4e86\u5145\u8db3\u7684\u65f6\u95f4\u6765\u5c06 Pod \u4ece endpoints \u7aef\u70b9\u5217\u8868\u4e2d\u53bb\u9664\u3002 \u5982\u679c\u4f7f\u7528 InPlaceIfPossible \u6216 InPlaceOnly \u7b56\u7565\uff0c\u5fc5\u987b\u8981\u589e\u52a0\u4e00\u4e2a InPlaceUpdateReady readinessGate\uff0c\u7528\u6765\u5728\u539f\u5730\u5347\u7ea7\u7684\u65f6\u5019\u63a7\u5236\u5668\u5c06 Pod \u8bbe\u7f6e\u4e3a NotReady\uff0c\u6bd4\u5982\u8bbe\u7f6e\u4e0a\u9762\u7684\u5e94\u7528\u4e3a\u539f\u5730\u5347\u7ea7\u7684\u65b9\u5f0f\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx-headless\" podManagementPolicy : Parallel replicas : 5 updateStrategy : type : RollingUpdate rollingUpdate : podUpdatePolicy : InPlaceIfPossible # \u5c3d\u53ef\u80fd\u6267\u884c\u539f\u5730\u5347\u7ea7 maxUnavailable : 3 # \u5141\u8bb8\u5e76\u884c\u66f4\u65b0\uff0c\u6700\u5927\u4e0d\u53ef\u4ee5\u5b9e\u4f8b\u6570\u4e3a3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : readinessGates : - conditionType : InPlaceUpdateReady # \u4e00\u4e2a\u65b0\u7684\u6761\u4ef6\uff0c\u53ef\u786e\u4fdd Pod \u5728\u53d1\u751f\u539f\u5730\u66f4\u65b0\u65f6\u4fdd\u6301\u5728 NotReady \u72b6\u6001 containers : - name : nginx image : nginx ports : - name : web containerPort : 80 \u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e updateStrategy . rollingUpdate . podUpdatePolicy \u4e3a InPlaceIfPossible \u6a21\u5f0f\uff0c\u8868\u793a\u5c3d\u53ef\u80fd\u4f7f\u7528\u539f\u5730\u5347\u7ea7\u7684\u65b9\u5f0f\u8fdb\u884c\u66f4\u65b0\uff0c\u6b64\u5916\u5728 Pod \u6a21\u677f\u4e2d\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4e00\u4e2a readinessGates \u5c5e\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u786e\u4fdd Pod \u5728\u53d1\u751f\u539f\u5730\u66f4\u65b0\u65f6\u4fdd\u6301\u5728 NotReady \u72b6\u6001\u3002\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e0a\u9762\u8d44\u6e90\u6e05\u5355\u66f4\u65b0\u5e94\u7528\uff0c\u7136\u540e\u91cd\u65b0\u4fee\u6539\u955c\u50cf\u7684\u7248\u672c\u66f4\u65b0\uff0c\u5219\u4f1a\u8fdb\u884c\u539f\u5730\u5347\u7ea7\uff1a \u279c kubectl describe asts web Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-4 in -place ( revision web-84644dfc7d ) Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-3 in -place ( revision web-84644dfc7d ) Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-2 in -place ( revision web-84644dfc7d ) \u540c\u6837\u7684 Advanced StatefulSet \u4e5f\u652f\u6301\u539f\u5730\u5347\u7ea7\u81ea\u52a8\u9884\u70ed\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e paused \u4e3a true \u6765\u6682\u505c\u53d1\u5e03\uff0c\u4e0d\u8fc7\u63a7\u5236\u5668\u8fd8\u662f\u4f1a\u505a replicas \u6570\u91cf\u7ba1\u7406\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... updateStrategy : rollingUpdate : paused : true \u53e6\u5916 Advanced StatefulSet \u8fd8\u652f\u6301\u5e8f\u53f7\u4fdd\u7559\u529f\u80fd\uff0c\u901a\u8fc7\u5728 reserveOrdinals \u5b57\u6bb5\u4e2d\u5199\u5165\u9700\u8981\u4fdd\u7559\u7684\u5e8f\u53f7\uff0cAdvanced StatefulSet \u4f1a\u81ea\u52a8\u8df3\u8fc7\u521b\u5efa\u8fd9\u4e9b\u5e8f\u53f7\u7684 Pod\uff0c\u5982\u679c Pod \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4f1a\u88ab\u5220\u9664\u3002 Warning spec.replicas \u662f\u671f\u671b\u8fd0\u884c\u7684 Pod \u6570\u91cf\uff0c spec.reserveOrdinals \u662f\u8981\u8df3\u8fc7\u7684\u5e8f\u53f7\u3002 apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... replicas : 4 reserveOrdinals : - 1 \u6bd4\u5982\u4e0a\u9762\u7684\u63cf\u8ff0 replicas=4, reserveOrdinals=[1] \u7684 Advanced StatefulSet\uff0c\u8868\u793a\u5b9e\u9645\u8fd0\u884c\u7684 Pod \u5e8f\u53f7\u4e3a [0,2,3,4]\u3002 \u5982\u679c\u8981\u628a Pod-3 \u505a\u8fc1\u79fb\u5e76\u4fdd\u7559\u5e8f\u53f7\uff0c\u5219\u628a 3 \u8ffd\u52a0\u5230 reserveOrdinals \u5217\u8868\u4e2d\uff0c\u63a7\u5236\u5668\u4f1a\u628a Pod-3 \u5220\u9664\u5e76\u521b\u5efa Pod-5\uff08\u6b64\u65f6\u8fd0\u884c\u4e2d Pod \u4e3a [0,2,4,5]\uff09\u3002 \u5982\u679c\u53ea\u60f3\u5220\u9664 Pod-3\uff0c\u5219\u628a 3 \u8ffd\u52a0\u5230 reserveOrdinals \u5217\u8868\u5e76\u540c\u65f6\u628a replicas \u51cf\u4e00\u4fee\u6539\u4e3a 3\u3002\u63a7\u5236\u5668\u4f1a\u628a Pod-3 \u5220\u9664\uff08\u6b64\u65f6\u8fd0\u884c\u4e2d Pod \u4e3a [0,2,4]\uff09\u3002 \u4e3a\u4e86\u907f\u514d\u5728\u4e00\u4e2a\u65b0 Advanced StatefulSet \u521b\u5efa\u540e\u6709\u5927\u91cf\u5931\u8d25\u7684 pod \u88ab\u521b\u5efa\u51fa\u6765\uff0c\u4ece Kruise v0.10.0 \u7248\u672c\u5f00\u59cb\u5f15\u5165\u4e86\u5728 scale strategy \u4e2d\u7684 maxUnavailable \u7b56\u7565\u3002 apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... replicas : 100 scaleStrategy : maxUnavailable : 10% # percentage or absolute number \u5f53\u8fd9\u4e2a\u5b57\u6bb5\u88ab\u8bbe\u7f6e\u4e4b\u540e\uff0cAdvanced StatefulSet \u4f1a\u4fdd\u8bc1\u521b\u5efa pod \u4e4b\u540e\u4e0d\u53ef\u7528 pod \u6570\u91cf\u4e0d\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\u503c\u3002\u6bd4\u5982\u8bf4\uff0c\u4e0a\u9762\u8fd9\u4e2a StatefulSet \u4e00\u5f00\u59cb\u53ea\u4f1a\u4e00\u6b21\u6027\u521b\u5efa 100*10%=10 \u4e2a pod\uff0c\u5728\u6b64\u4e4b\u540e\uff0c\u6bcf\u5f53\u4e00\u4e2a pod \u53d8\u4e3a running\u3001ready \u72b6\u6001\u540e\uff0c\u624d\u4f1a\u518d\u521b\u5efa\u4e00\u4e2a\u65b0 pod \u51fa\u6765\u3002 Warning \u8fd9\u4e2a\u529f\u80fd\u53ea\u5141\u8bb8\u5728 podManagementPolicy \u662f Parallel \u7684 StatefulSet \u4e2d\u4f7f\u7528\u3002 Advanced DaemonSet \u00b6 \u8fd9\u4e2a\u63a7\u5236\u5668\u57fa\u4e8e\u539f\u751f DaemonSet \u4e0a\u589e\u5f3a\u4e86\u53d1\u5e03\u80fd\u529b\uff0c\u6bd4\u5982\u7070\u5ea6\u5206\u6279\u3001\u6309 Node label \u9009\u62e9\u3001\u6682\u505c\u3001\u70ed\u5347\u7ea7\u7b49\u3002\u540c\u6837\u7684\u8be5\u5bf9\u8c61\u7684 Kind \u540d\u5b57\u4e5f\u662f DaemonSet\uff0c\u53ea\u662f apiVersion \u662f apps.kruise.io/v1alpha1 \uff0c\u8fd9\u4e2a CRD \u7684\u6240\u6709\u9ed8\u8ba4\u5b57\u6bb5\u3001\u9ed8\u8ba4\u884c\u4e3a\u4e0e\u539f\u751f DaemonSet \u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b optional \u5b57\u6bb5\u6765\u6269\u5c55\u589e\u5f3a\u7684\u7b56\u7565\u3002 \u56e0\u6b64\uff0c\u7528\u6237\u4ece\u539f\u751f DaemonSet \u8fc1\u79fb\u5230 Advanced DaemonSet\uff0c\u53ea\u9700\u8981\u628a apiVersion \u4fee\u6539\u540e\u63d0\u4ea4\u5373\u53ef\uff1a - apiVersion : apps/v1 + apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet metadata : name : sample-ds spec : #... \u5347\u7ea7 \u00b6 Advanced DaemonSet \u5728 spec . updateStrategy . rollingUpdate \u4e2d\u6709\u4e00\u4e2a rollingUpdateType \u5b57\u6bb5\uff0c\u6807\u8bc6\u4e86\u5982\u4f55\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7\uff1a Standard : \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u63a7\u5236\u5668\u4f1a\u5148\u5220\u9664\u65e7\u7684 daemon Pod\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0 Pod\uff0c\u548c\u539f\u751f DaemonSet \u884c\u4e3a\u4e00\u81f4\u3002 Surging : \u5bf9\u4e8e\u6bcf\u4e2a node\uff0c\u63a7\u5236\u5668\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a\u65b0 Pod\uff0c\u7b49\u5b83 ready \u4e4b\u540e\u518d\u5220\u9664\u8001 Pod\u3002 \u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet metadata : name : nginx namespace : default spec : updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : Standard selector : matchLabels : k8s-app : nginx template : metadata : labels : k8s-app : nginx spec : containers : - image : nginx:1.7.9 name : nginx ports : - name : http containerPort : 80 \u521b\u5efa\u540e\u9700\u8981\u901a\u8fc7 get daemon \u6765\u83b7\u53d6\u8be5\u5bf9\u8c61\uff1a \u279c kubectl get daemon NAME DESIREDNUMBER CURRENTNUMBER UPDATEDNUMBERSCHEDULED AGE nginx 2 2 2 7s \u279c kubectl get pods -l k8s-app = nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES nginx-59mbd 1 /1 Running 0 52s 10 .244.1.8 node1 <none> 1 /1 nginx-qvvkz 1 /1 Running 0 52s 10 .244.3.12 node2 <none> 1 /1 \u6211\u4eec\u8fd9\u91cc\u53ea\u6709\u4e24\u4e2a Work \u8282\u70b9\uff0c\u6240\u4ee5\u4e00\u5171\u8fd0\u884c\u4e862\u4e2a Pod\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4e00\u4e2a\uff0c\u548c\u9ed8\u8ba4\u7684 DaemonSet \u884c\u4e3a\u57fa\u672c\u4e00\u81f4\u3002\u6b64\u5916\u8fd9\u4e2a\u7b56\u7565\u8fd8\u652f\u6301\u7528\u6237\u901a\u8fc7\u914d\u7f6e node \u6807\u7b7e\u7684 selector\uff0c\u6765\u6307\u5b9a\u7070\u5ea6\u5347\u7ea7\u67d0\u4e9b\u7279\u5b9a\u7c7b\u578b node \u4e0a\u7684 Pod\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53ea\u5347\u7ea7 node1 \u8282\u70b9\u7684\u5e94\u7528\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 selector \u6807\u7b7e\u6765\u6807\u8bc6\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : Standard selector : matchLabels : kubernetes.io/hostname : node1 # ... \u66f4\u65b0\u5e94\u7528\u540e\u53ef\u4ee5\u770b\u5230\u53ea\u4f1a\u66f4\u65b0 node1 \u8282\u70b9\u4e0a\u7684 Pod\uff1a \u279c kubectl describe daemon nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 4m25s daemonset-controller Created pod: nginx-59mbd Normal SuccessfulCreate 4m25s daemonset-controller Created pod: nginx-qvvkz Normal SuccessfulDelete 13s daemonset-controller Deleted pod: nginx-59mbd Normal SuccessfulCreate 13s daemonset-controller Created pod: nginx-7jl22 \u548c\u524d\u9762\u4e24\u4e2a\u63a7\u5236\u5668\u4e00\u6837\uff0cAdvanced DaemonSet \u4e5f\u652f\u6301\u5206\u6279\u7070\u5ea6\u5347\u7ea7\uff0c\u4f7f\u7528 Partition \u8fdb\u884c\u914d\u7f6e\uff0cPartition \u7684\u8bed\u4e49\u662f\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a 0\uff0c\u5982\u679c\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u4e86 partition\uff0c\u5219\u63a7\u5236\u5668\u53ea\u4f1a\u5c06 ( status . DesiredNumberScheduled \u51cf partition ) \u7684\u6570\u91cf Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : partition : 10 paused : true # \u6682\u505c\u53d1\u5e03 \u540c\u6837 Advanced DaemonSet \u4e5f\u662f\u652f\u6301\u539f\u5730\u5347\u7ea7\u7684\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e rollingUpdateType \u4e3a\u652f\u6301\u539f\u5730\u5347\u7ea7\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5e94\u7528\u5347\u7ea7\u65b9\u5f0f\u8bbe\u7f6e\u4e3a InPlaceIfPossible \u5373\u53ef\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : InPlaceIfPossible \u66f4\u65b0\u540e\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u63a7\u5236\u5668\u7684\u4e8b\u4ef6\u6765\u9a8c\u8bc1\u662f\u5426\u662f\u901a\u8fc7\u539f\u5730\u5347\u7ea7\u65b9\u5f0f\u66f4\u65b0\u5e94\u7528\uff1a \u279c kubectl describe daemon nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 32s daemonset-controller Created pod: nginx-m9vj9 Normal SuccessfulCreate 32s daemonset-controller Created pod: nginx-tg89g Normal SuccessfulUpdatePodInPlace 16s daemonset-controller successfully update pod nginx-tg89g in -place Warning numUnavailable > = maxUnavailable 15s ( x7 over 16s ) daemonset-controller default/nginx number of unavailable DaemonSet pods: 1 , is equal to or exceeds allowed maximum: 1 Normal SuccessfulUpdatePodInPlace 14s daemonset-controller successfully update pod nginx-m9vj9 in -place BroadcastJob \u00b6 \u8fd9\u4e2a\u63a7\u5236\u5668\u5c06 Pod \u5206\u53d1\u5230\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u7c7b\u4f3c\u4e8e DaemonSet\uff0c\u4f46\u662f BroadcastJob \u7ba1\u7406\u7684 Pod \u5e76\u4e0d\u662f\u957f\u671f\u8fd0\u884c\u7684 daemon \u670d\u52a1\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8e Job \u7684\u4efb\u52a1\u7c7b\u578b Pod\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684 Pod \u90fd\u6267\u884c\u5b8c\u6210\u9000\u51fa\u540e\uff0cBroadcastJob \u548c\u8fd9\u4e9b Pod \u5e76\u4e0d\u4f1a\u5360\u7528\u96c6\u7fa4\u8d44\u6e90\u3002 \u8fd9\u4e2a\u63a7\u5236\u5668\u975e\u5e38\u6709\u5229\u4e8e\u505a\u5347\u7ea7\u57fa\u7840\u8f6f\u4ef6\u3001\u5de1\u68c0\u7b49\u8fc7\u4e00\u6bb5\u65f6\u95f4\u9700\u8981\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u8dd1\u4e00\u6b21\u7684\u5de5\u4f5c\u3002 \u6bd4\u5982\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 BroadcastJob \u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob metadata : name : bcj-demo namespace : default spec : template : spec : restartPolicy : Never containers : # \u4e00\u5b9a\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u6210\u540e\u9700\u8981\u9000\u51fa\u7684 - name : counter image : busybox command : - \"/bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61 \u279c kubectl get bcj bcj-demo NAME DESIRED ACTIVE SUCCEEDED FAILED AGE bcj-demo 2 0 2 0 113s \u279c kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES bcj-demo-m4mrw 0 /1 Completed 0 5m16s 10 .244.1.12 node1 <none> 1 /1 bcj-demo-v2fdx 0 /1 Completed 0 5m16s 10 .244.3.37 node2 <none> 1 /1 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u521b\u5efa\u4e86\u4e00\u4e2a BroadcastJob \u5bf9\u8c61\u540e\uff0c\u540c\u65f6\u542f\u52a8\u4e86\u4e24\u4e2a Pod \u4efb\u52a1\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4e00\u4e2a\uff0c\u8fd9\u548c\u539f\u751f\u7684 Job \u662f\u4e0d\u592a\u4e00\u6837\u7684\u3002\u521b\u5efa\u7684 BroadcastJob \u4e00\u5171\u6709\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a Desired : \u671f\u671b\u7684 Pod \u6570\u91cf\uff08\u7b49\u540c\u4e8e\u5f53\u524d\u96c6\u7fa4\u4e2d\u5339\u914d\u7684\u8282\u70b9\u6570\u91cf\uff09 Active: \u8fd0\u884c\u4e2d\u7684 Pod \u6570\u91cf SUCCEEDED: \u6267\u884c\u6210\u529f\u7684 Pod \u6570\u91cf FAILED: \u6267\u884c\u5931\u8d25\u7684 Pod \u6570\u91cf \u6b64\u5916\u5728 BroadcastJob \u5bf9\u8c61\u4e2d\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4efb\u52a1\u5b8c\u6210\u540e\u7684\u4e00\u4e9b\u7b56\u7565\uff0c\u6bd4\u5982\u914d\u7f6e completionPolicy.ttlSecondsAfterFinished: 30\uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u5728\u6267\u884c\u7ed3\u675f\u540e 30s \u88ab\u5220\u9664\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Always ttlSecondsAfterFinished : 30 # ...... \u914d\u7f6e completionPolicy . activeDeadlineSeconds \u4e3a 10\uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u5728\u8fd0\u884c\u8d85\u8fc7 10s \u4e4b\u540e\u88ab\u6807\u8bb0\u4e3a\u5931\u8d25\uff0c\u5e76\u628a\u4e0b\u9762\u8fd8\u5728\u8fd0\u884c\u7684 Pod \u5220\u9664\u6389\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Always activeDeadlineSeconds : 10 # ...... completionPolicy \u7c7b\u578b\u9664\u4e86 Always \u4e4b\u5916\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Never \uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u6301\u7eed\u8fd0\u884c\u5373\u4f7f\u5f53\u524d\u6240\u6709\u8282\u70b9\u4e0a\u7684 Pod \u90fd\u6267\u884c\u5b8c\u6210\u4e86\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Never # ...... AdvancedCronJob \u00b6 AdvancedCronJob \u662f\u5bf9\u4e8e\u539f\u751f CronJob \u7684\u6269\u5c55\u7248\u672c\uff0c\u6839\u636e\u7528\u6237\u8bbe\u7f6e\u7684 schedule \u89c4\u5219\uff0c\u5468\u671f\u6027\u521b\u5efa Job \u6267\u884c\u4efb\u52a1\uff0c\u800c AdvancedCronJob \u7684 template \u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684 job \u8d44\u6e90\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : AdvancedCronJob spec : template : # Option 1: use jobTemplate, which is equivalent to original CronJob jobTemplate : # ... # Option 2: use broadcastJobTemplate, which will create a BroadcastJob object when cron schedule triggers broadcastJobTemplate : # ... jobTemplate\uff1a\u4e0e\u539f\u751f CronJob \u4e00\u6837\u521b\u5efa Job \u6267\u884c\u4efb\u52a1 broadcastJobTemplate\uff1a\u5468\u671f\u6027\u521b\u5efa BroadcastJob \u6267\u884c\u4efb\u52a1 apiVersion : apps.kruise.io/v1alpha1 kind : AdvancedCronJob metadata : name : acj-test spec : schedule : \"*/1 * * * *\" template : broadcastJobTemplate : spec : completionPolicy : type : Always ttlSecondsAfterFinished : 30 template : spec : restartPolicy : Never containers : # \u4e00\u5b9a\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u6210\u540e\u9700\u8981\u9000\u51fa\u7684 - name : counter image : busybox command : - \"/bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u4e0a\u8ff0 YAML \u5b9a\u4e49\u4e86\u4e00\u4e2a AdvancedCronJob\uff0c\u6bcf\u5206\u949f\u521b\u5efa\u4e00\u4e2a BroadcastJob \u5bf9\u8c61\uff0c\u8fd9\u4e2a BroadcastJob \u4f1a\u5728\u6240\u6709\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a job \u4efb\u52a1\u3002 \u279c kubectl get acj NAME SCHEDULE TYPE LASTSCHEDULETIME AGE acj-test */1 * * * * BroadcastJob 8s \u279c kubectl get bcj NAME DESIRED ACTIVE SUCCEEDED FAILED AGE acj-test-1646305200 2 0 2 0 25s \u279c kubectl get pods NAME READY STATUS RESTARTS AGE acj-test-1646305200-c4jbr 0 /1 Completed 0 41s acj-test-1646305200-stsm9 0 /1 Completed 0 41s SidecarSet \u00b6 SidecarSet \u652f\u6301\u901a\u8fc7 admission webhook \u6765\u81ea\u52a8\u4e3a\u96c6\u7fa4\u4e2d\u521b\u5efa\u7684\u7b26\u5408\u6761\u4ef6\u7684 Pod \u6ce8\u5165 sidecar \u5bb9\u5668\uff0c\u9664\u4e86\u5728 Pod \u521b\u5efa\u65f6\u5019\u6ce8\u5165\u5916\uff0cSidecarSet \u8fd8\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u529f\u80fd\uff0c\u8bf8\u5982Sidecar \u5bb9\u5668\u955c\u50cf\u539f\u5730\u5347\u7ea7\u3002SidecarSet \u5c06 sidecar \u5bb9\u5668\u7684\u5b9a\u4e49\u548c\u751f\u547d\u5468\u671f\u4e0e\u4e1a\u52a1\u5bb9\u5668\u89e3\u8026\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u65e0\u72b6\u6001\u7684 sidecar \u5bb9\u5668\uff0c\u6bd4\u5982\u76d1\u63a7\u3001\u65e5\u5fd7\u7b49 agent\u3002 \u6bd4\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 SidecarSet \u8d44\u6e90\u5bf9\u8c61\uff1a # sidecarset.yaml apiVersion: apps.kruise.io/v1alpha1 kind: SidecarSet metadata: name: test-sidecarset spec: selector: matchLabels: app: nginx updateStrategy: type: RollingUpdate maxUnavailable: 1 containers: - name: sidecar1 image: busybox command: [\"sleep\", \"999d\"] volumeMounts: - name: log-volume mountPath: /var/log volumes: # this field will be merged into pod.spec.volumes - name: log-volume emptyDir: {} \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl get sidecarset NAME MATCHED UPDATED READY AGE test-sidecarset 0 0 0 34s \u9700\u8981\u6ce8\u610f\u4e0a\u9762\u6211\u4eec\u5728\u5b9a\u4e49 SidecarSet \u5bf9\u8c61\u7684\u65f6\u5019\u91cc\u9762\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\u5c31\u662f label selector \uff0c\u4f1a\u53bb\u5339\u914d\u5177\u6709 app=nginx \u7684 Pod\uff0c\u7136\u540e\u5411\u5176\u4e2d\u6ce8\u5165\u4e0b\u9762\u5b9a\u4e49\u7684 sidecar1 \u8fd9\u4e2a\u5bb9\u5668\uff0c\u6bd4\u5982\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e2a Pod\uff0c\u8be5 Pod \u4e2d\u5305\u542b app=nginx \u7684\u6807\u7b7e\uff0c\u8fd9\u6837\u53ef\u4ee5\u548c\u4e0a\u9762\u7684 SidecarSet \u5bf9\u8c61\u5339\u914d\uff1a apiVersion : v1 kind : Pod metadata : labels : app : nginx # matches the SidecarSet's selector name : test-pod spec : containers : - name : app image : nginx:1.7.9 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c kubectl get pod test-pod NAME READY STATUS RESTARTS AGE test-pod 2 /2 Running 0 19s \u53ef\u4ee5\u770b\u5230\u8be5 Pod \u4e2d\u67092\u4e2a\u5bb9\u5668\uff0c\u88ab\u81ea\u52a8\u6ce8\u5165\u4e86\u4e0a\u9762\u5b9a\u4e49\u7684 sidecar1 \u5bb9\u5668\uff1a \u279c kubectl get pod test-pod -o yaml apiVersion : v1 kind : Pod metadata : labels : app : nginx name : test-pod namespace : default ...... spec : containers : - command : - sleep - 999d env : - name : IS_INJECTED value : \"true\" image : busybox imagePullPolicy : Always name : sidecar1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/log name : log-volume - mountPath : /var/run/secrets/kubernetes.io/serviceaccount name : kube-api-access-whxz7 readOnly : true - image : nginx:1.7.9 imagePullPolicy : IfNotPresent name : app volumes : - emptyDir : {} name : log-volume ...... \u73b0\u5728\u6211\u4eec\u53bb\u66f4\u65b0 SidecarSet \u4e2d\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u66ff\u6362\u6210 busybox:1.35.0 \uff1a Warning Option 1 \u279c kubectl patch sidecarset test-sidecarset --type = 'json' -p = '[{\"op\": \"replace\", \"path\": \"/spec/containers/0/image\", \"value\": \"busybox:1.35.0\"}]' sidecarset.apps.kruise.io/test-sidecarset patched Option 2 \u279c kubectl edit sidecarsets test-sidecarset # sidecarset.yaml apiVersion: apps.kruise.io/v1alpha1 kind: SidecarSet metadata: name: test-sidecarset spec: containers: - name: sidecar1 image: centos:7 \u66f4\u65b0\u540e\u518d\u53bb\u67e5\u770b Pod \u4e2d\u7684 sidecar \u5bb9\u5668\uff1a \u279c kubectl get pod test-pod NAME READY STATUS RESTARTS AGE test-pod 2 /2 Running 1 ( 67s ago ) 28m \u279c kubectl get pod test-pod ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- ...... Normal Killing 109s kubelet Container sidecar1 definition changed, will be restarted Normal Pulling 79s kubelet Pulling image \"busybox:1.35.0\" Normal Started 62s ( x2 over 28m ) kubelet Started container sidecar1 Normal Created 62s ( x2 over 28m ) kubelet Created container sidecar1 Normal Pulled 62s kubelet Successfully pulled image \"busybox:1.35.0\" in 17 .239369684s \u279c kubectl get pod test-pod -o yaml | grep busybox kruise.io/sidecarset-inplace-update-state: '{\"test-sidecarset\":{\"revision\":\"f78z4854d9855xd6478fzx9c84645z2548v24z26455db46bdfzw44v49v98f2cw\",\"updateTimestamp\":\"2022-03-06T09:56:15Z\",\"lastContainerStatuses\":{\"sidecar1\":{\"imageID\":\"docker.io/library/busybox@sha256:5acba83a746c7608ed544dc1533b87c737a0b0fb730301639a0179f9344b1678\"}}}}' image: busybox:1.35.0 image: docker.io/library/busybox:1.35.0 imageID: docker.io/library/busybox@sha256:130df6999605f982ec67e5bee29d3a52614a075e949490f0a41702ee1dd98f3f \u53ef\u4ee5\u770b\u5230 Pod \u4e2d\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u88ab\u539f\u5730\u5347\u7ea7\u6210 busybox:1.35.0 \u4e86\uff0c \u5bf9\u4e3b\u5bb9\u5668\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002 \u7edf\u4e00\u7279\u6027 \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f sidecar \u7684\u6ce8\u5165\u53ea\u4f1a\u53d1\u751f\u5728 Pod \u521b\u5efa\u9636\u6bb5\uff0c\u5e76\u4e14\u53ea\u6709 Pod spec \u4f1a\u88ab\u66f4\u65b0\uff0c\u4e0d\u4f1a\u5f71\u54cd Pod \u6240\u5c5e\u7684 workload template \u6a21\u677f\u3002 spec.containers \u9664\u4e86\u9ed8\u8ba4\u7684 k8s container \u5b57\u6bb5\uff0c\u8fd8\u6269\u5c55\u4e86\u5982\u4e0b\u4e00\u4e9b\u5b57\u6bb5\uff0c\u6765\u65b9\u4fbf\u6ce8\u5165\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : sidecarset spec : selector : matchLabels : app : sample containers : # \u9ed8\u8ba4\u7684K8s\u5bb9\u5668\u5b57\u6bb5 - name : nginx image : nginx:alpine volumeMounts : - mountPath : /nginx/conf name : nginx.conf # \u6269\u5c55\u7684sidecar\u5bb9\u5668\u5b57\u6bb5 podInjectPolicy : BeforeAppContainer shareVolumePolicy : type : disabled | enabled transferEnv : - sourceContainerName : main envName : PROXY_IP volumes : - Name : nginx.conf hostPath : /data/nginx/conf podInjectPolicy \u5b9a\u4e49\u4e86\u5bb9\u5668 \u6ce8\u5165\u5230 pod.spec.containers \u4e2d\u7684\u4f4d\u7f6e BeforeAppContainer\uff1a\u8868\u793a\u6ce8\u5165\u5230 pod \u539f containers \u7684\u524d\u9762 (\u9ed8\u8ba4) AfterAppContainer\uff1a \u8868\u793a\u6ce8\u5165\u5230 pod \u539f containers \u7684\u540e\u9762 shareVolumePolicy(\u6570\u636e\u5377\u5171\u4eab) \u5171\u4eab\u6307\u5b9a\u5377\uff1a\u901a\u8fc7 spec.volumes \u6765\u5b9a\u4e49 sidecar \u81ea\u8eab\u9700\u8981\u7684 volume \u5171\u4eab\u6240\u6709\u5377\uff1a\u901a\u8fc7 spec.containers[i].shareVolumePolicy.type = enabled | disabled \u6765\u63a7\u5236\u662f\u5426\u6302\u8f7d pod \u5e94\u7528\u5bb9\u5668\u7684\u5377\uff0c\u5e38\u7528\u4e8e\u65e5\u5fd7\u6536\u96c6\u7b49 sidecar\uff0c\u914d\u7f6e\u4e3a enabled \u540e\u4f1a\u628a\u5e94\u7528\u5bb9\u5668\u4e2d\u6240\u6709\u6302\u8f7d\u70b9\u6ce8\u5165 sidecar \u540c\u4e00\u8def\u7ecf\u4e0b(sidecar \u4e2d\u672c\u8eab\u5c31\u6709\u58f0\u660e\u7684\u6570\u636e\u5377\u548c\u6302\u8f7d\u70b9\u9664\u5916\uff09 transferEnv(\u73af\u5883\u53d8\u91cf\u5171\u4eab)\uff1a\u53ef\u4ee5\u901a\u8fc7 spec.containers[i].transferEnv \u6765\u4ece\u522b\u7684\u5bb9\u5668\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u4f1a\u628a\u540d\u4e3a sourceContainerName \u5bb9\u5668\u4e2d\u540d\u4e3a envName \u7684\u73af\u5883\u53d8\u91cf\u62f7\u8d1d\u5230\u672c\u5bb9\u5668 SidecarSet \u4e0d\u4ec5\u652f\u6301 sidecar \u5bb9\u5668\u7684\u539f\u5730\u5347\u7ea7\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u5347\u7ea7\u3001\u7070\u5ea6\u7b56\u7565\u3002\u540c\u6837\u5728 SidecarSet \u5bf9\u8c61\u4e2d updateStrategy \u5c5e\u6027\u4e0b\u9762\u4e5f\u53ef\u4ee5\u914d\u7f6e partition \u6765\u5b9a\u4e49\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\u6216\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u4e3a 0\uff1b\u540c\u6837\u8fd8\u53ef\u4ee5\u914d\u7f6e\u7684\u6709 maxUnavailable \u5c5e\u6027\uff0c\u8868\u793a\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u7684\u6700\u5927\u4e0d\u53ef\u7528\u6570\u91cf\u3002 \u5f53 {matched pod}=100,partition=50,maxUnavailable=10 \uff0c\u63a7\u5236\u5668\u4f1a\u53d1\u5e03 50 \u4e2a Pod \u5230\u65b0\u7248\u672c\uff0c\u4f46\u662f\u540c\u4e00\u65f6\u95f4\u53ea\u4f1a\u53d1\u5e03 10 \u4e2a Pod\uff0c\u6bcf\u53d1\u5e03\u597d\u4e00\u4e2a Pod \u624d\u4f1a\u518d\u627e\u4e00\u4e2a\u53d1\u5e03\uff0c\u76f4\u5230 50 \u4e2a\u53d1\u5e03\u5b8c\u6210\u3002 \u5f53 {matched pod}=100,partition=80,maxUnavailable=30 \uff0c\u63a7\u5236\u5668\u4f1a\u53d1\u5e03 20 \u4e2a Pod \u5230\u65b0\u7248\u672c\uff0c\u56e0\u4e3a\u6ee1\u8db3 maxUnavailable \u6570\u91cf\uff0c\u6240\u4ee5\u8fd9 20 \u4e2a Pod \u4f1a\u540c\u65f6\u53d1\u5e03\u3002 \u540c\u6837\u4e5f\u53ef\u4ee5\u8bbe\u7f6e paused: true \u6765\u6682\u505c\u53d1\u5e03\uff0c\u6b64\u65f6\u5bf9\u4e8e\u65b0\u521b\u5efa\u7684\u3001\u6269\u5bb9\u7684 pod \u4f9d\u65e7\u4f1a\u5b9e\u73b0\u6ce8\u5165\u80fd\u529b\uff0c\u5df2\u7ecf\u66f4\u65b0\u7684 pod \u4f1a\u4fdd\u6301\u66f4\u65b0\u540e\u7684\u7248\u672c\u4e0d\u52a8\uff0c\u8fd8\u6ca1\u6709\u66f4\u65b0\u7684 pod \u4f1a\u6682\u505c\u66f4\u65b0\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : sidecarset spec : # ... updateStrategy : type : RollingUpdate maxUnavailable : 20% partition : 10 paused : true \u91d1\u4e1d\u96c0\u53d1\u5e03 \u00b6 \u5bf9\u4e8e\u6709\u91d1\u4e1d\u96c0\u53d1\u5e03\u9700\u6c42\u7684\u4e1a\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7 selector \u6765\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u9700\u8981\u7387\u5148\u91d1\u4e1d\u96c0\u7070\u5ea6\u7684 pod \u6253\u4e0a\u56fa\u5b9a\u7684 [ canary . release ] = true \u7684\u6807\u7b7e\uff0c\u518d\u901a\u8fc7 selector.matchLabels \u6765\u9009\u4e2d\u8be5 pod \u5373\u53ef\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a3\u526f\u672c\u7684 Pod\uff0c\u4e5f\u5177\u6709 app=nginx \u7684\u6807\u7b7e\uff0c\u5982\u4e0b\u6240\u793a apiVersion : apps/v1 kind : Deployment metadata : name : nginx namespace : default spec : replicas : 3 revisionHistoryLimit : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : ngx image : nginx:1.7.9 ports : - containerPort : 80 \u521b\u5efa\u540e\u73b0\u5728\u5c31\u5177\u67094\u4e2a app=nginx \u6807\u7b7e\u7684 Pod \u4e86\uff0c\u7531\u4e8e\u90fd\u5339\u914d\u4e0a\u9762\u521b\u5efa\u7684 SidecarSet \u5bf9\u8c61\uff0c\u6240\u4ee5\u90fd\u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a sidecar1 \u7684\u5bb9\u5668\uff0c\u955c\u50cf\u4e3a busybox\uff1a \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-6457955f7-7hnjw 2 /2 Running 0 51s nginx-6457955f7-prkgz 2 /2 Running 0 51s nginx-6457955f7-tbtxk 2 /2 Running 0 51s test-pod 2 /2 Running 0 4m2s \u73b0\u5728\u5982\u679c\u6211\u4eec\u60f3\u4e3a test-pod \u8fd9\u4e2a\u5e94\u7528\u6765\u6267\u884c\u7070\u5ea6\u7b56\u7565\uff0c\u5c06 sidecar \u5bb9\u5668\u955c\u50cf\u66f4\u65b0\u6210 busybox:1.35.0\uff0c\u5219\u53ef\u4ee5\u5728 updateStrategy \u4e0b\u9762\u6dfb\u52a0 selector.matchLabels \u5c5e\u6027 canary.release: \"true\"\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : test-sidecarset spec : updateStrategy : type : RollingUpdate selector : matchLabels : canary.release : \"true\" containers : - name : sidecar1 image : busybox:1.35.0 # ...... \u7136\u540e\u540c\u6837\u9700\u8981\u7ed9 test-pod \u6dfb\u52a0\u4e0a canary.release=true \u8fd9\u4e2a\u6807\u7b7e\uff1a apiVersion : v1 kind : Pod metadata : labels : app : nginx canary.release : \"true\" name : test-pod spec : containers : - name : app image : nginx:1.7.9 Warning \u4f7f\u7528\u547d\u4ee4kubectl path\u6216\u76f4\u63a5\u4f7f\u7528kubectl editor\u4fee\u6539 \u76f4\u63a5\u4fee\u6539\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u5b58\u5728bug---\u65e0\u6cd5\u751f\u6548 \u66f4\u65b0\u540e\u53ef\u4ee5\u53d1\u73b0 test-pod \u7684 sidecar \u955c\u50cf\u66f4\u65b0\u4e86\uff0c\u5176\u4ed6 Pod \u6ca1\u6709\u53d8\u5316\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 sidecar \u7684\u7070\u5ea6\u529f\u80fd\uff1a \u279c kubectl describe pod test-pod Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Killing 7m53s kubelet Container sidecar1 definition changed, will be restarted Normal Created 7m23s ( x2 over 8m17s ) kubelet Created container sidecar1 Normal Started 7m23s ( x2 over 8m17s ) kubelet Started container sidecar1 Normal Pulling 7m23s kubelet Pulling image \"busybox\" Normal Pulled 7m23s kubelet Successfully pulled image \"busybox\" in 603 .928658ms \u70ed\u5347\u7ea7 \u00b6 SidecarSet \u539f\u5730\u5347\u7ea7\u4f1a\u5148\u505c\u6b62\u65e7\u7248\u672c\u7684\u5bb9\u5668\uff0c\u7136\u540e\u521b\u5efa\u65b0\u7248\u672c\u7684\u5bb9\u5668\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9002\u5408\u4e0d\u5f71\u54cd Pod \u670d\u52a1\u53ef\u7528\u6027\u7684 sidecar \u5bb9\u5668\uff0c\u6bd4\u5982\u8bf4\u65e5\u5fd7\u6536\u96c6\u7684 Agent\u3002 \u4f46\u662f\u5bf9\u4e8e\u5f88\u591a\u4ee3\u7406\u6216\u8fd0\u884c\u65f6\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982 Istio Envoy\uff0c\u8fd9\u79cd\u5347\u7ea7\u65b9\u6cd5\u5c31\u6709\u95ee\u9898\u4e86\uff0cEnvoy \u4f5c\u4e3a Pod \u4e2d\u7684\u4e00\u4e2a\u4ee3\u7406\u5bb9\u5668\uff0c\u4ee3\u7406\u4e86\u6240\u6709\u7684\u6d41\u91cf\uff0c\u5982\u679c\u76f4\u63a5\u91cd\u542f\uff0cPod \u670d\u52a1\u7684\u53ef\u7528\u6027\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u5982\u679c\u9700\u8981\u5355\u72ec\u5347\u7ea7 envoy sidecar\uff0c\u5c31\u9700\u8981\u590d\u6742\u7684\u4f18\u96c5\u7ec8\u6b62\u548c\u534f\u8c03\u673a\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u8fd9\u79cd sidecar \u5bb9\u5668\u7684\u5347\u7ea7\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : hotupgrade-sidecarset spec : selector : matchLabels : app : hotupgrade containers : - name : sidecar image : openkruise/hotupgrade-sample:sidecarv1 imagePullPolicy : Always lifecycle : postStart : exec : command : - /bin/sh - /migrate.sh upgradeStrategy : upgradeType : HotUpgrade hotUpgradeEmptyImage : openkruise/hotupgrade-sample:empty upgradeType : HotUpgrade \u4ee3\u8868\u8be5 sidecar \u5bb9\u5668\u7684\u7c7b\u578b\u662f\u70ed\u5347\u7ea7\u65b9\u6848 hotUpgradeEmptyImage : \u5f53\u70ed\u5347\u7ea7 sidecar \u5bb9\u5668\u65f6\uff0c\u4e1a\u52a1\u5fc5\u987b\u8981\u63d0\u4f9b\u4e00\u4e2a empty \u5bb9\u5668\u7528\u4e8e\u70ed\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u7684\u5bb9\u5668\u5207\u6362\uff0cempty \u5bb9\u5668\u540c sidecar \u5bb9\u5668\u5177\u6709\u76f8\u540c\u7684\u914d\u7f6e\uff08\u9664\u4e86\u955c\u50cf\u5730\u5740\uff09\uff0c\u4f8b\u5982\uff1acommand\u3001lifecycle\u3001probe \u7b49\uff0c\u4f46\u662f\u5b83\u4e0d\u505a\u4efb\u4f55\u5de5\u4f5c\u3002 lifecycle.postStart : \u5728 postStart \u8fd9\u4e2a hook \u4e2d\u5b8c\u6210\u70ed\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u8be5\u811a\u672c\u9700\u8981\u7531\u4e1a\u52a1\u6839\u636e\u81ea\u8eab\u7684\u7279\u70b9\u81ea\u884c\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1anginx \u70ed\u5347\u7ea7\u9700\u8981\u5b8c\u6210 Listen FD \u5171\u4eab\u4ee5\u53ca reload \u64cd\u4f5c\u3002 \u6574\u4f53\u6765\u8bf4\u70ed\u5347\u7ea7\u7279\u6027\u603b\u5171\u5305\u542b\u4ee5\u4e0b\u4e24\u4e2a\u8fc7\u7a0b\uff1a Pod \u521b\u5efa\u65f6\uff0c\u6ce8\u5165\u70ed\u5347\u7ea7\u5bb9\u5668 \u539f\u5730\u5347\u7ea7\u65f6\uff0c\u5b8c\u6210\u70ed\u5347\u7ea7\u6d41\u7a0b \u6ce8\u5165\u70ed\u5347\u7ea7\u5bb9\u5668 Pod \u521b\u5efa\u65f6\uff0cSidecarSet Webhook \u5c06\u4f1a\u6ce8\u5165\u4e24\u4e2a\u5bb9\u5668\uff1a {sidecarContainer.name}-1 : \u5982\u4e0b\u56fe\u6240\u793a envoy-1\uff0c\u8fd9\u4e2a\u5bb9\u5668\u4ee3\u8868\u6b63\u5728\u5b9e\u9645\u5de5\u4f5c\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aenvoy:1.16.0 {sidecarContainer.name}-2 : \u5982\u4e0b\u56fe\u6240\u793a envoy-2\uff0c\u8fd9\u4e2a\u5bb9\u5668\u662f\u4e1a\u52a1\u914d\u7f6e\u7684 hotUpgradeEmptyImage \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aempty:1.0\uff0c\u7528\u4e8e\u540e\u9762\u7684\u70ed\u5347\u7ea7\u673a\u5236 \u70ed\u5347\u7ea7\u6d41\u7a0b \u00b6 \u70ed\u5347\u7ea7\u6d41\u7a0b\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a Upgrade : \u5c06 empty \u5bb9\u5668\u5347\u7ea7\u4e3a\u5f53\u524d\u6700\u65b0\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aenvoy-2.Image = envoy:1.17.0 Migration : lifecycle.postStart \u5b8c\u6210\u70ed\u5347\u7ea7\u6d41\u7a0b\u4e2d\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u5f53\u8fc1\u79fb\u5b8c\u6210\u540e\u9000\u51fa Reset : \u72b6\u6001\u8fc1\u79fb\u5b8c\u6210\u540e\uff0c\u70ed\u5347\u7ea7\u6d41\u7a0b\u5c06\u8bbe\u7f6e envoy-1 \u5bb9\u5668\u4e3a empty \u955c\u50cf\uff0c\u4f8b\u5982\uff1aenvoy-1.Image = empty:1.0 \u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\u5b8c\u6210\u4e86\u70ed\u5347\u7ea7\u4e2d\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u5f53\u5bf9 Pod \u6267\u884c\u591a\u6b21\u70ed\u5347\u7ea7\u65f6\uff0c\u5c06\u91cd\u590d\u6027\u7684\u6267\u884c\u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\u3002 \u8fd9\u91cc\u6211\u4eec\u4ee5 OpenKruise \u7684\u5b98\u65b9\u793a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u9996\u5148\u521b\u5efa\u4e0a\u9762\u7684 hotupgrade-sidecarset \u8fd9\u4e2a SidecarSet\u3002\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 CloneSet \u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet # ...... --- apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : labels : app : hotupgrade name : busybox spec : replicas : 1 selector : matchLabels : app : hotupgrade template : metadata : labels : app : hotupgrade spec : containers : - name : busybox image : openkruise/hotupgrade-sample:busybox \u521b\u5efa\u5b8c\u6210\u540e\uff0cCloneSet \u7ba1\u7406\u7684 Pod \u5df2\u7ecf\u6ce8\u5165 sidecar-1 \u548c sidecar-2 \u4e24\u4e2a\u5bb9\u5668: \u279c kubectl get sidecarset hotupgrade-sidecarset NAME MATCHED UPDATED READY AGE hotupgrade-sidecarset 1 1 0 6s \u279c kubectl get pods -l app=hotupgrade NAME READY STATUS RESTARTS AGE busybox-t7phd 3/3 Running 0 79s kubectl get pods -l app=hotupgrade NAME READY STATUS RESTARTS AGE busybox-t7phd 3/3 Running 0 79s \u279c kubectl describe pods busybox-t7phd Name : busybox-t7phd Namespace : default Priority : 0 Node : node2/192.168.31.174 ...... Controlled By : CloneSet/busybox Containers : sidecar-1 : Container ID : containerd://5afe9c26923508bf480238a232a2ab1457d96b51ff28024a36980544ad5c0d94 Image : openkruise/hotupgrade-sample:sidecarv1 Environment : IS_INJECTED : true SIDECARSET_VERSION : (v1:metadata.annotations['version.sidecarset.kruise.io/sidecar-1']) SIDECARSET_VERSION_ALT : (v1:metadata.annotations['versionalt.sidecarset.kruise.io/sidecar-1']) sidecar-2 : Container ID : containerd://e17b576eb24985efd4154f3bc94e88bb6231b37bb391b6d611b0dc12e7a8db0b Image : openkruise/hotupgrade-sample:empty Environment : IS_INJECTED : true SIDECARSET_VERSION : (v1:metadata.annotations['version.sidecarset.kruise.io/sidecar-2']) SIDECARSET_VERSION_ALT : (v1:metadata.annotations['versionalt.sidecarset.kruise.io/sidecar-2']) busybox : Container ID : containerd://6d0d45a1981f63df45ce2fba958b734ccac25d010192f441d98dcc4a1b421646 Image : openkruise/hotupgrade-sample:busybox ...... busybox \u4e3b\u5bb9\u5668\u6bcf100\u6beb\u79d2\u4f1a\u8bf7\u6c42\u4e00\u6b21sidecar(version=v1)\u670d\u52a1\uff1a \u279c kubectl logs -f busybox-t7phd -c busybox I0306 11 :07:38.363847 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.474805 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.585975 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.697097 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) ...... \u73b0\u5728\u6211\u4eec\u53bb\u5347\u7ea7 sidecar \u5bb9\u5668\uff0c\u5c06\u955c\u50cf\u4fee\u6539\u4e3a openkruise/hotupgrade-sample:sidecarv2 \uff1a \u279c kubectl patch sidecarset hotupgrade-sidecarset --type = 'json' -p = '[{\"op\": \"replace\", \"path\": \"/spec/containers/0/image\", \"value\": \"openkruise/hotupgrade-sample:sidecarv2\"}]' \u66f4\u65b0\u540e\u518d\u53bb\u89c2\u5bdf pod \u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u770b\u5230 sidecar-2 \u955c\u50cf\u6b63\u5e38\u66f4\u65b0\u4e86\uff1a \u279c kubectl get pods busybox-t7phd NAME READY STATUS RESTARTS AGE busybox-t7phd 3 /3 Running 0 6m59s \u279c kubectl describe pods busybox-t7phd ...... Events: ...... Normal Created 6m12s kubelet Created container busybox Normal Started 6m12s kubelet Started container busybox Normal Killing 32s kubelet Container sidecar-2 definition changed, will be restarted Normal Pulling 32s kubelet Pulling image \"openkruise/hotupgrade-sample:sidecarv2\" \u5e76\u4e14\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u89c2\u5bdf busybox \u5bb9\u5668\u4ecd\u7136\u4f1a\u4e0d\u65ad\u8bf7\u6c42 sidecar \u670d\u52a1\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u5931\u8d25\u7684\u8bf7\u6c42\u51fa\u73b0\uff1a \u279c kubectl logs -f busybox-t7phd -c busybox I0306 11 :08:47.365196 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :08:47.476553 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :08:47.587727 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) \u6574\u4e2a\u70ed\u5347\u7ea7\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003 GitHub \u7684\u5b9e\u73b0\u3002 Container Restart \u00b6 ContainerRecreateRequest \u63a7\u5236\u5668\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u91cd\u542f/\u91cd\u5efa\u5b58\u91cf Pod \u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u3002\u548c Kruise \u63d0\u4f9b\u7684\u539f\u5730\u5347\u7ea7\u7c7b\u4f3c\uff0c\u5f53\u4e00\u4e2a\u5bb9\u5668\u91cd\u5efa\u7684\u65f6\u5019\uff0cPod \u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u8fd8\u4fdd\u6301\u6b63\u5e38\u8fd0\u884c\uff0c\u91cd\u5efa\u5b8c\u6210\u540e\uff0cPod \u4e2d\u9664\u4e86\u8be5\u5bb9\u5668\u7684 restartCount \u589e\u52a0\u4ee5\u5916\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5176\u4ed6\u53d8\u5316\u3002 \u4e3a\u8981\u91cd\u5efa\u5bb9\u5668\u7684 Pod \u63d0\u4ea4\u4e00\u4e2a ContainerRecreateRequest \u81ea\u5b9a\u4e49\u8d44\u6e90\uff08\u7f29\u5199 CRR\uff09\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : ContainerRecreateRequest metadata : namespace : pod-namespace name : xxx spec : podName : pod-name containers : # \u8981\u91cd\u5efa\u7684\u5bb9\u5668\u540d\u5b57\u5217\u8868\uff0c\u81f3\u5c11\u8981\u6709 1 \u4e2a - name : app - name : sidecar strategy : failurePolicy : Fail # 'Fail' \u6216 'Ignore'\uff0c\u8868\u793a\u4e00\u65e6\u6709\u67d0\u4e2a\u5bb9\u5668\u505c\u6b62\u6216\u91cd\u5efa\u5931\u8d25\uff0c CRR \u7acb\u5373\u7ed3\u675f orderedRecreate : false # 'true' \u8868\u793a\u8981\u7b49\u524d\u4e00\u4e2a\u5bb9\u5668\u91cd\u5efa\u5b8c\u6210\u4e86\uff0c\u518d\u5f00\u59cb\u91cd\u5efa\u4e0b\u4e00\u4e2a terminationGracePeriodSeconds : 30 # \u7b49\u5f85\u5bb9\u5668\u4f18\u96c5\u9000\u51fa\u7684\u65f6\u95f4\uff0c\u4e0d\u586b\u9ed8\u8ba4\u7528 Pod \u4e2d\u5b9a\u4e49\u7684 unreadyGracePeriodSeconds : 3 # \u5728\u91cd\u5efa\u4e4b\u524d\u5148\u628a Pod \u8bbe\u4e3a not ready\uff0c\u5e76\u7b49\u5f85\u8fd9\u6bb5\u65f6\u95f4\u540e\u518d\u5f00\u59cb\u6267\u884c\u91cd\u5efa minStartedSeconds : 10 # \u91cd\u5efa\u540e\u65b0\u5bb9\u5668\u81f3\u5c11\u4fdd\u6301\u8fd0\u884c\u8fd9\u6bb5\u65f6\u95f4\uff0c\u624d\u8ba4\u4e3a\u8be5\u5bb9\u5668\u91cd\u5efa\u6210\u529f activeDeadlineSeconds : 300 # \u5982\u679c CRR \u6267\u884c\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5219\u76f4\u63a5\u6807\u8bb0\u4e3a\u7ed3\u675f\uff08\u672a\u7ed3\u675f\u7684\u5bb9\u5668\u6807\u8bb0\u4e3a\u5931\u8d25\uff09 ttlSecondsAfterFinished : 1800 # CRR \u7ed3\u675f\u540e\uff0c\u8fc7\u4e86\u8fd9\u6bb5\u65f6\u95f4\u81ea\u52a8\u88ab\u5220\u9664\u6389 \u4e00\u822c\u6765\u8bf4\uff0c\u5217\u8868\u4e2d\u7684\u5bb9\u5668\u4f1a\u4e00\u4e2a\u4e2a\u88ab\u505c\u6b62\uff0c\u4f46\u53ef\u80fd\u540c\u65f6\u5728\u88ab\u91cd\u5efa\u548c\u542f\u52a8\uff0c\u9664\u975e orderedRecreate \u88ab\u8bbe\u7f6e\u4e3a true \u3002 unreadyGracePeriodSeconds \u529f\u80fd\u4f9d\u8d56\u4e8e KruisePodReadinessGate \u8fd9\u4e2a feature-gate\uff0c\u540e\u8005\u4f1a\u5728\u6bcf\u4e2a Pod \u521b\u5efa\u7684\u65f6\u5019\u6ce8\u5165\u4e00\u4e2a readinessGate \uff0c\u5426\u5219\uff0c\u9ed8\u8ba4\u53ea\u4f1a\u7ed9 Kruise workload \u521b\u5efa\u7684 Pod \u6ce8\u5165 readinessGate \uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u8fd9\u4e9b Pod \u624d\u80fd\u5728 CRR \u91cd\u5efa\u65f6\u4f7f\u7528 unreadyGracePeriodSeconds \u3002 ImagePullJob \u00b6 NodeImage \u548c ImagePullJob \u662f\u4ece Kruise v0.8.0 \u7248\u672c\u5f00\u59cb\u63d0\u4f9b\u7684 CRD\u3002Kruise \u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e2a Node \u521b\u5efa\u4e00\u4e2a NodeImage\uff0c\u5b83\u5305\u542b\u4e86\u54ea\u4e9b\u955c\u50cf\u9700\u8981\u5728\u8fd9\u4e2a Node \u4e0a\u505a\u9884\u70ed\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc3\u4e2a\u8282\u70b9\uff0c\u5219\u4f1a\u81ea\u52a8\u521b\u5efa3\u4e2a NodeImage \u5bf9\u8c61\uff1a \u279c kubectl get nodeimage NAME DESIRED PULLING SUCCEED FAILED AGE master1 0 0 0 0 10d node1 0 0 0 0 10d node2 0 0 0 0 10d \u6bd4\u5982\u6211\u4eec\u67e5\u770b node1 \u8282\u70b9\u4e0a\u7684 NodeImage \u5bf9\u8c61\uff1a \u279c kruise kubectl get nodeimage node1 -o yaml apiVersion : apps.kruise.io/v1alpha1 kind : NodeImage metadata : labels : beta.kubernetes.io/arch : amd64 beta.kubernetes.io/os : linux kubernetes.io/arch : amd64 kubernetes.io/hostname : node1 kubernetes.io/os : linux name : node1 spec : {} status : desired : 0 failed : 0 pulling : 0 succeeded : 0 \u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u62c9\u53bb\u4e00\u4e2a ubuntu:latest \u955c\u50cf\uff0c\u5219\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u53bb\u4fee\u6539 spec\uff1a ...... spec : images : ubuntu : # \u955c\u50cf name tags : - tag : latest # \u955c\u50cf tag pullPolicy : ttlSecondsAfterFinished : 300 # [required] \u62c9\u53d6\u5b8c\u6210\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u8d85\u8fc7 300s \u540e\uff0c\u5c06\u8fd9\u4e2a\u4efb\u52a1\u4ece NodeImage \u4e2d\u6e05\u9664 timeoutSeconds : 600 # [optional] \u6bcf\u4e00\u6b21\u62c9\u53d6\u7684\u8d85\u65f6\u65f6\u95f4, \u9ed8\u8ba4\u4e3a 600 backoffLimit : 3 # [optional] \u62c9\u53d6\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a 3 activeDeadlineSeconds : 1200 # [optional] \u6574\u4e2a\u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u65e0\u9ed8\u8ba4\u503c \u66f4\u65b0\u540e\u6211\u4eec\u53ef\u4ee5\u4ece status \u4e2d\u770b\u5230\u62c9\u53d6\u8fdb\u5ea6\u4ee5\u53ca\u7ed3\u679c\uff0c\u5e76\u4e14\u4f60\u4f1a\u53d1\u73b0\u62c9\u53d6\u5b8c\u6210 600s \u540e\u4efb\u52a1\u4f1a\u88ab\u6e05\u9664\u3002 \u6b64\u5916\u7528\u6237\u53ef\u4ee5\u521b\u5efa ImagePullJob \u5bf9\u8c61\uff0c\u6765\u6307\u5b9a\u4e00\u4e2a\u955c\u50cf\u8981\u5728\u54ea\u4e9b\u8282\u70b9\u4e0a\u505a\u9884\u70ed\u3002 \u6bd4\u5982\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 ImagePullJob \u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : ImagePullJob metadata : name : job-with-always spec : image : nginx:1.9.1 # [required] \u5b8c\u6574\u7684\u955c\u50cf\u540d name:tag parallelism : 10 # [optional] \u6700\u5927\u5e76\u53d1\u62c9\u53d6\u7684\u8282\u70b9\u68b3\u7406, \u9ed8\u8ba4\u4e3a 1 selector : # [optional] \u6307\u5b9a\u8282\u70b9\u7684 \u540d\u5b57\u5217\u8868 \u6216 \u6807\u7b7e\u9009\u62e9\u5668 (\u53ea\u80fd\u8bbe\u7f6e\u5176\u4e2d\u4e00\u79cd) names : - node-1 - node-2 matchLabels : node-type : xxx # podSelector: # [optional] pod label \u9009\u62e9\u5668\u6765\u5728\u8fd9\u4e9b pod \u6240\u5728\u8282\u70b9\u4e0a\u62c9\u53d6\u955c\u50cf, \u4e0e selector \u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e. # pod-label: xxx completionPolicy : type : Always # [optional] \u9ed8\u8ba4\u4e3a Always activeDeadlineSeconds : 1200 # [optional] \u65e0\u9ed8\u8ba4\u503c, \u53ea\u5bf9 Alway \u7c7b\u578b\u751f\u6548 ttlSecondsAfterFinished : 300 # [optional] \u65e0\u9ed8\u8ba4\u503c, \u53ea\u5bf9 Alway \u7c7b\u578b\u751f\u6548 pullPolicy : # [optional] \u9ed8\u8ba4 backoffLimit=3, timeoutSeconds=600 backoffLimit : 3 timeoutSeconds : 300 pullSecrets : - secret-name1 - secret-name2 \u6211\u4eec\u53ef\u4ee5\u5728 selector \u5b57\u6bb5\u4e2d\u6307\u5b9a\u8282\u70b9\u7684\u540d\u5b57\u5217\u8868\u6216\u6807\u7b7e\u9009\u62e9\u5668 (\u53ea\u80fd\u8bbe\u7f6e\u5176\u4e2d\u4e00\u79cd)\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e selector \u5219\u4f1a\u9009\u62e9\u6240\u6709\u8282\u70b9\u505a\u9884\u70ed\u3002\u6216\u8005\u53ef\u4ee5\u914d\u7f6e podSelector \u6765\u5728\u8fd9\u4e9b pod \u6240\u5728\u8282\u70b9\u4e0a\u62c9\u53d6\u955c\u50cf\uff0c podSelector \u4e0e selector \u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e \u3002 \u540c\u65f6\uff0cImagePullJob \u6709\u4e24\u79cd completionPolicy \u7c7b\u578b: Always \uff1a\u8868\u793a\u8fd9\u4e2a job \u662f\u4e00\u6b21\u6027\u9884\u70ed\uff0c\u4e0d\u7ba1\u6210\u529f\u3001\u5931\u8d25\u90fd\u4f1a\u7ed3\u675f activeDeadlineSeconds \uff1a\u6574\u4e2a job \u7684 deadline \u7ed3\u675f\u65f6\u95f4 ttlSecondsAfterFinished \uff1a\u7ed3\u675f\u540e\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0c\u81ea\u52a8\u6e05\u7406\u5220\u9664 job Never \uff1a\u8868\u793a\u8fd9\u4e2a job \u662f\u957f\u671f\u8fd0\u884c\u3001\u4e0d\u4f1a\u7ed3\u675f\uff0c\u5e76\u4e14\u4f1a\u6bcf\u5929\u90fd\u4f1a\u5728\u5339\u914d\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u9884\u70ed\u4e00\u6b21\u6307\u5b9a\u7684\u955c\u50cf \u540c\u6837\u5982\u679c\u4f60\u8981\u9884\u70ed\u7684\u955c\u50cf \u6765\u81ea\u79c1\u6709\u4ed3\u5e93 \uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 pullSecrets \u6765\u6307\u5b9a\u4ed3\u5e93\u7684 Secret \u4fe1\u606f\u3002 \u5bb9\u5668\u542f\u52a8\u987a\u5e8f \u00b6 Container Launch Priority \u63d0\u4f9b\u4e86\u63a7\u5236\u4e00\u4e2a Pod \u4e2d\u5bb9\u5668\u542f\u52a8\u987a\u5e8f\u7684\u65b9\u6cd5\u3002\u901a\u5e38\u6765\u8bf4 Pod \u5bb9\u5668\u7684\u542f\u52a8\u548c\u9000\u51fa\u987a\u5e8f\u662f\u7531 Kubelet \u7ba1\u7406\u7684\uff0cKubernetes \u66fe\u7ecf\u6709\u4e00\u4e2a KEP \u8ba1\u5212\u5728 container \u4e2d\u589e\u52a0\u4e00\u4e2a type \u5b57\u6bb5\u6765\u6807\u8bc6\u4e0d\u540c\u7c7b\u578b\u5bb9\u5668\u7684\u542f\u505c\u4f18\u5148\u7ea7\uff0c\u4f46\u662f\u7531\u4e8esig-node \u8003\u8651\u5230\u5bf9\u73b0\u6709\u4ee3\u7801\u67b6\u6784\u7684\u6539\u52a8\u592a\u5927\uff0c\u6240\u4ee5\u5c06\u8be5\u63d0\u6848\u62d2\u7edd\u4e86\u3002 Warning \u8fd9\u4e2a\u529f\u80fd\u4f5c\u7528\u5728 Pod \u5bf9\u8c61\u4e0a\uff0c\u4e0d\u7ba1\u5b83\u7684 owner \u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u9002\u7528\u4e8e Deployment\u3001CloneSet \u4ee5\u53ca\u5176\u4ed6\u7684 workload \u79cd\u7c7b\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6309\u7167\u5bb9\u5668\u987a\u5e8f\u542f\u52a8\uff0c\u53ea\u9700\u8981\u5728 Pod \u4e2d\u5b9a\u4e49\u4e00\u4e2a apps.kruise.io/container-launch-priority \u7684\u6ce8\u89e3\u5373\u53ef\uff1a apiVersion : v1 kind : Pod annotations : apps.kruise.io/container-launch-priority : Ordered spec : containers : - name : sidecar # ... - name : main # ... Kruise \u4f1a\u4fdd\u8bc1\u524d\u9762\u7684\u5bb9\u5668\uff08sidecar\uff09\u4f1a\u5728\u540e\u9762\u5bb9\u5668\uff08main\uff09\u4e4b\u524d\u542f\u52a8\u3002 \u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u6309\u81ea\u5b9a\u4e49\u987a\u5e8f\u542f\u52a8\uff0c\u4f46\u662f\u9700\u8981\u5728 Pod \u5bb9\u5668\u4e2d\u6dfb\u52a0 KRUISE_CONTAINER_PRIORITY \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf: apiVersion : v1 kind : Pod spec : containers : - name : main # ... - name : sidecar env : - name : KRUISE_CONTAINER_PRIORITY value : \"1\" # ... \u8be5\u73af\u5883\u53d8\u91cf\u503c\u7684\u8303\u56f4\u5728 [-2147483647, 2147483647]\uff0c\u4e0d\u5199\u9ed8\u8ba4\u662f 0\uff0c\u6743\u91cd\u9ad8\u7684\u5bb9\u5668\uff0c\u4f1a\u4fdd\u8bc1\u5728\u6743\u91cd\u4f4e\u7684\u5bb9\u5668\u4e4b\u524d\u542f\u52a8\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u76f8\u540c\u6743\u91cd\u7684\u5bb9\u5668\u4e0d\u4fdd\u8bc1\u542f\u52a8\u987a\u5e8f\u3002 \u9664\u4e86\u8fd9\u4e9b\u5e38\u7528\u7684\u589e\u5f3a\u63a7\u5236\u5668\u4e4b\u5916 OpenKruise \u8fd8\u6709\u5f88\u591a\u9ad8\u7ea7\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u524d\u5f80 \u5b98\u7f51 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"OpenKruise"},{"location":"Controller/OpenKruise/#openkruise","text":"OpenKruise \u662f\u4e00\u4e2a\u57fa\u4e8e Kubernetes \u7684 \u6269\u5c55\u5957\u4ef6 \uff0c\u4e3b\u8981\u805a\u7126\u4e8e\u4e91\u539f\u751f\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff0c\u6bd4\u5982\u90e8\u7f72\u3001\u53d1\u5e03\u3001\u8fd0\u7ef4\u4ee5\u53ca\u53ef\u7528\u6027\u9632\u62a4\u3002 OpenKruise \u63d0\u4f9b\u7684\u7edd\u5927\u90e8\u5206\u80fd\u529b\u90fd\u662f\u57fa\u4e8e CRD \u6269\u5c55\u6765\u5b9a\u4e49\u7684\uff0c\u5b83\u4eec\u4e0d\u5b58\u5728\u4e8e\u4efb\u4f55\u5916\u90e8\u4f9d\u8d56\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u4efb\u610f\u7eaf\u51c0\u7684 Kubernetes \u96c6\u7fa4\u4e2d \u3002Kubernetes \u81ea\u8eab\u63d0\u4f9b\u7684\u4e00\u4e9b\u5e94\u7528\u90e8\u7f72\u7ba1\u7406\u529f\u80fd\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u5e94\u7528\u4e0e\u96c6\u7fa4\u7684\u573a\u666f\u8fd9\u4e9b\u529f\u80fd\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\uff0c OpenKruise \u5f25\u8865\u4e86 Kubernetes \u5728\u5e94\u7528\u90e8\u7f72\u3001\u5347\u7ea7\u3001\u9632\u62a4\u3001\u8fd0\u7ef4\u7b49\u9886\u57df\u7684\u4e0d\u8db3 \u3002 OpenKruise \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7684\u4e00\u4e9b\u6838\u5fc3\u80fd\u529b\uff1a \u589e\u5f3a\u7248\u672c\u7684 Workloads \uff1aOpenKruise \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u589e\u5f3a\u7248\u672c\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u6bd4\u5982 CloneSet\u3001Advanced StatefulSet\u3001Advanced DaemonSet\u3001BroadcastJob \u7b49\u3002\u5b83\u4eec\u4e0d\u4ec5\u652f\u6301\u7c7b\u4f3c\u4e8e Kubernetes \u539f\u751f Workloads \u7684\u57fa\u7840\u529f\u80fd\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5982\u539f\u5730\u5347\u7ea7\u3001\u53ef\u914d\u7f6e\u7684\u6269\u7f29\u5bb9/\u53d1\u5e03\u7b56\u7565\u3001\u5e76\u53d1\u64cd\u4f5c\u7b49\u3002\u5176\u4e2d\uff0c\u539f\u5730\u5347\u7ea7\u662f\u4e00\u79cd\u5347\u7ea7\u5e94\u7528\u5bb9\u5668\u955c\u50cf\u751a\u81f3\u73af\u5883\u53d8\u91cf\u7684\u5168\u65b0\u65b9\u5f0f\uff0c\u5b83\u53ea\u4f1a\u7528\u65b0\u7684\u955c\u50cf\u91cd\u5efa Pod \u4e2d\u7684\u7279\u5b9a\u5bb9\u5668\uff0c\u6574\u4e2a Pod \u4ee5\u53ca\u5176\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u90fd\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002\u56e0\u6b64\u5b83\u5e26\u6765\u4e86\u66f4\u5feb\u7684\u53d1\u5e03\u901f\u5ea6\uff0c\u4ee5\u53ca\u907f\u514d\u4e86\u5bf9\u5176\u4ed6 Scheduler\u3001CNI\u3001CSI \u7b49\u7ec4\u4ef6\u7684\u8d1f\u9762\u5f71\u54cd\u3002 \u5e94\u7528\u7684\u65c1\u8def\u7ba1\u7406 \uff1aOpenKruise \u63d0\u4f9b\u4e86\u591a\u79cd\u901a\u8fc7\u65c1\u8def\u7ba1\u7406\u5e94\u7528 sidecar \u5bb9\u5668\u3001\u591a\u533a\u57df\u90e8\u7f72\u7684\u65b9\u5f0f\uff0c\u201c\u65c1\u8def\u201d \u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4e0d\u9700\u8981\u4fee\u6539\u5e94\u7528\u7684 Workloads \u6765\u5b9e\u73b0\u5b83\u4eec\u3002\u6bd4\u5982\uff0cSidecarSet \u80fd\u5e2e\u52a9\u4f60\u5728\u6240\u6709\u5339\u914d\u7684 Pod \u521b\u5efa\u7684\u65f6\u5019\u90fd\u6ce8\u5165\u7279\u5b9a\u7684 sidecar \u5bb9\u5668\uff0c\u751a\u81f3\u53ef\u4ee5\u539f\u5730\u5347\u7ea7\u5df2\u7ecf\u6ce8\u5165\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u3001\u5e76\u4e14\u5bf9 Pod \u4e2d\u5176\u4ed6\u5bb9\u5668\u4e0d\u9020\u6210\u5f71\u54cd\u3002\u800c WorkloadSpread \u53ef\u4ee5\u7ea6\u675f\u65e0\u72b6\u6001 Workload \u6269\u5bb9\u51fa\u6765 Pod \u7684\u533a\u57df\u5206\u5e03\uff0c\u8d4b\u4e88\u5355\u4e00 Workload \u7684\u591a\u533a\u57df\u548c\u5f39\u6027\u90e8\u7f72\u7684\u80fd\u529b\u3002 \u9ad8\u53ef\u7528\u6027\u9632\u62a4 \uff1aOpenKruise \u53ef\u4ee5\u4fdd\u62a4\u4f60\u7684 Kubernetes \u8d44\u6e90\u4e0d\u53d7\u7ea7\u8054\u5220\u9664\u673a\u5236\u7684\u5e72\u6270\uff0c\u5305\u62ec CRD\u3001Namespace\u3001\u4ee5\u53ca\u51e0\u4e4e\u5168\u90e8\u7684 Workloads \u7c7b\u578b\u8d44\u6e90\u3002\u76f8\u6bd4\u4e8e Kubernetes \u539f\u751f\u7684 PDB \u53ea\u63d0\u4f9b\u9488\u5bf9 Pod Eviction \u7684\u9632\u62a4\uff0cPodUnavailableBudget \u80fd\u591f\u9632\u62a4 Pod Deletion\u3001Eviction\u3001Update \u7b49\u8bb8\u591a\u79cd voluntary disruption \u573a\u666f\u3002 \u9ad8\u7ea7\u7684\u5e94\u7528\u8fd0\u7ef4\u80fd\u529b \uff1aOpenKruise \u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u9ad8\u7ea7\u7684\u8fd0\u7ef4\u80fd\u529b\u6765\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7ba1\u7406\u5e94\u7528\uff0c\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7 ImagePullJob \u6765\u5728\u4efb\u610f\u8303\u56f4\u7684\u8282\u70b9\u4e0a\u9884\u5148\u62c9\u53d6\u67d0\u4e9b\u955c\u50cf\uff0c\u6216\u8005\u6307\u5b9a\u67d0\u4e2a Pod \u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u88ab\u539f\u5730\u91cd\u542f\u3002","title":"OpenKruise"},{"location":"Controller/OpenKruise/#_1","text":"\u4e0b\u56fe\u662f OpenKruise \u7684\u6574\u4f53\u67b6\u6784\uff1a \u9996\u5148\u6211\u4eec\u8981\u6e05\u695a\u6240\u6709 OpenKruise \u7684\u529f\u80fd\u90fd\u662f\u901a\u8fc7 Kubernetes CRD \u6765\u63d0\u4f9b\u7684\uff1a \u279c kubectl get crd | grep kruise.io advancedcronjobs.apps.kruise.io 2021 -09-16T06:02:36Z broadcastjobs.apps.kruise.io 2021 -09-16T06:02:36Z clonesets.apps.kruise.io 2021 -09-16T06:02:36Z containerrecreaterequests.apps.kruise.io 2021 -09-16T06:02:36Z daemonsets.apps.kruise.io 2021 -09-16T06:02:36Z imagepulljobs.apps.kruise.io 2021 -09-16T06:02:36Z nodeimages.apps.kruise.io 2021 -09-16T06:02:36Z podunavailablebudgets.policy.kruise.io 2021 -09-16T06:02:36Z resourcedistributions.apps.kruise.io 2021 -09-16T06:02:36Z sidecarsets.apps.kruise.io 2021 -09-16T06:02:36Z statefulsets.apps.kruise.io 2021 -09-16T06:02:36Z uniteddeployments.apps.kruise.io 2021 -09-16T06:02:37Z workloadspreads.apps.kruise.io 2021 -09-16T06:02:37Z \u5176\u4e2d Kruise-manager \u662f\u4e00\u4e2a\u8fd0\u884c\u63a7\u5236\u5668\u548c webhook \u7684\u4e2d\u5fc3\u7ec4\u4ef6\uff0c\u5b83\u901a\u8fc7 Deployment \u90e8\u7f72\u5728 kruise-system \u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u4ece\u903b\u8f91\u4e0a\u6765\u770b\uff0c\u5982 cloneset-controller \u3001 sidecarset-controller \u8fd9\u4e9b\u7684\u63a7\u5236\u5668\u90fd\u662f\u72ec\u7acb\u8fd0\u884c\u7684\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u51cf\u5c11\u590d\u6742\u5ea6\uff0c\u5b83\u4eec\u90fd\u88ab\u6253\u5305\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u5e76\u8fd0\u884c\u5728 kruise-controller-manager-xxx \u8fd9\u4e2a Pod \u4e2d\u3002\u9664\u4e86\u63a7\u5236\u5668\u4e4b\u5916\uff0ckruise-controller-manager-xxx \u4e2d\u8fd8\u5305\u542b\u4e86\u9488\u5bf9 Kruise CRD \u4ee5\u53ca Pod \u8d44\u6e90\u7684 admission webhook \u3002 Kruise-manager \u4f1a\u521b\u5efa\u4e00\u4e9b webhook configurations \u6765\u914d\u7f6e\u54ea\u4e9b\u8d44\u6e90\u9700\u8981\u611f\u77e5\u5904\u7406\u3001\u4ee5\u53ca\u63d0\u4f9b\u4e00\u4e2a Service \u6765\u7ed9 kube-apiserver \u8c03\u7528\u3002 \u4ece v0.8.0 \u7248\u672c\u5f00\u59cb\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684 Kruise-daemon \u7ec4\u4ef6\uff0c\u5b83\u901a\u8fc7 DaemonSet \u90e8\u7f72\u5230\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u63d0\u4f9b\u955c\u50cf\u9884\u70ed\u3001\u5bb9\u5668\u91cd\u542f\u7b49\u529f\u80fd\u3002 \u53ef\u4ee5\u901a\u8fc7\u67e5\u9605\u8fd9\u4e9b \u53d1\u5e03\u7684\u65b0\u529f\u80fd \u3002","title":"\u67b6\u6784"},{"location":"Controller/OpenKruise/#_2","text":"\u8fd9\u91cc\u6211\u4eec\u540c\u6837\u8fd8\u662f\u4f7f\u7528 Helm \u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c \u9700\u8981\u6ce8\u610f\u4ece v1.0.0 \u5f00\u59cb\uff0cOpenKruise \u8981\u6c42\u5728 Kubernetes >= 1.16 \u4ee5\u4e0a\u7248\u672c\u7684\u96c6\u7fa4\u4e2d\u5b89\u88c5\u548c\u4f7f\u7528 \u3002 \u9996\u5148\u6dfb\u52a0 charts \u4ed3\u5e93\uff1a \u279c helm repo add openkruise https://openkruise.github.io/charts \u279c helm repo update \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684\u5e94\u7528\uff1a \u279c helm upgrade --install kruise openkruise/kruise --version 1 .1.0 \u8be5 charts \u5728\u6a21\u677f\u4e2d\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u547d\u540d\u7a7a\u95f4\u4e3a kruise-system \uff0c\u6240\u4ee5\u5728\u5b89\u88c5\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u5982\u679c\u4f60\u7684\u73af\u5883\u8bbf\u95ee DockerHub \u5b98\u65b9\u955c\u50cf\u8f83\u6162\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u955c\u50cf\u66ff\u6362\u6210\u963f\u91cc\u4e91\u7684\u955c\u50cf\uff1a \u279c helm upgrade --install kruise openkruise/kruise --set manager.image.repository = openkruise-registry.cn-hangzhou.cr.aliyuncs.com/openkruise/kruise-manager --version 1 .0.1 \u5e94\u7528\u90e8\u7f72\u5b8c\u6210\u540e\u4f1a\u5728 kruise-system \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u8fd0\u884c2\u4e2a kruise-manager \u7684 Pod\uff0c\u540c\u6837\u5b83\u4eec\u4e4b\u95f4\u91c7\u7528 leader-election \u7684\u65b9\u5f0f\u9009\u4e3b\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u63d0\u4f9b\u670d\u52a1\uff0c\u8fbe\u5230\u9ad8\u53ef\u7528\u7684\u76ee\u7684\uff0c\u6b64\u5916\u8fd8\u4f1a\u4ee5 DaemonSet \u7684\u5f62\u5f0f\u542f\u52a8 kruise-daemon \u7ec4\u4ef6\uff1a \u279c kubectl get pods -n kruise-system NAME READY STATUS RESTARTS AGE kruise-controller-manager-f5c9b55c5-7hgt9 1 /1 Running 0 4m3s kruise-controller-manager-f5c9b55c5-v9ptf 1 /1 Running 0 4m3s kruise-daemon-bqf5v 1 /1 Running 0 4m3s kruise-daemon-hvgwv 1 /1 Running 0 4m3s kruise-daemon-tnqsx 1 /1 Running 0 4m3s \u5982\u679c\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684\u53c2\u6570\u8fdb\u884c\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u53ef\u914d\u7f6e\u7684 values \u503c\u53ef\u4ee5\u53c2\u8003 charts \u6587\u6863 \u8fdb\u884c\u5b9a\u5236\u3002","title":"\u5b89\u88c5"},{"location":"Controller/OpenKruise/#cloneset","text":"CloneSet \u63a7\u5236\u5668\u662f OpenKruise \u63d0\u4f9b\u7684\u5bf9\u539f\u751f Deployment \u7684\u589e\u5f3a\u63a7\u5236\u5668\uff0c\u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\u548c Deployment \u51e0\u4e4e\u4e00\u81f4\uff0c\u5982\u4e0b\u6240\u793a\u662f\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a CloneSet \u8d44\u6e90\u5bf9\u8c61\uff1a # cloneset-demo.yaml apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : name : cs-demo spec : replicas : 3 selector : matchLabels : app : cs template : metadata : labels : app : cs spec : containers : - name : nginx image : nginx:alpine imagePullPolicy : IfNotPresent ports : - containerPort : 80 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8fd9\u4e2a CloneSet \u5bf9\u8c61\uff1a \u279c kubectl apply -f cloneset-demo.yaml \u279c kubectl get cloneset cs-demo NAME DESIRED UPDATED UPDATED_READY READY TOTAL AGE cs-demo 3 3 3 3 3 112s \u279c kubectl describe cloneset cs-demo Name : cs-demo Namespace : default Labels : <none> Annotations: kubectl.kubernetes.io/last-applied-configuration : { \"apiVersion\" : \"apps.kruise.io/v1alpha1\" , \"kind\" : \"CloneSet\" , \"metadata\" :{ \"annotations\" :{}, \"name\" : \"cs-demo\" , \"namespace\" : \"default\" }, \"spec\" :{ \"re... API Version: apps.kruise.io/v1alpha1 Kind: CloneSet ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-b6r6t Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-fsbx5 Normal SuccessfulCreate 53s cloneset-controller succeed to create pod cs-demo-fv5gb \u8be5\u5bf9\u8c61\u521b\u5efa\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl describe \u547d\u4ee4\u67e5\u770b\u5bf9\u5e94\u7684 Events \u4fe1\u606f\uff0c\u53ef\u4ee5\u53d1\u73b0 cloneset-controller \u662f\u76f4\u63a5\u521b\u5efa\u7684 Pod\uff0c \u8fd9\u4e2a\u548c\u539f\u751f\u7684 Deployment \u5c31\u6709\u4e00\u4e9b\u533a\u522b\u4e86 \uff0cDeployment \u662f\u901a\u8fc7 ReplicaSet \u53bb\u521b\u5efa\u7684 Pod\uff0c\u6240\u4ee5\u4ece\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765 CloneSet \u662f\u76f4\u63a5\u7ba1\u7406 Pod \u7684 \uff0c3\u4e2a\u526f\u672c\u7684 Pod \u6b64\u65f6\u4e5f\u521b\u5efa\u6210\u529f\u4e86\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-b6r6t 1 /1 Running 0 5m19s cs-demo-fsbx5 1 /1 Running 0 5m19s cs-demo-fv5gb 1 /1 Running 0 5m19s CloneSet \u867d\u7136\u5728\u4f7f\u7528\u4e0a\u548c Deployment \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4f46\u8fd8\u662f\u6709\u975e\u5e38\u591a\u6bd4 Deployment \u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u4ecb\u7ecd\u4e0b\u3002","title":"CloneSet"},{"location":"Controller/OpenKruise/#_3","text":"CloneSet \u5728\u6269\u5bb9\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 ScaleStrategy . MaxUnavailable \u6765\u9650\u5236\u6269\u5bb9\u7684\u6b65\u957f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bf9\u670d\u52a1\u5e94\u7528\u7684\u5f71\u54cd\u6700\u5c0f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7edd\u5bf9\u503c\u6216\u767e\u5206\u6bd4\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u503c\uff0c\u5219\u8868\u793a\u4e0d\u9650\u5236\u3002 \u6bd4\u5982\u6211\u4eec\u5728\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u7684Pod\u2192Spec\u91cc\u9762\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u6570\u636e\uff1a spec : minReadySeconds : 60 scaleStrategy : maxUnavailable : 1 replicas : 5 ...... \u4e0a\u9762\u6211\u4eec\u914d\u7f6e scaleStrategy . maxUnavailable \u4e3a1\uff0c\u7ed3\u5408 minReadySeconds \u53c2\u6570\uff0c\u8868\u793a\u5728\u6269\u5bb9\u65f6\uff0c\u53ea\u6709\u5f53\u4e0a\u4e00\u4e2a\u6269\u5bb9\u51fa\u7684 Pod \u5df2\u7ecf Ready \u8d85\u8fc7\u4e00\u5206\u949f\u540e\uff0cCloneSet \u624d\u4f1a\u6267\u884c\u521b\u5efa\u4e0b\u4e00\u4e2a Pod\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u6269\u5bb9\u62105\u4e2a\u526f\u672c\uff0c\u66f4\u65b0\u4e0a\u9762\u5bf9\u8c61\u540e\u67e5\u770b CloneSet \u7684\u4e8b\u4ef6\uff1a \u279c kubectl describe cloneset cs-demo ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-b6r6t Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-fsbx5 Normal SuccessfulCreate 35m cloneset-controller succeed to create pod cs-demo-fv5gb Warning ScaleUpLimited 2m39s cloneset-controller scaleUp is limited because of scaleStrategy.maxUnavailable, limit: 1 Normal SuccessfulCreate 2m39s cloneset-controller succeed to create pod cs-demo-xlsdg Normal SuccessfulCreate 98s cloneset-controller succeed to create pod cs-demo-8w7h4 Warning ScaleUpLimited 68s ( x12 over 2m39s ) cloneset-controller scaleUp is limited because of scaleStrategy.maxUnavailable, limit: 0 Normal SuccessfulCreate 37s cloneset-controller succeed to create pod cs-demo-79rcx \u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u65f6\u95f4\u6269\u5bb9\u4e86\u4e00\u4e2a Pod\uff0c\u7531\u4e8e\u6211\u4eec\u914d\u7f6e\u4e86 minReadySeconds : 60 \uff0c\u4e5f\u5c31\u662f\u65b0\u6269\u5bb9\u7684 Pod \u521b\u5efa\u6210\u529f\u8d85\u8fc71\u5206\u949f\u540e\u624d\u4f1a\u6269\u5bb9\u53e6\u5916\u4e00\u4e2a Pod\uff0c\u4e0a\u9762\u7684 Events \u4fe1\u606f\u4e5f\u80fd\u8868\u73b0\u51fa\u6765\uff0c\u67e5\u770b Pod \u7684 AGE \u4e5f\u80fd\u770b\u51fa\u6765\u6269\u5bb9\u76842\u4e2a Pod \u4e4b\u95f4\u95f4\u9694\u4e861\u5206\u949f\u5de6\u53f3\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-79rcx 1 /1 Running 0 2m3s cs-demo-8w7h4 1 /1 Running 0 3m4s cs-demo-b6r6t 1 /1 Running 0 36m cs-demo-fv5gb 1 /1 Running 0 36m cs-demo-p4kmw 1 /1 Running 0 36s \u5f53 CloneSet \u88ab\u7f29\u5bb9\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b Pod \u6765\u5220\u9664\uff0c \u8fd9\u5bf9\u4e8e StatefulSet \u6216\u8005 Deployment \u6765\u8bf4\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c StatefulSet \u662f\u6839\u636e\u5e8f\u53f7\u6765\u5220\u9664 Pod\uff0c\u800c Deployment/ReplicaSet \u76ee\u524d\u53ea\u80fd\u6839\u636e\u63a7\u5236\u5668\u91cc\u5b9a\u4e49\u7684\u6392\u5e8f\u6765\u5220\u9664 \u3002\u800c CloneSet \u5141\u8bb8\u7528\u6237\u5728\u7f29\u5c0f replicas \u6570\u91cf\u7684\u540c\u65f6\uff0c\u6307\u5b9a\u60f3\u8981\u5220\u9664\u7684 Pod \u540d\u5b57\uff0c\u5982\u4e0b\u6240\u793a\uff1a spec : minReadySeconds : 60 scaleStrategy : maxUnavailable : 1 podsToDelete : - cs-demo-79rcx replicas : 4 ...... \u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u5c06\u5e94\u7528\u7f29\u52304\u4e2a Pod\uff0c\u5982\u679c\u5728 podsToDelete \u5217\u8868\u4e2d\u6307\u5b9a\u4e86 Pod \u540d\u5b57\uff0c\u5219\u63a7\u5236\u5668\u4f1a\u4f18\u5148\u5220\u9664\u8fd9\u4e9b Pod\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u5220\u9664\u7684 Pod\uff0c\u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u4ece podsToDelete \u5217\u8868\u4e2d\u6e05\u7406\u6389\u3002\u6bd4\u5982\u6211\u4eec\u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u540e cs-demo-79rcx \u8fd9\u4e2a Pod \u4f1a\u88ab\u79fb\u9664\uff0c\u5176\u4f59\u4f1a\u4fdd\u7559\u4e0b\u6765\uff1a \u279c kubectl get pods -l app = cs NAME READY STATUS RESTARTS AGE cs-demo-8w7h4 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-b6r6t 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-fv5gb 1 /1 Running 4 ( 51m ago ) 3d6h cs-demo-p4kmw 1 /1 Running 4 ( 51m ago ) 3d6h \u5982\u679c\u4f60\u53ea\u628a Pod \u540d\u5b57\u52a0\u5230 podsToDelete\uff0c\u4f46\u6ca1\u6709\u4fee\u6539 replicas \u6570\u91cf\uff0c\u90a3\u4e48\u63a7\u5236\u5668\u4f1a\u5148\u628a\u6307\u5b9a\u7684 Pod \u5220\u6389\uff0c\u7136\u540e\u518d\u6269\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u53e6\u4e00\u79cd\u76f4\u63a5\u5220\u9664 Pod \u7684\u65b9\u5f0f\u662f\u5728\u8981\u5220\u9664\u7684 Pod \u4e0a\u6253 apps.kruise.io/specified-delete : true \u6807\u7b7e\u3002 # cs-demo-b6r6t will be deleted by label \u279c kubectl label pod cs-demo-b6r6t apps.kruise.io/specified-delete = true \u76f8\u6bd4\u4e8e\u624b\u52a8\u76f4\u63a5\u5220\u9664 Pod\uff0c\u4f7f\u7528 podsToDelete \u6216 apps.kruise.io/specified-delete: true \u65b9\u5f0f\u4f1a\u6709 CloneSet \u7684 maxUnavailable/maxSurge \u6765\u4fdd\u62a4\u5220\u9664\uff0c \u5e76\u4e14\u4f1a\u89e6\u53d1 PreparingDelete \u751f\u547d\u5468\u671f\u7684\u94a9\u5b50 \u3002","title":"\u6269\u7f29\u5bb9"},{"location":"Controller/OpenKruise/#cloneset_1","text":"CloneSet \u4e00\u5171\u63d0\u4f9b\u4e86 3 \u79cd\u5347\u7ea7\u65b9\u5f0f\uff1a ReCreate : \u5220\u9664\u65e7 Pod \u548c\u5b83\u7684 PVC\uff0c\u7136\u540e\u7528\u65b0\u7248\u672c\u91cd\u65b0\u521b\u5efa\u51fa\u6765\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u65b9\u5f0f InPlaceIfPossible : \u4f1a\u4f18\u5148\u5c1d\u8bd5\u539f\u5730\u5347\u7ea7 Pod\uff0c\u5982\u679c\u4e0d\u884c\u518d\u91c7\u7528\u91cd\u5efa\u5347\u7ea7 InPlaceOnly : \u53ea\u5141\u8bb8\u91c7\u7528\u539f\u5730\u5347\u7ea7\uff0c\u56e0\u6b64\uff0c\u7528\u6237\u53ea\u80fd\u4fee\u6539\u4e0a\u4e00\u6761\u4e2d\u7684\u9650\u5236\u5b57\u6bb5\uff0c\u5982\u679c\u5c1d\u8bd5\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5\u4f1a\u88ab\u62d2\u7edd \u8fd9\u91cc\u6709\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u539f\u5730\u5347\u7ea7 \uff0c\u8fd9\u4e5f\u662f OpenKruise \u63d0\u4f9b\u7684\u6838\u5fc3\u529f\u80fd\u4e4b\u4e00\uff0c\u5f53\u6211\u4eec\u8981\u5347\u7ea7\u4e00\u4e2a Pod \u4e2d\u955c\u50cf\u7684\u65f6\u5019\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u91cd\u5efa\u5347\u7ea7\u548c\u539f\u5730\u5347\u7ea7\u7684\u533a\u522b\uff1a \u91cd\u5efa\u5347\u7ea7\u65f6\u6211\u4eec\u9700\u8981\u5220\u9664\u65e7 Pod\u3001\u521b\u5efa\u65b0 Pod Pod \u540d\u5b57\u548c uid \u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e24\u4e2a Pod \u5bf9\u8c61\uff08\u6bd4\u5982 Deployment \u5347\u7ea7\uff09 Pod \u540d\u5b57\u53ef\u80fd\u4e0d\u53d8\u3001\u4f46 uid \u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0d\u540c\u7684 Pod \u5bf9\u8c61\uff0c\u53ea\u662f\u590d\u7528\u4e86\u540c\u4e00\u4e2a\u540d\u5b57\uff08\u6bd4\u5982 StatefulSet \u5347\u7ea7\uff09 Pod \u6240\u5728 Node \u540d\u5b57\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u65b0 Pod \u5f88\u53ef\u80fd\u4e0d\u4f1a\u8c03\u5ea6\u5230\u4e4b\u524d\u6240\u5728\u7684 Node \u8282\u70b9 Pod IP \u53d1\u751f\u53d8\u5316\uff0c\u56e0\u4e3a\u65b0 Pod \u5f88\u5927\u53ef\u80fd\u6027\u662f\u4e0d\u4f1a\u88ab\u5206\u914d\u5230\u4e4b\u524d\u7684 IP \u5730\u5740 \u4f46\u662f\u5bf9\u4e8e\u539f\u5730\u5347\u7ea7\uff0c\u6211\u4eec\u4ecd\u7136\u590d\u7528\u540c\u4e00\u4e2a Pod \u5bf9\u8c61\uff0c\u53ea\u662f\u4fee\u6539\u5b83\u91cc\u9762\u7684\u5b57\u6bb5 \u53ef\u4ee5\u907f\u514d\u5982\u8c03\u5ea6\u3001\u5206\u914d IP\u3001\u6302\u8f7d\u76d8\u7b49\u989d\u5916\u7684\u64cd\u4f5c\u548c\u4ee3\u4ef7 \u66f4\u5feb\u7684\u955c\u50cf\u62c9\u53d6\uff0c\u56e0\u4e3a\u4f1a\u590d\u7528\u5df2\u6709\u65e7\u955c\u50cf\u7684\u5927\u90e8\u5206 layer \u5c42\uff0c\u53ea\u9700\u8981\u62c9\u53d6\u65b0\u955c\u50cf\u53d8\u5316\u7684\u4e00\u4e9b layer \u5f53\u4e00\u4e2a\u5bb9\u5668\u5728\u539f\u5730\u5347\u7ea7\u65f6\uff0cPod \u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u4ecd\u7136\u7ef4\u6301\u8fd0\u884c \u663e\u7136\uff0c\u5982\u679c\u80fd\u7528\u539f\u5730\u5347\u7ea7\u65b9\u5f0f\u6765\u5347\u7ea7\u6211\u4eec\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5bf9\u5728\u7ebf\u5e94\u7528\u7684\u5f71\u54cd\u662f\u6700\u5c0f\u7684\u3002\u4e0a\u9762\u6211\u4eec\u63d0\u5230 CloneSet \u5347\u7ea7\u7c7b\u578b\u652f\u6301 InPlaceIfPossible \uff0c\u8fd9\u610f\u5473\u7740 Kruise \u4f1a\u5c3d\u91cf\u5bf9 Pod \u91c7\u53d6\u539f\u5730\u5347\u7ea7\uff0c\u5982\u679c\u4e0d\u80fd\u5219\u9000\u5316\u5230\u91cd\u5efa\u5347\u7ea7\uff0c\u4ee5\u4e0b\u7684\u6539\u52a8\u4f1a\u88ab\u5141\u8bb8\u6267\u884c\u539f\u5730\u5347\u7ea7 \u66f4\u65b0 workload \u4e2d\u7684 spec.template.metadata.*\uff0c\u6bd4\u5982 labels/annotations\uff0cKruise \u53ea\u4f1a\u5c06 metadata \u4e2d\u7684\u6539\u52a8\u66f4\u65b0\u5230\u5b58\u91cf Pod \u4e0a\u3002 \u66f4\u65b0 workload \u4e2d\u7684 spec.template.spec.containers[x].image\uff0cKruise \u4f1a\u539f\u5730\u5347\u7ea7 Pod \u4e2d\u8fd9\u4e9b\u5bb9\u5668\u7684\u955c\u50cf\uff0c\u800c\u4e0d\u4f1a\u91cd\u5efa\u6574\u4e2a Pod\u3002 \u4ece Kruise v1.0 \u7248\u672c\u5f00\u59cb\uff0c\u66f4\u65b0 spec.template.metadata.labels/annotations \u5e76\u4e14 container \u4e2d\u6709\u914d\u7f6e env from \u8fd9\u4e9b\u6539\u52a8\u7684 labels/anntations\uff0cKruise \u4f1a\u539f\u5730\u5347\u7ea7\u8fd9\u4e9b\u5bb9\u5668\u6765\u751f\u6548\u65b0\u7684 env \u503c\u3002 \u5426\u5219\uff0c\u5176\u4ed6\u5b57\u6bb5\u7684\u6539\u52a8\uff0c\u6bd4\u5982 spec.template.spec.containers[x].env \u6216 spec.template.spec.containers[x].resources \uff0c\u90fd\u662f\u4f1a\u56de\u9000\u4e3a\u91cd\u5efa\u5347\u7ea7\u3002 \u6bd4\u5982\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5e94\u7528\u5347\u7ea7\u65b9\u5f0f\u8bbe\u7f6e\u4e3a InPlaceIfPossible \uff0c\u53ea\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u4e2d\u6dfb\u52a0 spec.updateStrategy.type : InPlaceIfPossible \u5373\u53ef\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : name : cs-demo spec : updateStrategy : type : InPlaceIfPossible ...... \u66f4\u65b0\u540e\u53ef\u4ee5\u53d1\u73b0 Pod \u7684\u72b6\u6001\u5e76\u6ca1\u6709\u53d1\u751f\u4ec0\u4e48\u5927\u7684\u53d8\u5316\uff0c\u540d\u79f0\u3001IP \u90fd\u4e00\u6837\uff0c\u552f\u4e00\u53d8\u5316\u7684\u662f\u955c\u50cf tag\uff1a \u279c kubectl get pods -l app=cs NAME READY STATUS RESTARTS AGE cs-demo-8w7h4 1/1 Running 4 (55m ago) 3d6h cs-demo-b6r6t 1/1 Running 4 (55m ago) 3d6h cs-demo-fv5gb 1/1 Running 5 (20s ago) 3d6h cs-demo-p4kmw 1/1 Running 5 (83s ago) 3d6h \u279c kubectl describe cloneset cs-demo Name : cs-demo Namespace : default Labels : <none> Annotations : <none> API Version : apps.kruise.io/v1alpha1 Kind : CloneSet ...... Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulDelete 4m44s cloneset-controller succeed to delete pod cs-demo-79rcx Normal SuccessfulUpdatePodInPlace 97s cloneset-controller successfully update pod cs-demo-p4kmw in-place(revision cs-demo-7cb9c88699) Normal SuccessfulUpdatePodInPlace 34s cloneset-controller successfully update pod cs-demo-fv5gb in-place(revision cs-demo-7cb9c88699) \u279c kubectl describe pod cs-demo-p4kmw ...... Events : Type Reason Age From Message ---- ------ ---- ---- ------- Normal Pulled 56m kubelet Container image \"nginx:alpine\" already present on machine Normal Created 2m28s (x2 over 56m) kubelet Created container nginx Normal Killing 2m28s kubelet Container nginx definition changed, will be restarted Normal Pulled 2m28s kubelet Container image \"nginx:1.7.9\" already present on machine Normal Started 2m27s (x2 over 56m) kubelet Started container nginx \u8fd9\u5c31\u662f\u539f\u5730\u5347\u7ea7\u7684\u6548\u679c\uff0c\u539f\u5730\u5347\u7ea7\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u5728\u5b89\u88c5\u6216\u5347\u7ea7 Kruise \u7684\u65f6\u5019\u542f\u7528\u4e86 PreDownloadImageForInPlaceUpdate \u8fd9\u4e2a feature-gate\uff0cCloneSet \u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u5728\u6240\u6709\u65e7\u7248\u672c pod \u6240\u5728\u8282\u70b9\u4e0a\u9884\u70ed\u4f60\u6b63\u5728\u7070\u5ea6\u53d1\u5e03\u7684\u65b0\u7248\u672c\u955c\u50cf\uff0c\u8fd9\u5bf9\u4e8e\u5e94\u7528\u53d1\u5e03\u52a0\u901f\u5f88\u6709\u5e2e\u52a9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b CloneSet \u6bcf\u4e2a\u65b0\u955c\u50cf\u9884\u70ed\u65f6\u7684\u5e76\u53d1\u5ea6\u90fd\u662f 1\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u4e2a\u8282\u70b9\u62c9\u955c\u50cf\uff0c\u5982\u679c\u9700\u8981\u8c03\u6574\uff0c\u4f60\u53ef\u4ee5\u5728 CloneSet annotation \u4e0a\u8bbe\u7f6e\u5e76\u53d1\u5ea6\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : annotations : apps.kruise.io/image-predownload-parallelism : \"5\" Warning \u4e3a\u4e86\u907f\u514d\u5927\u90e8\u5206\u4e0d\u5fc5\u8981\u7684\u955c\u50cf\u62c9\u53d6\uff0c\u76ee\u524d\u53ea\u9488\u5bf9 replicas > 3 \u7684 CloneSet \u505a\u81ea\u52a8\u9884\u70ed\u3002 \u6b64\u5916 CloneSet \u8fd8\u652f\u6301\u5206\u6279\u8fdb\u884c\u7070\u5ea6\uff0c\u5728 updateStrategy \u5c5e\u6027\u4e2d\u53ef\u4ee5\u914d\u7f6e partition \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\u6216\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u4e3a0\uff1a \u5982\u679c\u662f\u6570\u5b57\uff0c\u63a7\u5236\u5668\u4f1a\u5c06 (replicas - partition) \u6570\u91cf\u7684 Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c \u5982\u679c\u662f\u767e\u5206\u6bd4\uff0c\u63a7\u5236\u5668\u4f1a\u5c06 (replicas * (100% - partition)) \u6570\u91cf\u7684 Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c \u6bd4\u5982\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684\u7684 image \u66f4\u65b0\u4e3a nginx:latest \u5e76\u4e14\u8bbe\u7f6e partition=2\uff0c\u66f4\u65b0\u540e\uff0c\u8fc7\u4e00\u4f1a\u67e5\u770b\u53ef\u4ee5\u53d1\u73b0\u53ea\u5347\u7ea7\u4e862\u4e2a Pod\uff1a \u279c kubectl get pods -l app = cs -L controller-revision-hash NAME READY STATUS RESTARTS AGE CONTROLLER-REVISION-HASH cs-demo-dx4lb 1 /1 Running 0 69s cs-demo-6599fc6cdd cs-demo-fv5gb 1 /1 Running 0 3d7h cs-demo-7cb9c88699 cs-demo-nngtm 1 /1 Running 0 8s cs-demo-6599fc6cdd cs-demo-p4kmw 1 /1 Running 0 3d6h cs-demo-7cb9c88699 \u6b64\u5916 CloneSet \u8fd8\u652f\u6301\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\uff0c\u6bd4\u5982\u53ef\u4ee5\u5b9a\u4e49\u4f18\u5148\u7ea7\u7b56\u7565\u6765\u63a7\u5236 Pod \u53d1\u5e03\u7684\u4f18\u5148\u7ea7\u89c4\u5219\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u7b56\u7565\u6765\u5c06\u4e00\u7c7b Pod \u6253\u6563\u5230\u6574\u4e2a\u53d1\u5e03\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u6682\u505c Pod \u53d1\u5e03\u7b49\u64cd\u4f5c\u3002","title":"CloneSet"},{"location":"Controller/OpenKruise/#advanced-statefulset","text":"\u8be5\u63a7\u5236\u5668\u5728\u539f\u751f\u7684 StatefulSet \u57fa\u7840\u4e0a\u589e\u5f3a\u4e86\u53d1\u5e03\u80fd\u529b\uff0c\u6bd4\u5982 maxUnavailable \u5e76\u884c\u53d1\u5e03\u3001\u539f\u5730\u5347\u7ea7\u7b49\uff0c\u8be5\u5bf9\u8c61\u7684\u540d\u79f0\u4e5f\u662f StatefulSet\uff0c\u4f46\u662f apiVersion \u662f apps.kruise.io/v1beta1 \uff0c\u8fd9\u4e2a CRD \u7684\u6240\u6709\u9ed8\u8ba4\u5b57\u6bb5\u3001\u9ed8\u8ba4\u884c\u4e3a\u4e0e\u539f\u751f StatefulSet \u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b optional \u5b57\u6bb5\u6765\u6269\u5c55\u589e\u5f3a\u7684\u7b56\u7565\u3002\u56e0\u6b64\uff0c\u7528\u6237\u4ece\u539f\u751f StatefulSet \u8fc1\u79fb\u5230 Advanced StatefulSet\uff0c\u53ea\u9700\u8981\u628a apiVersion \u4fee\u6539\u540e\u63d0\u4ea4\u5373\u53ef\uff1a - apiVersion : apps/v1 + apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : sample spec : #...","title":"Advanced StatefulSet"},{"location":"Controller/OpenKruise/#_4","text":"Advanced StatefulSet \u5728\u6eda\u52a8\u66f4\u65b0\u7b56\u7565\u4e2d\u65b0\u589e\u4e86 maxUnavailable \u6765\u652f\u6301\u5e76\u884c Pod \u53d1\u5e03\uff0c\u5b83\u4f1a\u4fdd\u8bc1\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a Pod \u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001\u3002\u6ce8\u610f\uff0cmaxUnavailable \u53ea\u80fd\u914d\u5408 podManagementPolicy \u4e3a Parallel \u6765\u4f7f\u7528\u3002 \u8fd9\u4e2a\u7b56\u7565\u7684\u6548\u679c\u548c Deployment \u4e2d\u7684\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u7684 order \u987a\u5e8f\u4e0d\u80fd\u4e25\u683c\u4fdd\u8bc1\uff0c\u5982\u679c\u4e0d\u914d\u7f6e maxUnavailable\uff0c\u5b83\u7684\u9ed8\u8ba4\u503c\u4e3a 1\uff0c\u4e5f\u5c31\u662f\u548c\u539f\u751f StatefulSet \u4e00\u6837\u53ea\u80fd\u4e32\u884c\u53d1\u5e03 Pod\uff0c\u5373\u4f7f\u628a podManagementPolicy \u914d\u7f6e\u4e3a Parallel \u4e5f\u662f\u8fd9\u6837\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Advanced StatefulSet\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx-headless\" podManagementPolicy : Parallel replicas : 5 updateStrategy : type : RollingUpdate rollingUpdate : maxUnavailable : 3 # partition: 4 selector : matchLabels : app : nginx template : metadata : labels : app : nginx # @ spec : containers : - name : nginx image : nginx ports : - name : web containerPort : 80 \u76f4\u63a5\u521b\u5efa\u8be5\u5bf9\u8c61\uff0c\u7531\u4e8e\u5bf9\u8c61\u540d\u79f0\u4e5f\u662f StatefulSet\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7528 get sts \u6765\u83b7\u53d6\u4e86\uff0c\u8981\u901a\u8fc7 get asts \u83b7\u53d6\uff1a \u279c kubectl get asts NAME DESIRED CURRENT UPDATED READY AGE web 5 5 5 5 8m28s \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 7m52s web-1 1 /1 Running 0 7m52s web-2 1 /1 Running 0 7m52s web-3 1 /1 Running 0 7m52s web-4 1 /1 Running 0 7m52s \u8be5\u5e94\u7528\u4e0b\u6709\u4e94\u4e2a Pod\uff0c\u5047\u8bbe\u5e94\u7528\u80fd\u5bb9\u5fcd 3 \u4e2a\u526f\u672c\u4e0d\u53ef\u7528\uff0c\u5f53\u6211\u4eec\u628a StatefulSet \u91cc\u7684 Pod \u5347\u7ea7\u7248\u672c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u6765\u505a\uff1a \u8bbe\u7f6e maxUnavailable=3 (\u53ef\u9009) \u5982\u679c\u9700\u8981\u7070\u5ea6\u5347\u7ea7\uff0c\u8bbe\u7f6e partition=4\uff0cPartition \u9ed8\u8ba4\u7684\u610f\u601d\u662f order \u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u503c\u7684 Pod \u624d\u4f1a\u66f4\u65b0\uff0c\u5728\u8fd9\u91cc\u5c31\u53ea\u4f1a\u66f4\u65b0 P4\uff0c\u5373\u4f7f\u6211\u4eec\u8bbe\u7f6e\u4e86 maxUnavailable=3\u3002 \u5728 P4 \u5347\u7ea7\u5b8c\u6210\u540e\uff0c\u628a partition \u8c03\u6574\u4e3a 0\uff0c\u6b64\u65f6\uff0c\u63a7\u5236\u5668\u4f1a\u540c\u65f6\u5347\u7ea7 P1\u3001P2\u3001P3 \u4e09\u4e2a Pod\u3002\u6ce8\u610f\uff0c\u5982\u679c\u662f\u539f\u751f StatefulSet\uff0c\u53ea\u80fd\u4e32\u884c\u5347\u7ea7 P3\u3001P2\u3001P1\u3002 \u4e00\u65e6\u8fd9\u4e09\u4e2a Pod \u4e2d\u6709\u4e00\u4e2a\u5347\u7ea7\u5b8c\u6210\u4e86\uff0c\u63a7\u5236\u5668\u4f1a\u7acb\u5373\u5f00\u59cb\u5347\u7ea7 P0\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u628a\u4e0a\u9762\u5e94\u7528\u7684\u955c\u50cf\u7248\u672c\u8fdb\u884c\u4fee\u6539\uff0c\u66f4\u65b0\u540e\u67e5\u770b Pod \u72b6\u6001\uff0c\u53ef\u4ee5\u770b\u5230\u67093\u4e2a Pod \u5e76\u884c\u5347\u7ea7\u7684\uff1a \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 2m41s web-1 1 /1 Running 0 2m41s web-2 0 /1 ContainerCreating 0 10s web-3 0 /1 ContainerCreating 0 10s web-4 0 /1 ContainerCreating 0 10s","title":"\u6700\u5927\u4e0d\u53ef\u7528"},{"location":"Controller/OpenKruise/#_5","text":"Advanced StatefulSet \u589e\u52a0\u4e86 podUpdatePolicy \u6765\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u91cd\u5efa\u5347\u7ea7\u8fd8\u662f\u539f\u5730\u5347\u7ea7\u3002\u6b64\u5916\u8fd8\u5728\u539f\u5730\u5347\u7ea7\u4e2d\u63d0\u4f9b\u4e86 graceful period \u9009\u9879\uff0c\u4f5c\u4e3a\u4f18\u96c5\u539f\u5730\u5347\u7ea7\u7684\u7b56\u7565\u3002\u7528\u6237\u5982\u679c\u914d\u7f6e\u4e86 gracePeriodSeconds \u8fd9\u4e2a\u5b57\u6bb5\uff0c\u63a7\u5236\u5668\u5728\u539f\u5730\u5347\u7ea7\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5148\u628a Pod status \u6539\u4e3a not-ready\uff0c\u7136\u540e\u7b49\u4e00\u6bb5\u65f6\u95f4\uff08 gracePeriodSeconds \uff09\uff0c\u6700\u540e\u518d\u53bb\u4fee\u6539 Pod spec \u4e2d\u7684\u955c\u50cf\u7248\u672c\u3002\u8fd9\u6837\uff0c\u5c31\u4e3a endpoints-controller\u8fd9\u4e9b\u63a7\u5236\u5668\u7559\u51fa\u4e86\u5145\u8db3\u7684\u65f6\u95f4\u6765\u5c06 Pod \u4ece endpoints \u7aef\u70b9\u5217\u8868\u4e2d\u53bb\u9664\u3002 \u5982\u679c\u4f7f\u7528 InPlaceIfPossible \u6216 InPlaceOnly \u7b56\u7565\uff0c\u5fc5\u987b\u8981\u589e\u52a0\u4e00\u4e2a InPlaceUpdateReady readinessGate\uff0c\u7528\u6765\u5728\u539f\u5730\u5347\u7ea7\u7684\u65f6\u5019\u63a7\u5236\u5668\u5c06 Pod \u8bbe\u7f6e\u4e3a NotReady\uff0c\u6bd4\u5982\u8bbe\u7f6e\u4e0a\u9762\u7684\u5e94\u7528\u4e3a\u539f\u5730\u5347\u7ea7\u7684\u65b9\u5f0f\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx-headless\" podManagementPolicy : Parallel replicas : 5 updateStrategy : type : RollingUpdate rollingUpdate : podUpdatePolicy : InPlaceIfPossible # \u5c3d\u53ef\u80fd\u6267\u884c\u539f\u5730\u5347\u7ea7 maxUnavailable : 3 # \u5141\u8bb8\u5e76\u884c\u66f4\u65b0\uff0c\u6700\u5927\u4e0d\u53ef\u4ee5\u5b9e\u4f8b\u6570\u4e3a3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : readinessGates : - conditionType : InPlaceUpdateReady # \u4e00\u4e2a\u65b0\u7684\u6761\u4ef6\uff0c\u53ef\u786e\u4fdd Pod \u5728\u53d1\u751f\u539f\u5730\u66f4\u65b0\u65f6\u4fdd\u6301\u5728 NotReady \u72b6\u6001 containers : - name : nginx image : nginx ports : - name : web containerPort : 80 \u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e updateStrategy . rollingUpdate . podUpdatePolicy \u4e3a InPlaceIfPossible \u6a21\u5f0f\uff0c\u8868\u793a\u5c3d\u53ef\u80fd\u4f7f\u7528\u539f\u5730\u5347\u7ea7\u7684\u65b9\u5f0f\u8fdb\u884c\u66f4\u65b0\uff0c\u6b64\u5916\u5728 Pod \u6a21\u677f\u4e2d\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4e00\u4e2a readinessGates \u5c5e\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u786e\u4fdd Pod \u5728\u53d1\u751f\u539f\u5730\u66f4\u65b0\u65f6\u4fdd\u6301\u5728 NotReady \u72b6\u6001\u3002\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u4e0a\u9762\u8d44\u6e90\u6e05\u5355\u66f4\u65b0\u5e94\u7528\uff0c\u7136\u540e\u91cd\u65b0\u4fee\u6539\u955c\u50cf\u7684\u7248\u672c\u66f4\u65b0\uff0c\u5219\u4f1a\u8fdb\u884c\u539f\u5730\u5347\u7ea7\uff1a \u279c kubectl describe asts web Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-4 in -place ( revision web-84644dfc7d ) Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-3 in -place ( revision web-84644dfc7d ) Normal SuccessfulUpdatePodInPlace 3m30s statefulset-controller successfully update pod web-2 in -place ( revision web-84644dfc7d ) \u540c\u6837\u7684 Advanced StatefulSet \u4e5f\u652f\u6301\u539f\u5730\u5347\u7ea7\u81ea\u52a8\u9884\u70ed\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e paused \u4e3a true \u6765\u6682\u505c\u53d1\u5e03\uff0c\u4e0d\u8fc7\u63a7\u5236\u5668\u8fd8\u662f\u4f1a\u505a replicas \u6570\u91cf\u7ba1\u7406\uff1a apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... updateStrategy : rollingUpdate : paused : true \u53e6\u5916 Advanced StatefulSet \u8fd8\u652f\u6301\u5e8f\u53f7\u4fdd\u7559\u529f\u80fd\uff0c\u901a\u8fc7\u5728 reserveOrdinals \u5b57\u6bb5\u4e2d\u5199\u5165\u9700\u8981\u4fdd\u7559\u7684\u5e8f\u53f7\uff0cAdvanced StatefulSet \u4f1a\u81ea\u52a8\u8df3\u8fc7\u521b\u5efa\u8fd9\u4e9b\u5e8f\u53f7\u7684 Pod\uff0c\u5982\u679c Pod \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4f1a\u88ab\u5220\u9664\u3002 Warning spec.replicas \u662f\u671f\u671b\u8fd0\u884c\u7684 Pod \u6570\u91cf\uff0c spec.reserveOrdinals \u662f\u8981\u8df3\u8fc7\u7684\u5e8f\u53f7\u3002 apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... replicas : 4 reserveOrdinals : - 1 \u6bd4\u5982\u4e0a\u9762\u7684\u63cf\u8ff0 replicas=4, reserveOrdinals=[1] \u7684 Advanced StatefulSet\uff0c\u8868\u793a\u5b9e\u9645\u8fd0\u884c\u7684 Pod \u5e8f\u53f7\u4e3a [0,2,3,4]\u3002 \u5982\u679c\u8981\u628a Pod-3 \u505a\u8fc1\u79fb\u5e76\u4fdd\u7559\u5e8f\u53f7\uff0c\u5219\u628a 3 \u8ffd\u52a0\u5230 reserveOrdinals \u5217\u8868\u4e2d\uff0c\u63a7\u5236\u5668\u4f1a\u628a Pod-3 \u5220\u9664\u5e76\u521b\u5efa Pod-5\uff08\u6b64\u65f6\u8fd0\u884c\u4e2d Pod \u4e3a [0,2,4,5]\uff09\u3002 \u5982\u679c\u53ea\u60f3\u5220\u9664 Pod-3\uff0c\u5219\u628a 3 \u8ffd\u52a0\u5230 reserveOrdinals \u5217\u8868\u5e76\u540c\u65f6\u628a replicas \u51cf\u4e00\u4fee\u6539\u4e3a 3\u3002\u63a7\u5236\u5668\u4f1a\u628a Pod-3 \u5220\u9664\uff08\u6b64\u65f6\u8fd0\u884c\u4e2d Pod \u4e3a [0,2,4]\uff09\u3002 \u4e3a\u4e86\u907f\u514d\u5728\u4e00\u4e2a\u65b0 Advanced StatefulSet \u521b\u5efa\u540e\u6709\u5927\u91cf\u5931\u8d25\u7684 pod \u88ab\u521b\u5efa\u51fa\u6765\uff0c\u4ece Kruise v0.10.0 \u7248\u672c\u5f00\u59cb\u5f15\u5165\u4e86\u5728 scale strategy \u4e2d\u7684 maxUnavailable \u7b56\u7565\u3002 apiVersion : apps.kruise.io/v1beta1 kind : StatefulSet spec : # ... replicas : 100 scaleStrategy : maxUnavailable : 10% # percentage or absolute number \u5f53\u8fd9\u4e2a\u5b57\u6bb5\u88ab\u8bbe\u7f6e\u4e4b\u540e\uff0cAdvanced StatefulSet \u4f1a\u4fdd\u8bc1\u521b\u5efa pod \u4e4b\u540e\u4e0d\u53ef\u7528 pod \u6570\u91cf\u4e0d\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\u503c\u3002\u6bd4\u5982\u8bf4\uff0c\u4e0a\u9762\u8fd9\u4e2a StatefulSet \u4e00\u5f00\u59cb\u53ea\u4f1a\u4e00\u6b21\u6027\u521b\u5efa 100*10%=10 \u4e2a pod\uff0c\u5728\u6b64\u4e4b\u540e\uff0c\u6bcf\u5f53\u4e00\u4e2a pod \u53d8\u4e3a running\u3001ready \u72b6\u6001\u540e\uff0c\u624d\u4f1a\u518d\u521b\u5efa\u4e00\u4e2a\u65b0 pod \u51fa\u6765\u3002 Warning \u8fd9\u4e2a\u529f\u80fd\u53ea\u5141\u8bb8\u5728 podManagementPolicy \u662f Parallel \u7684 StatefulSet \u4e2d\u4f7f\u7528\u3002","title":"\u539f\u5730\u5347\u7ea7"},{"location":"Controller/OpenKruise/#advanced-daemonset","text":"\u8fd9\u4e2a\u63a7\u5236\u5668\u57fa\u4e8e\u539f\u751f DaemonSet \u4e0a\u589e\u5f3a\u4e86\u53d1\u5e03\u80fd\u529b\uff0c\u6bd4\u5982\u7070\u5ea6\u5206\u6279\u3001\u6309 Node label \u9009\u62e9\u3001\u6682\u505c\u3001\u70ed\u5347\u7ea7\u7b49\u3002\u540c\u6837\u7684\u8be5\u5bf9\u8c61\u7684 Kind \u540d\u5b57\u4e5f\u662f DaemonSet\uff0c\u53ea\u662f apiVersion \u662f apps.kruise.io/v1alpha1 \uff0c\u8fd9\u4e2a CRD \u7684\u6240\u6709\u9ed8\u8ba4\u5b57\u6bb5\u3001\u9ed8\u8ba4\u884c\u4e3a\u4e0e\u539f\u751f DaemonSet \u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b optional \u5b57\u6bb5\u6765\u6269\u5c55\u589e\u5f3a\u7684\u7b56\u7565\u3002 \u56e0\u6b64\uff0c\u7528\u6237\u4ece\u539f\u751f DaemonSet \u8fc1\u79fb\u5230 Advanced DaemonSet\uff0c\u53ea\u9700\u8981\u628a apiVersion \u4fee\u6539\u540e\u63d0\u4ea4\u5373\u53ef\uff1a - apiVersion : apps/v1 + apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet metadata : name : sample-ds spec : #...","title":"Advanced DaemonSet"},{"location":"Controller/OpenKruise/#_6","text":"Advanced DaemonSet \u5728 spec . updateStrategy . rollingUpdate \u4e2d\u6709\u4e00\u4e2a rollingUpdateType \u5b57\u6bb5\uff0c\u6807\u8bc6\u4e86\u5982\u4f55\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7\uff1a Standard : \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u63a7\u5236\u5668\u4f1a\u5148\u5220\u9664\u65e7\u7684 daemon Pod\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0 Pod\uff0c\u548c\u539f\u751f DaemonSet \u884c\u4e3a\u4e00\u81f4\u3002 Surging : \u5bf9\u4e8e\u6bcf\u4e2a node\uff0c\u63a7\u5236\u5668\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a\u65b0 Pod\uff0c\u7b49\u5b83 ready \u4e4b\u540e\u518d\u5220\u9664\u8001 Pod\u3002 \u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet metadata : name : nginx namespace : default spec : updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : Standard selector : matchLabels : k8s-app : nginx template : metadata : labels : k8s-app : nginx spec : containers : - image : nginx:1.7.9 name : nginx ports : - name : http containerPort : 80 \u521b\u5efa\u540e\u9700\u8981\u901a\u8fc7 get daemon \u6765\u83b7\u53d6\u8be5\u5bf9\u8c61\uff1a \u279c kubectl get daemon NAME DESIREDNUMBER CURRENTNUMBER UPDATEDNUMBERSCHEDULED AGE nginx 2 2 2 7s \u279c kubectl get pods -l k8s-app = nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES nginx-59mbd 1 /1 Running 0 52s 10 .244.1.8 node1 <none> 1 /1 nginx-qvvkz 1 /1 Running 0 52s 10 .244.3.12 node2 <none> 1 /1 \u6211\u4eec\u8fd9\u91cc\u53ea\u6709\u4e24\u4e2a Work \u8282\u70b9\uff0c\u6240\u4ee5\u4e00\u5171\u8fd0\u884c\u4e862\u4e2a Pod\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4e00\u4e2a\uff0c\u548c\u9ed8\u8ba4\u7684 DaemonSet \u884c\u4e3a\u57fa\u672c\u4e00\u81f4\u3002\u6b64\u5916\u8fd9\u4e2a\u7b56\u7565\u8fd8\u652f\u6301\u7528\u6237\u901a\u8fc7\u914d\u7f6e node \u6807\u7b7e\u7684 selector\uff0c\u6765\u6307\u5b9a\u7070\u5ea6\u5347\u7ea7\u67d0\u4e9b\u7279\u5b9a\u7c7b\u578b node \u4e0a\u7684 Pod\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53ea\u5347\u7ea7 node1 \u8282\u70b9\u7684\u5e94\u7528\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 selector \u6807\u7b7e\u6765\u6807\u8bc6\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : Standard selector : matchLabels : kubernetes.io/hostname : node1 # ... \u66f4\u65b0\u5e94\u7528\u540e\u53ef\u4ee5\u770b\u5230\u53ea\u4f1a\u66f4\u65b0 node1 \u8282\u70b9\u4e0a\u7684 Pod\uff1a \u279c kubectl describe daemon nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 4m25s daemonset-controller Created pod: nginx-59mbd Normal SuccessfulCreate 4m25s daemonset-controller Created pod: nginx-qvvkz Normal SuccessfulDelete 13s daemonset-controller Deleted pod: nginx-59mbd Normal SuccessfulCreate 13s daemonset-controller Created pod: nginx-7jl22 \u548c\u524d\u9762\u4e24\u4e2a\u63a7\u5236\u5668\u4e00\u6837\uff0cAdvanced DaemonSet \u4e5f\u652f\u6301\u5206\u6279\u7070\u5ea6\u5347\u7ea7\uff0c\u4f7f\u7528 Partition \u8fdb\u884c\u914d\u7f6e\uff0cPartition \u7684\u8bed\u4e49\u662f\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a 0\uff0c\u5982\u679c\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u4e86 partition\uff0c\u5219\u63a7\u5236\u5668\u53ea\u4f1a\u5c06 ( status . DesiredNumberScheduled \u51cf partition ) \u7684\u6570\u91cf Pod \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : partition : 10 paused : true # \u6682\u505c\u53d1\u5e03 \u540c\u6837 Advanced DaemonSet \u4e5f\u662f\u652f\u6301\u539f\u5730\u5347\u7ea7\u7684\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e rollingUpdateType \u4e3a\u652f\u6301\u539f\u5730\u5347\u7ea7\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5e94\u7528\u5347\u7ea7\u65b9\u5f0f\u8bbe\u7f6e\u4e3a InPlaceIfPossible \u5373\u53ef\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : DaemonSet spec : # ... updateStrategy : type : RollingUpdate rollingUpdate : rollingUpdateType : InPlaceIfPossible \u66f4\u65b0\u540e\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u63a7\u5236\u5668\u7684\u4e8b\u4ef6\u6765\u9a8c\u8bc1\u662f\u5426\u662f\u901a\u8fc7\u539f\u5730\u5347\u7ea7\u65b9\u5f0f\u66f4\u65b0\u5e94\u7528\uff1a \u279c kubectl describe daemon nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 32s daemonset-controller Created pod: nginx-m9vj9 Normal SuccessfulCreate 32s daemonset-controller Created pod: nginx-tg89g Normal SuccessfulUpdatePodInPlace 16s daemonset-controller successfully update pod nginx-tg89g in -place Warning numUnavailable > = maxUnavailable 15s ( x7 over 16s ) daemonset-controller default/nginx number of unavailable DaemonSet pods: 1 , is equal to or exceeds allowed maximum: 1 Normal SuccessfulUpdatePodInPlace 14s daemonset-controller successfully update pod nginx-m9vj9 in -place","title":"\u5347\u7ea7"},{"location":"Controller/OpenKruise/#broadcastjob","text":"\u8fd9\u4e2a\u63a7\u5236\u5668\u5c06 Pod \u5206\u53d1\u5230\u96c6\u7fa4\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u7c7b\u4f3c\u4e8e DaemonSet\uff0c\u4f46\u662f BroadcastJob \u7ba1\u7406\u7684 Pod \u5e76\u4e0d\u662f\u957f\u671f\u8fd0\u884c\u7684 daemon \u670d\u52a1\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8e Job \u7684\u4efb\u52a1\u7c7b\u578b Pod\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684 Pod \u90fd\u6267\u884c\u5b8c\u6210\u9000\u51fa\u540e\uff0cBroadcastJob \u548c\u8fd9\u4e9b Pod \u5e76\u4e0d\u4f1a\u5360\u7528\u96c6\u7fa4\u8d44\u6e90\u3002 \u8fd9\u4e2a\u63a7\u5236\u5668\u975e\u5e38\u6709\u5229\u4e8e\u505a\u5347\u7ea7\u57fa\u7840\u8f6f\u4ef6\u3001\u5de1\u68c0\u7b49\u8fc7\u4e00\u6bb5\u65f6\u95f4\u9700\u8981\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u8dd1\u4e00\u6b21\u7684\u5de5\u4f5c\u3002 \u6bd4\u5982\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 BroadcastJob \u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob metadata : name : bcj-demo namespace : default spec : template : spec : restartPolicy : Never containers : # \u4e00\u5b9a\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u6210\u540e\u9700\u8981\u9000\u51fa\u7684 - name : counter image : busybox command : - \"/bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61 \u279c kubectl get bcj bcj-demo NAME DESIRED ACTIVE SUCCEEDED FAILED AGE bcj-demo 2 0 2 0 113s \u279c kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES bcj-demo-m4mrw 0 /1 Completed 0 5m16s 10 .244.1.12 node1 <none> 1 /1 bcj-demo-v2fdx 0 /1 Completed 0 5m16s 10 .244.3.37 node2 <none> 1 /1 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u521b\u5efa\u4e86\u4e00\u4e2a BroadcastJob \u5bf9\u8c61\u540e\uff0c\u540c\u65f6\u542f\u52a8\u4e86\u4e24\u4e2a Pod \u4efb\u52a1\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4e00\u4e2a\uff0c\u8fd9\u548c\u539f\u751f\u7684 Job \u662f\u4e0d\u592a\u4e00\u6837\u7684\u3002\u521b\u5efa\u7684 BroadcastJob \u4e00\u5171\u6709\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a Desired : \u671f\u671b\u7684 Pod \u6570\u91cf\uff08\u7b49\u540c\u4e8e\u5f53\u524d\u96c6\u7fa4\u4e2d\u5339\u914d\u7684\u8282\u70b9\u6570\u91cf\uff09 Active: \u8fd0\u884c\u4e2d\u7684 Pod \u6570\u91cf SUCCEEDED: \u6267\u884c\u6210\u529f\u7684 Pod \u6570\u91cf FAILED: \u6267\u884c\u5931\u8d25\u7684 Pod \u6570\u91cf \u6b64\u5916\u5728 BroadcastJob \u5bf9\u8c61\u4e2d\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4efb\u52a1\u5b8c\u6210\u540e\u7684\u4e00\u4e9b\u7b56\u7565\uff0c\u6bd4\u5982\u914d\u7f6e completionPolicy.ttlSecondsAfterFinished: 30\uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u5728\u6267\u884c\u7ed3\u675f\u540e 30s \u88ab\u5220\u9664\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Always ttlSecondsAfterFinished : 30 # ...... \u914d\u7f6e completionPolicy . activeDeadlineSeconds \u4e3a 10\uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u5728\u8fd0\u884c\u8d85\u8fc7 10s \u4e4b\u540e\u88ab\u6807\u8bb0\u4e3a\u5931\u8d25\uff0c\u5e76\u628a\u4e0b\u9762\u8fd8\u5728\u8fd0\u884c\u7684 Pod \u5220\u9664\u6389\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Always activeDeadlineSeconds : 10 # ...... completionPolicy \u7c7b\u578b\u9664\u4e86 Always \u4e4b\u5916\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Never \uff0c\u8868\u793a\u8fd9\u4e2a job \u4f1a\u6301\u7eed\u8fd0\u884c\u5373\u4f7f\u5f53\u524d\u6240\u6709\u8282\u70b9\u4e0a\u7684 Pod \u90fd\u6267\u884c\u5b8c\u6210\u4e86\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : BroadcastJob spec : completionPolicy : type : Never # ......","title":"BroadcastJob"},{"location":"Controller/OpenKruise/#advancedcronjob","text":"AdvancedCronJob \u662f\u5bf9\u4e8e\u539f\u751f CronJob \u7684\u6269\u5c55\u7248\u672c\uff0c\u6839\u636e\u7528\u6237\u8bbe\u7f6e\u7684 schedule \u89c4\u5219\uff0c\u5468\u671f\u6027\u521b\u5efa Job \u6267\u884c\u4efb\u52a1\uff0c\u800c AdvancedCronJob \u7684 template \u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684 job \u8d44\u6e90\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : AdvancedCronJob spec : template : # Option 1: use jobTemplate, which is equivalent to original CronJob jobTemplate : # ... # Option 2: use broadcastJobTemplate, which will create a BroadcastJob object when cron schedule triggers broadcastJobTemplate : # ... jobTemplate\uff1a\u4e0e\u539f\u751f CronJob \u4e00\u6837\u521b\u5efa Job \u6267\u884c\u4efb\u52a1 broadcastJobTemplate\uff1a\u5468\u671f\u6027\u521b\u5efa BroadcastJob \u6267\u884c\u4efb\u52a1 apiVersion : apps.kruise.io/v1alpha1 kind : AdvancedCronJob metadata : name : acj-test spec : schedule : \"*/1 * * * *\" template : broadcastJobTemplate : spec : completionPolicy : type : Always ttlSecondsAfterFinished : 30 template : spec : restartPolicy : Never containers : # \u4e00\u5b9a\u4e0d\u662f\u4e00\u4e2a\u5e38\u9a7b\u524d\u53f0\u7684\u8fdb\u7a0b\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u6267\u884c\u5b8c\u6210\u540e\u9700\u8981\u9000\u51fa\u7684 - name : counter image : busybox command : - \"/bin/sh\" - \"-c\" - \"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done\" \u4e0a\u8ff0 YAML \u5b9a\u4e49\u4e86\u4e00\u4e2a AdvancedCronJob\uff0c\u6bcf\u5206\u949f\u521b\u5efa\u4e00\u4e2a BroadcastJob \u5bf9\u8c61\uff0c\u8fd9\u4e2a BroadcastJob \u4f1a\u5728\u6240\u6709\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a job \u4efb\u52a1\u3002 \u279c kubectl get acj NAME SCHEDULE TYPE LASTSCHEDULETIME AGE acj-test */1 * * * * BroadcastJob 8s \u279c kubectl get bcj NAME DESIRED ACTIVE SUCCEEDED FAILED AGE acj-test-1646305200 2 0 2 0 25s \u279c kubectl get pods NAME READY STATUS RESTARTS AGE acj-test-1646305200-c4jbr 0 /1 Completed 0 41s acj-test-1646305200-stsm9 0 /1 Completed 0 41s","title":"AdvancedCronJob"},{"location":"Controller/OpenKruise/#sidecarset","text":"SidecarSet \u652f\u6301\u901a\u8fc7 admission webhook \u6765\u81ea\u52a8\u4e3a\u96c6\u7fa4\u4e2d\u521b\u5efa\u7684\u7b26\u5408\u6761\u4ef6\u7684 Pod \u6ce8\u5165 sidecar \u5bb9\u5668\uff0c\u9664\u4e86\u5728 Pod \u521b\u5efa\u65f6\u5019\u6ce8\u5165\u5916\uff0cSidecarSet \u8fd8\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u529f\u80fd\uff0c\u8bf8\u5982Sidecar \u5bb9\u5668\u955c\u50cf\u539f\u5730\u5347\u7ea7\u3002SidecarSet \u5c06 sidecar \u5bb9\u5668\u7684\u5b9a\u4e49\u548c\u751f\u547d\u5468\u671f\u4e0e\u4e1a\u52a1\u5bb9\u5668\u89e3\u8026\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u65e0\u72b6\u6001\u7684 sidecar \u5bb9\u5668\uff0c\u6bd4\u5982\u76d1\u63a7\u3001\u65e5\u5fd7\u7b49 agent\u3002 \u6bd4\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 SidecarSet \u8d44\u6e90\u5bf9\u8c61\uff1a # sidecarset.yaml apiVersion: apps.kruise.io/v1alpha1 kind: SidecarSet metadata: name: test-sidecarset spec: selector: matchLabels: app: nginx updateStrategy: type: RollingUpdate maxUnavailable: 1 containers: - name: sidecar1 image: busybox command: [\"sleep\", \"999d\"] volumeMounts: - name: log-volume mountPath: /var/log volumes: # this field will be merged into pod.spec.volumes - name: log-volume emptyDir: {} \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u279c kubectl get sidecarset NAME MATCHED UPDATED READY AGE test-sidecarset 0 0 0 34s \u9700\u8981\u6ce8\u610f\u4e0a\u9762\u6211\u4eec\u5728\u5b9a\u4e49 SidecarSet \u5bf9\u8c61\u7684\u65f6\u5019\u91cc\u9762\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\u5c31\u662f label selector \uff0c\u4f1a\u53bb\u5339\u914d\u5177\u6709 app=nginx \u7684 Pod\uff0c\u7136\u540e\u5411\u5176\u4e2d\u6ce8\u5165\u4e0b\u9762\u5b9a\u4e49\u7684 sidecar1 \u8fd9\u4e2a\u5bb9\u5668\uff0c\u6bd4\u5982\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e2a Pod\uff0c\u8be5 Pod \u4e2d\u5305\u542b app=nginx \u7684\u6807\u7b7e\uff0c\u8fd9\u6837\u53ef\u4ee5\u548c\u4e0a\u9762\u7684 SidecarSet \u5bf9\u8c61\u5339\u914d\uff1a apiVersion : v1 kind : Pod metadata : labels : app : nginx # matches the SidecarSet's selector name : test-pod spec : containers : - name : app image : nginx:1.7.9 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c kubectl get pod test-pod NAME READY STATUS RESTARTS AGE test-pod 2 /2 Running 0 19s \u53ef\u4ee5\u770b\u5230\u8be5 Pod \u4e2d\u67092\u4e2a\u5bb9\u5668\uff0c\u88ab\u81ea\u52a8\u6ce8\u5165\u4e86\u4e0a\u9762\u5b9a\u4e49\u7684 sidecar1 \u5bb9\u5668\uff1a \u279c kubectl get pod test-pod -o yaml apiVersion : v1 kind : Pod metadata : labels : app : nginx name : test-pod namespace : default ...... spec : containers : - command : - sleep - 999d env : - name : IS_INJECTED value : \"true\" image : busybox imagePullPolicy : Always name : sidecar1 resources : {} terminationMessagePath : /dev/termination-log terminationMessagePolicy : File volumeMounts : - mountPath : /var/log name : log-volume - mountPath : /var/run/secrets/kubernetes.io/serviceaccount name : kube-api-access-whxz7 readOnly : true - image : nginx:1.7.9 imagePullPolicy : IfNotPresent name : app volumes : - emptyDir : {} name : log-volume ...... \u73b0\u5728\u6211\u4eec\u53bb\u66f4\u65b0 SidecarSet \u4e2d\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u66ff\u6362\u6210 busybox:1.35.0 \uff1a Warning Option 1 \u279c kubectl patch sidecarset test-sidecarset --type = 'json' -p = '[{\"op\": \"replace\", \"path\": \"/spec/containers/0/image\", \"value\": \"busybox:1.35.0\"}]' sidecarset.apps.kruise.io/test-sidecarset patched Option 2 \u279c kubectl edit sidecarsets test-sidecarset # sidecarset.yaml apiVersion: apps.kruise.io/v1alpha1 kind: SidecarSet metadata: name: test-sidecarset spec: containers: - name: sidecar1 image: centos:7 \u66f4\u65b0\u540e\u518d\u53bb\u67e5\u770b Pod \u4e2d\u7684 sidecar \u5bb9\u5668\uff1a \u279c kubectl get pod test-pod NAME READY STATUS RESTARTS AGE test-pod 2 /2 Running 1 ( 67s ago ) 28m \u279c kubectl get pod test-pod ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- ...... Normal Killing 109s kubelet Container sidecar1 definition changed, will be restarted Normal Pulling 79s kubelet Pulling image \"busybox:1.35.0\" Normal Started 62s ( x2 over 28m ) kubelet Started container sidecar1 Normal Created 62s ( x2 over 28m ) kubelet Created container sidecar1 Normal Pulled 62s kubelet Successfully pulled image \"busybox:1.35.0\" in 17 .239369684s \u279c kubectl get pod test-pod -o yaml | grep busybox kruise.io/sidecarset-inplace-update-state: '{\"test-sidecarset\":{\"revision\":\"f78z4854d9855xd6478fzx9c84645z2548v24z26455db46bdfzw44v49v98f2cw\",\"updateTimestamp\":\"2022-03-06T09:56:15Z\",\"lastContainerStatuses\":{\"sidecar1\":{\"imageID\":\"docker.io/library/busybox@sha256:5acba83a746c7608ed544dc1533b87c737a0b0fb730301639a0179f9344b1678\"}}}}' image: busybox:1.35.0 image: docker.io/library/busybox:1.35.0 imageID: docker.io/library/busybox@sha256:130df6999605f982ec67e5bee29d3a52614a075e949490f0a41702ee1dd98f3f \u53ef\u4ee5\u770b\u5230 Pod \u4e2d\u7684 sidecar \u5bb9\u5668\u955c\u50cf\u88ab\u539f\u5730\u5347\u7ea7\u6210 busybox:1.35.0 \u4e86\uff0c \u5bf9\u4e3b\u5bb9\u5668\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002","title":"SidecarSet"},{"location":"Controller/OpenKruise/#_7","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f sidecar \u7684\u6ce8\u5165\u53ea\u4f1a\u53d1\u751f\u5728 Pod \u521b\u5efa\u9636\u6bb5\uff0c\u5e76\u4e14\u53ea\u6709 Pod spec \u4f1a\u88ab\u66f4\u65b0\uff0c\u4e0d\u4f1a\u5f71\u54cd Pod \u6240\u5c5e\u7684 workload template \u6a21\u677f\u3002 spec.containers \u9664\u4e86\u9ed8\u8ba4\u7684 k8s container \u5b57\u6bb5\uff0c\u8fd8\u6269\u5c55\u4e86\u5982\u4e0b\u4e00\u4e9b\u5b57\u6bb5\uff0c\u6765\u65b9\u4fbf\u6ce8\u5165\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : sidecarset spec : selector : matchLabels : app : sample containers : # \u9ed8\u8ba4\u7684K8s\u5bb9\u5668\u5b57\u6bb5 - name : nginx image : nginx:alpine volumeMounts : - mountPath : /nginx/conf name : nginx.conf # \u6269\u5c55\u7684sidecar\u5bb9\u5668\u5b57\u6bb5 podInjectPolicy : BeforeAppContainer shareVolumePolicy : type : disabled | enabled transferEnv : - sourceContainerName : main envName : PROXY_IP volumes : - Name : nginx.conf hostPath : /data/nginx/conf podInjectPolicy \u5b9a\u4e49\u4e86\u5bb9\u5668 \u6ce8\u5165\u5230 pod.spec.containers \u4e2d\u7684\u4f4d\u7f6e BeforeAppContainer\uff1a\u8868\u793a\u6ce8\u5165\u5230 pod \u539f containers \u7684\u524d\u9762 (\u9ed8\u8ba4) AfterAppContainer\uff1a \u8868\u793a\u6ce8\u5165\u5230 pod \u539f containers \u7684\u540e\u9762 shareVolumePolicy(\u6570\u636e\u5377\u5171\u4eab) \u5171\u4eab\u6307\u5b9a\u5377\uff1a\u901a\u8fc7 spec.volumes \u6765\u5b9a\u4e49 sidecar \u81ea\u8eab\u9700\u8981\u7684 volume \u5171\u4eab\u6240\u6709\u5377\uff1a\u901a\u8fc7 spec.containers[i].shareVolumePolicy.type = enabled | disabled \u6765\u63a7\u5236\u662f\u5426\u6302\u8f7d pod \u5e94\u7528\u5bb9\u5668\u7684\u5377\uff0c\u5e38\u7528\u4e8e\u65e5\u5fd7\u6536\u96c6\u7b49 sidecar\uff0c\u914d\u7f6e\u4e3a enabled \u540e\u4f1a\u628a\u5e94\u7528\u5bb9\u5668\u4e2d\u6240\u6709\u6302\u8f7d\u70b9\u6ce8\u5165 sidecar \u540c\u4e00\u8def\u7ecf\u4e0b(sidecar \u4e2d\u672c\u8eab\u5c31\u6709\u58f0\u660e\u7684\u6570\u636e\u5377\u548c\u6302\u8f7d\u70b9\u9664\u5916\uff09 transferEnv(\u73af\u5883\u53d8\u91cf\u5171\u4eab)\uff1a\u53ef\u4ee5\u901a\u8fc7 spec.containers[i].transferEnv \u6765\u4ece\u522b\u7684\u5bb9\u5668\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u4f1a\u628a\u540d\u4e3a sourceContainerName \u5bb9\u5668\u4e2d\u540d\u4e3a envName \u7684\u73af\u5883\u53d8\u91cf\u62f7\u8d1d\u5230\u672c\u5bb9\u5668 SidecarSet \u4e0d\u4ec5\u652f\u6301 sidecar \u5bb9\u5668\u7684\u539f\u5730\u5347\u7ea7\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u5347\u7ea7\u3001\u7070\u5ea6\u7b56\u7565\u3002\u540c\u6837\u5728 SidecarSet \u5bf9\u8c61\u4e2d updateStrategy \u5c5e\u6027\u4e0b\u9762\u4e5f\u53ef\u4ee5\u914d\u7f6e partition \u6765\u5b9a\u4e49\u4fdd\u7559\u65e7\u7248\u672c Pod \u7684\u6570\u91cf\u6216\u767e\u5206\u6bd4\uff0c\u9ed8\u8ba4\u4e3a 0\uff1b\u540c\u6837\u8fd8\u53ef\u4ee5\u914d\u7f6e\u7684\u6709 maxUnavailable \u5c5e\u6027\uff0c\u8868\u793a\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u7684\u6700\u5927\u4e0d\u53ef\u7528\u6570\u91cf\u3002 \u5f53 {matched pod}=100,partition=50,maxUnavailable=10 \uff0c\u63a7\u5236\u5668\u4f1a\u53d1\u5e03 50 \u4e2a Pod \u5230\u65b0\u7248\u672c\uff0c\u4f46\u662f\u540c\u4e00\u65f6\u95f4\u53ea\u4f1a\u53d1\u5e03 10 \u4e2a Pod\uff0c\u6bcf\u53d1\u5e03\u597d\u4e00\u4e2a Pod \u624d\u4f1a\u518d\u627e\u4e00\u4e2a\u53d1\u5e03\uff0c\u76f4\u5230 50 \u4e2a\u53d1\u5e03\u5b8c\u6210\u3002 \u5f53 {matched pod}=100,partition=80,maxUnavailable=30 \uff0c\u63a7\u5236\u5668\u4f1a\u53d1\u5e03 20 \u4e2a Pod \u5230\u65b0\u7248\u672c\uff0c\u56e0\u4e3a\u6ee1\u8db3 maxUnavailable \u6570\u91cf\uff0c\u6240\u4ee5\u8fd9 20 \u4e2a Pod \u4f1a\u540c\u65f6\u53d1\u5e03\u3002 \u540c\u6837\u4e5f\u53ef\u4ee5\u8bbe\u7f6e paused: true \u6765\u6682\u505c\u53d1\u5e03\uff0c\u6b64\u65f6\u5bf9\u4e8e\u65b0\u521b\u5efa\u7684\u3001\u6269\u5bb9\u7684 pod \u4f9d\u65e7\u4f1a\u5b9e\u73b0\u6ce8\u5165\u80fd\u529b\uff0c\u5df2\u7ecf\u66f4\u65b0\u7684 pod \u4f1a\u4fdd\u6301\u66f4\u65b0\u540e\u7684\u7248\u672c\u4e0d\u52a8\uff0c\u8fd8\u6ca1\u6709\u66f4\u65b0\u7684 pod \u4f1a\u6682\u505c\u66f4\u65b0\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : sidecarset spec : # ... updateStrategy : type : RollingUpdate maxUnavailable : 20% partition : 10 paused : true","title":"\u7edf\u4e00\u7279\u6027"},{"location":"Controller/OpenKruise/#_8","text":"\u5bf9\u4e8e\u6709\u91d1\u4e1d\u96c0\u53d1\u5e03\u9700\u6c42\u7684\u4e1a\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7 selector \u6765\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u9700\u8981\u7387\u5148\u91d1\u4e1d\u96c0\u7070\u5ea6\u7684 pod \u6253\u4e0a\u56fa\u5b9a\u7684 [ canary . release ] = true \u7684\u6807\u7b7e\uff0c\u518d\u901a\u8fc7 selector.matchLabels \u6765\u9009\u4e2d\u8be5 pod \u5373\u53ef\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a3\u526f\u672c\u7684 Pod\uff0c\u4e5f\u5177\u6709 app=nginx \u7684\u6807\u7b7e\uff0c\u5982\u4e0b\u6240\u793a apiVersion : apps/v1 kind : Deployment metadata : name : nginx namespace : default spec : replicas : 3 revisionHistoryLimit : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : ngx image : nginx:1.7.9 ports : - containerPort : 80 \u521b\u5efa\u540e\u73b0\u5728\u5c31\u5177\u67094\u4e2a app=nginx \u6807\u7b7e\u7684 Pod \u4e86\uff0c\u7531\u4e8e\u90fd\u5339\u914d\u4e0a\u9762\u521b\u5efa\u7684 SidecarSet \u5bf9\u8c61\uff0c\u6240\u4ee5\u90fd\u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a sidecar1 \u7684\u5bb9\u5668\uff0c\u955c\u50cf\u4e3a busybox\uff1a \u279c kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-6457955f7-7hnjw 2 /2 Running 0 51s nginx-6457955f7-prkgz 2 /2 Running 0 51s nginx-6457955f7-tbtxk 2 /2 Running 0 51s test-pod 2 /2 Running 0 4m2s \u73b0\u5728\u5982\u679c\u6211\u4eec\u60f3\u4e3a test-pod \u8fd9\u4e2a\u5e94\u7528\u6765\u6267\u884c\u7070\u5ea6\u7b56\u7565\uff0c\u5c06 sidecar \u5bb9\u5668\u955c\u50cf\u66f4\u65b0\u6210 busybox:1.35.0\uff0c\u5219\u53ef\u4ee5\u5728 updateStrategy \u4e0b\u9762\u6dfb\u52a0 selector.matchLabels \u5c5e\u6027 canary.release: \"true\"\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : test-sidecarset spec : updateStrategy : type : RollingUpdate selector : matchLabels : canary.release : \"true\" containers : - name : sidecar1 image : busybox:1.35.0 # ...... \u7136\u540e\u540c\u6837\u9700\u8981\u7ed9 test-pod \u6dfb\u52a0\u4e0a canary.release=true \u8fd9\u4e2a\u6807\u7b7e\uff1a apiVersion : v1 kind : Pod metadata : labels : app : nginx canary.release : \"true\" name : test-pod spec : containers : - name : app image : nginx:1.7.9 Warning \u4f7f\u7528\u547d\u4ee4kubectl path\u6216\u76f4\u63a5\u4f7f\u7528kubectl editor\u4fee\u6539 \u76f4\u63a5\u4fee\u6539\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u5b58\u5728bug---\u65e0\u6cd5\u751f\u6548 \u66f4\u65b0\u540e\u53ef\u4ee5\u53d1\u73b0 test-pod \u7684 sidecar \u955c\u50cf\u66f4\u65b0\u4e86\uff0c\u5176\u4ed6 Pod \u6ca1\u6709\u53d8\u5316\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 sidecar \u7684\u7070\u5ea6\u529f\u80fd\uff1a \u279c kubectl describe pod test-pod Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Killing 7m53s kubelet Container sidecar1 definition changed, will be restarted Normal Created 7m23s ( x2 over 8m17s ) kubelet Created container sidecar1 Normal Started 7m23s ( x2 over 8m17s ) kubelet Started container sidecar1 Normal Pulling 7m23s kubelet Pulling image \"busybox\" Normal Pulled 7m23s kubelet Successfully pulled image \"busybox\" in 603 .928658ms","title":"\u91d1\u4e1d\u96c0\u53d1\u5e03"},{"location":"Controller/OpenKruise/#_9","text":"SidecarSet \u539f\u5730\u5347\u7ea7\u4f1a\u5148\u505c\u6b62\u65e7\u7248\u672c\u7684\u5bb9\u5668\uff0c\u7136\u540e\u521b\u5efa\u65b0\u7248\u672c\u7684\u5bb9\u5668\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9002\u5408\u4e0d\u5f71\u54cd Pod \u670d\u52a1\u53ef\u7528\u6027\u7684 sidecar \u5bb9\u5668\uff0c\u6bd4\u5982\u8bf4\u65e5\u5fd7\u6536\u96c6\u7684 Agent\u3002 \u4f46\u662f\u5bf9\u4e8e\u5f88\u591a\u4ee3\u7406\u6216\u8fd0\u884c\u65f6\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982 Istio Envoy\uff0c\u8fd9\u79cd\u5347\u7ea7\u65b9\u6cd5\u5c31\u6709\u95ee\u9898\u4e86\uff0cEnvoy \u4f5c\u4e3a Pod \u4e2d\u7684\u4e00\u4e2a\u4ee3\u7406\u5bb9\u5668\uff0c\u4ee3\u7406\u4e86\u6240\u6709\u7684\u6d41\u91cf\uff0c\u5982\u679c\u76f4\u63a5\u91cd\u542f\uff0cPod \u670d\u52a1\u7684\u53ef\u7528\u6027\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u5982\u679c\u9700\u8981\u5355\u72ec\u5347\u7ea7 envoy sidecar\uff0c\u5c31\u9700\u8981\u590d\u6742\u7684\u4f18\u96c5\u7ec8\u6b62\u548c\u534f\u8c03\u673a\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u8fd9\u79cd sidecar \u5bb9\u5668\u7684\u5347\u7ea7\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002 apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet metadata : name : hotupgrade-sidecarset spec : selector : matchLabels : app : hotupgrade containers : - name : sidecar image : openkruise/hotupgrade-sample:sidecarv1 imagePullPolicy : Always lifecycle : postStart : exec : command : - /bin/sh - /migrate.sh upgradeStrategy : upgradeType : HotUpgrade hotUpgradeEmptyImage : openkruise/hotupgrade-sample:empty upgradeType : HotUpgrade \u4ee3\u8868\u8be5 sidecar \u5bb9\u5668\u7684\u7c7b\u578b\u662f\u70ed\u5347\u7ea7\u65b9\u6848 hotUpgradeEmptyImage : \u5f53\u70ed\u5347\u7ea7 sidecar \u5bb9\u5668\u65f6\uff0c\u4e1a\u52a1\u5fc5\u987b\u8981\u63d0\u4f9b\u4e00\u4e2a empty \u5bb9\u5668\u7528\u4e8e\u70ed\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u7684\u5bb9\u5668\u5207\u6362\uff0cempty \u5bb9\u5668\u540c sidecar \u5bb9\u5668\u5177\u6709\u76f8\u540c\u7684\u914d\u7f6e\uff08\u9664\u4e86\u955c\u50cf\u5730\u5740\uff09\uff0c\u4f8b\u5982\uff1acommand\u3001lifecycle\u3001probe \u7b49\uff0c\u4f46\u662f\u5b83\u4e0d\u505a\u4efb\u4f55\u5de5\u4f5c\u3002 lifecycle.postStart : \u5728 postStart \u8fd9\u4e2a hook \u4e2d\u5b8c\u6210\u70ed\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u8be5\u811a\u672c\u9700\u8981\u7531\u4e1a\u52a1\u6839\u636e\u81ea\u8eab\u7684\u7279\u70b9\u81ea\u884c\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1anginx \u70ed\u5347\u7ea7\u9700\u8981\u5b8c\u6210 Listen FD \u5171\u4eab\u4ee5\u53ca reload \u64cd\u4f5c\u3002 \u6574\u4f53\u6765\u8bf4\u70ed\u5347\u7ea7\u7279\u6027\u603b\u5171\u5305\u542b\u4ee5\u4e0b\u4e24\u4e2a\u8fc7\u7a0b\uff1a Pod \u521b\u5efa\u65f6\uff0c\u6ce8\u5165\u70ed\u5347\u7ea7\u5bb9\u5668 \u539f\u5730\u5347\u7ea7\u65f6\uff0c\u5b8c\u6210\u70ed\u5347\u7ea7\u6d41\u7a0b \u6ce8\u5165\u70ed\u5347\u7ea7\u5bb9\u5668 Pod \u521b\u5efa\u65f6\uff0cSidecarSet Webhook \u5c06\u4f1a\u6ce8\u5165\u4e24\u4e2a\u5bb9\u5668\uff1a {sidecarContainer.name}-1 : \u5982\u4e0b\u56fe\u6240\u793a envoy-1\uff0c\u8fd9\u4e2a\u5bb9\u5668\u4ee3\u8868\u6b63\u5728\u5b9e\u9645\u5de5\u4f5c\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aenvoy:1.16.0 {sidecarContainer.name}-2 : \u5982\u4e0b\u56fe\u6240\u793a envoy-2\uff0c\u8fd9\u4e2a\u5bb9\u5668\u662f\u4e1a\u52a1\u914d\u7f6e\u7684 hotUpgradeEmptyImage \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aempty:1.0\uff0c\u7528\u4e8e\u540e\u9762\u7684\u70ed\u5347\u7ea7\u673a\u5236","title":"\u70ed\u5347\u7ea7"},{"location":"Controller/OpenKruise/#_10","text":"\u70ed\u5347\u7ea7\u6d41\u7a0b\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a Upgrade : \u5c06 empty \u5bb9\u5668\u5347\u7ea7\u4e3a\u5f53\u524d\u6700\u65b0\u7684 sidecar \u5bb9\u5668\uff0c\u4f8b\u5982\uff1aenvoy-2.Image = envoy:1.17.0 Migration : lifecycle.postStart \u5b8c\u6210\u70ed\u5347\u7ea7\u6d41\u7a0b\u4e2d\u7684\u72b6\u6001\u8fc1\u79fb\uff0c\u5f53\u8fc1\u79fb\u5b8c\u6210\u540e\u9000\u51fa Reset : \u72b6\u6001\u8fc1\u79fb\u5b8c\u6210\u540e\uff0c\u70ed\u5347\u7ea7\u6d41\u7a0b\u5c06\u8bbe\u7f6e envoy-1 \u5bb9\u5668\u4e3a empty \u955c\u50cf\uff0c\u4f8b\u5982\uff1aenvoy-1.Image = empty:1.0 \u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\u5b8c\u6210\u4e86\u70ed\u5347\u7ea7\u4e2d\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u5f53\u5bf9 Pod \u6267\u884c\u591a\u6b21\u70ed\u5347\u7ea7\u65f6\uff0c\u5c06\u91cd\u590d\u6027\u7684\u6267\u884c\u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\u3002 \u8fd9\u91cc\u6211\u4eec\u4ee5 OpenKruise \u7684\u5b98\u65b9\u793a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u9996\u5148\u521b\u5efa\u4e0a\u9762\u7684 hotupgrade-sidecarset \u8fd9\u4e2a SidecarSet\u3002\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 CloneSet \u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : SidecarSet # ...... --- apiVersion : apps.kruise.io/v1alpha1 kind : CloneSet metadata : labels : app : hotupgrade name : busybox spec : replicas : 1 selector : matchLabels : app : hotupgrade template : metadata : labels : app : hotupgrade spec : containers : - name : busybox image : openkruise/hotupgrade-sample:busybox \u521b\u5efa\u5b8c\u6210\u540e\uff0cCloneSet \u7ba1\u7406\u7684 Pod \u5df2\u7ecf\u6ce8\u5165 sidecar-1 \u548c sidecar-2 \u4e24\u4e2a\u5bb9\u5668: \u279c kubectl get sidecarset hotupgrade-sidecarset NAME MATCHED UPDATED READY AGE hotupgrade-sidecarset 1 1 0 6s \u279c kubectl get pods -l app=hotupgrade NAME READY STATUS RESTARTS AGE busybox-t7phd 3/3 Running 0 79s kubectl get pods -l app=hotupgrade NAME READY STATUS RESTARTS AGE busybox-t7phd 3/3 Running 0 79s \u279c kubectl describe pods busybox-t7phd Name : busybox-t7phd Namespace : default Priority : 0 Node : node2/192.168.31.174 ...... Controlled By : CloneSet/busybox Containers : sidecar-1 : Container ID : containerd://5afe9c26923508bf480238a232a2ab1457d96b51ff28024a36980544ad5c0d94 Image : openkruise/hotupgrade-sample:sidecarv1 Environment : IS_INJECTED : true SIDECARSET_VERSION : (v1:metadata.annotations['version.sidecarset.kruise.io/sidecar-1']) SIDECARSET_VERSION_ALT : (v1:metadata.annotations['versionalt.sidecarset.kruise.io/sidecar-1']) sidecar-2 : Container ID : containerd://e17b576eb24985efd4154f3bc94e88bb6231b37bb391b6d611b0dc12e7a8db0b Image : openkruise/hotupgrade-sample:empty Environment : IS_INJECTED : true SIDECARSET_VERSION : (v1:metadata.annotations['version.sidecarset.kruise.io/sidecar-2']) SIDECARSET_VERSION_ALT : (v1:metadata.annotations['versionalt.sidecarset.kruise.io/sidecar-2']) busybox : Container ID : containerd://6d0d45a1981f63df45ce2fba958b734ccac25d010192f441d98dcc4a1b421646 Image : openkruise/hotupgrade-sample:busybox ...... busybox \u4e3b\u5bb9\u5668\u6bcf100\u6beb\u79d2\u4f1a\u8bf7\u6c42\u4e00\u6b21sidecar(version=v1)\u670d\u52a1\uff1a \u279c kubectl logs -f busybox-t7phd -c busybox I0306 11 :07:38.363847 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.474805 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.585975 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :07:38.697097 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) ...... \u73b0\u5728\u6211\u4eec\u53bb\u5347\u7ea7 sidecar \u5bb9\u5668\uff0c\u5c06\u955c\u50cf\u4fee\u6539\u4e3a openkruise/hotupgrade-sample:sidecarv2 \uff1a \u279c kubectl patch sidecarset hotupgrade-sidecarset --type = 'json' -p = '[{\"op\": \"replace\", \"path\": \"/spec/containers/0/image\", \"value\": \"openkruise/hotupgrade-sample:sidecarv2\"}]' \u66f4\u65b0\u540e\u518d\u53bb\u89c2\u5bdf pod \u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u770b\u5230 sidecar-2 \u955c\u50cf\u6b63\u5e38\u66f4\u65b0\u4e86\uff1a \u279c kubectl get pods busybox-t7phd NAME READY STATUS RESTARTS AGE busybox-t7phd 3 /3 Running 0 6m59s \u279c kubectl describe pods busybox-t7phd ...... Events: ...... Normal Created 6m12s kubelet Created container busybox Normal Started 6m12s kubelet Started container busybox Normal Killing 32s kubelet Container sidecar-2 definition changed, will be restarted Normal Pulling 32s kubelet Pulling image \"openkruise/hotupgrade-sample:sidecarv2\" \u5e76\u4e14\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u89c2\u5bdf busybox \u5bb9\u5668\u4ecd\u7136\u4f1a\u4e0d\u65ad\u8bf7\u6c42 sidecar \u670d\u52a1\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u5931\u8d25\u7684\u8bf7\u6c42\u51fa\u73b0\uff1a \u279c kubectl logs -f busybox-t7phd -c busybox I0306 11 :08:47.365196 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :08:47.476553 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) I0306 11 :08:47.587727 1 main.go:39 ] request sidecar server success, and response ( body = This is version ( v1 ) sidecar ) \u6574\u4e2a\u70ed\u5347\u7ea7\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003 GitHub \u7684\u5b9e\u73b0\u3002","title":"\u70ed\u5347\u7ea7\u6d41\u7a0b"},{"location":"Controller/OpenKruise/#container-restart","text":"ContainerRecreateRequest \u63a7\u5236\u5668\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u91cd\u542f/\u91cd\u5efa\u5b58\u91cf Pod \u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u3002\u548c Kruise \u63d0\u4f9b\u7684\u539f\u5730\u5347\u7ea7\u7c7b\u4f3c\uff0c\u5f53\u4e00\u4e2a\u5bb9\u5668\u91cd\u5efa\u7684\u65f6\u5019\uff0cPod \u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u8fd8\u4fdd\u6301\u6b63\u5e38\u8fd0\u884c\uff0c\u91cd\u5efa\u5b8c\u6210\u540e\uff0cPod \u4e2d\u9664\u4e86\u8be5\u5bb9\u5668\u7684 restartCount \u589e\u52a0\u4ee5\u5916\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5176\u4ed6\u53d8\u5316\u3002 \u4e3a\u8981\u91cd\u5efa\u5bb9\u5668\u7684 Pod \u63d0\u4ea4\u4e00\u4e2a ContainerRecreateRequest \u81ea\u5b9a\u4e49\u8d44\u6e90\uff08\u7f29\u5199 CRR\uff09\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : ContainerRecreateRequest metadata : namespace : pod-namespace name : xxx spec : podName : pod-name containers : # \u8981\u91cd\u5efa\u7684\u5bb9\u5668\u540d\u5b57\u5217\u8868\uff0c\u81f3\u5c11\u8981\u6709 1 \u4e2a - name : app - name : sidecar strategy : failurePolicy : Fail # 'Fail' \u6216 'Ignore'\uff0c\u8868\u793a\u4e00\u65e6\u6709\u67d0\u4e2a\u5bb9\u5668\u505c\u6b62\u6216\u91cd\u5efa\u5931\u8d25\uff0c CRR \u7acb\u5373\u7ed3\u675f orderedRecreate : false # 'true' \u8868\u793a\u8981\u7b49\u524d\u4e00\u4e2a\u5bb9\u5668\u91cd\u5efa\u5b8c\u6210\u4e86\uff0c\u518d\u5f00\u59cb\u91cd\u5efa\u4e0b\u4e00\u4e2a terminationGracePeriodSeconds : 30 # \u7b49\u5f85\u5bb9\u5668\u4f18\u96c5\u9000\u51fa\u7684\u65f6\u95f4\uff0c\u4e0d\u586b\u9ed8\u8ba4\u7528 Pod \u4e2d\u5b9a\u4e49\u7684 unreadyGracePeriodSeconds : 3 # \u5728\u91cd\u5efa\u4e4b\u524d\u5148\u628a Pod \u8bbe\u4e3a not ready\uff0c\u5e76\u7b49\u5f85\u8fd9\u6bb5\u65f6\u95f4\u540e\u518d\u5f00\u59cb\u6267\u884c\u91cd\u5efa minStartedSeconds : 10 # \u91cd\u5efa\u540e\u65b0\u5bb9\u5668\u81f3\u5c11\u4fdd\u6301\u8fd0\u884c\u8fd9\u6bb5\u65f6\u95f4\uff0c\u624d\u8ba4\u4e3a\u8be5\u5bb9\u5668\u91cd\u5efa\u6210\u529f activeDeadlineSeconds : 300 # \u5982\u679c CRR \u6267\u884c\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5219\u76f4\u63a5\u6807\u8bb0\u4e3a\u7ed3\u675f\uff08\u672a\u7ed3\u675f\u7684\u5bb9\u5668\u6807\u8bb0\u4e3a\u5931\u8d25\uff09 ttlSecondsAfterFinished : 1800 # CRR \u7ed3\u675f\u540e\uff0c\u8fc7\u4e86\u8fd9\u6bb5\u65f6\u95f4\u81ea\u52a8\u88ab\u5220\u9664\u6389 \u4e00\u822c\u6765\u8bf4\uff0c\u5217\u8868\u4e2d\u7684\u5bb9\u5668\u4f1a\u4e00\u4e2a\u4e2a\u88ab\u505c\u6b62\uff0c\u4f46\u53ef\u80fd\u540c\u65f6\u5728\u88ab\u91cd\u5efa\u548c\u542f\u52a8\uff0c\u9664\u975e orderedRecreate \u88ab\u8bbe\u7f6e\u4e3a true \u3002 unreadyGracePeriodSeconds \u529f\u80fd\u4f9d\u8d56\u4e8e KruisePodReadinessGate \u8fd9\u4e2a feature-gate\uff0c\u540e\u8005\u4f1a\u5728\u6bcf\u4e2a Pod \u521b\u5efa\u7684\u65f6\u5019\u6ce8\u5165\u4e00\u4e2a readinessGate \uff0c\u5426\u5219\uff0c\u9ed8\u8ba4\u53ea\u4f1a\u7ed9 Kruise workload \u521b\u5efa\u7684 Pod \u6ce8\u5165 readinessGate \uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u8fd9\u4e9b Pod \u624d\u80fd\u5728 CRR \u91cd\u5efa\u65f6\u4f7f\u7528 unreadyGracePeriodSeconds \u3002","title":"Container Restart"},{"location":"Controller/OpenKruise/#imagepulljob","text":"NodeImage \u548c ImagePullJob \u662f\u4ece Kruise v0.8.0 \u7248\u672c\u5f00\u59cb\u63d0\u4f9b\u7684 CRD\u3002Kruise \u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e2a Node \u521b\u5efa\u4e00\u4e2a NodeImage\uff0c\u5b83\u5305\u542b\u4e86\u54ea\u4e9b\u955c\u50cf\u9700\u8981\u5728\u8fd9\u4e2a Node \u4e0a\u505a\u9884\u70ed\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc3\u4e2a\u8282\u70b9\uff0c\u5219\u4f1a\u81ea\u52a8\u521b\u5efa3\u4e2a NodeImage \u5bf9\u8c61\uff1a \u279c kubectl get nodeimage NAME DESIRED PULLING SUCCEED FAILED AGE master1 0 0 0 0 10d node1 0 0 0 0 10d node2 0 0 0 0 10d \u6bd4\u5982\u6211\u4eec\u67e5\u770b node1 \u8282\u70b9\u4e0a\u7684 NodeImage \u5bf9\u8c61\uff1a \u279c kruise kubectl get nodeimage node1 -o yaml apiVersion : apps.kruise.io/v1alpha1 kind : NodeImage metadata : labels : beta.kubernetes.io/arch : amd64 beta.kubernetes.io/os : linux kubernetes.io/arch : amd64 kubernetes.io/hostname : node1 kubernetes.io/os : linux name : node1 spec : {} status : desired : 0 failed : 0 pulling : 0 succeeded : 0 \u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u62c9\u53bb\u4e00\u4e2a ubuntu:latest \u955c\u50cf\uff0c\u5219\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u53bb\u4fee\u6539 spec\uff1a ...... spec : images : ubuntu : # \u955c\u50cf name tags : - tag : latest # \u955c\u50cf tag pullPolicy : ttlSecondsAfterFinished : 300 # [required] \u62c9\u53d6\u5b8c\u6210\uff08\u6210\u529f\u6216\u5931\u8d25\uff09\u8d85\u8fc7 300s \u540e\uff0c\u5c06\u8fd9\u4e2a\u4efb\u52a1\u4ece NodeImage \u4e2d\u6e05\u9664 timeoutSeconds : 600 # [optional] \u6bcf\u4e00\u6b21\u62c9\u53d6\u7684\u8d85\u65f6\u65f6\u95f4, \u9ed8\u8ba4\u4e3a 600 backoffLimit : 3 # [optional] \u62c9\u53d6\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a 3 activeDeadlineSeconds : 1200 # [optional] \u6574\u4e2a\u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u65e0\u9ed8\u8ba4\u503c \u66f4\u65b0\u540e\u6211\u4eec\u53ef\u4ee5\u4ece status \u4e2d\u770b\u5230\u62c9\u53d6\u8fdb\u5ea6\u4ee5\u53ca\u7ed3\u679c\uff0c\u5e76\u4e14\u4f60\u4f1a\u53d1\u73b0\u62c9\u53d6\u5b8c\u6210 600s \u540e\u4efb\u52a1\u4f1a\u88ab\u6e05\u9664\u3002 \u6b64\u5916\u7528\u6237\u53ef\u4ee5\u521b\u5efa ImagePullJob \u5bf9\u8c61\uff0c\u6765\u6307\u5b9a\u4e00\u4e2a\u955c\u50cf\u8981\u5728\u54ea\u4e9b\u8282\u70b9\u4e0a\u505a\u9884\u70ed\u3002 \u6bd4\u5982\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 ImagePullJob \u8d44\u6e90\u5bf9\u8c61\uff1a apiVersion : apps.kruise.io/v1alpha1 kind : ImagePullJob metadata : name : job-with-always spec : image : nginx:1.9.1 # [required] \u5b8c\u6574\u7684\u955c\u50cf\u540d name:tag parallelism : 10 # [optional] \u6700\u5927\u5e76\u53d1\u62c9\u53d6\u7684\u8282\u70b9\u68b3\u7406, \u9ed8\u8ba4\u4e3a 1 selector : # [optional] \u6307\u5b9a\u8282\u70b9\u7684 \u540d\u5b57\u5217\u8868 \u6216 \u6807\u7b7e\u9009\u62e9\u5668 (\u53ea\u80fd\u8bbe\u7f6e\u5176\u4e2d\u4e00\u79cd) names : - node-1 - node-2 matchLabels : node-type : xxx # podSelector: # [optional] pod label \u9009\u62e9\u5668\u6765\u5728\u8fd9\u4e9b pod \u6240\u5728\u8282\u70b9\u4e0a\u62c9\u53d6\u955c\u50cf, \u4e0e selector \u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e. # pod-label: xxx completionPolicy : type : Always # [optional] \u9ed8\u8ba4\u4e3a Always activeDeadlineSeconds : 1200 # [optional] \u65e0\u9ed8\u8ba4\u503c, \u53ea\u5bf9 Alway \u7c7b\u578b\u751f\u6548 ttlSecondsAfterFinished : 300 # [optional] \u65e0\u9ed8\u8ba4\u503c, \u53ea\u5bf9 Alway \u7c7b\u578b\u751f\u6548 pullPolicy : # [optional] \u9ed8\u8ba4 backoffLimit=3, timeoutSeconds=600 backoffLimit : 3 timeoutSeconds : 300 pullSecrets : - secret-name1 - secret-name2 \u6211\u4eec\u53ef\u4ee5\u5728 selector \u5b57\u6bb5\u4e2d\u6307\u5b9a\u8282\u70b9\u7684\u540d\u5b57\u5217\u8868\u6216\u6807\u7b7e\u9009\u62e9\u5668 (\u53ea\u80fd\u8bbe\u7f6e\u5176\u4e2d\u4e00\u79cd)\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e selector \u5219\u4f1a\u9009\u62e9\u6240\u6709\u8282\u70b9\u505a\u9884\u70ed\u3002\u6216\u8005\u53ef\u4ee5\u914d\u7f6e podSelector \u6765\u5728\u8fd9\u4e9b pod \u6240\u5728\u8282\u70b9\u4e0a\u62c9\u53d6\u955c\u50cf\uff0c podSelector \u4e0e selector \u4e0d\u80fd\u540c\u65f6\u8bbe\u7f6e \u3002 \u540c\u65f6\uff0cImagePullJob \u6709\u4e24\u79cd completionPolicy \u7c7b\u578b: Always \uff1a\u8868\u793a\u8fd9\u4e2a job \u662f\u4e00\u6b21\u6027\u9884\u70ed\uff0c\u4e0d\u7ba1\u6210\u529f\u3001\u5931\u8d25\u90fd\u4f1a\u7ed3\u675f activeDeadlineSeconds \uff1a\u6574\u4e2a job \u7684 deadline \u7ed3\u675f\u65f6\u95f4 ttlSecondsAfterFinished \uff1a\u7ed3\u675f\u540e\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\uff0c\u81ea\u52a8\u6e05\u7406\u5220\u9664 job Never \uff1a\u8868\u793a\u8fd9\u4e2a job \u662f\u957f\u671f\u8fd0\u884c\u3001\u4e0d\u4f1a\u7ed3\u675f\uff0c\u5e76\u4e14\u4f1a\u6bcf\u5929\u90fd\u4f1a\u5728\u5339\u914d\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u9884\u70ed\u4e00\u6b21\u6307\u5b9a\u7684\u955c\u50cf \u540c\u6837\u5982\u679c\u4f60\u8981\u9884\u70ed\u7684\u955c\u50cf \u6765\u81ea\u79c1\u6709\u4ed3\u5e93 \uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 pullSecrets \u6765\u6307\u5b9a\u4ed3\u5e93\u7684 Secret \u4fe1\u606f\u3002","title":"ImagePullJob"},{"location":"Controller/OpenKruise/#_11","text":"Container Launch Priority \u63d0\u4f9b\u4e86\u63a7\u5236\u4e00\u4e2a Pod \u4e2d\u5bb9\u5668\u542f\u52a8\u987a\u5e8f\u7684\u65b9\u6cd5\u3002\u901a\u5e38\u6765\u8bf4 Pod \u5bb9\u5668\u7684\u542f\u52a8\u548c\u9000\u51fa\u987a\u5e8f\u662f\u7531 Kubelet \u7ba1\u7406\u7684\uff0cKubernetes \u66fe\u7ecf\u6709\u4e00\u4e2a KEP \u8ba1\u5212\u5728 container \u4e2d\u589e\u52a0\u4e00\u4e2a type \u5b57\u6bb5\u6765\u6807\u8bc6\u4e0d\u540c\u7c7b\u578b\u5bb9\u5668\u7684\u542f\u505c\u4f18\u5148\u7ea7\uff0c\u4f46\u662f\u7531\u4e8esig-node \u8003\u8651\u5230\u5bf9\u73b0\u6709\u4ee3\u7801\u67b6\u6784\u7684\u6539\u52a8\u592a\u5927\uff0c\u6240\u4ee5\u5c06\u8be5\u63d0\u6848\u62d2\u7edd\u4e86\u3002 Warning \u8fd9\u4e2a\u529f\u80fd\u4f5c\u7528\u5728 Pod \u5bf9\u8c61\u4e0a\uff0c\u4e0d\u7ba1\u5b83\u7684 owner \u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u9002\u7528\u4e8e Deployment\u3001CloneSet \u4ee5\u53ca\u5176\u4ed6\u7684 workload \u79cd\u7c7b\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6309\u7167\u5bb9\u5668\u987a\u5e8f\u542f\u52a8\uff0c\u53ea\u9700\u8981\u5728 Pod \u4e2d\u5b9a\u4e49\u4e00\u4e2a apps.kruise.io/container-launch-priority \u7684\u6ce8\u89e3\u5373\u53ef\uff1a apiVersion : v1 kind : Pod annotations : apps.kruise.io/container-launch-priority : Ordered spec : containers : - name : sidecar # ... - name : main # ... Kruise \u4f1a\u4fdd\u8bc1\u524d\u9762\u7684\u5bb9\u5668\uff08sidecar\uff09\u4f1a\u5728\u540e\u9762\u5bb9\u5668\uff08main\uff09\u4e4b\u524d\u542f\u52a8\u3002 \u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u6309\u81ea\u5b9a\u4e49\u987a\u5e8f\u542f\u52a8\uff0c\u4f46\u662f\u9700\u8981\u5728 Pod \u5bb9\u5668\u4e2d\u6dfb\u52a0 KRUISE_CONTAINER_PRIORITY \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf: apiVersion : v1 kind : Pod spec : containers : - name : main # ... - name : sidecar env : - name : KRUISE_CONTAINER_PRIORITY value : \"1\" # ... \u8be5\u73af\u5883\u53d8\u91cf\u503c\u7684\u8303\u56f4\u5728 [-2147483647, 2147483647]\uff0c\u4e0d\u5199\u9ed8\u8ba4\u662f 0\uff0c\u6743\u91cd\u9ad8\u7684\u5bb9\u5668\uff0c\u4f1a\u4fdd\u8bc1\u5728\u6743\u91cd\u4f4e\u7684\u5bb9\u5668\u4e4b\u524d\u542f\u52a8\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u76f8\u540c\u6743\u91cd\u7684\u5bb9\u5668\u4e0d\u4fdd\u8bc1\u542f\u52a8\u987a\u5e8f\u3002 \u9664\u4e86\u8fd9\u4e9b\u5e38\u7528\u7684\u589e\u5f3a\u63a7\u5236\u5668\u4e4b\u5916 OpenKruise \u8fd8\u6709\u5f88\u591a\u9ad8\u7ea7\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u524d\u5f80 \u5b98\u7f51 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002","title":"\u5bb9\u5668\u542f\u52a8\u987a\u5e8f"},{"location":"Controller/ReplicaSet/","text":"ReplicaSet \u63a7\u5236\u5668 \u00b6 \u524d\u9762\u6211\u4eec\u4e00\u8d77\u5b66\u4e60\u4e86 Pod \u7684\u539f\u7406\u548c\u4e00\u4e9b\u57fa\u672c\u4f7f\u7528\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 Pod\uff0c\u800c\u662f\u4f1a\u4f7f\u7528\u5404\u79cd\u63a7\u5236\u5668\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c Kubernetes \u4e2d\u8fd0\u884c\u4e86\u4e00\u7cfb\u5217\u63a7\u5236\u5668\u6765\u786e\u4fdd\u96c6\u7fa4\u7684\u5f53\u524d\u72b6\u6001\u4e0e\u671f\u671b\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff0c\u5b83\u4eec\u5c31\u662f Kubernetes \u7684\u5927\u8111 \u3002\u4f8b\u5982\uff0cReplicaSet \u63a7\u5236\u5668\u8d1f\u8d23\u7ef4\u62a4\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u6570\u91cf\uff1bNode \u63a7\u5236\u5668\u8d1f\u8d23\u76d1\u63a7\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5e76\u5728\u8282\u70b9\u51fa\u73b0\u6545\u969c\u65f6\u53ca\u65f6\u505a\u51fa\u54cd\u5e94\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5728 Kubernetes \u4e2d\uff0c\u6bcf\u4e2a\u63a7\u5236\u5668\u53ea\u8d1f\u8d23\u67d0\u79cd\u7c7b\u578b\u7684\u7279\u5b9a\u8d44\u6e90\u3002 \u63a7\u5236\u5668 \u00b6 Kubernetes \u63a7\u5236\u5668\u4f1a\u76d1\u542c\u8d44\u6e90\u7684 \u521b\u5efa / \u66f4\u65b0 / \u5220\u9664 \u4e8b\u4ef6\uff0c\u5e76\u89e6\u53d1 Reconcile \u8c03\u8c10\u51fd\u6570\u4f5c\u4e3a\u54cd\u5e94\uff0c\u6574\u4e2a\u8c03\u6574\u8fc7\u7a0b\u88ab\u79f0\u4f5c \u201c Reconcile Loop \u201d\uff08 \u8c03\u8c10\u5faa\u73af \uff09 \u6216\u8005 \u201c Sync Loop \u201d\uff08 \u540c\u6b65\u5faa\u73af \uff09\" \u3002Reconcile \u662f\u4e00\u4e2a\u4f7f\u7528\u8d44\u6e90\u5bf9\u8c61\u7684\u547d\u540d\u7a7a\u95f4\u548c\u8d44\u6e90\u5bf9\u8c61\u540d\u79f0\u6765\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u8d44\u6e90\u5bf9\u8c61\u7684\u5b9e\u9645\u72b6\u6001\u4e0e\u8d44\u6e90\u6e05\u5355\u4e2d\u5b9a\u4e49\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\u3002\u8c03\u7528\u5b8c\u6210\u540e\uff0cReconcile \u4f1a\u5c06\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u66f4\u65b0\u4e3a\u5f53\u524d\u5b9e\u9645\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4e00\u6bb5\u4f2a\u4ee3\u7801\u6765\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a for { desired := getDesiredState () // \u671f\u671b\u7684\u72b6\u6001 current := getCurrentState () // \u5f53\u524d\u5b9e\u9645\u72b6\u6001 if current == desired { // \u5982\u679c\u72b6\u6001\u4e00\u81f4\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a // nothing to do } else { // \u5982\u679c\u72b6\u6001\u4e0d\u4e00\u81f4\u5219\u8c03\u6574\u7f16\u6392\uff0c\u5230\u4e00\u81f4\u4e3a\u6b62 // change current to desired status } } \u8fd9\u4e2a\u7f16\u6392\u6a21\u578b\u5c31\u662f Kubernetes \u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u901a\u7528\u7f16\u6392\u6a21\u5f0f\uff0c\u5373\uff1a \u63a7\u5236\u5faa\u73af \uff08 control loop \uff09 \u3002 ReplicaSet \u00b6 \u5047\u5982\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a Pod \u6b63\u5728\u63d0\u4f9b\u7ebf\u4e0a\u7684\u670d\u52a1\uff0c\u6211\u4eec\u6765\u60f3\u60f3\u4e00\u4e0b\u6211\u4eec\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u4e00\u4e9b\u573a\u666f\uff1a \u67d0\u6b21\u8fd0\u8425\u6d3b\u52a8\u975e\u5e38\u6210\u529f\uff0c\u7f51\u7ad9\u8bbf\u95ee\u91cf\u7a81\u7136\u66b4\u589e \u8fd0\u884c\u5f53\u524d Pod \u7684\u8282\u70b9\u53d1\u751f\u6545\u969c\u4e86\uff0cPod \u4e0d\u80fd\u6b63\u5e38\u63d0\u4f9b\u670d\u52a1\u4e86 \u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u6bd4\u8f83\u597d\u5e94\u5bf9\uff0c\u6d3b\u52a8\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u5927\u6982\u8ba1\u7b97\u4e0b\u4f1a\u6709\u591a\u5927\u7684\u8bbf\u95ee\u91cf\uff0c\u63d0\u524d\u591a\u542f\u52a8\u51e0\u4e2a Pod \u526f\u672c\uff0c\u6d3b\u52a8\u7ed3\u675f\u540e\u518d\u628a\u591a\u4f59\u7684 Pod \u6740\u6389\uff0c\u867d\u7136\u6709\u70b9\u9ebb\u70e6\uff0c\u4f46\u662f\u8fd8\u662f\u80fd\u591f\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\u7684\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u67d0\u5929\u591c\u91cc\u6536\u5230\u5927\u91cf\u62a5\u8b66\u8bf4\u670d\u52a1\u6302\u4e86\uff0c\u7136\u540e\u8d77\u6765\u6253\u5f00\u7535\u8111\u5728\u53e6\u5916\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u95ee\u9898\u53ef\u4ee5\u89e3\u51b3\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u90fd\u4eba\u5de5\u7684\u53bb\u89e3\u51b3\u9047\u5230\u7684\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f3c\u4e4e\u53c8\u56de\u5230\u4e86\u4ee5\u524d\u5200\u8015\u706b\u79cd\u7684\u65f6\u4ee3\u4e86\u662f\u5427\uff1f\u5982\u679c\u6709\u4e00\u79cd\u5de5\u5177\u80fd\u591f\u6765\u5e2e\u52a9\u6211\u4eec\u81ea\u52a8\u7ba1\u7406 Pod \u5c31\u597d\u4e86\uff0cPod \u6302\u4e86\u81ea\u52a8\u5e2e\u6211\u5728\u5408\u9002\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u8fd9\u6837\u662f\u4e0d\u662f\u9047\u5230\u4e0a\u9762\u7684\u95ee\u9898\u6211\u4eec\u90fd\u4e0d\u9700\u8981\u624b\u52a8\u53bb\u89e3\u51b3\u4e86\u3002 \u800c ReplicaSet \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c ReplicaSet \uff08 RS \uff09 \u7684\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ef4\u6301\u4e00\u7ec4 Pod \u526f\u672c\u7684\u8fd0\u884c\uff0c\u4fdd\u8bc1\u4e00\u5b9a\u6570\u91cf\u7684 Pod \u5728\u96c6\u7fa4\u4e2d\u6b63\u5e38\u8fd0\u884c\uff0cReplicaSet \u63a7\u5236\u5668\u4f1a\u6301\u7eed\u76d1\u542c\u5b83\u8bf4\u63a7\u5236\u7684\u8fd9\u4e9b Pod \u7684\u8fd0\u884c\u72b6\u6001\uff0c\u5728 Pod \u53d1\u9001\u6545\u969c\u6570\u91cf\u51cf\u5c11\u6216\u8005\u589e\u52a0\u65f6\u4f1a\u89e6\u53d1\u8c03\u8c10\u8fc7\u7a0b\uff0c\u59cb\u7ec8\u4fdd\u6301\u4e00\u5b9a\u6570\u91cf\u7684\u526f\u672c\u3002 \u548c Pod \u4e00\u6837\u6211\u4eec\u4ecd\u7136\u8fd8\u662f\u901a\u8fc7 YAML \u6587\u4ef6\u6765\u63cf\u8ff0\u6211\u4eec\u7684 ReplicaSet \u8d44\u6e90\u5bf9\u8c61\uff0c\u5982\u4e0b YAML \u6587\u4ef6\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 ReplicaSet \u5b9a\u4e49\uff1a # nginx-rs.yaml apiVersion : apps/v1 kind : ReplicaSet metadata : name : nginx-rs namespace : default spec : replicas : 3 # \u671f\u671b\u7684 Pod \u526f\u672c\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a1 selector : # Label Selector\uff0c\u5fc5\u987b\u5339\u914d Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e matchLabels : app : nginx template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u4e0a\u9762\u7684 YAML \u6587\u4ef6\u7ed3\u6784\u548c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684 Pod \u770b\u4e0a\u53bb\u6ca1\u592a\u5927\u4e24\u6837\uff0c\u6709\u5e38\u89c1\u7684 apiVersion\u3001kind\u3001metadata\uff0c\u5728 spec \u4e0b\u9762\u63cf\u8ff0 ReplicaSet \u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5176\u4e2d\u5305\u542b3\u4e2a\u91cd\u8981\u5185\u5bb9\uff1a replias \uff1a\u8868\u793a\u671f\u671b\u7684 Pod \u7684\u526f\u672c\u6570\u91cf selector \uff1aLabel Selector\uff0c\u7528\u6765\u5339\u914d\u8981\u63a7\u5236\u7684 Pod \u6807\u7b7e\uff0c\u9700\u8981\u548c Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e\u4e00\u81f4 template \uff1aPod \u6a21\u677f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ee5\u524d\u6211\u4eec\u5b9a\u4e49\u7684 Pod \u5185\u5bb9\uff0c\u76f8\u5f53\u4e8e\u628a\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4ee5\u6a21\u677f\u7684\u5f62\u5f0f\u5d4c\u5165\u5230\u4e86 ReplicaSet \u4e2d\u6765\u3002 Pod \u6a21\u677f\" Pod \u6a21\u677f\u8fd9\u4e2a\u6982\u5ff5\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u540e\u9762\u6211\u4eec\u8bb2\u89e3\u5230\u7684\u5927\u591a\u6570\u63a7\u5236\u5668\uff0c\u90fd\u4f1a\u4f7f\u7528 Pod \u6a21\u677f\u6765\u7edf\u4e00\u5b9a\u4e49\u5b83\u6240\u8981\u7ba1\u7406\u7684 Pod\u3002\u66f4\u6709\u610f\u601d\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u4f1a\u770b\u5230\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u6a21\u677f\uff0c\u6bd4\u5982 Volume \u7684\u6a21\u677f\u7b49\u3002 \" \u4e0a\u9762\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u4e2a\u666e\u901a\u7684 ReplicaSet \u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0cReplicaSet \u63a7\u5236\u5668\u4f1a\u901a\u8fc7\u5b9a\u4e49\u7684 Label Selector \u6807\u7b7e\u53bb\u67e5\u627e\u96c6\u7fa4\u4e2d\u7684 Pod \u5bf9\u8c61\uff1a \u6211\u4eec\u76f4\u63a5\u6765\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f nginx-rs.yaml replicaset.apps/nginx-rs created \u279c ~ kubectl get rs nginx-rs NAME DESIRED CURRENT READY AGE nginx-rs 3 3 3 17m \u901a\u8fc7\u67e5\u770b RS \u53ef\u4ee5\u770b\u5230\u5f53\u524d\u8d44\u6e90\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u5305\u62ec DESIRED \u3001 CURRENT \u3001 READY \u7684\u72b6\u6001\u503c\uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5229\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u4e0b Pod \u5217\u8868\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 52s nginx-rs-t46qc 1 /1 Running 0 52s nginx-rs-xfqrn 1 /1 Running 0 52s \u53ef\u4ee5\u770b\u5230\u73b0\u5728\u6709 3 \u4e2a Pod\uff0c\u8fd9 3 \u4e2a Pod \u5c31\u662f\u6211\u4eec\u5728 RS \u4e2d\u58f0\u660e\u7684 3 \u4e2a\u526f\u672c\uff0c\u6bd4\u5982\u6211\u4eec\u5220\u9664\u5176\u4e2d\u4e00\u4e2a Pod\uff1a \u279c ~ kubectl delete pod nginx-rs-xfqrn pod \"nginx-rs-xfqrn\" deleted \u7136\u540e\u518d\u67e5\u770b Pod \u5217\u8868\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 3m19s nginx-rs-t46qc 1 /1 Running 0 3m19s nginx-rs-xsb59 1 /1 Running 0 10s \u53ef\u4ee5\u770b\u5230\u53c8\u91cd\u65b0\u51fa\u73b0\u4e86\u4e00\u4e2a Pod\uff0c\u8fd9\u4e2a\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u6240\u8bf4\u7684 ReplicaSet \u63a7\u5236\u5668\u4e3a\u6211\u4eec\u505a\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u5728 YAML \u6587\u4ef6\u4e2d\u58f0\u660e\u4e86 3 \u4e2a\u526f\u672c\uff0c\u7136\u540e\u73b0\u5728\u6211\u4eec\u5220\u9664\u4e86\u4e00\u4e2a\u526f\u672c\uff0c\u5c31\u53d8\u6210\u4e86\u4e24\u4e2a\uff0c\u8fd9\u4e2a\u65f6\u5019 ReplicaSet \u63a7\u5236\u5668\u76d1\u63a7\u5230\u63a7\u5236\u7684 Pod \u6570\u91cf\u548c\u671f\u671b\u7684 3 \u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod \u6765\u4fdd\u6301 3 \u4e2a\u526f\u672c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0a\u9762\u6211\u4eec\u8bf4\u4e86\u5c31\u662f \u8c03\u8c10 \u7684\u8fc7\u7a0b\u3002\u540c\u6837\u53ef\u4ee5\u67e5\u770b RS \u7684\u63cf\u8ff0\u4fe1\u606f\u6765\u67e5\u770b\u5230\u76f8\u5173\u7684\u4e8b\u4ef6\u4fe1\u606f\uff1a \u279c ~ kubectl describe rs nginx-rs Name: nginx-rs Namespace: default Selector: app = nginx Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"ReplicaSet\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-rs\" , \"namespace\" : \"default\" } , \"spec\" : { \"replicas\" :3, \"se... Replicas: 3 current / 3 desired Pods Status: 3 Running / 0 Waiting / 0 Succeeded / 0 Failed Pod Template: Labels: app=nginx Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-xfqrn Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-nxklf Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-t46qc Normal SuccessfulCreate 14m replicaset-controller Created pod: nginx-rs-xsb59 \u53ef\u4ee5\u53d1\u73b0\u6700\u5f00\u59cb\u901a\u8fc7 ReplicaSet \u63a7\u5236\u5668\u521b\u5efa\u4e86 3 \u4e2a Pod\uff0c\u540e\u9762\u6211\u4eec\u5220\u9664\u4e86 Pod \u540e\uff0c ReplicaSet \u63a7\u5236\u5668\u53c8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Pod\uff0c\u548c\u4e0a\u9762\u6211\u4eec\u7684\u63cf\u8ff0\u662f\u4e00\u81f4\u7684\u3002\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u628a RS \u8d44\u6e90\u5bf9\u8c61\u7684 Pod \u526f\u672c\u66f4\u6539\u4e3a 2 spec . replicas = 2 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u66f4\u65b0\u4e0b\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f rs.yaml replicaset.apps/nginx-rs configured \u279c ~ kubectl get rs nginx-rs NAME DESIRED CURRENT READY AGE nginx-rs 2 2 2 27m $ kubectl describe rs nginx-rs Name: nginx-rs Namespace: default Selector: app = nginx Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"ReplicaSet\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-rs\" , \"namespace\" : \"default\" } , \"spec\" : { \"replicas\" :2, \"se... Replicas: 2 current / 2 desired Pods Status: 2 Running / 1 Waiting / 0 Succeeded / 0 Failed Pod Template: Labels: app=nginx Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-xfqrn Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-nxklf Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-t46qc Normal SuccessfulCreate 24m replicaset-controller Created pod: nginx-rs-xsb59 Normal SuccessfulDelete 7s replicaset-controller Deleted pod: nginx-rs-xsb59 \u53ef\u4ee5\u770b\u5230 Replicaset \u63a7\u5236\u5668\u5728\u53d1\u73b0\u6211\u4eec\u7684\u8d44\u6e90\u58f0\u660e\u4e2d\u526f\u672c\u6570\u53d8\u66f4\u4e3a 2 \u540e\uff0c\u5c31\u4e3b\u52a8\u53bb\u5220\u9664\u4e86\u4e00\u4e2a Pod\uff0c\u8fd9\u6837\u526f\u672c\u6570\u5c31\u548c\u671f\u671b\u7684\u59cb\u7ec8\u4fdd\u6301\u4e00\u81f4\u4e86\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 30m nginx-rs-t46qc 1 /1 Running 0 30m \u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u7684\u6240\u5c5e\u63a7\u5236\u5668\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod nginx-rs-xsb59 Name: nginx-rs-xsb59 Namespace: default Priority: 0 PriorityClassName: <none> Node: ydzs-node1/10.151.30.22 Start Time: Fri, 15 Nov 2019 14 :18:10 +0800 Labels: app = nginx Annotations: <none> Status: Running IP: 10 .244.1.148 Controlled By: ReplicaSet/nginx-rs ....... \u53e6\u5916\u88ab ReplicaSet \u6301\u6709\u7684 Pod \u6709\u4e00\u4e2a metadata . ownerReferences \u6307\u9488\u6307\u5411\u5f53\u524d\u7684 ReplicaSet\uff0c\u8868\u793a\u5f53\u524d Pod \u7684\u6240\u6709\u8005\uff0c\u8fd9\u4e2a\u5f15\u7528\u4e3b\u8981\u4f1a\u88ab\u96c6\u7fa4\u4e2d\u7684\u5783\u573e\u6536\u96c6\u5668\u4f7f\u7528\u4ee5\u6e05\u7406\u5931\u53bb\u6240\u6709\u8005\u7684 Pod \u5bf9\u8c61\u3002\u8fd9\u4e2a ownerReferences \u548c\u6570\u636e\u5e93\u4e2d\u7684 \u5916\u952e \u662f\u4e0d\u662f\u975e\u5e38\u7c7b\u4f3c\u3002\u53ef\u4ee5\u901a\u8fc7\u5c06 Pod \u8d44\u6e90\u63cf\u8ff0\u4fe1\u606f\u5bfc\u51fa\u67e5\u770b\uff1a \u279c ~ kubectl get pod nginx-rs-xsb59 -o yaml apiVersion: v1 kind: Pod metadata: creationTimestamp: \"2021-11-03T06:18:10Z\" generateName: nginx-rs- labels: app: nginx name: nginx-rs-xsb59 namespace: default ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: ReplicaSet name: nginx-rs uid: 4a3121fa-b5ae-4def-b2d2-bf17bc06b7b7 resourceVersion: \"1781596\" selfLink: /api/v1/namespaces/default/pods/nginx-rs-xsb59 uid: 0a4cae9a-105b-4024-ae96-ee516bfb2d23 ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u4e2d\u6709\u4e00\u4e2a metadata . ownerReferences \u7684\u5b57\u6bb5\u6307\u5411\u4e86 ReplicaSet \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u8981\u5f7b\u5e95\u5220\u9664 Pod\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u5220\u9664 RS \u5bf9\u8c61\uff1a \u279c ~ kubectl delete rs nginx-rs # \u6216\u8005\u6267\u884c kubectl delete -f nginx-rs.yaml \u8fd9\u5c31\u662f ReplicaSet \u5bf9\u8c61\u7684\u57fa\u672c\u4f7f\u7528\u3002 Replication Controller\uff08\u53ef\u4ee5\u4e0d\u770b\uff09 \u00b6 Replication Controller \u7b80\u79f0 RC\uff0c\u5b9e\u9645\u4e0a RC \u548c RS \u7684\u529f\u80fd\u51e0\u4e4e\u4e00\u81f4\uff0cRS \u7b97\u662f\u5bf9 RC \u7684\u6539\u8fdb\uff0c\u76ee\u524d\u552f\u4e00\u7684\u4e00\u4e2a\u533a\u522b\u5c31\u662f RC \u53ea\u652f\u6301\u57fa\u4e8e\u7b49\u5f0f\u7684 selector\uff08env=dev\u6216environment!=qa\uff09\uff0c\u4f46 RS \u8fd8\u652f\u6301\u57fa\u4e8e\u96c6\u5408\u7684 selector\uff08version in (v1.0, v2.0)\uff09\uff0c\u8fd9\u5bf9\u590d\u6742\u7684\u8fd0\u7ef4\u7ba1\u7406\u5c31\u975e\u5e38\u65b9\u4fbf\u4e86\u3002 \u6bd4\u5982\u4e0a\u9762\u8d44\u6e90\u5bf9\u8c61\u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528 RC \u7684\u8bdd\uff0c\u5bf9\u5e94\u7684 selector \u662f\u8fd9\u6837\u7684\uff1a selector : app : nginx RC \u53ea\u652f\u6301\u5355\u4e2a Label \u7684\u7b49\u5f0f\uff0c\u800c RS \u4e2d\u7684 Label Selector \u652f\u6301 matchLabels \u548c matchExpressions \u4e24\u79cd\u5f62\u5f0f\uff1a selector : matchLabels : app : nginx --- selector : matchExpressions : # \u8be5\u9009\u62e9\u5668\u8981\u6c42 Pod \u5305\u542b\u540d\u4e3a app \u7684\u6807\u7b7e - key : app operator : In values : # \u5e76\u4e14\u6807\u7b7e\u7684\u503c\u5fc5\u987b\u662f nginx - nginx \u603b\u7684\u6765\u8bf4 RS \u662f\u65b0\u4e00\u4ee3\u7684 RC\uff0c\u6240\u4ee5\u4ee5\u540e\u6211\u4eec\u4e0d\u4f7f\u7528 RC\uff0c\u76f4\u63a5\u4f7f\u7528 RS \u5373\u53ef\uff0c\u4ed6\u4eec\u7684\u529f\u80fd\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u6211\u4eec\u4e5f\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 RS\uff0c\u800c\u662f\u4f7f\u7528\u66f4\u4e0a\u5c42\u7684\u7c7b\u4f3c\u4e8e Deployment \u8fd9\u6837\u7684\u8d44\u6e90\u5bf9\u8c61\u3002","title":"ReplicaSet"},{"location":"Controller/ReplicaSet/#replicaset","text":"\u524d\u9762\u6211\u4eec\u4e00\u8d77\u5b66\u4e60\u4e86 Pod \u7684\u539f\u7406\u548c\u4e00\u4e9b\u57fa\u672c\u4f7f\u7528\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 Pod\uff0c\u800c\u662f\u4f1a\u4f7f\u7528\u5404\u79cd\u63a7\u5236\u5668\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c Kubernetes \u4e2d\u8fd0\u884c\u4e86\u4e00\u7cfb\u5217\u63a7\u5236\u5668\u6765\u786e\u4fdd\u96c6\u7fa4\u7684\u5f53\u524d\u72b6\u6001\u4e0e\u671f\u671b\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff0c\u5b83\u4eec\u5c31\u662f Kubernetes \u7684\u5927\u8111 \u3002\u4f8b\u5982\uff0cReplicaSet \u63a7\u5236\u5668\u8d1f\u8d23\u7ef4\u62a4\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u6570\u91cf\uff1bNode \u63a7\u5236\u5668\u8d1f\u8d23\u76d1\u63a7\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5e76\u5728\u8282\u70b9\u51fa\u73b0\u6545\u969c\u65f6\u53ca\u65f6\u505a\u51fa\u54cd\u5e94\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5728 Kubernetes \u4e2d\uff0c\u6bcf\u4e2a\u63a7\u5236\u5668\u53ea\u8d1f\u8d23\u67d0\u79cd\u7c7b\u578b\u7684\u7279\u5b9a\u8d44\u6e90\u3002","title":"ReplicaSet \u63a7\u5236\u5668"},{"location":"Controller/ReplicaSet/#_1","text":"Kubernetes \u63a7\u5236\u5668\u4f1a\u76d1\u542c\u8d44\u6e90\u7684 \u521b\u5efa / \u66f4\u65b0 / \u5220\u9664 \u4e8b\u4ef6\uff0c\u5e76\u89e6\u53d1 Reconcile \u8c03\u8c10\u51fd\u6570\u4f5c\u4e3a\u54cd\u5e94\uff0c\u6574\u4e2a\u8c03\u6574\u8fc7\u7a0b\u88ab\u79f0\u4f5c \u201c Reconcile Loop \u201d\uff08 \u8c03\u8c10\u5faa\u73af \uff09 \u6216\u8005 \u201c Sync Loop \u201d\uff08 \u540c\u6b65\u5faa\u73af \uff09\" \u3002Reconcile \u662f\u4e00\u4e2a\u4f7f\u7528\u8d44\u6e90\u5bf9\u8c61\u7684\u547d\u540d\u7a7a\u95f4\u548c\u8d44\u6e90\u5bf9\u8c61\u540d\u79f0\u6765\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u8d44\u6e90\u5bf9\u8c61\u7684\u5b9e\u9645\u72b6\u6001\u4e0e\u8d44\u6e90\u6e05\u5355\u4e2d\u5b9a\u4e49\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\u3002\u8c03\u7528\u5b8c\u6210\u540e\uff0cReconcile \u4f1a\u5c06\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u66f4\u65b0\u4e3a\u5f53\u524d\u5b9e\u9645\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4e00\u6bb5\u4f2a\u4ee3\u7801\u6765\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a for { desired := getDesiredState () // \u671f\u671b\u7684\u72b6\u6001 current := getCurrentState () // \u5f53\u524d\u5b9e\u9645\u72b6\u6001 if current == desired { // \u5982\u679c\u72b6\u6001\u4e00\u81f4\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a // nothing to do } else { // \u5982\u679c\u72b6\u6001\u4e0d\u4e00\u81f4\u5219\u8c03\u6574\u7f16\u6392\uff0c\u5230\u4e00\u81f4\u4e3a\u6b62 // change current to desired status } } \u8fd9\u4e2a\u7f16\u6392\u6a21\u578b\u5c31\u662f Kubernetes \u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u901a\u7528\u7f16\u6392\u6a21\u5f0f\uff0c\u5373\uff1a \u63a7\u5236\u5faa\u73af \uff08 control loop \uff09 \u3002","title":"\u63a7\u5236\u5668"},{"location":"Controller/ReplicaSet/#replicaset_1","text":"\u5047\u5982\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a Pod \u6b63\u5728\u63d0\u4f9b\u7ebf\u4e0a\u7684\u670d\u52a1\uff0c\u6211\u4eec\u6765\u60f3\u60f3\u4e00\u4e0b\u6211\u4eec\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u4e00\u4e9b\u573a\u666f\uff1a \u67d0\u6b21\u8fd0\u8425\u6d3b\u52a8\u975e\u5e38\u6210\u529f\uff0c\u7f51\u7ad9\u8bbf\u95ee\u91cf\u7a81\u7136\u66b4\u589e \u8fd0\u884c\u5f53\u524d Pod \u7684\u8282\u70b9\u53d1\u751f\u6545\u969c\u4e86\uff0cPod \u4e0d\u80fd\u6b63\u5e38\u63d0\u4f9b\u670d\u52a1\u4e86 \u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u6bd4\u8f83\u597d\u5e94\u5bf9\uff0c\u6d3b\u52a8\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u5927\u6982\u8ba1\u7b97\u4e0b\u4f1a\u6709\u591a\u5927\u7684\u8bbf\u95ee\u91cf\uff0c\u63d0\u524d\u591a\u542f\u52a8\u51e0\u4e2a Pod \u526f\u672c\uff0c\u6d3b\u52a8\u7ed3\u675f\u540e\u518d\u628a\u591a\u4f59\u7684 Pod \u6740\u6389\uff0c\u867d\u7136\u6709\u70b9\u9ebb\u70e6\uff0c\u4f46\u662f\u8fd8\u662f\u80fd\u591f\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\u7684\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u67d0\u5929\u591c\u91cc\u6536\u5230\u5927\u91cf\u62a5\u8b66\u8bf4\u670d\u52a1\u6302\u4e86\uff0c\u7136\u540e\u8d77\u6765\u6253\u5f00\u7535\u8111\u5728\u53e6\u5916\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u95ee\u9898\u53ef\u4ee5\u89e3\u51b3\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u90fd\u4eba\u5de5\u7684\u53bb\u89e3\u51b3\u9047\u5230\u7684\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f3c\u4e4e\u53c8\u56de\u5230\u4e86\u4ee5\u524d\u5200\u8015\u706b\u79cd\u7684\u65f6\u4ee3\u4e86\u662f\u5427\uff1f\u5982\u679c\u6709\u4e00\u79cd\u5de5\u5177\u80fd\u591f\u6765\u5e2e\u52a9\u6211\u4eec\u81ea\u52a8\u7ba1\u7406 Pod \u5c31\u597d\u4e86\uff0cPod \u6302\u4e86\u81ea\u52a8\u5e2e\u6211\u5728\u5408\u9002\u7684\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u8fd9\u6837\u662f\u4e0d\u662f\u9047\u5230\u4e0a\u9762\u7684\u95ee\u9898\u6211\u4eec\u90fd\u4e0d\u9700\u8981\u624b\u52a8\u53bb\u89e3\u51b3\u4e86\u3002 \u800c ReplicaSet \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c ReplicaSet \uff08 RS \uff09 \u7684\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ef4\u6301\u4e00\u7ec4 Pod \u526f\u672c\u7684\u8fd0\u884c\uff0c\u4fdd\u8bc1\u4e00\u5b9a\u6570\u91cf\u7684 Pod \u5728\u96c6\u7fa4\u4e2d\u6b63\u5e38\u8fd0\u884c\uff0cReplicaSet \u63a7\u5236\u5668\u4f1a\u6301\u7eed\u76d1\u542c\u5b83\u8bf4\u63a7\u5236\u7684\u8fd9\u4e9b Pod \u7684\u8fd0\u884c\u72b6\u6001\uff0c\u5728 Pod \u53d1\u9001\u6545\u969c\u6570\u91cf\u51cf\u5c11\u6216\u8005\u589e\u52a0\u65f6\u4f1a\u89e6\u53d1\u8c03\u8c10\u8fc7\u7a0b\uff0c\u59cb\u7ec8\u4fdd\u6301\u4e00\u5b9a\u6570\u91cf\u7684\u526f\u672c\u3002 \u548c Pod \u4e00\u6837\u6211\u4eec\u4ecd\u7136\u8fd8\u662f\u901a\u8fc7 YAML \u6587\u4ef6\u6765\u63cf\u8ff0\u6211\u4eec\u7684 ReplicaSet \u8d44\u6e90\u5bf9\u8c61\uff0c\u5982\u4e0b YAML \u6587\u4ef6\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 ReplicaSet \u5b9a\u4e49\uff1a # nginx-rs.yaml apiVersion : apps/v1 kind : ReplicaSet metadata : name : nginx-rs namespace : default spec : replicas : 3 # \u671f\u671b\u7684 Pod \u526f\u672c\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a1 selector : # Label Selector\uff0c\u5fc5\u987b\u5339\u914d Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e matchLabels : app : nginx template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u4e0a\u9762\u7684 YAML \u6587\u4ef6\u7ed3\u6784\u548c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684 Pod \u770b\u4e0a\u53bb\u6ca1\u592a\u5927\u4e24\u6837\uff0c\u6709\u5e38\u89c1\u7684 apiVersion\u3001kind\u3001metadata\uff0c\u5728 spec \u4e0b\u9762\u63cf\u8ff0 ReplicaSet \u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5176\u4e2d\u5305\u542b3\u4e2a\u91cd\u8981\u5185\u5bb9\uff1a replias \uff1a\u8868\u793a\u671f\u671b\u7684 Pod \u7684\u526f\u672c\u6570\u91cf selector \uff1aLabel Selector\uff0c\u7528\u6765\u5339\u914d\u8981\u63a7\u5236\u7684 Pod \u6807\u7b7e\uff0c\u9700\u8981\u548c Pod \u6a21\u677f\u4e2d\u7684\u6807\u7b7e\u4e00\u81f4 template \uff1aPod \u6a21\u677f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ee5\u524d\u6211\u4eec\u5b9a\u4e49\u7684 Pod \u5185\u5bb9\uff0c\u76f8\u5f53\u4e8e\u628a\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4ee5\u6a21\u677f\u7684\u5f62\u5f0f\u5d4c\u5165\u5230\u4e86 ReplicaSet \u4e2d\u6765\u3002 Pod \u6a21\u677f\" Pod \u6a21\u677f\u8fd9\u4e2a\u6982\u5ff5\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u540e\u9762\u6211\u4eec\u8bb2\u89e3\u5230\u7684\u5927\u591a\u6570\u63a7\u5236\u5668\uff0c\u90fd\u4f1a\u4f7f\u7528 Pod \u6a21\u677f\u6765\u7edf\u4e00\u5b9a\u4e49\u5b83\u6240\u8981\u7ba1\u7406\u7684 Pod\u3002\u66f4\u6709\u610f\u601d\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u4f1a\u770b\u5230\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u6a21\u677f\uff0c\u6bd4\u5982 Volume \u7684\u6a21\u677f\u7b49\u3002 \" \u4e0a\u9762\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u4e2a\u666e\u901a\u7684 ReplicaSet \u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0cReplicaSet \u63a7\u5236\u5668\u4f1a\u901a\u8fc7\u5b9a\u4e49\u7684 Label Selector \u6807\u7b7e\u53bb\u67e5\u627e\u96c6\u7fa4\u4e2d\u7684 Pod \u5bf9\u8c61\uff1a \u6211\u4eec\u76f4\u63a5\u6765\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f nginx-rs.yaml replicaset.apps/nginx-rs created \u279c ~ kubectl get rs nginx-rs NAME DESIRED CURRENT READY AGE nginx-rs 3 3 3 17m \u901a\u8fc7\u67e5\u770b RS \u53ef\u4ee5\u770b\u5230\u5f53\u524d\u8d44\u6e90\u5bf9\u8c61\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u5305\u62ec DESIRED \u3001 CURRENT \u3001 READY \u7684\u72b6\u6001\u503c\uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5229\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u4e0b Pod \u5217\u8868\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 52s nginx-rs-t46qc 1 /1 Running 0 52s nginx-rs-xfqrn 1 /1 Running 0 52s \u53ef\u4ee5\u770b\u5230\u73b0\u5728\u6709 3 \u4e2a Pod\uff0c\u8fd9 3 \u4e2a Pod \u5c31\u662f\u6211\u4eec\u5728 RS \u4e2d\u58f0\u660e\u7684 3 \u4e2a\u526f\u672c\uff0c\u6bd4\u5982\u6211\u4eec\u5220\u9664\u5176\u4e2d\u4e00\u4e2a Pod\uff1a \u279c ~ kubectl delete pod nginx-rs-xfqrn pod \"nginx-rs-xfqrn\" deleted \u7136\u540e\u518d\u67e5\u770b Pod \u5217\u8868\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 3m19s nginx-rs-t46qc 1 /1 Running 0 3m19s nginx-rs-xsb59 1 /1 Running 0 10s \u53ef\u4ee5\u770b\u5230\u53c8\u91cd\u65b0\u51fa\u73b0\u4e86\u4e00\u4e2a Pod\uff0c\u8fd9\u4e2a\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u6240\u8bf4\u7684 ReplicaSet \u63a7\u5236\u5668\u4e3a\u6211\u4eec\u505a\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u5728 YAML \u6587\u4ef6\u4e2d\u58f0\u660e\u4e86 3 \u4e2a\u526f\u672c\uff0c\u7136\u540e\u73b0\u5728\u6211\u4eec\u5220\u9664\u4e86\u4e00\u4e2a\u526f\u672c\uff0c\u5c31\u53d8\u6210\u4e86\u4e24\u4e2a\uff0c\u8fd9\u4e2a\u65f6\u5019 ReplicaSet \u63a7\u5236\u5668\u76d1\u63a7\u5230\u63a7\u5236\u7684 Pod \u6570\u91cf\u548c\u671f\u671b\u7684 3 \u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Pod \u6765\u4fdd\u6301 3 \u4e2a\u526f\u672c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0a\u9762\u6211\u4eec\u8bf4\u4e86\u5c31\u662f \u8c03\u8c10 \u7684\u8fc7\u7a0b\u3002\u540c\u6837\u53ef\u4ee5\u67e5\u770b RS \u7684\u63cf\u8ff0\u4fe1\u606f\u6765\u67e5\u770b\u5230\u76f8\u5173\u7684\u4e8b\u4ef6\u4fe1\u606f\uff1a \u279c ~ kubectl describe rs nginx-rs Name: nginx-rs Namespace: default Selector: app = nginx Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"ReplicaSet\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-rs\" , \"namespace\" : \"default\" } , \"spec\" : { \"replicas\" :3, \"se... Replicas: 3 current / 3 desired Pods Status: 3 Running / 0 Waiting / 0 Succeeded / 0 Failed Pod Template: Labels: app=nginx Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-xfqrn Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-nxklf Normal SuccessfulCreate 17m replicaset-controller Created pod: nginx-rs-t46qc Normal SuccessfulCreate 14m replicaset-controller Created pod: nginx-rs-xsb59 \u53ef\u4ee5\u53d1\u73b0\u6700\u5f00\u59cb\u901a\u8fc7 ReplicaSet \u63a7\u5236\u5668\u521b\u5efa\u4e86 3 \u4e2a Pod\uff0c\u540e\u9762\u6211\u4eec\u5220\u9664\u4e86 Pod \u540e\uff0c ReplicaSet \u63a7\u5236\u5668\u53c8\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Pod\uff0c\u548c\u4e0a\u9762\u6211\u4eec\u7684\u63cf\u8ff0\u662f\u4e00\u81f4\u7684\u3002\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u628a RS \u8d44\u6e90\u5bf9\u8c61\u7684 Pod \u526f\u672c\u66f4\u6539\u4e3a 2 spec . replicas = 2 \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u66f4\u65b0\u4e0b\u8d44\u6e90\u5bf9\u8c61\uff1a \u279c ~ kubectl apply -f rs.yaml replicaset.apps/nginx-rs configured \u279c ~ kubectl get rs nginx-rs NAME DESIRED CURRENT READY AGE nginx-rs 2 2 2 27m $ kubectl describe rs nginx-rs Name: nginx-rs Namespace: default Selector: app = nginx Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: { \"apiVersion\" : \"apps/v1\" , \"kind\" : \"ReplicaSet\" , \"metadata\" : { \"annotations\" : {} , \"name\" : \"nginx-rs\" , \"namespace\" : \"default\" } , \"spec\" : { \"replicas\" :2, \"se... Replicas: 2 current / 2 desired Pods Status: 2 Running / 1 Waiting / 0 Succeeded / 0 Failed Pod Template: Labels: app=nginx Containers: nginx: Image: nginx Port: 80/TCP Host Port: 0/TCP Environment: <none> Mounts: <none> Volumes: <none> Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-xfqrn Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-nxklf Normal SuccessfulCreate 27m replicaset-controller Created pod: nginx-rs-t46qc Normal SuccessfulCreate 24m replicaset-controller Created pod: nginx-rs-xsb59 Normal SuccessfulDelete 7s replicaset-controller Deleted pod: nginx-rs-xsb59 \u53ef\u4ee5\u770b\u5230 Replicaset \u63a7\u5236\u5668\u5728\u53d1\u73b0\u6211\u4eec\u7684\u8d44\u6e90\u58f0\u660e\u4e2d\u526f\u672c\u6570\u53d8\u66f4\u4e3a 2 \u540e\uff0c\u5c31\u4e3b\u52a8\u53bb\u5220\u9664\u4e86\u4e00\u4e2a Pod\uff0c\u8fd9\u6837\u526f\u672c\u6570\u5c31\u548c\u671f\u671b\u7684\u59cb\u7ec8\u4fdd\u6301\u4e00\u81f4\u4e86\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-rs-nxklf 1 /1 Running 0 30m nginx-rs-t46qc 1 /1 Running 0 30m \u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u7684\u6240\u5c5e\u63a7\u5236\u5668\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod nginx-rs-xsb59 Name: nginx-rs-xsb59 Namespace: default Priority: 0 PriorityClassName: <none> Node: ydzs-node1/10.151.30.22 Start Time: Fri, 15 Nov 2019 14 :18:10 +0800 Labels: app = nginx Annotations: <none> Status: Running IP: 10 .244.1.148 Controlled By: ReplicaSet/nginx-rs ....... \u53e6\u5916\u88ab ReplicaSet \u6301\u6709\u7684 Pod \u6709\u4e00\u4e2a metadata . ownerReferences \u6307\u9488\u6307\u5411\u5f53\u524d\u7684 ReplicaSet\uff0c\u8868\u793a\u5f53\u524d Pod \u7684\u6240\u6709\u8005\uff0c\u8fd9\u4e2a\u5f15\u7528\u4e3b\u8981\u4f1a\u88ab\u96c6\u7fa4\u4e2d\u7684\u5783\u573e\u6536\u96c6\u5668\u4f7f\u7528\u4ee5\u6e05\u7406\u5931\u53bb\u6240\u6709\u8005\u7684 Pod \u5bf9\u8c61\u3002\u8fd9\u4e2a ownerReferences \u548c\u6570\u636e\u5e93\u4e2d\u7684 \u5916\u952e \u662f\u4e0d\u662f\u975e\u5e38\u7c7b\u4f3c\u3002\u53ef\u4ee5\u901a\u8fc7\u5c06 Pod \u8d44\u6e90\u63cf\u8ff0\u4fe1\u606f\u5bfc\u51fa\u67e5\u770b\uff1a \u279c ~ kubectl get pod nginx-rs-xsb59 -o yaml apiVersion: v1 kind: Pod metadata: creationTimestamp: \"2021-11-03T06:18:10Z\" generateName: nginx-rs- labels: app: nginx name: nginx-rs-xsb59 namespace: default ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: ReplicaSet name: nginx-rs uid: 4a3121fa-b5ae-4def-b2d2-bf17bc06b7b7 resourceVersion: \"1781596\" selfLink: /api/v1/namespaces/default/pods/nginx-rs-xsb59 uid: 0a4cae9a-105b-4024-ae96-ee516bfb2d23 ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u4e2d\u6709\u4e00\u4e2a metadata . ownerReferences \u7684\u5b57\u6bb5\u6307\u5411\u4e86 ReplicaSet \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u8981\u5f7b\u5e95\u5220\u9664 Pod\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u5220\u9664 RS \u5bf9\u8c61\uff1a \u279c ~ kubectl delete rs nginx-rs # \u6216\u8005\u6267\u884c kubectl delete -f nginx-rs.yaml \u8fd9\u5c31\u662f ReplicaSet \u5bf9\u8c61\u7684\u57fa\u672c\u4f7f\u7528\u3002","title":"ReplicaSet"},{"location":"Controller/ReplicaSet/#replication-controller","text":"Replication Controller \u7b80\u79f0 RC\uff0c\u5b9e\u9645\u4e0a RC \u548c RS \u7684\u529f\u80fd\u51e0\u4e4e\u4e00\u81f4\uff0cRS \u7b97\u662f\u5bf9 RC \u7684\u6539\u8fdb\uff0c\u76ee\u524d\u552f\u4e00\u7684\u4e00\u4e2a\u533a\u522b\u5c31\u662f RC \u53ea\u652f\u6301\u57fa\u4e8e\u7b49\u5f0f\u7684 selector\uff08env=dev\u6216environment!=qa\uff09\uff0c\u4f46 RS \u8fd8\u652f\u6301\u57fa\u4e8e\u96c6\u5408\u7684 selector\uff08version in (v1.0, v2.0)\uff09\uff0c\u8fd9\u5bf9\u590d\u6742\u7684\u8fd0\u7ef4\u7ba1\u7406\u5c31\u975e\u5e38\u65b9\u4fbf\u4e86\u3002 \u6bd4\u5982\u4e0a\u9762\u8d44\u6e90\u5bf9\u8c61\u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528 RC \u7684\u8bdd\uff0c\u5bf9\u5e94\u7684 selector \u662f\u8fd9\u6837\u7684\uff1a selector : app : nginx RC \u53ea\u652f\u6301\u5355\u4e2a Label \u7684\u7b49\u5f0f\uff0c\u800c RS \u4e2d\u7684 Label Selector \u652f\u6301 matchLabels \u548c matchExpressions \u4e24\u79cd\u5f62\u5f0f\uff1a selector : matchLabels : app : nginx --- selector : matchExpressions : # \u8be5\u9009\u62e9\u5668\u8981\u6c42 Pod \u5305\u542b\u540d\u4e3a app \u7684\u6807\u7b7e - key : app operator : In values : # \u5e76\u4e14\u6807\u7b7e\u7684\u503c\u5fc5\u987b\u662f nginx - nginx \u603b\u7684\u6765\u8bf4 RS \u662f\u65b0\u4e00\u4ee3\u7684 RC\uff0c\u6240\u4ee5\u4ee5\u540e\u6211\u4eec\u4e0d\u4f7f\u7528 RC\uff0c\u76f4\u63a5\u4f7f\u7528 RS \u5373\u53ef\uff0c\u4ed6\u4eec\u7684\u529f\u80fd\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u6211\u4eec\u4e5f\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 RS\uff0c\u800c\u662f\u4f7f\u7528\u66f4\u4e0a\u5c42\u7684\u7c7b\u4f3c\u4e8e Deployment \u8fd9\u6837\u7684\u8d44\u6e90\u5bf9\u8c61\u3002","title":"Replication Controller\uff08\u53ef\u4ee5\u4e0d\u770b\uff09"},{"location":"Controller/StatefulSet/","text":"StatefulSet \u63a7\u5236\u5668 \u00b6 \u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86 Deployment \u548c ReplicaSet \u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u5f97\u4f7f\u7528\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0cDeployment \u5e76\u4e0d\u80fd\u7f16\u6392\u6240\u6709\u7c7b\u578b\u7684\u5e94\u7528\uff0c\u5bf9\u65e0\u72b6\u6001\u670d\u52a1\u7f16\u6392\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6709\u72b6\u6001\u670d\u52a1\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u6211\u4eec\u9700\u8981\u5148\u660e\u767d\u4e00\u4e2a\u6982\u5ff5\uff1a\u4ec0\u4e48\u662f\u6709\u72b6\u6001\u670d\u52a1\uff0c\u4ec0\u4e48\u662f\u65e0\u72b6\u6001\u670d\u52a1\u3002 \u65e0\u72b6\u6001\u670d\u52a1\uff08Stateless Service\uff09 \uff1a\u8be5\u670d\u52a1\u8fd0\u884c\u7684\u5b9e\u4f8b \u4e0d\u4f1a\u5728\u672c\u5730\u5b58\u50a8\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u591a\u4e2a\u5b9e\u4f8b\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u81f4\u7684 \uff0c\u6bd4\u5982\u524d\u9762\u6211\u4eec\u8bb2\u89e3\u7684 WordPress \u5b9e\u4f8b\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4f46\u662f\u6211\u4eec\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u5b9e\u4f8b\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u5427\uff1f\u56e0\u4e3a\u4ed6\u552f\u4e00\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u662f\u5b58\u50a8\u5728MySQL\u6570\u636e\u5e93\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bf4 WordPress \u8fd9\u4e2a\u5e94\u7528\u662f\u65e0\u72b6\u6001\u670d\u52a1\uff0c\u4f46\u662f MySQL \u6570\u636e\u5e93\u5c31\u4e0d\u662f\u4e86\uff0c\u56e0\u4e3a\u4ed6\u9700\u8981\u628a\u6570\u636e\u6301\u4e45\u5316\u5230\u672c\u5730\u3002 \u6709\u72b6\u6001\u670d\u52a1\uff08Stateful Service\uff09 \uff1a\u5c31\u548c\u4e0a\u9762\u7684\u6982\u5ff5\u662f\u5bf9\u7acb\u7684\u4e86\uff0c \u8be5\u670d\u52a1\u8fd0\u884c\u7684\u5b9e\u4f8b\u9700\u8981\u5728\u672c\u5730\u5b58\u50a8\u6301\u4e45\u5316\u6570\u636e \uff0c\u6bd4\u5982\u4e0a\u9762\u7684 MySQL \u6570\u636e\u5e93\uff0c\u4f60\u73b0\u5728\u8fd0\u884c\u5728\u8282\u70b9 A\uff0c\u90a3\u4e48\u4ed6\u7684\u6570\u636e\u5c31\u5b58\u50a8\u5728\u8282\u70b9 A \u4e0a\u9762\u7684\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u4f60\u628a\u8be5\u670d\u52a1\u8fc1\u79fb\u5230\u8282\u70b9 B \u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u4e4b\u524d\u7684\u6570\u636e\u4e86\uff0c\u56e0\u4e3a\u4ed6\u9700\u8981\u53bb\u5bf9\u5e94\u7684\u6570\u636e\u76ee\u5f55\u91cc\u9762\u6062\u590d\u6570\u636e\uff0c\u800c\u6b64\u65f6\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u3002 \u73b0\u5728\u5bf9 \u6709\u72b6\u6001 \u548c \u65e0\u72b6\u6001 \u6709\u4e00\u5b9a\u7684\u8ba4\u8bc6\u4e86\u5427\uff0c\u6bd4\u5982\u6211\u4eec\u5e38\u89c1\u7684 WEB \u5e94\u7528\uff0c\u662f\u901a\u8fc7 Session \u6765\u4fdd\u6301\u7528\u6237\u7684\u767b\u5f55\u72b6\u6001\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06 Session \u6301\u4e45\u5316\u5230\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u8be5\u5e94\u7528\u5c31\u662f\u4e00\u4e2a\u6709\u72b6\u6001\u7684\u670d\u52a1\u4e86\uff0c\u56e0\u4e3a\u6211\u73b0\u5728\u767b\u5f55\u8fdb\u6765\u4f60\u628a\u6211\u7684 Session \u6301\u4e45\u5316\u5230\u8282\u70b9 A \u4e0a\u4e86\uff0c\u4e0b\u6b21\u6211\u767b\u5f55\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u8282\u70b9 B \u4e0a\u53bb\u4e86\uff0c\u4f46\u662f\u8282\u70b9 B \u4e0a\u6839\u672c\u5c31\u6ca1\u6709\u6211\u5f53\u524d\u7684 Session \u6570\u636e\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u672a\u767b\u5f55\u72b6\u6001\u4e86\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u6211\u524d\u540e\u4e24\u6b21\u8bf7\u6c42\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\u4e86\u3002\u6240\u4ee5\u4e00\u822c\u4e3a\u4e86\u6a2a\u5411\u6269\u5c55\uff0c\u6211\u4eec\u90fd\u4f1a\u628a\u8fd9\u7c7b WEB \u5e94\u7528\u6539\u6210\u65e0\u72b6\u6001\u7684\u670d\u52a1\uff0c\u600e\u4e48\u6539\uff1f\u5c06 Session \u6570\u636e\u5b58\u5165\u4e00\u4e2a\u516c\u5171\u7684\u5730\u65b9\uff0c\u6bd4\u5982 Redis \u91cc\u9762\uff0c\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5ba2\u6237\u7aef\u8bf7\u6c42 API \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u4e0d\u4f7f\u7528 Session \u6765\u4fdd\u6301\u7528\u6237\u72b6\u6001\uff0c\u6539\u6210\u7528 Token \u4e5f\u662f\u53ef\u4ee5\u7684\u3002 \u65e0\u72b6\u6001\u670d\u52a1\u5229\u7528\u6211\u4eec\u524d\u9762\u7684 Deployment \u53ef\u4ee5\u5f88\u597d\u7684\u8fdb\u884c\u7f16\u6392\uff0c\u5bf9\u5e94\u6709\u72b6\u6001\u670d\u52a1\uff0c\u9700\u8981\u8003\u8651\u7684\u7ec6\u8282\u5c31\u8981\u591a\u5f88\u591a\u4e86\uff0c\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u6700\u56f0\u96be\u7684\u4efb\u52a1\u4e4b\u4e00\uff0c\u5c31\u662f\u8bbe\u8ba1\u6709\u72b6\u6001\u5206\u5e03\u5f0f\u7ec4\u4ef6\u7684\u90e8\u7f72\u4f53\u7cfb\u7ed3\u6784 \u3002\u7531\u4e8e\u65e0\u72b6\u6001\u7ec4\u4ef6\u6ca1\u6709\u9884\u5b9a\u4e49\u7684\u542f\u52a8\u987a\u5e8f\u3001\u96c6\u7fa4\u8981\u6c42\u3001\u70b9\u5bf9\u70b9 TCP \u8fde\u63a5\u3001\u552f\u4e00\u7684\u7f51\u7edc\u6807\u8bc6\u7b26\u3001\u6b63\u5e38\u7684\u542f\u52a8\u548c\u7ec8\u6b62\u8981\u6c42\u7b49\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8fdb\u884c\u5bb9\u5668\u5316\u3002\u8bf8\u5982\u6570\u636e\u5e93\uff0c\u5927\u6570\u636e\u5206\u6790\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f key/value \u5b58\u50a8\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u9700\u8981\u6709\u590d\u6742\u7684\u5206\u5e03\u5f0f\u4f53\u7cfb\u7ed3\u6784\uff0c\u90fd\u53ef\u80fd\u4f1a\u7528\u5230\u4e0a\u8ff0\u529f\u80fd\u3002\u4e3a\u6b64\uff0cKubernetes \u5f15\u5165\u4e86 StatefulSet \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u6765\u652f\u6301\u8fd9\u79cd\u590d\u6742\u7684\u9700\u6c42\u3002 StatefulSet \u7c7b\u4f3c\u4e8e ReplicaSet \uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5904\u7406 Pod \u7684\u542f\u52a8\u987a\u5e8f\uff0c\u4e3a\u4fdd\u7559\u6bcf\u4e2a Pod \u7684\u72b6\u6001\u8bbe\u7f6e\u552f\u4e00\u6807\u8bc6\uff0c \u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\u7279\u6027 \uff1a \u7a33\u5b9a\u7684\u3001\u552f\u4e00\u7684\u7f51\u7edc\u6807\u8bc6\u7b26 \u7a33\u5b9a\u7684\u3001\u6301\u4e45\u5316\u7684\u5b58\u50a8 \u6709\u5e8f\u7684\u3001\u4f18\u96c5\u7684\u90e8\u7f72\u548c\u7f29\u653e \u6709\u5e8f\u7684\u3001\u4f18\u96c5\u7684\u5220\u9664\u548c\u7ec8\u6b62 \u6709\u5e8f\u7684\u3001\u81ea\u52a8\u6eda\u52a8\u66f4\u65b0 Headless Service \u00b6 \u5728\u6211\u4eec\u5b66\u4e60 StatefulSet \u5bf9\u8c61\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u4e86\u89e3\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1aHeadless Service\u3002Service \u5176\u5b9e\u5728\u4e4b\u524d\u6211\u4eec\u548c\u5927\u5bb6\u63d0\u5230\u8fc7\uff0cService \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 Labels \u4e3a\u5e94\u7528\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP \u548c DNS \u540d\uff0c\u5728\u96c6\u7fa4\u5185\u90e8\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216\u8005\u901a\u8fc7 FQDN \u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u670d\u52a1\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a Deployment \u6709 3 \u4e2a Pod\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a Service\uff0c \u6709\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6765\u8bbf\u95ee\u8fd9\u4e2a Service \uff1a cluster IP \u7684\u65b9\u5f0f \uff0c\u6bd4\u5982\uff1a\u5f53\u6211\u8bbf\u95ee 10.109.169.155 \u8fd9\u4e2a Service \u7684 IP \u5730\u5740\u65f6\uff0c10.109.169.155 \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a VIP\uff0c\u5b83\u4f1a\u628a\u8bf7\u6c42\u8f6c\u53d1\u5230\u8be5 Service \u6240\u4ee3\u7406\u7684 Endpoints \u5217\u8868\u4e2d\u7684\u67d0\u4e00\u4e2a Pod \u4e0a\u3002\u5177\u4f53\u539f\u7406\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684 Service \u7ae0\u8282\u4e2d\u548c\u5927\u5bb6\u6df1\u5165\u4e86\u89e3\u3002 Service \u7684 DNS \u65b9\u5f0f \uff0c\u6bd4\u5982\u6211\u4eec\u8bbf\u95ee\u201cmysvc.mynamespace.svc.cluster.local\u201d\u8fd9\u6761 DNS \u8bb0\u5f55\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230 mynamespace \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u540d\u4e3a mysvc \u7684 Service \u6240\u4ee3\u7406\u7684\u67d0\u4e00\u4e2a Pod\u3002 \u5bf9\u4e8e DNS \u8fd9\u79cd\u65b9\u5f0f\u5b9e\u9645\u4e0a\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5 \uff1a \u7b2c\u4e00\u79cd\u5c31\u662f\u666e\u901a\u7684 Service\uff0c\u6211\u4eec\u8bbf\u95ee\u201cmysvc.mynamespace.svc.cluster.local\u201d\u7684\u65f6\u5019\u662f\u901a\u8fc7\u96c6\u7fa4\u4e2d\u7684 DNS \u670d\u52a1\u89e3\u6790\u5230\u7684 mysvc \u8fd9\u4e2a Service \u7684 cluster IP\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u662fHeadless Service\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8bbf\u95ee \u201cmysvc.mynamespace.svc.cluster.local\u201d\u7684\u65f6\u5019\u662f\u76f4\u63a5\u89e3\u6790\u5230 mysvc \u4ee3\u7406\u7684\u67d0\u4e00\u4e2a\u5177\u4f53 Pod \u7684 IP \u5730\u5740\uff0c\u4e2d\u95f4\u5c11\u4e86 cluster IP \u7684\u8f6c\u53d1\uff0c\u8fd9\u5c31\u662f\u4e8c\u8005\u7684\u6700\u5927\u533a\u522b\uff0cHeadless Service \u4e0d\u9700\u8981\u5206\u914d\u4e00\u4e2a VIP\uff0c\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u4ee5 DNS \u7684\u8bb0\u5f55\u65b9\u5f0f\u89e3\u6790\u5230\u540e\u9762\u7684 Pod \u7684 IP \u5730\u5740\u3002 \u6bd4\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u7684 Headless Service \uff1a(headless-svc.yaml) apiVersion : v1 kind : Service metadata : name : nginx namespace : default labels : app : nginx spec : ports : - name : http port : 80 clusterIP : None selector : app : nginx \u5b9e\u9645\u4e0a Headless Service \u5728\u5b9a\u4e49\u4e0a\u548c\u666e\u901a\u7684 Service \u51e0\u4e4e\u4e00\u81f4, \u53ea\u662f\u4ed6\u7684 clusterIP = None \uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a Service \u88ab\u521b\u5efa\u540e\u5e76\u4e0d\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a cluster IP\uff0c\u800c\u662f\u4f1a\u4ee5 DNS \u8bb0\u5f55\u7684\u65b9\u5f0f\u66b4\u9732\u51fa\u5b83\u6240\u4ee3\u7406\u7684 Pod\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff0c\u5bf9\u4e8e Headless Service \u6240\u4ee3\u7406\u7684\u6240\u6709 Pod \u7684 IP \u5730\u5740\u90fd\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 DNS \u8bb0\u5f55\uff1a DNS Record <pod-name>.<svc-name>.<namespace>.svc.cluster.local \u8fd9\u4e2a DNS \u8bb0\u5f55\u6b63\u662f Kubernetes \u96c6\u7fa4\u4e3a Pod \u5206\u914d\u7684\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\uff0c\u53ea\u8981\u6211\u4eec\u77e5\u9053 Pod \u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684 Service \u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u7ec4\u88c5\u51fa\u8fd9\u6837\u4e00\u6761 DNS \u8bb0\u5f55\u8bbf\u95ee\u5230 Pod \u7684 IP \u5730\u5740\uff0c\u8fd9\u4e2a\u80fd\u529b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u770b\u4e0b StatefulSet \u8d44\u6e90\u5bf9\u8c61\u662f\u5982\u4f55\u7ed3\u5408 Headless Service \u63d0\u4f9b\u670d\u52a1\u7684\u3002 StatefulSet \u00b6 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u51c6\u5907\u4e24\u4e2a 1G \u7684\u5b58\u50a8\u5377\uff08PV\uff09\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u4e5f\u4f1a\u548c\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3 PV \u548c PVC \u7684\u4f7f\u7528\u65b9\u6cd5\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u4e0d\u6df1\u7a76\uff1a\uff08pv.yaml\uff09 apiVersion : v1 kind : PersistentVolume metadata : name : pv001 spec : capacity : storage : 1Gi accessModes : - ReadWriteOnce hostPath : path : /tmp/pv001 --- apiVersion : v1 kind : PersistentVolume metadata : name : pv002 spec : capacity : storage : 1Gi accessModes : - ReadWriteOnce hostPath : path : /tmp/pv002 \u7136\u540e\u76f4\u63a5\u521b\u5efa PV \u5373\u53ef\uff1a \u279c ~ kubectl apply -f pv.yaml persistentvolume \"pv001\" created persistentvolume \"pv002\" created \u279c ~ kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pv001 1Gi RWO Recycle Available 12s pv002 1Gi RWO Recycle Available 11s \u53ef\u4ee5\u770b\u5230\u6210\u529f\u521b\u5efa\u4e86\u4e24\u4e2a PV \u5bf9\u8c61\uff0c\u72b6\u6001\u662f\uff1a Available \u3002 \u7279\u6027 \u00b6 \u7136\u540e\u63a5\u4e0b\u6765\u58f0\u660e\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 StatefulSet \u8d44\u6e90\u6e05\u5355\uff1a\uff08nginx-sts.yaml\uff09 apiVersion : apps/v1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx\" replicas : 2 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - name : web containerPort : 80 volumeMounts : - name : www mountPath : /usr/share/nginx/html volumeClaimTemplates : - metadata : name : www spec : accessModes : [ \"ReadWriteOnce\" ] resources : requests : storage : 1Gi \u4ece\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u53ef\u4ee5\u770b\u51fa\u548c\u6211\u4eec\u524d\u9762\u7684 Deployment \u57fa\u672c\u4e0a\u4e5f\u662f\u4e00\u81f4\u7684\uff0c\u4e5f\u662f\u901a\u8fc7\u58f0\u660e\u7684 Pod \u6a21\u677f\u6765\u521b\u5efa Pod \u7684\uff0c\u53e6\u5916\u4e0a\u9762\u8d44\u6e90\u6e05\u5355\u4e2d\u548c volumeMounts \u8fdb\u884c\u5173\u8054\u7684\u4e0d\u662f volumes \u800c\u662f\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\uff1a volumeClaimTemplates \uff0c\u8be5\u5c5e\u6027\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a PVC \u5bf9\u8c61\uff0c\u5176\u5b9e\u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a PVC \u7684\u6a21\u677f\uff0c\u548c Pod \u6a21\u677f\u7c7b\u4f3c\uff0cPVC \u88ab\u521b\u5efa\u540e\u4f1a\u81ea\u52a8\u53bb\u5173\u8054\u5f53\u524d\u7cfb\u7edf\u4e2d\u548c\u4ed6\u5408\u9002\u7684 PV \u8fdb\u884c\u7ed1\u5b9a\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u591a\u4e86\u4e00\u4e2a serviceName : \"nginx\" \u7684\u5b57\u6bb5\uff0c serviceName \u5c31\u662f\u7ba1\u7406\u5f53\u524d StatefulSet \u7684\u670d\u52a1\u540d\u79f0\uff0c\u8be5\u670d\u52a1\u5fc5\u987b\u5728 StatefulSet\u4e4b\u524d\u5b58\u5728 \uff0c\u5e76\u4e14\u8d1f\u8d23\u8be5\u96c6\u5408\u7684\u7f51\u7edc\u6807\u8bc6\uff0cPod \u4f1a\u9075\u5faa\u4ee5\u4e0b\u683c\u5f0f\u83b7\u53d6 DNS/\u4e3b\u673a\u540d\uff1a pod-specific-string.serviceName.default.svc.cluster.local \uff0c\u5176\u4e2d pod-specific-string \u7531 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u3002 StatefulSet \u7684\u62d3\u6251\u7ed3\u6784\u548c\u5176\u4ed6\u7528\u4e8e\u90e8\u7f72\u7684\u8d44\u6e90\u5bf9\u8c61\u5176\u5b9e\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u6bd4\u8f83\u5927\u7684\u533a\u522b\u5728\u4e8e StatefulSet \u5f15\u5165\u4e86 PV \u548c PVC \u5bf9\u8c61\u6765\u6301\u4e45\u5b58\u50a8\u670d\u52a1\u4ea7\u751f\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u6240\u6709\u7684\u670d\u52a1\u867d\u7136\u53ef\u4ee5\u88ab\u6740\u6389\u6216\u8005\u91cd\u542f\uff0c\u4f46\u662f\u5176\u4e2d\u7684\u6570\u636e\u7531\u4e8e PV \u7684\u539f\u56e0\u4e0d\u4f1a\u4e22\u5931\u3002 \u6ce8\u610f \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u7528 volumeClaimTemplates \u58f0\u660e\u7684\u6a21\u677f\u662f\u6302\u8f7d\u70b9\u7684\u65b9\u5f0f\uff0c\u5e76\u4e0d\u662f volume\uff0c\u6240\u6709\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u628a PV \u7684\u5b58\u50a8\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u6240\u4ee5\u4f1a\u8986\u76d6\u6389\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u5728\u5bb9\u5668\u542f\u52a8\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5728 PV \u7684\u5b58\u50a8\u91cc\u9762\u65b0\u5efa index.html \u6587\u4ef6\u6765\u4fdd\u8bc1\u5bb9\u5668\u7684\u6b63\u5e38\u8bbf\u95ee\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u53bb\u521b\u5efa\uff0c\u8fd9\u6837\u66f4\u52a0\u65b9\u4fbf\uff1a $ for i in 0 1 ; do kubectl exec web- $i -- sh -c 'echo hello $(hostname) > /usr/share/nginx/html/index.html' ; done \u73b0\u5728\u6211\u4eec\u4f18\u5148\u521b\u5efa\u4e0a\u9762\u5b9a\u4e49\u7684 Headless Service \uff1a \u279c ~ kubectl apply -f headless-svc.yaml service/nginx created \u279c ~ kubectl get service nginx NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP None <none> 80 /TCP 9s Headless Service \u521b\u5efa\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u6765\u521b\u5efa\u5bf9\u5e94\u7684 StatefulSet \u5bf9\u8c61\u4e86\uff1a \u279c ~ kubectl apply -f nginx-sts.yaml statefulset.apps/web created \u279c ~ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE www-web-0 Bound pv001 1Gi RWO 10m www-web-1 Bound pv002 1Gi RWO 6m26s \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u901a\u8fc7 Volume \u6a21\u677f\u81ea\u52a8\u751f\u6210\u4e86\u4e24\u4e2a PVC \u5bf9\u8c61\uff0c\u4e5f\u81ea\u52a8\u548c PV \u8fdb\u884c\u4e86\u7ed1\u5b9a\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u901a\u8fc7\u4e00\u4e2a --watch \u6216 -w \u53c2\u6570\u6765\u67e5\u770b Pod \u7684\u521b\u5efa\u8fc7\u7a0b\uff1a \u279c ~ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE web-0 0 /1 ContainerCreating 0 1s web-0 1 /1 Running 0 2s web-1 0 /1 Pending 0 0s web-1 0 /1 Pending 0 0s web-1 0 /1 ContainerCreating 0 0s web-1 1 /1 Running 0 6s \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u6574\u4e2a\u8fc7\u7a0b\u51fa\u73b0\u4e86\u4e24\u4e2a Pod\uff1a web-0 \u548c web-1 \uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a Pod \u662f\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u521b\u5efa\u7684\uff0c web-0 \u542f\u52a8\u8d77\u6765\u540e web-1 \u624d\u5f00\u59cb\u521b\u5efa\u3002\u5982\u540c\u4e0a\u9762 StatefulSet \u6982\u5ff5\u4e2d\u6240\u63d0\u5230\u7684\uff0cStatefulSet \u4e2d\u7684 Pod \u62e5\u6709\u4e00\u4e2a\u5177\u6709\u7a33\u5b9a\u7684\u3001\u72ec\u4e00\u65e0\u4e8c\u7684\u8eab\u4efd\u6807\u5fd7\u3002\u8fd9\u4e2a\u6807\u5fd7\u57fa\u4e8e StatefulSet \u63a7\u5236\u5668\u5206\u914d\u7ed9\u6bcf\u4e2a Pod \u7684\u552f\u4e00\u987a\u5e8f\u7d22\u5f15\u3002Pod \u7684\u540d\u79f0\u7684\u5f62\u5f0f\u4e3a < statefulset name > - < ordinal index > \u3002\u6211\u4eec\u8fd9\u91cc\u7684\u5bf9\u8c61\u62e5\u6709\u4e24\u4e2a\u526f\u672c\uff0c\u6240\u4ee5\u5b83\u521b\u5efa\u4e86\u4e24\u4e2a Pod \u540d\u79f0\u5206\u522b\u4e3a\uff1aweb-0 \u548c web-1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl exec \u547d\u4ee4\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u67e5\u770b\u5b83\u4eec\u7684 hostname\uff1a \u279c ~ kubectl exec web-0 -- hostname web-0 \u279c ~ kubectl exec web-1 -- hostname web-1 \u987a\u5e8f StatefulSet \u4e2d Pod \u526f\u672c\u7684\u521b\u5efa\u4f1a\u6309\u7167\u5e8f\u5217\u53f7\u5347\u5e8f\u5904\u7406\uff0c\u526f\u672c\u7684\u66f4\u65b0\u548c\u5220\u9664\u4f1a\u6309\u7167\u5e8f\u5217\u53f7\u964d\u5e8f\u5904\u7406\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e24\u4e2a Pod \u7684 hostname \u4e0e Pod \u540d\u5b57\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u88ab\u5206\u914d\u4e86\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\u6211\u4eec\u968f\u610f\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod web-0 Name: web-0 Namespace: default Priority: 0 PriorityClassName: <none> Node: ydzs-node3/10.151.30.57 Start Time: Sun, 17 Nov 2019 12 :32:50 +0800 Labels: app = nginx controller-revision-hash = web-6c5c7fd59b statefulset.kubernetes.io/pod-name = web-0 Annotations: podpreset.admission.kubernetes.io/podpreset-time-preset: 2062768 Status: Running IP: 10 .244.3.98 Controlled By: StatefulSet/web ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Controlled By : StatefulSet / web \uff0c\u8bc1\u660e\u6211\u4eec\u7684 Pod \u662f\u76f4\u63a5\u53d7\u5230 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u7684\u3002 \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a busybox\uff08\u8be5\u955c\u50cf\u4e2d\u6709\u4e00\u7cfb\u5217\u7684\u5de5\u5177\uff09\u7684\u5bb9\u5668\uff0c\u5728\u5bb9\u5668\u4e2d\u7528 DNS \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u4e00\u4e0b\u8fd9\u4e2a Headless Service \uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u5355\u7eaf\u7684\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u5199\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u6765\u58f0\u660e\uff0c\u7528 kubectl run \u547d\u4ee4\u542f\u52a8\u4e00\u4e2a\u6d4b\u8bd5\u7684\u5bb9\u5668\u5373\u53ef\uff1a \u279c ~ kubectl run -it --image busybox:1.28.3 test --restart = Never --rm /bin/sh If you don ' t see a command prompt, try pressing enter. / # busybox \u955c\u50cf busybox \u6700\u65b0\u7248\u672c\u7684\u955c\u50cf\u6709 BUG\uff0c\u4f1a\u51fa\u73b0 nslookup \u63d0\u793a\u65e0\u6cd5\u89e3\u6790\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u8001\u4e00\u70b9\u7684\u955c\u50cf\u7248\u672c 1.28.3 \u5373\u53ef\u3002 \u5982\u679c\u5bf9 kubectl run \u547d\u4ee4\u7684\u4f7f\u7528\u53c2\u6570\u4e0d\u6e05\u695a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl run --help \u547d\u4ee4\u67e5\u770b\u53ef\u4f7f\u7528\u7684\u53c2\u6570\u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 kubectl run \u547d\u4ee4\u542f\u52a8\u4e86\u4e00\u4e2a\u4ee5 busybox \u4e3a\u955c\u50cf\u7684 Pod\uff0c --rm \u53c2\u6570\u610f\u5473\u7740\u6211\u4eec\u9000\u51fa Pod \u540e\u5c31\u4f1a\u88ab\u5220\u9664\uff0c\u548c\u4e4b\u524d\u7684 docker run \u547d\u4ee4\u7528\u6cd5\u57fa\u672c\u4e00\u81f4\uff0c\u73b0\u5728\u6211\u4eec\u5728\u8fd9\u4e2a Pod \u5bb9\u5668\u91cc\u9762\u53ef\u4ee5\u4f7f\u7528 nslookup \u547d\u4ee4\u6765\u5c1d\u8bd5\u89e3\u6790\u4e0b\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 Headless Service \uff1a / # nslookup nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx Address 1 : 10 .244.1.175 web-1.nginx.default.svc.cluster.local Address 2 : 10 .244.4.83 web-0.nginx.default.svc.cluster.local / # ping nginx PING nginx ( 10 .244.1.175 ) : 56 data bytes 64 bytes from 10 .244.1.175: seq = 0 ttl = 62 time = 1 .076 ms 64 bytes from 10 .244.1.175: seq = 1 ttl = 62 time = 1 .029 ms 64 bytes from 10 .244.1.175: seq = 2 ttl = 62 time = 1 .075 ms \u6211\u4eec\u76f4\u63a5\u89e3\u6790 Headless Service \u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u770b\u5230\u5f97\u5230\u7684\u662f\u4e24\u4e2a Pod \u7684\u89e3\u6790\u8bb0\u5f55\uff0c\u4f46\u5b9e\u9645\u4e0a\u5982\u679c\u6211\u4eec\u901a\u8fc7 nginx \u8fd9\u4e2a DNS \u53bb\u8bbf\u95ee\u6211\u4eec\u7684\u670d\u52a1\u7684\u8bdd\uff0c\u5e76\u4e0d\u4f1a\u968f\u673a\u6216\u8005\u8f6e\u8be2\u80cc\u540e\u7684\u4e24\u4e2a Pod\uff0c\u800c\u662f\u8bbf\u95ee\u5230\u4e00\u4e2a\u56fa\u5b9a\u7684 Pod\uff0c\u6240\u4ee5\u4e0d\u80fd\u4ee3\u66ff\u666e\u901a\u7684 Service\u3002\u5982\u679c\u5206\u522b\u89e3\u6790\u5bf9\u5e94\u7684 Pod \u5462\uff1f $ / # nslookup web-0.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-0.nginx Address 1 : 10 .244.4.83 web-0.nginx.default.svc.cluster.local $ / # nslookup web-1.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-1.nginx Address 1 : 10 .244.1.175 web-1.nginx.default.svc.cluster.local \u53ef\u4ee5\u770b\u5230\u89e3\u6790 web-0.nginx \u7684\u65f6\u5019\u89e3\u6790\u5230\u4e86 web-0 \u8fd9\u4e2a Pod \u7684 IP\uff0c web-1.nginx \u89e3\u6790\u5230\u4e86 web-1 \u8fd9\u4e2a Pod \u7684 IP\uff0c\u800c\u4e14\u8fd9\u4e2a DNS \u5730\u5740\u8fd8\u662f\u7a33\u5b9a\u7684\uff0c\u56e0\u4e3a Pod \u540d\u79f0\u5c31\u662f\u56fa\u5b9a\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u53bb\u5220\u6389 web-0 \u548c web-1 \u8fd9\u4e24\u4e2a Pod\uff1a \u279c ~ kubectl delete pod -l app = nginx pod \"web-0\" deleted pod \"web-1\" deleted \u5220\u9664\u5b8c\u6210\u540e\u624d\u770b Pod \u72b6\u6001\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 42s web-1 1 /1 Running 0 39s \u53ef\u4ee5\u770b\u5230 StatefulSet \u63a7\u5236\u5668\u4ecd\u7136\u4f1a\u6309\u987a\u5e8f\u521b\u5efa\u51fa\u4e24\u4e2a Pod \u526f\u672c\u51fa\u6765\uff0c\u800c\u4e14 Pod \u7684\u552f\u4e00\u6807\u8bc6\u4f9d\u7136\u6ca1\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a Pod \u7684\u7f51\u7edc\u6807\u8bc6\u8fd8\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u901a\u8fc7 web-0.nginx \u53bb\u8bbf\u95ee\u5230 web-0 \u8fd9\u4e2a Pod\uff0c\u867d\u7136 Pod \u5df2\u7ecf\u91cd\u5efa\u4e86\uff0c\u5bf9\u5e94 Pod IP \u5df2\u7ecf\u53d8\u5316\u4e86\uff0c\u4f46\u662f\u8bbf\u95ee\u8fd9\u4e2a Pod \u7684\u5730\u5740\u4f9d\u7136\u6ca1\u53d8\uff0c\u5e76\u4e14\u4ed6\u4eec\u4f9d\u7136\u8fd8\u662f\u5173\u8054\u7684\u4e4b\u524d\u7684 PVC\uff0c\u6570\u636e\u5e76\u4e0d\u4f1a\u4e22\u5931\uff1a / # nslookup web-0.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-0.nginx Address 1 : 10 .244.3.98 web-0.nginx.default.svc.cluster.local / # nslookup web-1.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-1.nginx Address 1 : 10 .244.1.176 web-1.nginx.default.svc.cluster.local \u901a\u8fc7 Headless Service \uff0cStatefulSet \u5c31\u4fdd\u8bc1\u4e86 Pod \u7f51\u7edc\u6807\u8bc6\u7684\u552f\u4e00\u7a33\u5b9a\u6027\uff0c\u7531\u4e8e Pod IP \u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bbf\u95ee \u6709\u72b6\u6001\u5e94\u7528\u5b9e\u4f8b \u7684\u65f6\u5019\uff0c\u5c31\u5fc5\u987b\u4f7f\u7528 DNS \u8bb0\u5f55\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u4e86\uff0c\u6240\u4ee5\u5f88\u591a\u540c\u5b66\u5076\u5c14\u6709\u56fa\u5b9a\u7684 Pod IP \u7684\u9700\u6c42\uff0c\u6216\u8bb8\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u4ee3\u66ff\u3002 \u6700\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5220\u9664 StatefulSet \u5bf9\u8c61\u6765\u5220\u9664\u6240\u6709\u7684 Pod\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u4e5f\u4f1a\u53d1\u73b0\u662f \u6309\u7167\u5012\u5e8f\u7684\u65b9\u5f0f\u8fdb\u884c\u5220\u9664\u7684 \uff1a \u279c ~ kubectl delete statefulsets web statefulset.apps \"web\" deleted \u279c ~ kubectl get pods --watch NAME READY STATUS RESTARTS AGE web-1 1 /1 Terminating 0 3h/31m web-0 1 /1 Terminating 0 3h/31m \u7ba1\u7406\u7b56\u7565 \u00b6 \u5bf9\u4e8e\u67d0\u4e9b\u5206\u5e03\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0cStatefulSet \u7684\u987a\u5e8f\u6027\u4fdd\u8bc1\u662f\u4e0d\u5fc5\u8981\u7684\u6216\u8005\u4e0d\u5e94\u8be5\u7684\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u4ec5\u4ec5\u8981\u6c42\u552f\u4e00\u6027\u548c\u8eab\u4efd\u6807\u5fd7\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u58f0\u660e StatefulSet \u7684\u65f6\u5019\u91cd\u65b0\u8bbe\u7f6e \u901a\u8fc7 spec . podManagementPolicy \u7684\u7b56\u7565\u5373\u53ef\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u7b56\u7565\u662f \u901a\u8fc7 OrderedReady \uff0c\u8868\u793a\u8ba9 StatefulSet \u63a7\u5236\u5668\u9075\u5faa\u4e0a\u6587\u6f14\u793a\u7684\u987a\u5e8f\u6027\u4fdd\u8bc1\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \u901a\u8fc7 Parallel \u7ba1\u7406\u6a21\u5f0f\uff0c\u8868\u793a\u8ba9 StatefulSet \u63a7\u5236\u5668\u5e76\u884c\u7684\u7ec8\u6b62\u6240\u6709 Pod\uff0c\u5728\u542f\u52a8\u6216\u7ec8\u6b62\u53e6\u4e00\u4e2a Pod \u524d\uff0c\u4e0d\u5fc5\u7b49\u5f85\u8fd9\u4e9b Pod \u53d8\u6210 Running \u548c Ready \u6216\u8005\u5b8c\u5168\u7ec8\u6b62\u72b6\u6001\u3002 \u66f4\u65b0\u7b56\u7565 \u00b6 \u524d\u9762\u8bfe\u7a0b\u4e2d\u6211\u4eec\u5b66\u4e60\u4e86 Deployment \u7684\u5347\u7ea7\u7b56\u7565\uff0c\u5728 StatefulSet \u4e2d\u540c\u6837\u4e5f\u652f\u6301\u4e24\u79cd\u5347\u7ea7\u7b56\u7565\uff1a \u901a\u8fc7 onDelete \u548c \u901a\u8fc7 RollingUpdate \uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e \u901a\u8fc7 .spec.updateStrategy.type \u8fdb\u884c\u6307\u5b9a\u3002 OnDelete : \u8be5\u7b56\u7565\u8868\u793a\u5f53\u66f4\u65b0\u4e86 StatefulSet \u7684\u6a21\u677f\u540e\uff0c\u53ea\u6709\u624b\u52a8\u5220\u9664\u65e7\u7684 Pod \u624d\u4f1a\u521b\u5efa\u65b0\u7684 Pod\u3002 RollingUpdate \uff1a\u8be5\u7b56\u7565\u8868\u793a\u5f53\u66f4\u65b0 StatefulSet \u6a21\u677f\u540e\u4f1a\u81ea\u52a8\u5220\u9664\u65e7\u7684 Pod \u5e76\u521b\u5efa\u65b0\u7684 Pod\uff0c\u5982\u679c\u66f4\u65b0\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u8fd9\u6b21\u201c\u6eda\u52a8\u66f4\u65b0\u201d\u5c31\u4f1a\u505c\u6b62\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f StatefulSet \u7684 Pod\u5728\u90e8\u7f72\u65f6\u662f\u987a\u5e8f\u4ece 0~n \u7684\uff0c\u800c\u5728\u6eda\u52a8\u66f4\u65b0\u65f6\uff0c\u8fd9\u4e9b Pod \u5219\u662f\u6309\u9006\u5e8f\u7684\u65b9\u5f0f\u5373 n~0 \u4e00\u6b21\u5220\u9664\u5e76\u521b\u5efa\u3002 \u53e6\u5916 SatefulSet \u7684\u6eda\u52a8\u5347\u7ea7\u8fd8\u652f\u6301 Partitions \u7684\u7279\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7 .spec.updateStrategy.rollingUpdate.partition \u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u8bbe\u7f6e partition \u540e\uff0cSatefulSet \u7684 Pod \u4e2d\u5e8f\u53f7\u5927\u4e8e\u6216\u7b49\u4e8e partition \u7684 Pod \u4f1a\u5728 StatefulSet \u7684\u6a21\u677f\u66f4\u65b0\u540e\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7\uff0c\u800c\u5176\u4f59\u7684 Pod \u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u4e2a\u529f\u80fd\u662f\u4e0d\u662f\u53ef\u4ee5\u5b9e\u73b0\u7070\u5ea6\u53d1\u5e03\uff1f\u5927\u5bb6\u53ef\u4ee5\u53bb\u624b\u52a8\u9a8c\u8bc1\u4e0b\u3002 \u5728\u5b9e\u9645\u7684\u9879\u76ee\u4e2d\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u662f\u5f88\u5c11\u4f1a\u53bb\u76f4\u63a5\u901a\u8fc7 StatefulSet \u6765\u90e8\u7f72\u6211\u4eec\u7684\u6709\u72b6\u6001\u670d\u52a1\u7684\uff0c\u9664\u975e\u4f60\u81ea\u5df1\u80fd\u591f\u5b8c\u5168 hold \u4f4f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u9ad8\u7ea7\u7684 Operator \u6765\u90e8\u7f72\uff0c\u6bd4\u5982 etcd-operator\u3001prometheus-operator \u7b49\u7b49\uff0c\u8fd9\u4e9b\u5e94\u7528\u90fd\u80fd\u591f\u5f88\u597d\u7684\u6765\u7ba1\u7406\u6709\u72b6\u6001\u7684\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u4f7f\u7528\u4e00\u4e2a StatefulSet \u6765\u90e8\u7f72\u4e00\u4e2a Pod \u5c31\u884c\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6709\u72b6\u6001\u7684\u5e94\u7528\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6570\u636e\u6062\u590d\u3001\u6545\u969c\u8f6c\u79fb\u7b49\u7b49\u3002","title":"StatefulSet"},{"location":"Controller/StatefulSet/#statefulset","text":"\u524d\u9762\u6211\u4eec\u5b66\u4e60\u4e86 Deployment \u548c ReplicaSet \u4e24\u79cd\u8d44\u6e90\u5bf9\u8c61\u5f97\u4f7f\u7528\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0cDeployment \u5e76\u4e0d\u80fd\u7f16\u6392\u6240\u6709\u7c7b\u578b\u7684\u5e94\u7528\uff0c\u5bf9\u65e0\u72b6\u6001\u670d\u52a1\u7f16\u6392\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6709\u72b6\u6001\u670d\u52a1\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u6211\u4eec\u9700\u8981\u5148\u660e\u767d\u4e00\u4e2a\u6982\u5ff5\uff1a\u4ec0\u4e48\u662f\u6709\u72b6\u6001\u670d\u52a1\uff0c\u4ec0\u4e48\u662f\u65e0\u72b6\u6001\u670d\u52a1\u3002 \u65e0\u72b6\u6001\u670d\u52a1\uff08Stateless Service\uff09 \uff1a\u8be5\u670d\u52a1\u8fd0\u884c\u7684\u5b9e\u4f8b \u4e0d\u4f1a\u5728\u672c\u5730\u5b58\u50a8\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u591a\u4e2a\u5b9e\u4f8b\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u81f4\u7684 \uff0c\u6bd4\u5982\u524d\u9762\u6211\u4eec\u8bb2\u89e3\u7684 WordPress \u5b9e\u4f8b\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4f46\u662f\u6211\u4eec\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u5b9e\u4f8b\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u5427\uff1f\u56e0\u4e3a\u4ed6\u552f\u4e00\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u662f\u5b58\u50a8\u5728MySQL\u6570\u636e\u5e93\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bf4 WordPress \u8fd9\u4e2a\u5e94\u7528\u662f\u65e0\u72b6\u6001\u670d\u52a1\uff0c\u4f46\u662f MySQL \u6570\u636e\u5e93\u5c31\u4e0d\u662f\u4e86\uff0c\u56e0\u4e3a\u4ed6\u9700\u8981\u628a\u6570\u636e\u6301\u4e45\u5316\u5230\u672c\u5730\u3002 \u6709\u72b6\u6001\u670d\u52a1\uff08Stateful Service\uff09 \uff1a\u5c31\u548c\u4e0a\u9762\u7684\u6982\u5ff5\u662f\u5bf9\u7acb\u7684\u4e86\uff0c \u8be5\u670d\u52a1\u8fd0\u884c\u7684\u5b9e\u4f8b\u9700\u8981\u5728\u672c\u5730\u5b58\u50a8\u6301\u4e45\u5316\u6570\u636e \uff0c\u6bd4\u5982\u4e0a\u9762\u7684 MySQL \u6570\u636e\u5e93\uff0c\u4f60\u73b0\u5728\u8fd0\u884c\u5728\u8282\u70b9 A\uff0c\u90a3\u4e48\u4ed6\u7684\u6570\u636e\u5c31\u5b58\u50a8\u5728\u8282\u70b9 A \u4e0a\u9762\u7684\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u4f60\u628a\u8be5\u670d\u52a1\u8fc1\u79fb\u5230\u8282\u70b9 B \u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u4e4b\u524d\u7684\u6570\u636e\u4e86\uff0c\u56e0\u4e3a\u4ed6\u9700\u8981\u53bb\u5bf9\u5e94\u7684\u6570\u636e\u76ee\u5f55\u91cc\u9762\u6062\u590d\u6570\u636e\uff0c\u800c\u6b64\u65f6\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u3002 \u73b0\u5728\u5bf9 \u6709\u72b6\u6001 \u548c \u65e0\u72b6\u6001 \u6709\u4e00\u5b9a\u7684\u8ba4\u8bc6\u4e86\u5427\uff0c\u6bd4\u5982\u6211\u4eec\u5e38\u89c1\u7684 WEB \u5e94\u7528\uff0c\u662f\u901a\u8fc7 Session \u6765\u4fdd\u6301\u7528\u6237\u7684\u767b\u5f55\u72b6\u6001\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06 Session \u6301\u4e45\u5316\u5230\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u8be5\u5e94\u7528\u5c31\u662f\u4e00\u4e2a\u6709\u72b6\u6001\u7684\u670d\u52a1\u4e86\uff0c\u56e0\u4e3a\u6211\u73b0\u5728\u767b\u5f55\u8fdb\u6765\u4f60\u628a\u6211\u7684 Session \u6301\u4e45\u5316\u5230\u8282\u70b9 A \u4e0a\u4e86\uff0c\u4e0b\u6b21\u6211\u767b\u5f55\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u8282\u70b9 B \u4e0a\u53bb\u4e86\uff0c\u4f46\u662f\u8282\u70b9 B \u4e0a\u6839\u672c\u5c31\u6ca1\u6709\u6211\u5f53\u524d\u7684 Session \u6570\u636e\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u672a\u767b\u5f55\u72b6\u6001\u4e86\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u6211\u524d\u540e\u4e24\u6b21\u8bf7\u6c42\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\u4e86\u3002\u6240\u4ee5\u4e00\u822c\u4e3a\u4e86\u6a2a\u5411\u6269\u5c55\uff0c\u6211\u4eec\u90fd\u4f1a\u628a\u8fd9\u7c7b WEB \u5e94\u7528\u6539\u6210\u65e0\u72b6\u6001\u7684\u670d\u52a1\uff0c\u600e\u4e48\u6539\uff1f\u5c06 Session \u6570\u636e\u5b58\u5165\u4e00\u4e2a\u516c\u5171\u7684\u5730\u65b9\uff0c\u6bd4\u5982 Redis \u91cc\u9762\uff0c\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5ba2\u6237\u7aef\u8bf7\u6c42 API \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u4e0d\u4f7f\u7528 Session \u6765\u4fdd\u6301\u7528\u6237\u72b6\u6001\uff0c\u6539\u6210\u7528 Token \u4e5f\u662f\u53ef\u4ee5\u7684\u3002 \u65e0\u72b6\u6001\u670d\u52a1\u5229\u7528\u6211\u4eec\u524d\u9762\u7684 Deployment \u53ef\u4ee5\u5f88\u597d\u7684\u8fdb\u884c\u7f16\u6392\uff0c\u5bf9\u5e94\u6709\u72b6\u6001\u670d\u52a1\uff0c\u9700\u8981\u8003\u8651\u7684\u7ec6\u8282\u5c31\u8981\u591a\u5f88\u591a\u4e86\uff0c\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u6700\u56f0\u96be\u7684\u4efb\u52a1\u4e4b\u4e00\uff0c\u5c31\u662f\u8bbe\u8ba1\u6709\u72b6\u6001\u5206\u5e03\u5f0f\u7ec4\u4ef6\u7684\u90e8\u7f72\u4f53\u7cfb\u7ed3\u6784 \u3002\u7531\u4e8e\u65e0\u72b6\u6001\u7ec4\u4ef6\u6ca1\u6709\u9884\u5b9a\u4e49\u7684\u542f\u52a8\u987a\u5e8f\u3001\u96c6\u7fa4\u8981\u6c42\u3001\u70b9\u5bf9\u70b9 TCP \u8fde\u63a5\u3001\u552f\u4e00\u7684\u7f51\u7edc\u6807\u8bc6\u7b26\u3001\u6b63\u5e38\u7684\u542f\u52a8\u548c\u7ec8\u6b62\u8981\u6c42\u7b49\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8fdb\u884c\u5bb9\u5668\u5316\u3002\u8bf8\u5982\u6570\u636e\u5e93\uff0c\u5927\u6570\u636e\u5206\u6790\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f key/value \u5b58\u50a8\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u9700\u8981\u6709\u590d\u6742\u7684\u5206\u5e03\u5f0f\u4f53\u7cfb\u7ed3\u6784\uff0c\u90fd\u53ef\u80fd\u4f1a\u7528\u5230\u4e0a\u8ff0\u529f\u80fd\u3002\u4e3a\u6b64\uff0cKubernetes \u5f15\u5165\u4e86 StatefulSet \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u6765\u652f\u6301\u8fd9\u79cd\u590d\u6742\u7684\u9700\u6c42\u3002 StatefulSet \u7c7b\u4f3c\u4e8e ReplicaSet \uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5904\u7406 Pod \u7684\u542f\u52a8\u987a\u5e8f\uff0c\u4e3a\u4fdd\u7559\u6bcf\u4e2a Pod \u7684\u72b6\u6001\u8bbe\u7f6e\u552f\u4e00\u6807\u8bc6\uff0c \u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\u7279\u6027 \uff1a \u7a33\u5b9a\u7684\u3001\u552f\u4e00\u7684\u7f51\u7edc\u6807\u8bc6\u7b26 \u7a33\u5b9a\u7684\u3001\u6301\u4e45\u5316\u7684\u5b58\u50a8 \u6709\u5e8f\u7684\u3001\u4f18\u96c5\u7684\u90e8\u7f72\u548c\u7f29\u653e \u6709\u5e8f\u7684\u3001\u4f18\u96c5\u7684\u5220\u9664\u548c\u7ec8\u6b62 \u6709\u5e8f\u7684\u3001\u81ea\u52a8\u6eda\u52a8\u66f4\u65b0","title":"StatefulSet \u63a7\u5236\u5668"},{"location":"Controller/StatefulSet/#headless-service","text":"\u5728\u6211\u4eec\u5b66\u4e60 StatefulSet \u5bf9\u8c61\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u4e86\u89e3\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1aHeadless Service\u3002Service \u5176\u5b9e\u5728\u4e4b\u524d\u6211\u4eec\u548c\u5927\u5bb6\u63d0\u5230\u8fc7\uff0cService \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 Labels \u4e3a\u5e94\u7528\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\uff0c\u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP \u548c DNS \u540d\uff0c\u5728\u96c6\u7fa4\u5185\u90e8\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216\u8005\u901a\u8fc7 FQDN \u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u670d\u52a1\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a Deployment \u6709 3 \u4e2a Pod\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a Service\uff0c \u6709\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6765\u8bbf\u95ee\u8fd9\u4e2a Service \uff1a cluster IP \u7684\u65b9\u5f0f \uff0c\u6bd4\u5982\uff1a\u5f53\u6211\u8bbf\u95ee 10.109.169.155 \u8fd9\u4e2a Service \u7684 IP \u5730\u5740\u65f6\uff0c10.109.169.155 \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a VIP\uff0c\u5b83\u4f1a\u628a\u8bf7\u6c42\u8f6c\u53d1\u5230\u8be5 Service \u6240\u4ee3\u7406\u7684 Endpoints \u5217\u8868\u4e2d\u7684\u67d0\u4e00\u4e2a Pod \u4e0a\u3002\u5177\u4f53\u539f\u7406\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684 Service \u7ae0\u8282\u4e2d\u548c\u5927\u5bb6\u6df1\u5165\u4e86\u89e3\u3002 Service \u7684 DNS \u65b9\u5f0f \uff0c\u6bd4\u5982\u6211\u4eec\u8bbf\u95ee\u201cmysvc.mynamespace.svc.cluster.local\u201d\u8fd9\u6761 DNS \u8bb0\u5f55\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230 mynamespace \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u540d\u4e3a mysvc \u7684 Service \u6240\u4ee3\u7406\u7684\u67d0\u4e00\u4e2a Pod\u3002 \u5bf9\u4e8e DNS \u8fd9\u79cd\u65b9\u5f0f\u5b9e\u9645\u4e0a\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5 \uff1a \u7b2c\u4e00\u79cd\u5c31\u662f\u666e\u901a\u7684 Service\uff0c\u6211\u4eec\u8bbf\u95ee\u201cmysvc.mynamespace.svc.cluster.local\u201d\u7684\u65f6\u5019\u662f\u901a\u8fc7\u96c6\u7fa4\u4e2d\u7684 DNS \u670d\u52a1\u89e3\u6790\u5230\u7684 mysvc \u8fd9\u4e2a Service \u7684 cluster IP\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u662fHeadless Service\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8bbf\u95ee \u201cmysvc.mynamespace.svc.cluster.local\u201d\u7684\u65f6\u5019\u662f\u76f4\u63a5\u89e3\u6790\u5230 mysvc \u4ee3\u7406\u7684\u67d0\u4e00\u4e2a\u5177\u4f53 Pod \u7684 IP \u5730\u5740\uff0c\u4e2d\u95f4\u5c11\u4e86 cluster IP \u7684\u8f6c\u53d1\uff0c\u8fd9\u5c31\u662f\u4e8c\u8005\u7684\u6700\u5927\u533a\u522b\uff0cHeadless Service \u4e0d\u9700\u8981\u5206\u914d\u4e00\u4e2a VIP\uff0c\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u4ee5 DNS \u7684\u8bb0\u5f55\u65b9\u5f0f\u89e3\u6790\u5230\u540e\u9762\u7684 Pod \u7684 IP \u5730\u5740\u3002 \u6bd4\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u7684 Headless Service \uff1a(headless-svc.yaml) apiVersion : v1 kind : Service metadata : name : nginx namespace : default labels : app : nginx spec : ports : - name : http port : 80 clusterIP : None selector : app : nginx \u5b9e\u9645\u4e0a Headless Service \u5728\u5b9a\u4e49\u4e0a\u548c\u666e\u901a\u7684 Service \u51e0\u4e4e\u4e00\u81f4, \u53ea\u662f\u4ed6\u7684 clusterIP = None \uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a Service \u88ab\u521b\u5efa\u540e\u5e76\u4e0d\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a cluster IP\uff0c\u800c\u662f\u4f1a\u4ee5 DNS \u8bb0\u5f55\u7684\u65b9\u5f0f\u66b4\u9732\u51fa\u5b83\u6240\u4ee3\u7406\u7684 Pod\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff0c\u5bf9\u4e8e Headless Service \u6240\u4ee3\u7406\u7684\u6240\u6709 Pod \u7684 IP \u5730\u5740\u90fd\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 DNS \u8bb0\u5f55\uff1a DNS Record <pod-name>.<svc-name>.<namespace>.svc.cluster.local \u8fd9\u4e2a DNS \u8bb0\u5f55\u6b63\u662f Kubernetes \u96c6\u7fa4\u4e3a Pod \u5206\u914d\u7684\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\uff0c\u53ea\u8981\u6211\u4eec\u77e5\u9053 Pod \u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684 Service \u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u7ec4\u88c5\u51fa\u8fd9\u6837\u4e00\u6761 DNS \u8bb0\u5f55\u8bbf\u95ee\u5230 Pod \u7684 IP \u5730\u5740\uff0c\u8fd9\u4e2a\u80fd\u529b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u770b\u4e0b StatefulSet \u8d44\u6e90\u5bf9\u8c61\u662f\u5982\u4f55\u7ed3\u5408 Headless Service \u63d0\u4f9b\u670d\u52a1\u7684\u3002","title":"Headless Service"},{"location":"Controller/StatefulSet/#statefulset_1","text":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u51c6\u5907\u4e24\u4e2a 1G \u7684\u5b58\u50a8\u5377\uff08PV\uff09\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u4e5f\u4f1a\u548c\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3 PV \u548c PVC \u7684\u4f7f\u7528\u65b9\u6cd5\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u4e0d\u6df1\u7a76\uff1a\uff08pv.yaml\uff09 apiVersion : v1 kind : PersistentVolume metadata : name : pv001 spec : capacity : storage : 1Gi accessModes : - ReadWriteOnce hostPath : path : /tmp/pv001 --- apiVersion : v1 kind : PersistentVolume metadata : name : pv002 spec : capacity : storage : 1Gi accessModes : - ReadWriteOnce hostPath : path : /tmp/pv002 \u7136\u540e\u76f4\u63a5\u521b\u5efa PV \u5373\u53ef\uff1a \u279c ~ kubectl apply -f pv.yaml persistentvolume \"pv001\" created persistentvolume \"pv002\" created \u279c ~ kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pv001 1Gi RWO Recycle Available 12s pv002 1Gi RWO Recycle Available 11s \u53ef\u4ee5\u770b\u5230\u6210\u529f\u521b\u5efa\u4e86\u4e24\u4e2a PV \u5bf9\u8c61\uff0c\u72b6\u6001\u662f\uff1a Available \u3002","title":"StatefulSet"},{"location":"Controller/StatefulSet/#_1","text":"\u7136\u540e\u63a5\u4e0b\u6765\u58f0\u660e\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 StatefulSet \u8d44\u6e90\u6e05\u5355\uff1a\uff08nginx-sts.yaml\uff09 apiVersion : apps/v1 kind : StatefulSet metadata : name : web namespace : default spec : serviceName : \"nginx\" replicas : 2 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - name : web containerPort : 80 volumeMounts : - name : www mountPath : /usr/share/nginx/html volumeClaimTemplates : - metadata : name : www spec : accessModes : [ \"ReadWriteOnce\" ] resources : requests : storage : 1Gi \u4ece\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u53ef\u4ee5\u770b\u51fa\u548c\u6211\u4eec\u524d\u9762\u7684 Deployment \u57fa\u672c\u4e0a\u4e5f\u662f\u4e00\u81f4\u7684\uff0c\u4e5f\u662f\u901a\u8fc7\u58f0\u660e\u7684 Pod \u6a21\u677f\u6765\u521b\u5efa Pod \u7684\uff0c\u53e6\u5916\u4e0a\u9762\u8d44\u6e90\u6e05\u5355\u4e2d\u548c volumeMounts \u8fdb\u884c\u5173\u8054\u7684\u4e0d\u662f volumes \u800c\u662f\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\uff1a volumeClaimTemplates \uff0c\u8be5\u5c5e\u6027\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a PVC \u5bf9\u8c61\uff0c\u5176\u5b9e\u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a PVC \u7684\u6a21\u677f\uff0c\u548c Pod \u6a21\u677f\u7c7b\u4f3c\uff0cPVC \u88ab\u521b\u5efa\u540e\u4f1a\u81ea\u52a8\u53bb\u5173\u8054\u5f53\u524d\u7cfb\u7edf\u4e2d\u548c\u4ed6\u5408\u9002\u7684 PV \u8fdb\u884c\u7ed1\u5b9a\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u591a\u4e86\u4e00\u4e2a serviceName : \"nginx\" \u7684\u5b57\u6bb5\uff0c serviceName \u5c31\u662f\u7ba1\u7406\u5f53\u524d StatefulSet \u7684\u670d\u52a1\u540d\u79f0\uff0c\u8be5\u670d\u52a1\u5fc5\u987b\u5728 StatefulSet\u4e4b\u524d\u5b58\u5728 \uff0c\u5e76\u4e14\u8d1f\u8d23\u8be5\u96c6\u5408\u7684\u7f51\u7edc\u6807\u8bc6\uff0cPod \u4f1a\u9075\u5faa\u4ee5\u4e0b\u683c\u5f0f\u83b7\u53d6 DNS/\u4e3b\u673a\u540d\uff1a pod-specific-string.serviceName.default.svc.cluster.local \uff0c\u5176\u4e2d pod-specific-string \u7531 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u3002 StatefulSet \u7684\u62d3\u6251\u7ed3\u6784\u548c\u5176\u4ed6\u7528\u4e8e\u90e8\u7f72\u7684\u8d44\u6e90\u5bf9\u8c61\u5176\u5b9e\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u6bd4\u8f83\u5927\u7684\u533a\u522b\u5728\u4e8e StatefulSet \u5f15\u5165\u4e86 PV \u548c PVC \u5bf9\u8c61\u6765\u6301\u4e45\u5b58\u50a8\u670d\u52a1\u4ea7\u751f\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u6240\u6709\u7684\u670d\u52a1\u867d\u7136\u53ef\u4ee5\u88ab\u6740\u6389\u6216\u8005\u91cd\u542f\uff0c\u4f46\u662f\u5176\u4e2d\u7684\u6570\u636e\u7531\u4e8e PV \u7684\u539f\u56e0\u4e0d\u4f1a\u4e22\u5931\u3002 \u6ce8\u610f \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u7528 volumeClaimTemplates \u58f0\u660e\u7684\u6a21\u677f\u662f\u6302\u8f7d\u70b9\u7684\u65b9\u5f0f\uff0c\u5e76\u4e0d\u662f volume\uff0c\u6240\u6709\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u628a PV \u7684\u5b58\u50a8\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u6240\u4ee5\u4f1a\u8986\u76d6\u6389\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u5728\u5bb9\u5668\u542f\u52a8\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5728 PV \u7684\u5b58\u50a8\u91cc\u9762\u65b0\u5efa index.html \u6587\u4ef6\u6765\u4fdd\u8bc1\u5bb9\u5668\u7684\u6b63\u5e38\u8bbf\u95ee\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u53bb\u521b\u5efa\uff0c\u8fd9\u6837\u66f4\u52a0\u65b9\u4fbf\uff1a $ for i in 0 1 ; do kubectl exec web- $i -- sh -c 'echo hello $(hostname) > /usr/share/nginx/html/index.html' ; done \u73b0\u5728\u6211\u4eec\u4f18\u5148\u521b\u5efa\u4e0a\u9762\u5b9a\u4e49\u7684 Headless Service \uff1a \u279c ~ kubectl apply -f headless-svc.yaml service/nginx created \u279c ~ kubectl get service nginx NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP None <none> 80 /TCP 9s Headless Service \u521b\u5efa\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u6765\u521b\u5efa\u5bf9\u5e94\u7684 StatefulSet \u5bf9\u8c61\u4e86\uff1a \u279c ~ kubectl apply -f nginx-sts.yaml statefulset.apps/web created \u279c ~ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE www-web-0 Bound pv001 1Gi RWO 10m www-web-1 Bound pv002 1Gi RWO 6m26s \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u901a\u8fc7 Volume \u6a21\u677f\u81ea\u52a8\u751f\u6210\u4e86\u4e24\u4e2a PVC \u5bf9\u8c61\uff0c\u4e5f\u81ea\u52a8\u548c PV \u8fdb\u884c\u4e86\u7ed1\u5b9a\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u901a\u8fc7\u4e00\u4e2a --watch \u6216 -w \u53c2\u6570\u6765\u67e5\u770b Pod \u7684\u521b\u5efa\u8fc7\u7a0b\uff1a \u279c ~ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE web-0 0 /1 ContainerCreating 0 1s web-0 1 /1 Running 0 2s web-1 0 /1 Pending 0 0s web-1 0 /1 Pending 0 0s web-1 0 /1 ContainerCreating 0 0s web-1 1 /1 Running 0 6s \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u6574\u4e2a\u8fc7\u7a0b\u51fa\u73b0\u4e86\u4e24\u4e2a Pod\uff1a web-0 \u548c web-1 \uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a Pod \u662f\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u521b\u5efa\u7684\uff0c web-0 \u542f\u52a8\u8d77\u6765\u540e web-1 \u624d\u5f00\u59cb\u521b\u5efa\u3002\u5982\u540c\u4e0a\u9762 StatefulSet \u6982\u5ff5\u4e2d\u6240\u63d0\u5230\u7684\uff0cStatefulSet \u4e2d\u7684 Pod \u62e5\u6709\u4e00\u4e2a\u5177\u6709\u7a33\u5b9a\u7684\u3001\u72ec\u4e00\u65e0\u4e8c\u7684\u8eab\u4efd\u6807\u5fd7\u3002\u8fd9\u4e2a\u6807\u5fd7\u57fa\u4e8e StatefulSet \u63a7\u5236\u5668\u5206\u914d\u7ed9\u6bcf\u4e2a Pod \u7684\u552f\u4e00\u987a\u5e8f\u7d22\u5f15\u3002Pod \u7684\u540d\u79f0\u7684\u5f62\u5f0f\u4e3a < statefulset name > - < ordinal index > \u3002\u6211\u4eec\u8fd9\u91cc\u7684\u5bf9\u8c61\u62e5\u6709\u4e24\u4e2a\u526f\u672c\uff0c\u6240\u4ee5\u5b83\u521b\u5efa\u4e86\u4e24\u4e2a Pod \u540d\u79f0\u5206\u522b\u4e3a\uff1aweb-0 \u548c web-1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl exec \u547d\u4ee4\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u67e5\u770b\u5b83\u4eec\u7684 hostname\uff1a \u279c ~ kubectl exec web-0 -- hostname web-0 \u279c ~ kubectl exec web-1 -- hostname web-1 \u987a\u5e8f StatefulSet \u4e2d Pod \u526f\u672c\u7684\u521b\u5efa\u4f1a\u6309\u7167\u5e8f\u5217\u53f7\u5347\u5e8f\u5904\u7406\uff0c\u526f\u672c\u7684\u66f4\u65b0\u548c\u5220\u9664\u4f1a\u6309\u7167\u5e8f\u5217\u53f7\u964d\u5e8f\u5904\u7406\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e24\u4e2a Pod \u7684 hostname \u4e0e Pod \u540d\u5b57\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u88ab\u5206\u914d\u4e86\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\u6211\u4eec\u968f\u610f\u67e5\u770b\u4e00\u4e2a Pod \u7684\u63cf\u8ff0\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod web-0 Name: web-0 Namespace: default Priority: 0 PriorityClassName: <none> Node: ydzs-node3/10.151.30.57 Start Time: Sun, 17 Nov 2019 12 :32:50 +0800 Labels: app = nginx controller-revision-hash = web-6c5c7fd59b statefulset.kubernetes.io/pod-name = web-0 Annotations: podpreset.admission.kubernetes.io/podpreset-time-preset: 2062768 Status: Running IP: 10 .244.3.98 Controlled By: StatefulSet/web ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Controlled By : StatefulSet / web \uff0c\u8bc1\u660e\u6211\u4eec\u7684 Pod \u662f\u76f4\u63a5\u53d7\u5230 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u7684\u3002 \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a busybox\uff08\u8be5\u955c\u50cf\u4e2d\u6709\u4e00\u7cfb\u5217\u7684\u5de5\u5177\uff09\u7684\u5bb9\u5668\uff0c\u5728\u5bb9\u5668\u4e2d\u7528 DNS \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u4e00\u4e0b\u8fd9\u4e2a Headless Service \uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u5355\u7eaf\u7684\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u5199\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u6765\u58f0\u660e\uff0c\u7528 kubectl run \u547d\u4ee4\u542f\u52a8\u4e00\u4e2a\u6d4b\u8bd5\u7684\u5bb9\u5668\u5373\u53ef\uff1a \u279c ~ kubectl run -it --image busybox:1.28.3 test --restart = Never --rm /bin/sh If you don ' t see a command prompt, try pressing enter. / # busybox \u955c\u50cf busybox \u6700\u65b0\u7248\u672c\u7684\u955c\u50cf\u6709 BUG\uff0c\u4f1a\u51fa\u73b0 nslookup \u63d0\u793a\u65e0\u6cd5\u89e3\u6790\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u8001\u4e00\u70b9\u7684\u955c\u50cf\u7248\u672c 1.28.3 \u5373\u53ef\u3002 \u5982\u679c\u5bf9 kubectl run \u547d\u4ee4\u7684\u4f7f\u7528\u53c2\u6570\u4e0d\u6e05\u695a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl run --help \u547d\u4ee4\u67e5\u770b\u53ef\u4f7f\u7528\u7684\u53c2\u6570\u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 kubectl run \u547d\u4ee4\u542f\u52a8\u4e86\u4e00\u4e2a\u4ee5 busybox \u4e3a\u955c\u50cf\u7684 Pod\uff0c --rm \u53c2\u6570\u610f\u5473\u7740\u6211\u4eec\u9000\u51fa Pod \u540e\u5c31\u4f1a\u88ab\u5220\u9664\uff0c\u548c\u4e4b\u524d\u7684 docker run \u547d\u4ee4\u7528\u6cd5\u57fa\u672c\u4e00\u81f4\uff0c\u73b0\u5728\u6211\u4eec\u5728\u8fd9\u4e2a Pod \u5bb9\u5668\u91cc\u9762\u53ef\u4ee5\u4f7f\u7528 nslookup \u547d\u4ee4\u6765\u5c1d\u8bd5\u89e3\u6790\u4e0b\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 Headless Service \uff1a / # nslookup nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx Address 1 : 10 .244.1.175 web-1.nginx.default.svc.cluster.local Address 2 : 10 .244.4.83 web-0.nginx.default.svc.cluster.local / # ping nginx PING nginx ( 10 .244.1.175 ) : 56 data bytes 64 bytes from 10 .244.1.175: seq = 0 ttl = 62 time = 1 .076 ms 64 bytes from 10 .244.1.175: seq = 1 ttl = 62 time = 1 .029 ms 64 bytes from 10 .244.1.175: seq = 2 ttl = 62 time = 1 .075 ms \u6211\u4eec\u76f4\u63a5\u89e3\u6790 Headless Service \u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u770b\u5230\u5f97\u5230\u7684\u662f\u4e24\u4e2a Pod \u7684\u89e3\u6790\u8bb0\u5f55\uff0c\u4f46\u5b9e\u9645\u4e0a\u5982\u679c\u6211\u4eec\u901a\u8fc7 nginx \u8fd9\u4e2a DNS \u53bb\u8bbf\u95ee\u6211\u4eec\u7684\u670d\u52a1\u7684\u8bdd\uff0c\u5e76\u4e0d\u4f1a\u968f\u673a\u6216\u8005\u8f6e\u8be2\u80cc\u540e\u7684\u4e24\u4e2a Pod\uff0c\u800c\u662f\u8bbf\u95ee\u5230\u4e00\u4e2a\u56fa\u5b9a\u7684 Pod\uff0c\u6240\u4ee5\u4e0d\u80fd\u4ee3\u66ff\u666e\u901a\u7684 Service\u3002\u5982\u679c\u5206\u522b\u89e3\u6790\u5bf9\u5e94\u7684 Pod \u5462\uff1f $ / # nslookup web-0.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-0.nginx Address 1 : 10 .244.4.83 web-0.nginx.default.svc.cluster.local $ / # nslookup web-1.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-1.nginx Address 1 : 10 .244.1.175 web-1.nginx.default.svc.cluster.local \u53ef\u4ee5\u770b\u5230\u89e3\u6790 web-0.nginx \u7684\u65f6\u5019\u89e3\u6790\u5230\u4e86 web-0 \u8fd9\u4e2a Pod \u7684 IP\uff0c web-1.nginx \u89e3\u6790\u5230\u4e86 web-1 \u8fd9\u4e2a Pod \u7684 IP\uff0c\u800c\u4e14\u8fd9\u4e2a DNS \u5730\u5740\u8fd8\u662f\u7a33\u5b9a\u7684\uff0c\u56e0\u4e3a Pod \u540d\u79f0\u5c31\u662f\u56fa\u5b9a\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u53bb\u5220\u6389 web-0 \u548c web-1 \u8fd9\u4e24\u4e2a Pod\uff1a \u279c ~ kubectl delete pod -l app = nginx pod \"web-0\" deleted pod \"web-1\" deleted \u5220\u9664\u5b8c\u6210\u540e\u624d\u770b Pod \u72b6\u6001\uff1a \u279c ~ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE web-0 1 /1 Running 0 42s web-1 1 /1 Running 0 39s \u53ef\u4ee5\u770b\u5230 StatefulSet \u63a7\u5236\u5668\u4ecd\u7136\u4f1a\u6309\u987a\u5e8f\u521b\u5efa\u51fa\u4e24\u4e2a Pod \u526f\u672c\u51fa\u6765\uff0c\u800c\u4e14 Pod \u7684\u552f\u4e00\u6807\u8bc6\u4f9d\u7136\u6ca1\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a Pod \u7684\u7f51\u7edc\u6807\u8bc6\u8fd8\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u901a\u8fc7 web-0.nginx \u53bb\u8bbf\u95ee\u5230 web-0 \u8fd9\u4e2a Pod\uff0c\u867d\u7136 Pod \u5df2\u7ecf\u91cd\u5efa\u4e86\uff0c\u5bf9\u5e94 Pod IP \u5df2\u7ecf\u53d8\u5316\u4e86\uff0c\u4f46\u662f\u8bbf\u95ee\u8fd9\u4e2a Pod \u7684\u5730\u5740\u4f9d\u7136\u6ca1\u53d8\uff0c\u5e76\u4e14\u4ed6\u4eec\u4f9d\u7136\u8fd8\u662f\u5173\u8054\u7684\u4e4b\u524d\u7684 PVC\uff0c\u6570\u636e\u5e76\u4e0d\u4f1a\u4e22\u5931\uff1a / # nslookup web-0.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-0.nginx Address 1 : 10 .244.3.98 web-0.nginx.default.svc.cluster.local / # nslookup web-1.nginx Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: web-1.nginx Address 1 : 10 .244.1.176 web-1.nginx.default.svc.cluster.local \u901a\u8fc7 Headless Service \uff0cStatefulSet \u5c31\u4fdd\u8bc1\u4e86 Pod \u7f51\u7edc\u6807\u8bc6\u7684\u552f\u4e00\u7a33\u5b9a\u6027\uff0c\u7531\u4e8e Pod IP \u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bbf\u95ee \u6709\u72b6\u6001\u5e94\u7528\u5b9e\u4f8b \u7684\u65f6\u5019\uff0c\u5c31\u5fc5\u987b\u4f7f\u7528 DNS \u8bb0\u5f55\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u4e86\uff0c\u6240\u4ee5\u5f88\u591a\u540c\u5b66\u5076\u5c14\u6709\u56fa\u5b9a\u7684 Pod IP \u7684\u9700\u6c42\uff0c\u6216\u8bb8\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u4ee3\u66ff\u3002 \u6700\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5220\u9664 StatefulSet \u5bf9\u8c61\u6765\u5220\u9664\u6240\u6709\u7684 Pod\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u4e5f\u4f1a\u53d1\u73b0\u662f \u6309\u7167\u5012\u5e8f\u7684\u65b9\u5f0f\u8fdb\u884c\u5220\u9664\u7684 \uff1a \u279c ~ kubectl delete statefulsets web statefulset.apps \"web\" deleted \u279c ~ kubectl get pods --watch NAME READY STATUS RESTARTS AGE web-1 1 /1 Terminating 0 3h/31m web-0 1 /1 Terminating 0 3h/31m","title":"\u7279\u6027"},{"location":"Controller/StatefulSet/#_2","text":"\u5bf9\u4e8e\u67d0\u4e9b\u5206\u5e03\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0cStatefulSet \u7684\u987a\u5e8f\u6027\u4fdd\u8bc1\u662f\u4e0d\u5fc5\u8981\u7684\u6216\u8005\u4e0d\u5e94\u8be5\u7684\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u4ec5\u4ec5\u8981\u6c42\u552f\u4e00\u6027\u548c\u8eab\u4efd\u6807\u5fd7\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u58f0\u660e StatefulSet \u7684\u65f6\u5019\u91cd\u65b0\u8bbe\u7f6e \u901a\u8fc7 spec . podManagementPolicy \u7684\u7b56\u7565\u5373\u53ef\u3002 \u9ed8\u8ba4\u7684\u7ba1\u7406\u7b56\u7565\u662f \u901a\u8fc7 OrderedReady \uff0c\u8868\u793a\u8ba9 StatefulSet \u63a7\u5236\u5668\u9075\u5faa\u4e0a\u6587\u6f14\u793a\u7684\u987a\u5e8f\u6027\u4fdd\u8bc1\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \u901a\u8fc7 Parallel \u7ba1\u7406\u6a21\u5f0f\uff0c\u8868\u793a\u8ba9 StatefulSet \u63a7\u5236\u5668\u5e76\u884c\u7684\u7ec8\u6b62\u6240\u6709 Pod\uff0c\u5728\u542f\u52a8\u6216\u7ec8\u6b62\u53e6\u4e00\u4e2a Pod \u524d\uff0c\u4e0d\u5fc5\u7b49\u5f85\u8fd9\u4e9b Pod \u53d8\u6210 Running \u548c Ready \u6216\u8005\u5b8c\u5168\u7ec8\u6b62\u72b6\u6001\u3002","title":"\u7ba1\u7406\u7b56\u7565"},{"location":"Controller/StatefulSet/#_3","text":"\u524d\u9762\u8bfe\u7a0b\u4e2d\u6211\u4eec\u5b66\u4e60\u4e86 Deployment \u7684\u5347\u7ea7\u7b56\u7565\uff0c\u5728 StatefulSet \u4e2d\u540c\u6837\u4e5f\u652f\u6301\u4e24\u79cd\u5347\u7ea7\u7b56\u7565\uff1a \u901a\u8fc7 onDelete \u548c \u901a\u8fc7 RollingUpdate \uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e \u901a\u8fc7 .spec.updateStrategy.type \u8fdb\u884c\u6307\u5b9a\u3002 OnDelete : \u8be5\u7b56\u7565\u8868\u793a\u5f53\u66f4\u65b0\u4e86 StatefulSet \u7684\u6a21\u677f\u540e\uff0c\u53ea\u6709\u624b\u52a8\u5220\u9664\u65e7\u7684 Pod \u624d\u4f1a\u521b\u5efa\u65b0\u7684 Pod\u3002 RollingUpdate \uff1a\u8be5\u7b56\u7565\u8868\u793a\u5f53\u66f4\u65b0 StatefulSet \u6a21\u677f\u540e\u4f1a\u81ea\u52a8\u5220\u9664\u65e7\u7684 Pod \u5e76\u521b\u5efa\u65b0\u7684 Pod\uff0c\u5982\u679c\u66f4\u65b0\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u8fd9\u6b21\u201c\u6eda\u52a8\u66f4\u65b0\u201d\u5c31\u4f1a\u505c\u6b62\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f StatefulSet \u7684 Pod\u5728\u90e8\u7f72\u65f6\u662f\u987a\u5e8f\u4ece 0~n \u7684\uff0c\u800c\u5728\u6eda\u52a8\u66f4\u65b0\u65f6\uff0c\u8fd9\u4e9b Pod \u5219\u662f\u6309\u9006\u5e8f\u7684\u65b9\u5f0f\u5373 n~0 \u4e00\u6b21\u5220\u9664\u5e76\u521b\u5efa\u3002 \u53e6\u5916 SatefulSet \u7684\u6eda\u52a8\u5347\u7ea7\u8fd8\u652f\u6301 Partitions \u7684\u7279\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7 .spec.updateStrategy.rollingUpdate.partition \u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u8bbe\u7f6e partition \u540e\uff0cSatefulSet \u7684 Pod \u4e2d\u5e8f\u53f7\u5927\u4e8e\u6216\u7b49\u4e8e partition \u7684 Pod \u4f1a\u5728 StatefulSet \u7684\u6a21\u677f\u66f4\u65b0\u540e\u8fdb\u884c\u6eda\u52a8\u5347\u7ea7\uff0c\u800c\u5176\u4f59\u7684 Pod \u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u4e2a\u529f\u80fd\u662f\u4e0d\u662f\u53ef\u4ee5\u5b9e\u73b0\u7070\u5ea6\u53d1\u5e03\uff1f\u5927\u5bb6\u53ef\u4ee5\u53bb\u624b\u52a8\u9a8c\u8bc1\u4e0b\u3002 \u5728\u5b9e\u9645\u7684\u9879\u76ee\u4e2d\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u662f\u5f88\u5c11\u4f1a\u53bb\u76f4\u63a5\u901a\u8fc7 StatefulSet \u6765\u90e8\u7f72\u6211\u4eec\u7684\u6709\u72b6\u6001\u670d\u52a1\u7684\uff0c\u9664\u975e\u4f60\u81ea\u5df1\u80fd\u591f\u5b8c\u5168 hold \u4f4f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u9ad8\u7ea7\u7684 Operator \u6765\u90e8\u7f72\uff0c\u6bd4\u5982 etcd-operator\u3001prometheus-operator \u7b49\u7b49\uff0c\u8fd9\u4e9b\u5e94\u7528\u90fd\u80fd\u591f\u5f88\u597d\u7684\u6765\u7ba1\u7406\u6709\u72b6\u6001\u7684\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u4f7f\u7528\u4e00\u4e2a StatefulSet \u6765\u90e8\u7f72\u4e00\u4e2a Pod \u5c31\u884c\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6709\u72b6\u6001\u7684\u5e94\u7528\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6570\u636e\u6062\u590d\u3001\u6545\u969c\u8f6c\u79fb\u7b49\u7b49\u3002","title":"\u66f4\u65b0\u7b56\u7565"},{"location":"Foundation/K8s%20Installation/","text":"\u96c6\u7fa4\u90e8\u7f72 \u00b6 \u4f7f\u7528 containerd \u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u65f6\u642d\u5efa Kubernetes \u96c6\u7fa4 \u73b0\u5728\u6211\u4eec\u4f7f\u7528 kubeadm \u4ece\u5934\u642d\u5efa\u4e00\u4e2a\u4f7f\u7528 containerd \u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 Kubernetes \u96c6\u7fa4\uff0c\u8fd9\u91cc\u6211\u4eec\u5b89\u88c5\u6700\u65b0\u7684 v1.22.2 \u7248\u672c\u3002 \u73af\u5883\u51c6\u5907 \u00b6 3\u4e2a\u8282\u70b9\uff0c\u90fd\u662f Centos 7.6 \u7cfb\u7edf\uff0c\u5185\u6838\u7248\u672c\uff1a3.10.0-1062.4.1.el7.x86_64\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6dfb\u52a0 hosts \u4fe1\u606f\uff1a \u279c ~ cat /etc/hosts 192 .168.0.186 k8sm 192 .168.0.187 k8sn1 192 .168.0.188 k8sn2 hostname \u8282\u70b9\u7684 hostname \u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff0c\u53e6\u5916\u5343\u4e07\u4e0d\u7528\u4ec0\u4e48\u9ed8\u8ba4\u7684 localhost \u7684 hostname\uff0c\u4f1a\u5bfc\u81f4\u5404\u79cd\u9519\u8bef\u51fa\u73b0\u7684\u3002\u5728 Kubernetes \u9879\u76ee\u91cc\uff0c\u673a\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4e00\u5207\u5b58\u50a8\u5728 Etcd \u4e2d\u7684 API \u5bf9\u8c61\uff0c\u90fd\u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff08RFC 1123\uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hostnamectl set-hostname node1 \u6765\u4fee\u6539 hostname\u3002 \u7981\u7528\u9632\u706b\u5899\uff1a \u279c ~ systemctl stop firewalld \u279c ~ systemctl disable firewalld \u7981\u7528 SELINUX\uff1a \u279c ~ setenforce 0 \u279c ~ cat /etc/selinux/config SELINUX = disabled \u7531\u4e8e\u5f00\u542f\u5185\u6838 ipv4 \u8f6c\u53d1\u9700\u8981\u52a0\u8f7d br_netfilter \u6a21\u5757\uff0c\u6240\u4ee5\u52a0\u8f7d\u4e0b\u8be5\u6a21\u5757\uff1a \u279c ~ modprobe br_netfilter \u521b\u5efa /etc/sysctl.d/k8s.conf \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 bridge-nf bridge-nf \u4f7f\u5f97 netfilter \u53ef\u4ee5\u5bf9 Linux \u7f51\u6865\u4e0a\u7684 IPv4/ARP/IPv6 \u5305\u8fc7\u6ee4\u3002\u6bd4\u5982\uff0c\u8bbe\u7f6e net.bridge.bridge-nf-call-iptables\uff1d1 \u540e\uff0c\u4e8c\u5c42\u7684\u7f51\u6865\u5728\u8f6c\u53d1\u5305\u65f6\u4e5f\u4f1a\u88ab iptables\u7684 FORWARD \u89c4\u5219\u6240\u8fc7\u6ee4\u3002\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a net.bridge.bridge-nf-call-arptables\uff1a\u662f\u5426\u5728 arptables \u7684 FORWARD \u4e2d\u8fc7\u6ee4\u7f51\u6865\u7684 ARP \u5305 net.bridge.bridge-nf-call-ip6tables\uff1a\u662f\u5426\u5728 ip6tables \u94fe\u4e2d\u8fc7\u6ee4 IPv6 \u5305 net.bridge.bridge-nf-call-iptables\uff1a\u662f\u5426\u5728 iptables \u94fe\u4e2d\u8fc7\u6ee4 IPv4 \u5305 net.bridge.bridge-nf-filter-vlan-tagged\uff1a\u662f\u5426\u5728 iptables/arptables \u4e2d\u8fc7\u6ee4\u6253\u4e86 vlan \u6807\u7b7e\u7684\u5305\u3002 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4f7f\u4fee\u6539\u751f\u6548\uff1a \u279c ~ sysctl -p /etc/sysctl.d/k8s.conf \u5b89\u88c5 ipvs\uff1a \u279c ~ cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF \u279c ~ chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u4e0a\u9762\u811a\u672c\u521b\u5efa\u4e86\u7684 /etc/sysconfig/modules/ipvs.modules \u6587\u4ef6\uff0c\u4fdd\u8bc1\u5728\u8282\u70b9\u91cd\u542f\u540e\u80fd\u81ea\u52a8\u52a0\u8f7d\u6240\u9700\u6a21\u5757\u3002\u4f7f\u7528 lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u547d\u4ee4\u67e5\u770b\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u52a0\u8f7d\u6240\u9700\u7684\u5185\u6838\u6a21\u5757\u3002 \u63a5\u4e0b\u6765\u8fd8\u9700\u8981\u786e\u4fdd\u5404\u4e2a\u8282\u70b9\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 ipset \u8f6f\u4ef6\u5305\uff1a \u279c ~ yum install ipset \u4e3a\u4e86\u4fbf\u4e8e\u67e5\u770b ipvs \u7684\u4ee3\u7406\u89c4\u5219\uff0c\u6700\u597d\u5b89\u88c5\u4e00\u4e0b\u7ba1\u7406\u5de5\u5177 ipvsadm\uff1a \u279c ~ yum install ipvsadm \u540c\u6b65\u670d\u52a1\u5668\u65f6\u95f4 \u279c ~ yum install chrony -y \u279c ~ systemctl enable chronyd \u279c ~ systemctl start chronyd \u279c ~ chronyc sources 210 Number of sources = 4 MS Name/IP address Stratum Poll Reach LastRx Last sample =============================================================================== ^+ sv1.ggsrv.de 2 6 17 32 -823us [ -1128us ] +/- 98ms ^- montreal.ca.logiplex.net 2 6 17 32 -17ms [ -17ms ] +/- 179ms ^- ntp6.flashdance.cx 2 6 17 32 -32ms [ -32ms ] +/- 161ms ^* 119 .28.183.184 2 6 33 32 +661us [ +357us ] +/- 38ms \u279c ~ date Tue Aug 31 14 :36:14 CST 2021 \u5173\u95ed swap \u5206\u533a\uff1a \u279c ~ swapoff -a \u4fee\u6539 /etc/fstab \u6587\u4ef6\uff0c\u6ce8\u91ca\u6389 SWAP \u7684\u81ea\u52a8\u6302\u8f7d\uff0c\u4f7f\u7528free -m\u786e\u8ba4 swap \u5df2\u7ecf\u5173\u95ed\u3002swappiness \u53c2\u6570\u8c03\u6574\uff0c\u4fee\u6539 /etc/sysctl.d/k8s.conf \u6dfb\u52a0\u4e0b\u9762\u4e00\u884c\uff1a vm.swappiness = 0 \u6267\u884c sysctl -p /etc/sysctl.d/k8s.conf \u4f7f\u4fee\u6539\u751f\u6548\u3002 \u5b89\u88c5 Containerd \u00b6 \u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6 containerd \u7684\u4e00\u4e9b\u57fa\u672c\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u5728\u5404\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5 Containerd\u3002 \u7531\u4e8e containerd \u9700\u8981\u8c03\u7528 runc\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5148\u5b89\u88c5 runc\uff0c\u4e0d\u8fc7 containerd \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5305\u542b\u76f8\u5173\u4f9d\u8d56\u7684\u538b\u7f29\u5305 cri-containerd-cni-${VERSION}.${OS}-${ARCH}.tar.gz \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5305\u6765\u8fdb\u884c\u5b89\u88c5\u3002\u9996\u5148\u4ece release \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u538b\u7f29\u5305\uff0c\u5f53\u524d\u4e3a 1.5.5 \u7248\u672c\uff1a \u279c ~ wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u76f4\u63a5\u5c06\u538b\u7f29\u5305\u89e3\u538b\u5230\u7cfb\u7edf\u7684\u5404\u4e2a\u76ee\u5f55\u4e2d\uff1a \u279c ~ tar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u7136\u540e\u8981\u5c06 /usr/local/bin \u548c /usr/local/sbin \u8ffd\u52a0\u5230 ~/.bashrc \u6587\u4ef6\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff1a export PATH = $PATH :/usr/local/bin:/usr/local/sbin \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4f7f\u5176\u7acb\u5373\u751f\u6548\uff1a \u279c ~ source ~/.bashrc containerd \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a /etc/containerd/config.toml \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u914d\u7f6e\uff1a \u279c ~ mkdir -p /etc/containerd \u279c ~ containerd config default > /etc/containerd/config.toml \u5bf9\u4e8e\u4f7f\u7528 systemd \u4f5c\u4e3a init system \u7684 Linux \u7684\u53d1\u884c\u7248\uff0c\u4f7f\u7528 systemd \u4f5c\u4e3a\u5bb9\u5668\u7684 cgroup driver \u53ef\u4ee5\u786e\u4fdd\u8282\u70b9\u5728\u8d44\u6e90\u7d27\u5f20\u7684\u60c5\u51b5\u66f4\u52a0\u7a33\u5b9a\uff0c\u6240\u4ee5\u63a8\u8350\u5c06 containerd \u7684 cgroup driver \u914d\u7f6e\u4e3a systemd\u3002 \u4fee\u6539\u524d\u9762\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 /etc/containerd/config.toml \uff0c\u5728 plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options \u914d\u7f6e\u5757\u4e0b\u9762\u5c06 SystemdCgroup \u8bbe\u7f6e\u4e3a true \uff1a [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc] ... [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc.options] SystemdCgroup = true .... \u7136\u540e\u518d\u4e3a\u955c\u50cf\u4ed3\u5e93\u914d\u7f6e\u4e00\u4e2a\u52a0\u901f\u5668\uff0c\u9700\u8981\u5728 cri \u914d\u7f6e\u5757\u4e0b\u9762\u7684 registry \u914d\u7f6e\u5757\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e registry.mirrors \uff1a [plugins. \"io.containerd.grpc.v1.cri\" ] ... # sandbox_image = \"k8s.gcr.io/pause:3.5\" sandbox_image = \"registry.aliyuncs.com/k8sxio/pause:3.5\" ... [plugins. \"io.containerd.grpc.v1.cri\" .registry] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"docker.io\" ] endpoint = [ \"https://bqr1dr1n.mirror.aliyuncs.com\" ] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"k8s.gcr.io\" ] endpoint = [ \"https://registry.aliyuncs.com/k8sxio\" ] Warning \u5982\u679c\u6211\u4eec\u7684\u8282\u70b9\u4e0d\u80fd\u6b63\u5e38\u83b7\u53d6 k8s.gcr.io \u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u4e0a\u9762\u91cd\u65b0\u914d\u7f6e sandbox_image \u955c\u50cf\uff0c\u5426\u5219\u540e\u9762 kubelet \u8986\u76d6\u8be5\u955c\u50cf\u4e0d\u4f1a\u751f\u6548\uff1a Warning: For remote container runtime, --pod-infra-container-image is ignored in kubelet, which should be set in that remote runtime instead\u3002 \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u4e0b\u8f7d\u7684 containerd \u538b\u7f29\u5305\u4e2d\u5305\u542b\u4e00\u4e2a etc/systemd/system/containerd.service \u7684\u6587\u4ef6\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 systemd \u6765\u914d\u7f6e containerd \u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8 containerd \u4e86\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ systemctl daemon-reload \u279c ~ systemctl enable containerd --now \u542f\u52a8\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 containerd \u7684\u672c\u5730 CLI \u5de5\u5177 ctr \u548c crictl \u4e86\uff0c\u6bd4\u5982\u67e5\u770b\u7248\u672c\uff1a \u279c ~ ctr version Client: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 Go version: go1.16.6 Server: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 UUID: cd2894ad-fd71-4ef7-a09f-5795c7eb4c3b \u279c ~ crictl version Version: 0 .1.0 RuntimeName: containerd RuntimeVersion: v1.5.5 RuntimeApiVersion: v1alpha2 \u4f7f\u7528 kubeadm \u90e8\u7f72 Kubernetes \u00b6 \u4e0a\u9762\u7684\u76f8\u5173\u73af\u5883\u914d\u7f6e\u4e5f\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Kubeadm \u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u901a\u8fc7\u6307\u5b9ayum \u6e90\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\u7684\uff1a \u279c ~ cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF \u5f53\u7136\u4e86\uff0c\u4e0a\u9762\u7684 yum \u6e90\u662f\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u79d1\u5b66\u4e0a\u7f51\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u963f\u91cc\u4e91\u7684\u6e90\u8fdb\u884c\u5b89\u88c5\uff1a \u279c ~ cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF \u7136\u540e\u5b89\u88c5 kubeadm\u3001kubelet\u3001kubectl\uff1a # --disableexcludes \u7981\u6389\u9664\u4e86kubernetes\u4e4b\u5916\u7684\u522b\u7684\u4ed3\u5e93 \u279c ~ yum makecache fast \u279c ~ yum install -y kubelet-1.22.2 kubeadm-1.22.2 kubectl-1.22.2 --disableexcludes = kubernetes \u279c ~ kubeadm version kubeadm version: & version.Info { Major: \"1\" , Minor: \"22\" , GitVersion: \"v1.22.2\" , GitCommit: \"8b5a19147530eaac9476b0ab82980b4088bbc1b2\" , GitTreeState: \"clean\" , BuildDate: \"2021-09-15T21:37:34Z\" , GoVersion: \"go1.16.8\" , Compiler: \"gc\" , Platform: \"linux/amd64\" } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5b89\u88c5\u7684\u662f v1.22.2 \u7248\u672c\uff0c\u7136\u540e\u5c06 master \u8282\u70b9\u7684 kubelet \u8bbe\u7f6e\u6210\u5f00\u673a\u542f\u52a8\uff1a \u279c ~ systemctl enable --now kubelet Success \u5230\u8fd9\u91cc\u4e3a\u6b62\u4e0a\u9762\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u5728\u6240\u6709\u8282\u70b9\u6267\u884c\u914d\u7f6e\u3002 \u521d\u59cb\u5316\u96c6\u7fa4 \u00b6 \u5f53\u6211\u4eec\u6267\u884c kubelet --help \u547d\u4ee4\u7684\u65f6\u5019\u53ef\u4ee5\u770b\u5230\u539f\u6765\u5927\u90e8\u5206\u547d\u4ee4\u884c\u53c2\u6570\u90fd\u88ab DEPRECATED \u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b98\u65b9\u63a8\u8350\u6211\u4eec\u4f7f\u7528 --config \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u539f\u6765\u8fd9\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u6587\u6863 Set Kubelet parameters via a config file \u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\uff0c\u8fd9\u6837 Kubernetes \u5c31\u53ef\u4ee5\u652f\u6301\u52a8\u6001 Kubelet \u914d\u7f6e\uff08Dynamic Kubelet Configuration\uff09\u4e86\uff0c\u53c2\u8003 Reconfigure a Node\u2019s Kubelet in a Live Cluster \u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5728 master \u8282\u70b9\u4e0a\u8f93\u51fa\u96c6\u7fa4\u521d\u59cb\u5316\u9ed8\u8ba4\u4f7f\u7528\u7684\u914d\u7f6e\uff1a \u279c ~ kubeadm config print init-defaults --component-configs KubeletConfiguration > kubeadm.yaml \u7136\u540e\u6839\u636e\u6211\u4eec\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u914d\u7f6e\uff0c\u6bd4\u5982\u4fee\u6539 imageRepository \u6307\u5b9a\u96c6\u7fa4\u521d\u59cb\u5316\u65f6\u62c9\u53d6 Kubernetes \u6240\u9700\u955c\u50cf\u7684\u5730\u5740\uff0ckube-proxy \u7684\u6a21\u5f0f\u4e3a ipvs\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u662f\u51c6\u5907\u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6\u7684\uff0c\u9700\u8981\u5c06 networking.podSubnet \u8bbe\u7f6e\u4e3a 10.244.0.0/16 \uff1a # kubeadm.yaml apiVersion : kubeadm.k8s.io/v1beta3 bootstrapTokens : - groups : - system:bootstrappers:kubeadm:default-node-token token : abcdef.0123456789abcdef ttl : 24h0m0s usages : - signing - authentication kind : InitConfiguration localAPIEndpoint : advertiseAddress : 192.168.0.186 # \u6307\u5b9amaster\u8282\u70b9\u5185\u7f51IP bindPort : 6443 nodeRegistration : criSocket : /run/containerd/containerd.sock # \u4f7f\u7528 containerd\u7684Unix socket \u5730\u5740 imagePullPolicy : IfNotPresent name : master taints : # \u7ed9master\u6dfb\u52a0\u6c61\u70b9\uff0cmaster\u8282\u70b9\u4e0d\u80fd\u8c03\u5ea6\u5e94\u7528 - effect : \"NoSchedule\" key : \"node-role.kubernetes.io/master\" --- apiVersion : kubeproxy.config.k8s.io/v1alpha1 kind : KubeProxyConfiguration mode : ipvs # kube-proxy \u6a21\u5f0f --- apiServer : timeoutForControlPlane : 4m0s apiVersion : kubeadm.k8s.io/v1beta3 certificatesDir : /etc/kubernetes/pki clusterName : kubernetes controllerManager : {} dns : {} etcd : local : dataDir : /var/lib/etcd imageRepository : registry.aliyuncs.com/k8sxio kind : ClusterConfiguration kubernetesVersion : 1.22.2 networking : dnsDomain : cluster.local serviceSubnet : 10.96.0.0/12 podSubnet : 10.244.0.0/16 # \u6307\u5b9a pod \u5b50\u7f51 scheduler : {} --- apiVersion : kubelet.config.k8s.io/v1beta1 authentication : anonymous : enabled : false webhook : cacheTTL : 0s enabled : true x509 : clientCAFile : /etc/kubernetes/pki/ca.crt authorization : mode : Webhook webhook : cacheAuthorizedTTL : 0s cacheUnauthorizedTTL : 0s clusterDNS : - 10.96.0.10 clusterDomain : cluster.local cpuManagerReconcilePeriod : 0s evictionPressureTransitionPeriod : 0s fileCheckFrequency : 0s healthzBindAddress : 127.0.0.1 healthzPort : 10248 httpCheckFrequency : 0s imageMinimumGCAge : 0s kind : KubeletConfiguration cgroupDriver : systemd # \u914d\u7f6e cgroup driver logging : {} memorySwap : {} nodeStatusReportFrequency : 0s nodeStatusUpdateFrequency : 0s rotateCertificates : true runtimeRequestTimeout : 0s shutdownGracePeriod : 0s shutdownGracePeriodCriticalPods : 0s staticPodPath : /etc/kubernetes/manifests streamingConnectionIdleTimeout : 0s syncFrequency : 0s volumeStatsAggPeriod : 0s \u914d\u7f6e\u63d0\u793a \u5bf9\u4e8e\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u7684\u6587\u6863\u6bd4\u8f83\u6742\uff0c\u8981\u60f3\u5b8c\u6574\u4e86\u89e3\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684 godoc \u6587\u6863\uff0c\u5730\u5740: https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta3 \u3002 \u5728\u5f00\u59cb\u521d\u59cb\u5316\u96c6\u7fa4\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528 kubeadm config images pull --config kubeadm.yaml \u9884\u5148\u5728\u5404\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u4e0a\u62c9\u53d6\u6240k8s\u9700\u8981\u7684\u5bb9\u5668\u955c\u50cf\u3002 \u914d\u7f6e\u6587\u4ef6\u51c6\u5907\u597d\u8fc7\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5148\u5c06\u76f8\u5173\u955c\u50cf pull \u4e0b\u9762\uff1a \u279c ~ kubeadm config images pull --config kubeadm.yaml [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-apiserver:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-controller-manager:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-scheduler:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-proxy:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/pause:3.5 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/etcd:3.5.0-0 failed to pull image \"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\" : output: time = \"2021-10-25T17:34:48+08:00\" level = fatal msg = \"pulling image: rpc error: code = NotFound desc = failed to pull and unpack image \\\"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\\\": failed to resolve reference \\\"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\\\": registry.aliyuncs.com/k8sxio/coredns:v1.8.4: not found\" , error: exit status 1 To see the stack trace of this error execute with --v = 5 or higher \u4e0a\u9762\u5728\u62c9\u53d6 coredns \u955c\u50cf\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff0c\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u955c\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8 pull \u8be5\u955c\u50cf\uff0c\u7136\u540e\u91cd\u65b0 tag \u4e0b\u955c\u50cf\u5730\u5740\u5373\u53ef\uff1a \u279c ~ ctr -n k8s.io i pull docker.io/coredns/coredns:1.8.4 docker.io/coredns/coredns:1.8.4: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:10683d82b024a58cc248c468c2632f9d1b260500f7cd9bb8e73f751048d7d6d4: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:bc38a22c706b427217bcbd1a7ac7c8873e75efdd0e59d6b9f069b4b243db4b4b: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:c6568d217a0023041ef9f729e8836b19f863bcdb612bb3a329ebc165539f5a80: exists | ++++++++++++++++++++++++++++++++++++++ | elapsed: 12 .4s total: 12 .0 M ( 991 .3 KiB/s ) unpacking linux/amd64 sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890... done : 410 .185888ms \u279c ~ ctr -n k8s.io i tag docker.io/coredns/coredns:1.8.4 registry.aliyuncs.com/k8sxio/coredns:v1.8.4 \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u5728 master \u8282\u70b9\u4e0a\u8fdb\u884c\u521d\u59cb\u5316\uff1a \u279c ~ kubeadm init --config kubeadm.yaml --v = 5 [ init ] Using Kubernetes version: v1.22.2 [ preflight ] Running pre-flight checks [ preflight ] Pulling images required for setting up a Kubernetes cluster [ preflight ] This might take a minute or two, depending on the speed of your internet connection [ preflight ] You can also perform this action in beforehand using 'kubeadm config images pull' [ certs ] Using certificateDir folder \"/etc/kubernetes/pki\" [ certs ] Generating \"ca\" certificate and key [ certs ] Generating \"apiserver\" certificate and key [ certs ] apiserver serving cert is signed for DNS names [ kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master1 ] and IPs [ 10 .96.0.1 192 .168.31.31 ] [ certs ] Generating \"apiserver-kubelet-client\" certificate and key [ certs ] Generating \"front-proxy-ca\" certificate and key [ certs ] Generating \"front-proxy-client\" certificate and key [ certs ] Generating \"etcd/ca\" certificate and key [ certs ] Generating \"etcd/server\" certificate and key [ certs ] etcd/server serving cert is signed for DNS names [ localhost master1 ] and IPs [ 192 .168.31.31 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/peer\" certificate and key [ certs ] etcd/peer serving cert is signed for DNS names [ localhost master1 ] and IPs [ 192 .168.31.31 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/healthcheck-client\" certificate and key [ certs ] Generating \"apiserver-etcd-client\" certificate and key [ certs ] Generating \"sa\" key and public key [ kubeconfig ] Using kubeconfig folder \"/etc/kubernetes\" [ kubeconfig ] Writing \"admin.conf\" kubeconfig file [ kubeconfig ] Writing \"kubelet.conf\" kubeconfig file [ kubeconfig ] Writing \"controller-manager.conf\" kubeconfig file [ kubeconfig ] Writing \"scheduler.conf\" kubeconfig file [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Starting the kubelet [ control-plane ] Using manifest folder \"/etc/kubernetes/manifests\" [ control-plane ] Creating static Pod manifest for \"kube-apiserver\" [ control-plane ] Creating static Pod manifest for \"kube-controller-manager\" [ control-plane ] Creating static Pod manifest for \"kube-scheduler\" [ etcd ] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\" [ wait-control-plane ] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\" . This can take up to 4m0s [ apiclient ] All control plane components are healthy after 12 .004224 seconds [ upload-config ] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace [ kubelet ] Creating a ConfigMap \"kubelet-config-1.22\" in namespace kube-system with the configuration for the kubelets in the cluster [ upload-certs ] Skipping phase. Please see --upload-certs [ mark-control-plane ] Marking the node master1 as control-plane by adding the labels: [ node-role.kubernetes.io/master ( deprecated ) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers ] [ mark-control-plane ] Marking the node master1 as control-plane by adding the taints [ node-role.kubernetes.io/master:NoSchedule ] [ bootstrap-token ] Using token: abcdef.0123456789abcdef [ bootstrap-token ] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to get nodes [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials [ bootstrap-token ] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token [ bootstrap-token ] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster [ bootstrap-token ] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace [ kubelet-finalize ] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key [ addons ] Applied essential addon: CoreDNS [ addons ] Applied essential addon: kube-proxy Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG = /etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192 .168.0.186:6443 --token abcdef.0123456789abcdef \\ --discovery-token-ca-cert-hash sha256:ca0c87226c69309d7779096c15b6a41e14b077baf4650bfdb6f9d3178d4da645 \u6839\u636e\u5b89\u88c5\u63d0\u793a\u62f7\u8d1d kubeconfig \u6587\u4ef6\uff1a \u279c ~ mkdir -p $HOME /.kube \u279c ~ sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config \u279c ~ sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u67e5\u770b master \u8282\u70b9\u5df2\u7ecf\u521d\u59cb\u5316\u6210\u529f\u4e86\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION k8sm Ready control-plane,master 41s v1.22.2 \u6dfb\u52a0\u8282\u70b9 \u00b6 \u8bb0\u4f4f\u521d\u59cb\u5316\u96c6\u7fa4\u4e0a\u9762\u7684\u914d\u7f6e\u548c\u64cd\u4f5c\u8981\u63d0\u524d\u505a\u597d\uff0c\u5c06 master \u8282\u70b9\u4e0a\u9762\u7684 $HOME/.kube/config \u6587\u4ef6\u62f7\u8d1d\u5230 node \u8282\u70b9\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\uff0c\u5b89\u88c5 kubeadm\u3001kubelet\u3001kubectl\uff08\u53ef\u9009\uff09\uff0c\u7136\u540e\u6267\u884c\u4e0a\u9762\u521d\u59cb\u5316\u5b8c\u6210\u540e\u63d0\u793a\u7684 join \u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ kubeadm join 192 .168.31.31:6443 --token abcdef.0123456789abcdef \\ > --discovery-token-ca-cert-hash sha256:ca0c87226c69309d7779096c15b6a41e14b077baf4650bfdb6f9d3178d4da645 [ preflight ] Running pre-flight checks [ preflight ] Reading configuration from the cluster... [ preflight ] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml' [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Starting the kubelet [ kubelet-start ] Waiting for the kubelet to perform the TLS Bootstrap... This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster. join \u547d\u4ee4 \u5982\u679c\u5fd8\u8bb0\u4e86\u4e0a\u9762\u7684 join \u547d\u4ee4\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 kubeadm token create --print-join-command \u91cd\u65b0\u83b7\u53d6\u3002 \u6267\u884c\u6210\u529f\u540e\u8fd0\u884c get nodes \u547d\u4ee4\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION k8sm Ready control-plane,master 2m35s v1.22.2 k8sn1 Ready <none> 45s v1.22.2 \u8fd9\u4e2a\u65f6\u5019\u5176\u5b9e\u96c6\u7fa4\u8fd8\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u56e0\u4e3a\u8fd8\u6ca1\u6709\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6\uff0c\u63a5\u4e0b\u6765\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5728\u6587\u6863 https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/ \u4e2d\u9009\u62e9\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u5b89\u88c5 flannel: \u279c ~ wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml # \u5982\u679c\u6709\u8282\u70b9\u662f\u591a\u7f51\u5361\uff0c\u5219\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6307\u5b9a\u5185\u7f51\u7f51\u5361 # \u641c\u7d22\u5230\u540d\u4e3a kube-flannel-ds \u7684 DaemonSet\uff0c\u5728kube-flannel\u5bb9\u5668\u4e0b\u9762 \u279c ~ vi kube-flannel.yml ...... containers: - name: kube-flannel image: quay.io/coreos/flannel:v0.15.0 command: - /opt/bin/flanneld args: - --ip-masq - --kube-subnet-mgr - --iface = eth0 # \u5982\u679c\u662f\u591a\u7f51\u5361\u7684\u8bdd\uff0c\u6307\u5b9a\u5185\u7f51\u7f51\u5361\u7684\u540d\u79f0 ...... \u279c ~ kubectl apply -f kube-flannel.yml # \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6 \u9694\u4e00\u4f1a\u513f\u67e5\u770b Pod \u8fd0\u884c\u72b6\u6001\uff1a \u279c ~ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE coredns-7568f67dbd-5mg59 1 /1 Running 0 8m32s coredns-7568f67dbd-b685t 1 /1 Running 0 8m31s etcd-master 1 /1 Running 0 66m kube-apiserver-master 1 /1 Running 0 66m kube-controller-manager-master 1 /1 Running 0 66m kube-flannel-ds-dsbt6 1 /1 Running 0 11m kube-flannel-ds-zwlm6 1 /1 Running 0 11m kube-proxy-jq84n 1 /1 Running 0 66m kube-proxy-x4hbv 1 /1 Running 0 19m kube-scheduler-master 1 /1 Running 0 66m Flannel \u7f51\u7edc\u63d2\u4ef6 \u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u7f51\u7edc\u63d2\u4ef6\u540e\u6267\u884c ifconfig \u547d\u4ee4\uff0c\u6b63\u5e38\u4f1a\u770b\u5230\u65b0\u589e\u7684 cni0 \u4e0e flannel1 \u8fd9\u4e24\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u770b\u5230 cni0 \u8fd9\u4e2a\u8bbe\u5907\u4e5f\u4e0d\u7528\u592a\u62c5\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf /var/lib/cni \u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5e76\u4e0d\u662f\u8bf4\u90e8\u7f72\u6709\u95ee\u9898\uff0c\u800c\u662f\u8be5\u8282\u70b9\u4e0a\u6682\u65f6\u8fd8\u6ca1\u6709\u5e94\u7528\u8fd0\u884c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u5c31\u53ef\u4ee5\u770b\u5230\u8be5\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\uff0c\u5e76\u4e14 cni0 \u8bbe\u5907\u4e5f\u4f1a\u88ab\u521b\u5efa\u51fa\u6765\u3002 \u7528\u540c\u6837\u7684\u65b9\u6cd5\u6dfb\u52a0\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\u3002 Dashboard \u00b6 v1.22.2 \u7248\u672c\u7684\u96c6\u7fa4\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 2.0+ \u7248\u672c\u7684 Dashboard\uff1a # \u63a8\u8350\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f \u279c ~ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml \u279c ~ vi recommended.yaml # \u4fee\u6539Service\u4e3aNodePort\u7c7b\u578b ...... kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort # \u52a0\u4e0atype=NodePort\u53d8\u6210NodePort\u7c7b\u578b\u7684\u670d\u52a1 ...... \u76d1\u63a7\u7ec4\u4ef6 \u5728 YAML \u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u5230\u65b0\u7248\u672c Dashboard \u96c6\u6210\u4e86\u4e00\u4e2a metrics-scraper \u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7 Kubernetes \u7684 Metrics API \u6536\u96c6\u4e00\u4e9b\u57fa\u7840\u8d44\u6e90\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u5e76\u5728 web \u9875\u9762\u4e0a\u5c55\u793a\uff0c\u6240\u4ee5\u8981\u60f3\u5728\u9875\u9762\u4e0a\u5c55\u793a\u76d1\u63a7\u4fe1\u606f\u5c31\u9700\u8981\u63d0\u4f9b Metrics API\uff0c\u6bd4\u5982\u5b89\u88c5 Metrics Server\u3002 \u76f4\u63a5\u521b\u5efa\uff1a \u279c ~ kubectl apply -f recommended.yaml \u65b0\u7248\u672c\u7684 Dashboard \u4f1a\u88ab\u9ed8\u8ba4\u5b89\u88c5\u5728 kubernetes-dashboard \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff1a \u279c ~ kubectl get pods -n kubernetes-dashboard -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES dashboard-metrics-scraper-856586f554-pllvt 1 /1 Running 0 24m 10 .88.0.7 k8sm <none> <none> kubernetes-dashboard-76597d7df5-82998 1 /1 Running 0 21m 10 .88.0.2 k8sn2 <none> <none> \u6211\u4eec\u4ed4\u7ec6\u770b\u53ef\u4ee5\u53d1\u73b0\u4e0a\u9762\u7684 Pod \u5206\u914d\u7684 IP \u6bb5\u662f 10.88.xx.xx \uff0c\u5305\u62ec\u524d\u9762\u81ea\u52a8\u5b89\u88c5\u7684 CoreDNS \u4e5f\u662f\u5982\u6b64\uff0c\u6211\u4eec\u524d\u9762\u4e0d\u662f\u914d\u7f6e\u7684 podSubnet \u4e3a 10.244.0.0/16 \u5417\uff1f\u6211\u4eec\u5148\u53bb\u67e5\u770b\u4e0b CNI \u7684\u914d\u7f6e\u6587\u4ef6\uff1a \u279c ~ ls -la /etc/cni/net.d/ total 8 drwxr-xr-x 2 1001 docker 67 Aug 31 16 :45 . drwxr-xr-x. 3 1001 docker 19 Jul 30 01 :13 .. -rw-r--r-- 1 1001 docker 604 Jul 30 01 :13 10 -containerd-net.conflist -rw-r--r-- 1 root root 292 Aug 31 16 :45 10 -flannel.conflist \u53ef\u4ee5\u770b\u5230\u91cc\u9762\u5305\u542b\u4e24\u4e2a\u914d\u7f6e\uff0c\u4e00\u4e2a\u662f 10-containerd-net.conflist \uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Flannel \u7f51\u7edc\u63d2\u4ef6\u751f\u6210\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u7684\u9700\u6c42\u80af\u5b9a\u662f\u60f3\u4f7f\u7528 Flannel \u7684\u8fd9\u4e2a\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b containerd \u8fd9\u4e2a\u81ea\u5e26\u7684 cni \u63d2\u4ef6\u914d\u7f6e\uff1a \u279c ~ cat /etc/cni/net.d/10-containerd-net.conflist { \"cniVersion\" : \"0.4.0\" , \"name\" : \"containerd-net\" , \"plugins\" : [ { \"type\" : \"bridge\" , \"bridge\" : \"cni0\" , \"isGateway\" : true, \"ipMasq\" : true, \"promiscMode\" : true, \"ipam\" : { \"type\" : \"host-local\" , \"ranges\" : [ [{ \"subnet\" : \"10.88.0.0/16\" }] , [{ \"subnet\" : \"2001:4860:4860::/64\" }] ] , \"routes\" : [ { \"dst\" : \"0.0.0.0/0\" } , { \"dst\" : \"::/0\" } ] } } , { \"type\" : \"portmap\" , \"capabilities\" : { \"portMappings\" : true } } ] } \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684 IP \u6bb5\u6070\u597d\u5c31\u662f 10.88.0.0/16 \uff0c\u4f46\u662f\u8fd9\u4e2a cni \u63d2\u4ef6\u7c7b\u578b\u662f bridge \u7f51\u7edc\uff0c\u7f51\u6865\u7684\u540d\u79f0\u4e3a cni0 \uff1a \u279c ~ ip a ... 6 : cni0: <BROADCAST,MULTICAST,PROMISC,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether 9a:e7:eb:40:e8:66 brd ff:ff:ff:ff:ff:ff inet 10 .88.0.1/16 brd 10 .88.255.255 scope global cni0 valid_lft forever preferred_lft forever inet6 2001 :4860:4860::1/64 scope global valid_lft forever preferred_lft forever inet6 fe80::98e7:ebff:fe40:e866/64 scope link valid_lft forever preferred_lft forever ... \u4f46\u662f\u4f7f\u7528 bridge \u7f51\u7edc\u7684\u5bb9\u5668\u65e0\u6cd5\u8de8\u591a\u4e2a\u5bbf\u4e3b\u673a\u8fdb\u884c\u901a\u4fe1\uff0c\u8de8\u4e3b\u673a\u901a\u4fe1\u9700\u8981\u501f\u52a9\u5176\u4ed6\u7684 cni \u63d2\u4ef6\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u5b89\u88c5\u7684 Flannel\uff0c\u6216\u8005 Calico \u7b49\u7b49\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6709\u4e24\u4e2a cni \u914d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06 10-containerd-net.conflist \u8fd9\u4e2a\u914d\u7f6e\u5220\u9664\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6709\u591a\u4e2a cni \u914d\u7f6e\u6587\u4ef6\uff0ckubelet \u5c06\u4f1a\u4f7f\u7528\u6309\u6587\u4ef6\u540d\u7684\u5b57\u5178\u987a\u5e8f\u6392\u5217\u7684\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u524d\u9762\u9ed8\u8ba4\u9009\u62e9\u4f7f\u7528\u7684\u662f containerd-net \u8fd9\u4e2a\u63d2\u4ef6\u3002 \u279c ~ mv /etc/cni/net.d/10-containerd-net.conflist /etc/cni/net.d/10-containerd-net.conflist.bak \u279c ~ ifconfig cni0 down && ip link delete cni0 \u279c ~ systemctl daemon-reload \u279c ~ systemctl restart containerd kubelet \u7136\u540e\u8bb0\u5f97\u91cd\u5efa coredns \u548c dashboard \u7684 Pod\uff0c\u91cd\u5efa\u540e Pod \u7684 IP \u5730\u5740\u5c31\u6b63\u5e38\u4e86\uff1a \u279c ~ kubectl get pods -n kubernetes-dashboard -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES dashboard-metrics-scraper-856586f554-tp8m5 1 /1 Running 0 42s 10 .244.1.6 k8sn2 <none> <none> kubernetes-dashboard-76597d7df5-9rmbx 1 /1 Running 0 66s 10 .244.1.5 k8sn2 <none> <none> \u279c ~ kubectl get pods -n kube-system -o wide -l k8s-app = kube-dns NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES coredns-7568f67dbd-n7bfx 1 /1 Running 0 5m40s 10 .244.1.2 k8sn2 <none> <none> coredns-7568f67dbd-plrv8 1 /1 Running 0 3m47s 10 .244.1.4 k8sn2 <none> <none> \u67e5\u770b Dashboard \u7684 NodePort \u7aef\u53e3\uff1a \u279c ~ kubectl get svc -n kubernetes-dashboard NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE dashboard-metrics-scraper ClusterIP 10 .99.37.172 <none> 8000 /TCP 25m kubernetes-dashboard NodePort 10 .103.102.27 <none> 443 :31050/TCP 25m \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 31050 \u7aef\u53e3\u53bb\u8bbf\u95ee Dashboard\uff0c\u8981\u8bb0\u4f4f\u4f7f\u7528 https\uff0cChrome \u4e0d\u751f\u6548\u53ef\u4ee5\u4f7f\u7528Firefox \u6d4b\u8bd5\uff0c\u5982\u679c\u6ca1\u6709 Firefox \u4e0b\u9762\u6253\u4e0d\u5f00\u9875\u9762\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9875\u9762\u4e2d\u7684 \u4fe1\u4efb\u8bc1\u4e66 \u5373\u53ef\uff1a \u4fe1\u4efb\u540e\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230 Dashboard \u7684\u767b\u5f55\u9875\u9762\u4e86\uff1a \u7136\u540e\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u5168\u5c40\u6240\u6709\u6743\u9650\u7684\u7528\u6237\u6765\u767b\u5f55 Dashboard\uff1a(admin.yaml) kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : admin roleRef : kind : ClusterRole name : cluster-admin apiGroup : rbac.authorization.k8s.io subjects : - kind : ServiceAccount name : admin namespace : kubernetes-dashboard --- apiVersion : v1 kind : ServiceAccount metadata : name : admin namespace : kubernetes-dashboard \u76f4\u63a5\u521b\u5efa\uff1a \u279c ~ kubectl apply -f admin.yaml \u279c ~ kubectl get secret -n kubernetes-dashboard | grep admin-token admin-token-lwmmx kubernetes.io/service-account-token 3 1d \u279c ~ kubectl get secret admin-token-lwmmx -o jsonpath ={ .data.token } -n kubernetes-dashboard | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u7136\u540e\u7528\u4e0a\u9762\u7684 base64 \u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a token \u767b\u5f55 Dashboard \u5373\u53ef\uff0c\u65b0\u7248\u672c\u8fd8\u65b0\u589e\u4e86\u4e00\u4e2a\u6697\u9ed1\u6a21\u5f0f\uff1a \u6700\u7ec8, \u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 kubeadm \u642d\u5efa v1.22.2 \u7248\u672c\u7684 kubernetes \u96c6\u7fa4\u3001coredns\u3001ipvs\u3001flannel\u3001containerd\u3002 \u6e05\u7406 \u00b6 \u5982\u679c\u4f60\u7684\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u91cd\u7f6e\uff1a \u279c ~ kubeadm reset \u279c ~ ifconfig cni0 down && ip link delete cni0 \u279c ~ ifconfig flannel.1 down && ip link delete flannel.1 \u279c ~ rm -rf /var/lib/cni/","title":"\u96c6\u7fa4\u90e8\u7f72"},{"location":"Foundation/K8s%20Installation/#_1","text":"\u4f7f\u7528 containerd \u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u65f6\u642d\u5efa Kubernetes \u96c6\u7fa4 \u73b0\u5728\u6211\u4eec\u4f7f\u7528 kubeadm \u4ece\u5934\u642d\u5efa\u4e00\u4e2a\u4f7f\u7528 containerd \u4f5c\u4e3a\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 Kubernetes \u96c6\u7fa4\uff0c\u8fd9\u91cc\u6211\u4eec\u5b89\u88c5\u6700\u65b0\u7684 v1.22.2 \u7248\u672c\u3002","title":"\u96c6\u7fa4\u90e8\u7f72"},{"location":"Foundation/K8s%20Installation/#_2","text":"3\u4e2a\u8282\u70b9\uff0c\u90fd\u662f Centos 7.6 \u7cfb\u7edf\uff0c\u5185\u6838\u7248\u672c\uff1a3.10.0-1062.4.1.el7.x86_64\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6dfb\u52a0 hosts \u4fe1\u606f\uff1a \u279c ~ cat /etc/hosts 192 .168.0.186 k8sm 192 .168.0.187 k8sn1 192 .168.0.188 k8sn2 hostname \u8282\u70b9\u7684 hostname \u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff0c\u53e6\u5916\u5343\u4e07\u4e0d\u7528\u4ec0\u4e48\u9ed8\u8ba4\u7684 localhost \u7684 hostname\uff0c\u4f1a\u5bfc\u81f4\u5404\u79cd\u9519\u8bef\u51fa\u73b0\u7684\u3002\u5728 Kubernetes \u9879\u76ee\u91cc\uff0c\u673a\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4e00\u5207\u5b58\u50a8\u5728 Etcd \u4e2d\u7684 API \u5bf9\u8c61\uff0c\u90fd\u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff08RFC 1123\uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hostnamectl set-hostname node1 \u6765\u4fee\u6539 hostname\u3002 \u7981\u7528\u9632\u706b\u5899\uff1a \u279c ~ systemctl stop firewalld \u279c ~ systemctl disable firewalld \u7981\u7528 SELINUX\uff1a \u279c ~ setenforce 0 \u279c ~ cat /etc/selinux/config SELINUX = disabled \u7531\u4e8e\u5f00\u542f\u5185\u6838 ipv4 \u8f6c\u53d1\u9700\u8981\u52a0\u8f7d br_netfilter \u6a21\u5757\uff0c\u6240\u4ee5\u52a0\u8f7d\u4e0b\u8be5\u6a21\u5757\uff1a \u279c ~ modprobe br_netfilter \u521b\u5efa /etc/sysctl.d/k8s.conf \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 bridge-nf bridge-nf \u4f7f\u5f97 netfilter \u53ef\u4ee5\u5bf9 Linux \u7f51\u6865\u4e0a\u7684 IPv4/ARP/IPv6 \u5305\u8fc7\u6ee4\u3002\u6bd4\u5982\uff0c\u8bbe\u7f6e net.bridge.bridge-nf-call-iptables\uff1d1 \u540e\uff0c\u4e8c\u5c42\u7684\u7f51\u6865\u5728\u8f6c\u53d1\u5305\u65f6\u4e5f\u4f1a\u88ab iptables\u7684 FORWARD \u89c4\u5219\u6240\u8fc7\u6ee4\u3002\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a net.bridge.bridge-nf-call-arptables\uff1a\u662f\u5426\u5728 arptables \u7684 FORWARD \u4e2d\u8fc7\u6ee4\u7f51\u6865\u7684 ARP \u5305 net.bridge.bridge-nf-call-ip6tables\uff1a\u662f\u5426\u5728 ip6tables \u94fe\u4e2d\u8fc7\u6ee4 IPv6 \u5305 net.bridge.bridge-nf-call-iptables\uff1a\u662f\u5426\u5728 iptables \u94fe\u4e2d\u8fc7\u6ee4 IPv4 \u5305 net.bridge.bridge-nf-filter-vlan-tagged\uff1a\u662f\u5426\u5728 iptables/arptables \u4e2d\u8fc7\u6ee4\u6253\u4e86 vlan \u6807\u7b7e\u7684\u5305\u3002 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4f7f\u4fee\u6539\u751f\u6548\uff1a \u279c ~ sysctl -p /etc/sysctl.d/k8s.conf \u5b89\u88c5 ipvs\uff1a \u279c ~ cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF \u279c ~ chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u4e0a\u9762\u811a\u672c\u521b\u5efa\u4e86\u7684 /etc/sysconfig/modules/ipvs.modules \u6587\u4ef6\uff0c\u4fdd\u8bc1\u5728\u8282\u70b9\u91cd\u542f\u540e\u80fd\u81ea\u52a8\u52a0\u8f7d\u6240\u9700\u6a21\u5757\u3002\u4f7f\u7528 lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u547d\u4ee4\u67e5\u770b\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u52a0\u8f7d\u6240\u9700\u7684\u5185\u6838\u6a21\u5757\u3002 \u63a5\u4e0b\u6765\u8fd8\u9700\u8981\u786e\u4fdd\u5404\u4e2a\u8282\u70b9\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 ipset \u8f6f\u4ef6\u5305\uff1a \u279c ~ yum install ipset \u4e3a\u4e86\u4fbf\u4e8e\u67e5\u770b ipvs \u7684\u4ee3\u7406\u89c4\u5219\uff0c\u6700\u597d\u5b89\u88c5\u4e00\u4e0b\u7ba1\u7406\u5de5\u5177 ipvsadm\uff1a \u279c ~ yum install ipvsadm \u540c\u6b65\u670d\u52a1\u5668\u65f6\u95f4 \u279c ~ yum install chrony -y \u279c ~ systemctl enable chronyd \u279c ~ systemctl start chronyd \u279c ~ chronyc sources 210 Number of sources = 4 MS Name/IP address Stratum Poll Reach LastRx Last sample =============================================================================== ^+ sv1.ggsrv.de 2 6 17 32 -823us [ -1128us ] +/- 98ms ^- montreal.ca.logiplex.net 2 6 17 32 -17ms [ -17ms ] +/- 179ms ^- ntp6.flashdance.cx 2 6 17 32 -32ms [ -32ms ] +/- 161ms ^* 119 .28.183.184 2 6 33 32 +661us [ +357us ] +/- 38ms \u279c ~ date Tue Aug 31 14 :36:14 CST 2021 \u5173\u95ed swap \u5206\u533a\uff1a \u279c ~ swapoff -a \u4fee\u6539 /etc/fstab \u6587\u4ef6\uff0c\u6ce8\u91ca\u6389 SWAP \u7684\u81ea\u52a8\u6302\u8f7d\uff0c\u4f7f\u7528free -m\u786e\u8ba4 swap \u5df2\u7ecf\u5173\u95ed\u3002swappiness \u53c2\u6570\u8c03\u6574\uff0c\u4fee\u6539 /etc/sysctl.d/k8s.conf \u6dfb\u52a0\u4e0b\u9762\u4e00\u884c\uff1a vm.swappiness = 0 \u6267\u884c sysctl -p /etc/sysctl.d/k8s.conf \u4f7f\u4fee\u6539\u751f\u6548\u3002","title":"\u73af\u5883\u51c6\u5907"},{"location":"Foundation/K8s%20Installation/#containerd","text":"\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6 containerd \u7684\u4e00\u4e9b\u57fa\u672c\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u5728\u5404\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5 Containerd\u3002 \u7531\u4e8e containerd \u9700\u8981\u8c03\u7528 runc\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5148\u5b89\u88c5 runc\uff0c\u4e0d\u8fc7 containerd \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5305\u542b\u76f8\u5173\u4f9d\u8d56\u7684\u538b\u7f29\u5305 cri-containerd-cni-${VERSION}.${OS}-${ARCH}.tar.gz \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5305\u6765\u8fdb\u884c\u5b89\u88c5\u3002\u9996\u5148\u4ece release \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u538b\u7f29\u5305\uff0c\u5f53\u524d\u4e3a 1.5.5 \u7248\u672c\uff1a \u279c ~ wget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz # \u5982\u679c\u6709\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e0b\u9762\u7684 URL \u52a0\u901f\u4e0b\u8f7d # wget https://download.fastgit.org/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u76f4\u63a5\u5c06\u538b\u7f29\u5305\u89e3\u538b\u5230\u7cfb\u7edf\u7684\u5404\u4e2a\u76ee\u5f55\u4e2d\uff1a \u279c ~ tar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz \u7136\u540e\u8981\u5c06 /usr/local/bin \u548c /usr/local/sbin \u8ffd\u52a0\u5230 ~/.bashrc \u6587\u4ef6\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff1a export PATH = $PATH :/usr/local/bin:/usr/local/sbin \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4f7f\u5176\u7acb\u5373\u751f\u6548\uff1a \u279c ~ source ~/.bashrc containerd \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a /etc/containerd/config.toml \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u914d\u7f6e\uff1a \u279c ~ mkdir -p /etc/containerd \u279c ~ containerd config default > /etc/containerd/config.toml \u5bf9\u4e8e\u4f7f\u7528 systemd \u4f5c\u4e3a init system \u7684 Linux \u7684\u53d1\u884c\u7248\uff0c\u4f7f\u7528 systemd \u4f5c\u4e3a\u5bb9\u5668\u7684 cgroup driver \u53ef\u4ee5\u786e\u4fdd\u8282\u70b9\u5728\u8d44\u6e90\u7d27\u5f20\u7684\u60c5\u51b5\u66f4\u52a0\u7a33\u5b9a\uff0c\u6240\u4ee5\u63a8\u8350\u5c06 containerd \u7684 cgroup driver \u914d\u7f6e\u4e3a systemd\u3002 \u4fee\u6539\u524d\u9762\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6 /etc/containerd/config.toml \uff0c\u5728 plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options \u914d\u7f6e\u5757\u4e0b\u9762\u5c06 SystemdCgroup \u8bbe\u7f6e\u4e3a true \uff1a [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc] ... [plugins. \"io.containerd.grpc.v1.cri\" .containerd.runtimes.runc.options] SystemdCgroup = true .... \u7136\u540e\u518d\u4e3a\u955c\u50cf\u4ed3\u5e93\u914d\u7f6e\u4e00\u4e2a\u52a0\u901f\u5668\uff0c\u9700\u8981\u5728 cri \u914d\u7f6e\u5757\u4e0b\u9762\u7684 registry \u914d\u7f6e\u5757\u4e0b\u9762\u8fdb\u884c\u914d\u7f6e registry.mirrors \uff1a [plugins. \"io.containerd.grpc.v1.cri\" ] ... # sandbox_image = \"k8s.gcr.io/pause:3.5\" sandbox_image = \"registry.aliyuncs.com/k8sxio/pause:3.5\" ... [plugins. \"io.containerd.grpc.v1.cri\" .registry] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"docker.io\" ] endpoint = [ \"https://bqr1dr1n.mirror.aliyuncs.com\" ] [plugins. \"io.containerd.grpc.v1.cri\" .registry.mirrors. \"k8s.gcr.io\" ] endpoint = [ \"https://registry.aliyuncs.com/k8sxio\" ] Warning \u5982\u679c\u6211\u4eec\u7684\u8282\u70b9\u4e0d\u80fd\u6b63\u5e38\u83b7\u53d6 k8s.gcr.io \u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u4e0a\u9762\u91cd\u65b0\u914d\u7f6e sandbox_image \u955c\u50cf\uff0c\u5426\u5219\u540e\u9762 kubelet \u8986\u76d6\u8be5\u955c\u50cf\u4e0d\u4f1a\u751f\u6548\uff1a Warning: For remote container runtime, --pod-infra-container-image is ignored in kubelet, which should be set in that remote runtime instead\u3002 \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u4e0b\u8f7d\u7684 containerd \u538b\u7f29\u5305\u4e2d\u5305\u542b\u4e00\u4e2a etc/systemd/system/containerd.service \u7684\u6587\u4ef6\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 systemd \u6765\u914d\u7f6e containerd \u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8 containerd \u4e86\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ systemctl daemon-reload \u279c ~ systemctl enable containerd --now \u542f\u52a8\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 containerd \u7684\u672c\u5730 CLI \u5de5\u5177 ctr \u548c crictl \u4e86\uff0c\u6bd4\u5982\u67e5\u770b\u7248\u672c\uff1a \u279c ~ ctr version Client: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 Go version: go1.16.6 Server: Version: v1.5.5 Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0 UUID: cd2894ad-fd71-4ef7-a09f-5795c7eb4c3b \u279c ~ crictl version Version: 0 .1.0 RuntimeName: containerd RuntimeVersion: v1.5.5 RuntimeApiVersion: v1alpha2","title":"\u5b89\u88c5 Containerd"},{"location":"Foundation/K8s%20Installation/#kubeadm-kubernetes","text":"\u4e0a\u9762\u7684\u76f8\u5173\u73af\u5883\u914d\u7f6e\u4e5f\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Kubeadm \u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u901a\u8fc7\u6307\u5b9ayum \u6e90\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\u7684\uff1a \u279c ~ cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF \u5f53\u7136\u4e86\uff0c\u4e0a\u9762\u7684 yum \u6e90\u662f\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u79d1\u5b66\u4e0a\u7f51\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u963f\u91cc\u4e91\u7684\u6e90\u8fdb\u884c\u5b89\u88c5\uff1a \u279c ~ cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF \u7136\u540e\u5b89\u88c5 kubeadm\u3001kubelet\u3001kubectl\uff1a # --disableexcludes \u7981\u6389\u9664\u4e86kubernetes\u4e4b\u5916\u7684\u522b\u7684\u4ed3\u5e93 \u279c ~ yum makecache fast \u279c ~ yum install -y kubelet-1.22.2 kubeadm-1.22.2 kubectl-1.22.2 --disableexcludes = kubernetes \u279c ~ kubeadm version kubeadm version: & version.Info { Major: \"1\" , Minor: \"22\" , GitVersion: \"v1.22.2\" , GitCommit: \"8b5a19147530eaac9476b0ab82980b4088bbc1b2\" , GitTreeState: \"clean\" , BuildDate: \"2021-09-15T21:37:34Z\" , GoVersion: \"go1.16.8\" , Compiler: \"gc\" , Platform: \"linux/amd64\" } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5b89\u88c5\u7684\u662f v1.22.2 \u7248\u672c\uff0c\u7136\u540e\u5c06 master \u8282\u70b9\u7684 kubelet \u8bbe\u7f6e\u6210\u5f00\u673a\u542f\u52a8\uff1a \u279c ~ systemctl enable --now kubelet Success \u5230\u8fd9\u91cc\u4e3a\u6b62\u4e0a\u9762\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u5728\u6240\u6709\u8282\u70b9\u6267\u884c\u914d\u7f6e\u3002","title":"\u4f7f\u7528 kubeadm \u90e8\u7f72 Kubernetes"},{"location":"Foundation/K8s%20Installation/#_3","text":"\u5f53\u6211\u4eec\u6267\u884c kubelet --help \u547d\u4ee4\u7684\u65f6\u5019\u53ef\u4ee5\u770b\u5230\u539f\u6765\u5927\u90e8\u5206\u547d\u4ee4\u884c\u53c2\u6570\u90fd\u88ab DEPRECATED \u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b98\u65b9\u63a8\u8350\u6211\u4eec\u4f7f\u7528 --config \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u539f\u6765\u8fd9\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u6587\u6863 Set Kubelet parameters via a config file \u4e86\u89e3\u66f4\u591a\u76f8\u5173\u4fe1\u606f\uff0c\u8fd9\u6837 Kubernetes \u5c31\u53ef\u4ee5\u652f\u6301\u52a8\u6001 Kubelet \u914d\u7f6e\uff08Dynamic Kubelet Configuration\uff09\u4e86\uff0c\u53c2\u8003 Reconfigure a Node\u2019s Kubelet in a Live Cluster \u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5728 master \u8282\u70b9\u4e0a\u8f93\u51fa\u96c6\u7fa4\u521d\u59cb\u5316\u9ed8\u8ba4\u4f7f\u7528\u7684\u914d\u7f6e\uff1a \u279c ~ kubeadm config print init-defaults --component-configs KubeletConfiguration > kubeadm.yaml \u7136\u540e\u6839\u636e\u6211\u4eec\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u914d\u7f6e\uff0c\u6bd4\u5982\u4fee\u6539 imageRepository \u6307\u5b9a\u96c6\u7fa4\u521d\u59cb\u5316\u65f6\u62c9\u53d6 Kubernetes \u6240\u9700\u955c\u50cf\u7684\u5730\u5740\uff0ckube-proxy \u7684\u6a21\u5f0f\u4e3a ipvs\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u662f\u51c6\u5907\u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6\u7684\uff0c\u9700\u8981\u5c06 networking.podSubnet \u8bbe\u7f6e\u4e3a 10.244.0.0/16 \uff1a # kubeadm.yaml apiVersion : kubeadm.k8s.io/v1beta3 bootstrapTokens : - groups : - system:bootstrappers:kubeadm:default-node-token token : abcdef.0123456789abcdef ttl : 24h0m0s usages : - signing - authentication kind : InitConfiguration localAPIEndpoint : advertiseAddress : 192.168.0.186 # \u6307\u5b9amaster\u8282\u70b9\u5185\u7f51IP bindPort : 6443 nodeRegistration : criSocket : /run/containerd/containerd.sock # \u4f7f\u7528 containerd\u7684Unix socket \u5730\u5740 imagePullPolicy : IfNotPresent name : master taints : # \u7ed9master\u6dfb\u52a0\u6c61\u70b9\uff0cmaster\u8282\u70b9\u4e0d\u80fd\u8c03\u5ea6\u5e94\u7528 - effect : \"NoSchedule\" key : \"node-role.kubernetes.io/master\" --- apiVersion : kubeproxy.config.k8s.io/v1alpha1 kind : KubeProxyConfiguration mode : ipvs # kube-proxy \u6a21\u5f0f --- apiServer : timeoutForControlPlane : 4m0s apiVersion : kubeadm.k8s.io/v1beta3 certificatesDir : /etc/kubernetes/pki clusterName : kubernetes controllerManager : {} dns : {} etcd : local : dataDir : /var/lib/etcd imageRepository : registry.aliyuncs.com/k8sxio kind : ClusterConfiguration kubernetesVersion : 1.22.2 networking : dnsDomain : cluster.local serviceSubnet : 10.96.0.0/12 podSubnet : 10.244.0.0/16 # \u6307\u5b9a pod \u5b50\u7f51 scheduler : {} --- apiVersion : kubelet.config.k8s.io/v1beta1 authentication : anonymous : enabled : false webhook : cacheTTL : 0s enabled : true x509 : clientCAFile : /etc/kubernetes/pki/ca.crt authorization : mode : Webhook webhook : cacheAuthorizedTTL : 0s cacheUnauthorizedTTL : 0s clusterDNS : - 10.96.0.10 clusterDomain : cluster.local cpuManagerReconcilePeriod : 0s evictionPressureTransitionPeriod : 0s fileCheckFrequency : 0s healthzBindAddress : 127.0.0.1 healthzPort : 10248 httpCheckFrequency : 0s imageMinimumGCAge : 0s kind : KubeletConfiguration cgroupDriver : systemd # \u914d\u7f6e cgroup driver logging : {} memorySwap : {} nodeStatusReportFrequency : 0s nodeStatusUpdateFrequency : 0s rotateCertificates : true runtimeRequestTimeout : 0s shutdownGracePeriod : 0s shutdownGracePeriodCriticalPods : 0s staticPodPath : /etc/kubernetes/manifests streamingConnectionIdleTimeout : 0s syncFrequency : 0s volumeStatsAggPeriod : 0s \u914d\u7f6e\u63d0\u793a \u5bf9\u4e8e\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u7684\u6587\u6863\u6bd4\u8f83\u6742\uff0c\u8981\u60f3\u5b8c\u6574\u4e86\u89e3\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7684 godoc \u6587\u6863\uff0c\u5730\u5740: https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta3 \u3002 \u5728\u5f00\u59cb\u521d\u59cb\u5316\u96c6\u7fa4\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528 kubeadm config images pull --config kubeadm.yaml \u9884\u5148\u5728\u5404\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u4e0a\u62c9\u53d6\u6240k8s\u9700\u8981\u7684\u5bb9\u5668\u955c\u50cf\u3002 \u914d\u7f6e\u6587\u4ef6\u51c6\u5907\u597d\u8fc7\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5148\u5c06\u76f8\u5173\u955c\u50cf pull \u4e0b\u9762\uff1a \u279c ~ kubeadm config images pull --config kubeadm.yaml [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-apiserver:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-controller-manager:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-scheduler:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/kube-proxy:v1.22.2 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/pause:3.5 [ config/images ] Pulled registry.aliyuncs.com/k8sxio/etcd:3.5.0-0 failed to pull image \"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\" : output: time = \"2021-10-25T17:34:48+08:00\" level = fatal msg = \"pulling image: rpc error: code = NotFound desc = failed to pull and unpack image \\\"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\\\": failed to resolve reference \\\"registry.aliyuncs.com/k8sxio/coredns:v1.8.4\\\": registry.aliyuncs.com/k8sxio/coredns:v1.8.4: not found\" , error: exit status 1 To see the stack trace of this error execute with --v = 5 or higher \u4e0a\u9762\u5728\u62c9\u53d6 coredns \u955c\u50cf\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff0c\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u955c\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8 pull \u8be5\u955c\u50cf\uff0c\u7136\u540e\u91cd\u65b0 tag \u4e0b\u955c\u50cf\u5730\u5740\u5373\u53ef\uff1a \u279c ~ ctr -n k8s.io i pull docker.io/coredns/coredns:1.8.4 docker.io/coredns/coredns:1.8.4: resolved | ++++++++++++++++++++++++++++++++++++++ | index-sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890: done | ++++++++++++++++++++++++++++++++++++++ | manifest-sha256:10683d82b024a58cc248c468c2632f9d1b260500f7cd9bb8e73f751048d7d6d4: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:bc38a22c706b427217bcbd1a7ac7c8873e75efdd0e59d6b9f069b4b243db4b4b: done | ++++++++++++++++++++++++++++++++++++++ | config-sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44: done | ++++++++++++++++++++++++++++++++++++++ | layer-sha256:c6568d217a0023041ef9f729e8836b19f863bcdb612bb3a329ebc165539f5a80: exists | ++++++++++++++++++++++++++++++++++++++ | elapsed: 12 .4s total: 12 .0 M ( 991 .3 KiB/s ) unpacking linux/amd64 sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890... done : 410 .185888ms \u279c ~ ctr -n k8s.io i tag docker.io/coredns/coredns:1.8.4 registry.aliyuncs.com/k8sxio/coredns:v1.8.4 \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u5728 master \u8282\u70b9\u4e0a\u8fdb\u884c\u521d\u59cb\u5316\uff1a \u279c ~ kubeadm init --config kubeadm.yaml --v = 5 [ init ] Using Kubernetes version: v1.22.2 [ preflight ] Running pre-flight checks [ preflight ] Pulling images required for setting up a Kubernetes cluster [ preflight ] This might take a minute or two, depending on the speed of your internet connection [ preflight ] You can also perform this action in beforehand using 'kubeadm config images pull' [ certs ] Using certificateDir folder \"/etc/kubernetes/pki\" [ certs ] Generating \"ca\" certificate and key [ certs ] Generating \"apiserver\" certificate and key [ certs ] apiserver serving cert is signed for DNS names [ kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master1 ] and IPs [ 10 .96.0.1 192 .168.31.31 ] [ certs ] Generating \"apiserver-kubelet-client\" certificate and key [ certs ] Generating \"front-proxy-ca\" certificate and key [ certs ] Generating \"front-proxy-client\" certificate and key [ certs ] Generating \"etcd/ca\" certificate and key [ certs ] Generating \"etcd/server\" certificate and key [ certs ] etcd/server serving cert is signed for DNS names [ localhost master1 ] and IPs [ 192 .168.31.31 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/peer\" certificate and key [ certs ] etcd/peer serving cert is signed for DNS names [ localhost master1 ] and IPs [ 192 .168.31.31 127 .0.0.1 ::1 ] [ certs ] Generating \"etcd/healthcheck-client\" certificate and key [ certs ] Generating \"apiserver-etcd-client\" certificate and key [ certs ] Generating \"sa\" key and public key [ kubeconfig ] Using kubeconfig folder \"/etc/kubernetes\" [ kubeconfig ] Writing \"admin.conf\" kubeconfig file [ kubeconfig ] Writing \"kubelet.conf\" kubeconfig file [ kubeconfig ] Writing \"controller-manager.conf\" kubeconfig file [ kubeconfig ] Writing \"scheduler.conf\" kubeconfig file [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Starting the kubelet [ control-plane ] Using manifest folder \"/etc/kubernetes/manifests\" [ control-plane ] Creating static Pod manifest for \"kube-apiserver\" [ control-plane ] Creating static Pod manifest for \"kube-controller-manager\" [ control-plane ] Creating static Pod manifest for \"kube-scheduler\" [ etcd ] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\" [ wait-control-plane ] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\" . This can take up to 4m0s [ apiclient ] All control plane components are healthy after 12 .004224 seconds [ upload-config ] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace [ kubelet ] Creating a ConfigMap \"kubelet-config-1.22\" in namespace kube-system with the configuration for the kubelets in the cluster [ upload-certs ] Skipping phase. Please see --upload-certs [ mark-control-plane ] Marking the node master1 as control-plane by adding the labels: [ node-role.kubernetes.io/master ( deprecated ) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers ] [ mark-control-plane ] Marking the node master1 as control-plane by adding the taints [ node-role.kubernetes.io/master:NoSchedule ] [ bootstrap-token ] Using token: abcdef.0123456789abcdef [ bootstrap-token ] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to get nodes [ bootstrap-token ] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials [ bootstrap-token ] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token [ bootstrap-token ] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster [ bootstrap-token ] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace [ kubelet-finalize ] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key [ addons ] Applied essential addon: CoreDNS [ addons ] Applied essential addon: kube-proxy Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG = /etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192 .168.0.186:6443 --token abcdef.0123456789abcdef \\ --discovery-token-ca-cert-hash sha256:ca0c87226c69309d7779096c15b6a41e14b077baf4650bfdb6f9d3178d4da645 \u6839\u636e\u5b89\u88c5\u63d0\u793a\u62f7\u8d1d kubeconfig \u6587\u4ef6\uff1a \u279c ~ mkdir -p $HOME /.kube \u279c ~ sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config \u279c ~ sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4\u67e5\u770b master \u8282\u70b9\u5df2\u7ecf\u521d\u59cb\u5316\u6210\u529f\u4e86\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION k8sm Ready control-plane,master 41s v1.22.2","title":"\u521d\u59cb\u5316\u96c6\u7fa4"},{"location":"Foundation/K8s%20Installation/#_4","text":"\u8bb0\u4f4f\u521d\u59cb\u5316\u96c6\u7fa4\u4e0a\u9762\u7684\u914d\u7f6e\u548c\u64cd\u4f5c\u8981\u63d0\u524d\u505a\u597d\uff0c\u5c06 master \u8282\u70b9\u4e0a\u9762\u7684 $HOME/.kube/config \u6587\u4ef6\u62f7\u8d1d\u5230 node \u8282\u70b9\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\uff0c\u5b89\u88c5 kubeadm\u3001kubelet\u3001kubectl\uff08\u53ef\u9009\uff09\uff0c\u7136\u540e\u6267\u884c\u4e0a\u9762\u521d\u59cb\u5316\u5b8c\u6210\u540e\u63d0\u793a\u7684 join \u547d\u4ee4\u5373\u53ef\uff1a \u279c ~ kubeadm join 192 .168.31.31:6443 --token abcdef.0123456789abcdef \\ > --discovery-token-ca-cert-hash sha256:ca0c87226c69309d7779096c15b6a41e14b077baf4650bfdb6f9d3178d4da645 [ preflight ] Running pre-flight checks [ preflight ] Reading configuration from the cluster... [ preflight ] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml' [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Starting the kubelet [ kubelet-start ] Waiting for the kubelet to perform the TLS Bootstrap... This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster. join \u547d\u4ee4 \u5982\u679c\u5fd8\u8bb0\u4e86\u4e0a\u9762\u7684 join \u547d\u4ee4\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 kubeadm token create --print-join-command \u91cd\u65b0\u83b7\u53d6\u3002 \u6267\u884c\u6210\u529f\u540e\u8fd0\u884c get nodes \u547d\u4ee4\uff1a \u279c ~ kubectl get nodes NAME STATUS ROLES AGE VERSION k8sm Ready control-plane,master 2m35s v1.22.2 k8sn1 Ready <none> 45s v1.22.2 \u8fd9\u4e2a\u65f6\u5019\u5176\u5b9e\u96c6\u7fa4\u8fd8\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u56e0\u4e3a\u8fd8\u6ca1\u6709\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6\uff0c\u63a5\u4e0b\u6765\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5728\u6587\u6863 https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/ \u4e2d\u9009\u62e9\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u5b89\u88c5 flannel: \u279c ~ wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml # \u5982\u679c\u6709\u8282\u70b9\u662f\u591a\u7f51\u5361\uff0c\u5219\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6307\u5b9a\u5185\u7f51\u7f51\u5361 # \u641c\u7d22\u5230\u540d\u4e3a kube-flannel-ds \u7684 DaemonSet\uff0c\u5728kube-flannel\u5bb9\u5668\u4e0b\u9762 \u279c ~ vi kube-flannel.yml ...... containers: - name: kube-flannel image: quay.io/coreos/flannel:v0.15.0 command: - /opt/bin/flanneld args: - --ip-masq - --kube-subnet-mgr - --iface = eth0 # \u5982\u679c\u662f\u591a\u7f51\u5361\u7684\u8bdd\uff0c\u6307\u5b9a\u5185\u7f51\u7f51\u5361\u7684\u540d\u79f0 ...... \u279c ~ kubectl apply -f kube-flannel.yml # \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6 \u9694\u4e00\u4f1a\u513f\u67e5\u770b Pod \u8fd0\u884c\u72b6\u6001\uff1a \u279c ~ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE coredns-7568f67dbd-5mg59 1 /1 Running 0 8m32s coredns-7568f67dbd-b685t 1 /1 Running 0 8m31s etcd-master 1 /1 Running 0 66m kube-apiserver-master 1 /1 Running 0 66m kube-controller-manager-master 1 /1 Running 0 66m kube-flannel-ds-dsbt6 1 /1 Running 0 11m kube-flannel-ds-zwlm6 1 /1 Running 0 11m kube-proxy-jq84n 1 /1 Running 0 66m kube-proxy-x4hbv 1 /1 Running 0 19m kube-scheduler-master 1 /1 Running 0 66m Flannel \u7f51\u7edc\u63d2\u4ef6 \u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u7f51\u7edc\u63d2\u4ef6\u540e\u6267\u884c ifconfig \u547d\u4ee4\uff0c\u6b63\u5e38\u4f1a\u770b\u5230\u65b0\u589e\u7684 cni0 \u4e0e flannel1 \u8fd9\u4e24\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u770b\u5230 cni0 \u8fd9\u4e2a\u8bbe\u5907\u4e5f\u4e0d\u7528\u592a\u62c5\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf /var/lib/cni \u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5e76\u4e0d\u662f\u8bf4\u90e8\u7f72\u6709\u95ee\u9898\uff0c\u800c\u662f\u8be5\u8282\u70b9\u4e0a\u6682\u65f6\u8fd8\u6ca1\u6709\u5e94\u7528\u8fd0\u884c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u5c31\u53ef\u4ee5\u770b\u5230\u8be5\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\uff0c\u5e76\u4e14 cni0 \u8bbe\u5907\u4e5f\u4f1a\u88ab\u521b\u5efa\u51fa\u6765\u3002 \u7528\u540c\u6837\u7684\u65b9\u6cd5\u6dfb\u52a0\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\u3002","title":"\u6dfb\u52a0\u8282\u70b9"},{"location":"Foundation/K8s%20Installation/#dashboard","text":"v1.22.2 \u7248\u672c\u7684\u96c6\u7fa4\u9700\u8981\u5b89\u88c5\u6700\u65b0\u7684 2.0+ \u7248\u672c\u7684 Dashboard\uff1a # \u63a8\u8350\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f \u279c ~ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml \u279c ~ vi recommended.yaml # \u4fee\u6539Service\u4e3aNodePort\u7c7b\u578b ...... kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 selector: k8s-app: kubernetes-dashboard type: NodePort # \u52a0\u4e0atype=NodePort\u53d8\u6210NodePort\u7c7b\u578b\u7684\u670d\u52a1 ...... \u76d1\u63a7\u7ec4\u4ef6 \u5728 YAML \u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u5230\u65b0\u7248\u672c Dashboard \u96c6\u6210\u4e86\u4e00\u4e2a metrics-scraper \u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7 Kubernetes \u7684 Metrics API \u6536\u96c6\u4e00\u4e9b\u57fa\u7840\u8d44\u6e90\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u5e76\u5728 web \u9875\u9762\u4e0a\u5c55\u793a\uff0c\u6240\u4ee5\u8981\u60f3\u5728\u9875\u9762\u4e0a\u5c55\u793a\u76d1\u63a7\u4fe1\u606f\u5c31\u9700\u8981\u63d0\u4f9b Metrics API\uff0c\u6bd4\u5982\u5b89\u88c5 Metrics Server\u3002 \u76f4\u63a5\u521b\u5efa\uff1a \u279c ~ kubectl apply -f recommended.yaml \u65b0\u7248\u672c\u7684 Dashboard \u4f1a\u88ab\u9ed8\u8ba4\u5b89\u88c5\u5728 kubernetes-dashboard \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff1a \u279c ~ kubectl get pods -n kubernetes-dashboard -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES dashboard-metrics-scraper-856586f554-pllvt 1 /1 Running 0 24m 10 .88.0.7 k8sm <none> <none> kubernetes-dashboard-76597d7df5-82998 1 /1 Running 0 21m 10 .88.0.2 k8sn2 <none> <none> \u6211\u4eec\u4ed4\u7ec6\u770b\u53ef\u4ee5\u53d1\u73b0\u4e0a\u9762\u7684 Pod \u5206\u914d\u7684 IP \u6bb5\u662f 10.88.xx.xx \uff0c\u5305\u62ec\u524d\u9762\u81ea\u52a8\u5b89\u88c5\u7684 CoreDNS \u4e5f\u662f\u5982\u6b64\uff0c\u6211\u4eec\u524d\u9762\u4e0d\u662f\u914d\u7f6e\u7684 podSubnet \u4e3a 10.244.0.0/16 \u5417\uff1f\u6211\u4eec\u5148\u53bb\u67e5\u770b\u4e0b CNI \u7684\u914d\u7f6e\u6587\u4ef6\uff1a \u279c ~ ls -la /etc/cni/net.d/ total 8 drwxr-xr-x 2 1001 docker 67 Aug 31 16 :45 . drwxr-xr-x. 3 1001 docker 19 Jul 30 01 :13 .. -rw-r--r-- 1 1001 docker 604 Jul 30 01 :13 10 -containerd-net.conflist -rw-r--r-- 1 root root 292 Aug 31 16 :45 10 -flannel.conflist \u53ef\u4ee5\u770b\u5230\u91cc\u9762\u5305\u542b\u4e24\u4e2a\u914d\u7f6e\uff0c\u4e00\u4e2a\u662f 10-containerd-net.conflist \uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Flannel \u7f51\u7edc\u63d2\u4ef6\u751f\u6210\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u7684\u9700\u6c42\u80af\u5b9a\u662f\u60f3\u4f7f\u7528 Flannel \u7684\u8fd9\u4e2a\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b containerd \u8fd9\u4e2a\u81ea\u5e26\u7684 cni \u63d2\u4ef6\u914d\u7f6e\uff1a \u279c ~ cat /etc/cni/net.d/10-containerd-net.conflist { \"cniVersion\" : \"0.4.0\" , \"name\" : \"containerd-net\" , \"plugins\" : [ { \"type\" : \"bridge\" , \"bridge\" : \"cni0\" , \"isGateway\" : true, \"ipMasq\" : true, \"promiscMode\" : true, \"ipam\" : { \"type\" : \"host-local\" , \"ranges\" : [ [{ \"subnet\" : \"10.88.0.0/16\" }] , [{ \"subnet\" : \"2001:4860:4860::/64\" }] ] , \"routes\" : [ { \"dst\" : \"0.0.0.0/0\" } , { \"dst\" : \"::/0\" } ] } } , { \"type\" : \"portmap\" , \"capabilities\" : { \"portMappings\" : true } } ] } \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684 IP \u6bb5\u6070\u597d\u5c31\u662f 10.88.0.0/16 \uff0c\u4f46\u662f\u8fd9\u4e2a cni \u63d2\u4ef6\u7c7b\u578b\u662f bridge \u7f51\u7edc\uff0c\u7f51\u6865\u7684\u540d\u79f0\u4e3a cni0 \uff1a \u279c ~ ip a ... 6 : cni0: <BROADCAST,MULTICAST,PROMISC,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether 9a:e7:eb:40:e8:66 brd ff:ff:ff:ff:ff:ff inet 10 .88.0.1/16 brd 10 .88.255.255 scope global cni0 valid_lft forever preferred_lft forever inet6 2001 :4860:4860::1/64 scope global valid_lft forever preferred_lft forever inet6 fe80::98e7:ebff:fe40:e866/64 scope link valid_lft forever preferred_lft forever ... \u4f46\u662f\u4f7f\u7528 bridge \u7f51\u7edc\u7684\u5bb9\u5668\u65e0\u6cd5\u8de8\u591a\u4e2a\u5bbf\u4e3b\u673a\u8fdb\u884c\u901a\u4fe1\uff0c\u8de8\u4e3b\u673a\u901a\u4fe1\u9700\u8981\u501f\u52a9\u5176\u4ed6\u7684 cni \u63d2\u4ef6\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u5b89\u88c5\u7684 Flannel\uff0c\u6216\u8005 Calico \u7b49\u7b49\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6709\u4e24\u4e2a cni \u914d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06 10-containerd-net.conflist \u8fd9\u4e2a\u914d\u7f6e\u5220\u9664\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6709\u591a\u4e2a cni \u914d\u7f6e\u6587\u4ef6\uff0ckubelet \u5c06\u4f1a\u4f7f\u7528\u6309\u6587\u4ef6\u540d\u7684\u5b57\u5178\u987a\u5e8f\u6392\u5217\u7684\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u524d\u9762\u9ed8\u8ba4\u9009\u62e9\u4f7f\u7528\u7684\u662f containerd-net \u8fd9\u4e2a\u63d2\u4ef6\u3002 \u279c ~ mv /etc/cni/net.d/10-containerd-net.conflist /etc/cni/net.d/10-containerd-net.conflist.bak \u279c ~ ifconfig cni0 down && ip link delete cni0 \u279c ~ systemctl daemon-reload \u279c ~ systemctl restart containerd kubelet \u7136\u540e\u8bb0\u5f97\u91cd\u5efa coredns \u548c dashboard \u7684 Pod\uff0c\u91cd\u5efa\u540e Pod \u7684 IP \u5730\u5740\u5c31\u6b63\u5e38\u4e86\uff1a \u279c ~ kubectl get pods -n kubernetes-dashboard -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES dashboard-metrics-scraper-856586f554-tp8m5 1 /1 Running 0 42s 10 .244.1.6 k8sn2 <none> <none> kubernetes-dashboard-76597d7df5-9rmbx 1 /1 Running 0 66s 10 .244.1.5 k8sn2 <none> <none> \u279c ~ kubectl get pods -n kube-system -o wide -l k8s-app = kube-dns NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES coredns-7568f67dbd-n7bfx 1 /1 Running 0 5m40s 10 .244.1.2 k8sn2 <none> <none> coredns-7568f67dbd-plrv8 1 /1 Running 0 3m47s 10 .244.1.4 k8sn2 <none> <none> \u67e5\u770b Dashboard \u7684 NodePort \u7aef\u53e3\uff1a \u279c ~ kubectl get svc -n kubernetes-dashboard NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE dashboard-metrics-scraper ClusterIP 10 .99.37.172 <none> 8000 /TCP 25m kubernetes-dashboard NodePort 10 .103.102.27 <none> 443 :31050/TCP 25m \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 31050 \u7aef\u53e3\u53bb\u8bbf\u95ee Dashboard\uff0c\u8981\u8bb0\u4f4f\u4f7f\u7528 https\uff0cChrome \u4e0d\u751f\u6548\u53ef\u4ee5\u4f7f\u7528Firefox \u6d4b\u8bd5\uff0c\u5982\u679c\u6ca1\u6709 Firefox \u4e0b\u9762\u6253\u4e0d\u5f00\u9875\u9762\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u9875\u9762\u4e2d\u7684 \u4fe1\u4efb\u8bc1\u4e66 \u5373\u53ef\uff1a \u4fe1\u4efb\u540e\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230 Dashboard \u7684\u767b\u5f55\u9875\u9762\u4e86\uff1a \u7136\u540e\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u5168\u5c40\u6240\u6709\u6743\u9650\u7684\u7528\u6237\u6765\u767b\u5f55 Dashboard\uff1a(admin.yaml) kind : ClusterRoleBinding apiVersion : rbac.authorization.k8s.io/v1 metadata : name : admin roleRef : kind : ClusterRole name : cluster-admin apiGroup : rbac.authorization.k8s.io subjects : - kind : ServiceAccount name : admin namespace : kubernetes-dashboard --- apiVersion : v1 kind : ServiceAccount metadata : name : admin namespace : kubernetes-dashboard \u76f4\u63a5\u521b\u5efa\uff1a \u279c ~ kubectl apply -f admin.yaml \u279c ~ kubectl get secret -n kubernetes-dashboard | grep admin-token admin-token-lwmmx kubernetes.io/service-account-token 3 1d \u279c ~ kubectl get secret admin-token-lwmmx -o jsonpath ={ .data.token } -n kubernetes-dashboard | base64 -d # \u4f1a\u751f\u6210\u4e00\u4e32\u5f88\u957f\u7684base64\u540e\u7684\u5b57\u7b26\u4e32 \u7136\u540e\u7528\u4e0a\u9762\u7684 base64 \u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a token \u767b\u5f55 Dashboard \u5373\u53ef\uff0c\u65b0\u7248\u672c\u8fd8\u65b0\u589e\u4e86\u4e00\u4e2a\u6697\u9ed1\u6a21\u5f0f\uff1a \u6700\u7ec8, \u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 kubeadm \u642d\u5efa v1.22.2 \u7248\u672c\u7684 kubernetes \u96c6\u7fa4\u3001coredns\u3001ipvs\u3001flannel\u3001containerd\u3002","title":"Dashboard"},{"location":"Foundation/K8s%20Installation/#_5","text":"\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u91cd\u7f6e\uff1a \u279c ~ kubeadm reset \u279c ~ ifconfig cni0 down && ip link delete cni0 \u279c ~ ifconfig flannel.1 down && ip link delete flannel.1 \u279c ~ rm -rf /var/lib/cni/","title":"\u6e05\u7406"},{"location":"Foundation/K8s%20Introduction/","text":"K8S\u7b80\u4ecb \u00b6 Kubernetes \u57fa\u672c\u6982\u5ff5\u4e0e\u7ec4\u4ef6 Kubernetes\uff08\u7b80\u79f0 K8S\uff09 \u7684\u51fa\u73b0\u662f\u5bb9\u5668\u5316\u6280\u672f\u53d1\u5c55\u7684\u5fc5\u7136\u7ed3\u679c\uff0c\u5bb9\u5668\u5316\u662f\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u865a\u62df\u5316\uff0c\u8fd0\u884c\u5355\u4e2a\u5185\u6838\u4e0a\u6709\u591a\u4e2a\u72ec\u7acb\u7684\u7528\u6237\u7a7a\u95f4\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5c31\u662f\u5bb9\u5668\uff1b\u5bb9\u5668\u63d0\u4f9b\u4e86\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u8fd0\u884c\u65f6\u3001\u7cfb\u7edf\u5de5\u5177\u3001\u7cfb\u7edf\u5e93\u548c\u914d\u7f6e\u6253\u5305\u5230\u4e00\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u800c\u4e14\u5bb9\u5668\u662f\u5171\u4eab\u4e00\u4e2a\u5185\u6838\u7684\uff1b\u7531\u4e8e\u5bb9\u5668\u6280\u672f\u7684\u5174\u8d77\uff0c\u5bfc\u81f4\u5927\u91cf\u7684\u5bb9\u5668\u5e94\u7528\u51fa\u73b0\uff0c\u6240\u4ee5\u5c31\u51fa\u73b0\u4e86\u4e00\u4e9b\u7528\u6765\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\u5316\u90e8\u7f72\u548c\u7ec4\u7ec7\u7684\u5bb9\u5668\u7f16\u6392\u6280\u672f\uff0c\u4e00\u4e9b\u6d41\u884c\u7684\u5f00\u6e90\u5bb9\u5668\u7f16\u6392\u5de5\u5177\u6709 Docker Swarm\u3001Kubernetes \u7b49\uff0c\u4f46\u662f\u5728\u53d1\u5c55\u8fc7\u7a0b\u4e2d Kubernetes \u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u4e86\u5bb9\u5668\u7f16\u6392\u9886\u57df\u4e8b\u5b9e\u4e0a\u7684\u4e00\u4e2a\u6807\u51c6\u4e86\u3002 Kubernetes \u662f Google \u56e2\u961f\u53d1\u8d77\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u7684\u76ee\u6807\u662f\u7ba1\u7406\u8de8\u591a\u4e2a\u4e3b\u673a\u7684\u5bb9\u5668\uff0c\u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u5bb9\u5668\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e3b\u8981\u5b9e\u73b0\u8bed\u8a00\u4e3a Go \u8bed\u8a00\uff0c\u4ed6\u7684\u7406\u8bba\u57fa\u7840\u6765\u6e90\u4e0e Google \u5185\u90e8\u7684 Borg \u9879\u76ee\uff0c\u6240\u4ee5 Kubernetes \u9879\u76ee\u7684\u7406\u8bba\u57fa\u7840\u5c31\u6bd4\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u8981\u201c\u5148\u8fdb\u201d\u5f88\u591a\uff0c\u56e0\u4e3a Borg \u7cfb\u7edf\u4e00\u76f4\u4f9d\u8d56\u5c31\u88ab\u79f0\u4e3a Google \u516c\u53f8\u5185\u90e8\u6700\u5f3a\u5927\u7684\u201c\u79c1\u5bc6\u6b66\u5668\u201d\u3002 \u67b6\u6784 \u00b6 Kubernetes \u9879\u76ee\u4f9d\u6258\u7740 Borg \u9879\u76ee\u7684\u7406\u8bba\u4f18\u52bf\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u5982\u4e0b\u56fe\u6240\u793a\u7684\u5168\u5c40\u67b6\u6784\u56fe\uff1a \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u51fa Kubernetes \u7531 Master \u548c Node \u4e24\u79cd\u8282\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e24\u79cd\u89d2\u8272\u5206\u522b\u5bf9\u5e94\u7740\u63a7\u5236\u8282\u70b9\u548c\u5de5\u4f5c\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u8001\u677f\u548c\u5458\u5de5\uff09\u3002 \u5176\u4e2d Master \u8282\u70b9\u7531\u4e09\u4e2a\u72ec\u7acb\u7684\u7ec4\u4ef6\u7ec4\u6210\uff0c\u5b83\u4eec\u5206\u522b\u662f\u8d1f\u8d23\u6574\u4e2a\u96c6\u7fa4\u901a\u4fe1\u7684 API \u670d\u52a1\u7684 kube-apiserver \u3001\u8d1f\u8d23\u5bb9\u5668\u8c03\u5ea6\u7684 kube-scheduler \u4ee5\u53ca\u8d1f\u8d23\u7ef4\u62a4\u96c6\u7fa4\u72b6\u6001\u7684 kube-controller-manager \u7ec4\u4ef6\u3002\u6574\u4e2a\u96c6\u7fa4\u7684\u6570\u636e\u90fd\u662f\u901a\u8fc7 kube-apiserver \u4fdd\u5b58\u5230 etcd \u6570\u636e\u5e93\u4e2d\u7684\uff0c\u800c\u5176\u4ed6\u6240\u6709\u7ec4\u4ef6\u7684\u901a\u4fe1\u4e5f\u90fd\u662f\u901a\u8fc7 kube-apiserver \u548c etcd \u6570\u636e\u5e93\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u90fd\u4e0d\u4f1a\u76f4\u63a5\u548c etcd \u8fdb\u884c\u901a\u4fe1\u3002 \u5de5\u4f5c\u8282\u70b9\u4e0a\u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\u5c31\u662f kubelet \uff0c\u5f53\u7136\u8fd8\u6709\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u6bd4\u5982 Docker\uff0c\u5176\u4e2d kubelet \u5c31\u662f\u4e3b\u8981\u6765\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u8fd9\u4e2a\u901a\u4fe1\u7684\u8fc7\u7a0b\u4e5f\u88ab Kubernetes \u62bd\u8c61\u6210\u4e86\u4e00\u4e2a CRI\uff08Container Runtime Interface\uff09 \u7684\u8fdc\u7a0b\u8c03\u7528\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u91cc\u9762\u5b9a\u4e49\u4e86\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u6240\u6709\u6807\u51c6\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u5bb9\u5668\u3001\u5220\u9664\u5bb9\u5668\u7b49\u7b49\u3002\u6240\u4ee5\u5bf9\u4e8e Kubernetes \u6765\u8bf4\u4ed6\u6839\u672c\u4e0d\u5173\u5fc3\u4f60\u90e8\u7f72\u7684\u5230\u5e95\u662f\u4ec0\u4e48\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u53ea\u8981\u4f60\u8fd9\u4e2a\u5bb9\u5668\u8fd0\u884c\u65f6\u53ef\u4ee5\u5b9e\u73b0 CRI \u63a5\u53e3\u5c31\u53ef\u4ee5\u88ab Kubernetes \u6765\u7ba1\u7406\u3002 kubelet \u7684\u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u5c31\u662f\u8c03\u7528\u7f51\u7edc\u63d2\u4ef6\uff08 CNI \uff09\u548c\u5b58\u50a8\u63d2\u4ef6\uff08 CSI \uff09\u4e3a\u5bb9\u5668\u914d\u7f6e\u7f51\u7edc\u548c\u5b58\u50a8\u529f\u80fd\uff0c\u540c\u6837\u7684 kubelet \u4e5f\u662f\u628a\u8fd9\u4e24\u4e2a\u91cd\u8981\u529f\u80fd\u901a\u8fc7\u63a5\u53e3\u66b4\u9732\u7ed9\u5916\u90e8\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u53ea\u9700\u8981\u4f7f\u7528 CNI \u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5bf9\u63a5\u5230 Kubernetes \u96c6\u7fa4\u5f53\u4e2d\u53bb\u3002 \u53ef\u80fd\u4e0b\u9762\u7684\u67b6\u6784\u56fe\u770b\u4e0a\u53bb\u66f4\u6e05\u6670\u4e00\u4e9b\uff1a \u7ec4\u4ef6 \u00b6 \u4e0a\u9762\u6211\u4ecb\u7ecd\u4e86 Kubernetes \u96c6\u7fa4\u7684\u6574\u4f53\u67b6\u6784\uff0c\u4e0b\u9762\u6211\u4eec\u518d\u6765\u66f4\u52a0\u8be6\u7ec6\u7684\u4e86\u89e3\u4e0b\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u529f\u80fd\u3002 kube-apiserver \u00b6 API Server \u63d0\u4f9b\u4e86\u8d44\u6e90\u5bf9\u8c61\u7684\u552f\u4e00\u64cd\u4f5c\u5165\u53e3\uff0c\u5176\u5b83\u6240\u6709\u7ec4\u4ef6\u90fd\u5fc5\u987b\u901a\u8fc7\u5b83\u63d0\u4f9b\u7684 API \u6765\u64cd\u4f5c\u8d44\u6e90\u6570\u636e\u3002 \u53ea\u6709 API Server \u4f1a\u4e0e etcd \u8fdb\u884c\u901a\u4fe1\uff0c\u5176\u5b83\u6a21\u5757\u90fd\u5fc5\u987b\u901a\u8fc7 API Server \u8bbf\u95ee\u96c6\u7fa4\u72b6\u6001 \u3002API Server \u4f5c\u4e3a Kubernetes \u7cfb\u7edf\u7684\u5165\u53e3\uff0c\u5c01\u88c5\u4e86 \u6838\u5fc3\u5bf9\u8c61\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c \u3002API Server \u4ee5 RESTFul \u63a5\u53e3\u65b9\u5f0f\u63d0\u4f9b\u7ed9\u5916\u90e8\u5ba2\u6237\u7aef\u548c\u5185\u90e8\u7ec4\u4ef6\u8c03\u7528\uff0cAPI Server \u518d\u5bf9\u76f8\u5173\u7684\u8d44\u6e90\u6570\u636e\uff08 \u5168\u91cf\u67e5\u8be2 + \u53d8\u5316\u76d1\u542c \uff09\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u8fbe\u5230\u5b9e\u65f6\u5b8c\u6210\u76f8\u5173\u7684\u4e1a\u52a1\u529f\u80fd\u3002\u4ee5 API Server \u4e3a Kubernetes \u5165\u53e3\u7684\u8bbe\u8ba1 \u4e3b\u8981\u6709\u4ee5\u4e0b\u597d\u5904 \uff1a \u4fdd\u8bc1\u4e86\u96c6\u7fa4\u72b6\u6001\u8bbf\u95ee\u7684\u5b89\u5168 API Server \u9694\u79bb\u4e86\u96c6\u7fa4\u72b6\u6001\u8bbf\u95ee\u548c\u540e\u7aef\u5b58\u50a8\u5b9e\u73b0\uff0c\u8fd9\u6837 API Server \u72b6\u6001\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e0d\u4f1a\u56e0\u4e3a\u540e\u7aef\u5b58\u50a8\u6280\u672f Etcd \u7684\u6539\u53d8\u800c\u6539\u53d8\uff0c\u8ba9\u540e\u7aef\u5b58\u50a8\u65b9\u5f0f\u9009\u62e9\u66f4\u52a0\u7075\u6d3b\uff0c\u65b9\u4fbf\u4e86\u6574\u4e2a\u67b6\u6784\u7684\u6269\u5c55 kube-controller-manager \u00b6 Controller Manager \u7528\u4e8e\u5b9e\u73b0 Kubernetes \u96c6\u7fa4\u6545\u969c\u68c0\u6d4b\u548c\u6062\u590d\u7684\u81ea\u52a8\u5316\u5de5\u4f5c\u3002\u4e3b\u8981\u8d1f\u8d23\u6267\u884c\u5404\u79cd\u63a7\u5236\u5668\uff1a Replication Controller\uff1a\u4e3b\u8981\u662f\u5b9a\u671f\u5173\u8054 Replication Controller (RC) \u548c Pod\uff0c\u4ee5\u4fdd\u8bc1\u96c6\u7fa4\u4e2d\u4e00\u4e2a RC (\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61) \u6240\u5173\u8054\u7684 Pod \u526f\u672c\u6570\u59cb\u7ec8\u4fdd\u6301\u4e3a\u4e0e\u9884\u8bbe\u503c\u4e00\u81f4\u3002 Node Controller\uff1aKubelet \u5728\u542f\u52a8\u65f6\u4f1a\u901a\u8fc7 API Server \u6ce8\u518c\u81ea\u8eab\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u5e76\u5b9a\u65f6\u5411 API Server \u6c47\u62a5\u72b6\u6001\u4fe1\u606f\u3002API Server \u5728\u63a5\u6536\u5230\u4fe1\u606f\u540e\u5c06\u4fe1\u606f\u66f4\u65b0\u5230 Etcd \u4e2d\u3002Node Controller \u901a\u8fc7 API Server \u5b9e\u65f6\u83b7\u53d6 Node \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5b9e\u73b0\u7ba1\u7406\u548c\u76d1\u63a7\u96c6\u7fa4\u4e2d\u7684\u5404\u4e2a Node \u8282\u70b9\u7684\u76f8\u5173\u63a7\u5236\u529f\u80fd\u3002 ResourceQuota Controller\uff1a\u8d44\u6e90\u914d\u989d\u7ba1\u7406\u63a7\u5236\u5668\u7528\u4e8e\u786e\u4fdd\u6307\u5b9a\u7684\u8d44\u6e90\u5bf9\u8c61\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u4f1a\u8d85\u91cf\u5360\u7528\u7cfb\u7edf\u4e0a\u7269\u7406\u8d44\u6e90\u3002 Namespace Controller\uff1a\u7528\u6237\u901a\u8fc7 API Server \u53ef\u4ee5\u521b\u5efa\u65b0\u7684 Namespace \u5e76\u4fdd\u5b58\u5728 Etcd \u4e2d\uff0cNamespace Controller \u5b9a\u65f6\u901a\u8fc7 API Server \u8bfb\u53d6\u8fd9\u4e9b Namespace \u4fe1\u606f\u6765\u64cd\u4f5c Namespace\u3002\u6bd4\u5982\uff1aNamespace \u88ab API \u6807\u8bb0\u4e3a\u4f18\u96c5\u5220\u9664\uff0c\u5219\u5c06\u8be5 Namespace \u72b6\u6001\u8bbe\u7f6e\u4e3a Terminating \u5e76\u4fdd\u5b58\u5230 Etcd \u4e2d\u3002\u540c\u65f6 Namespace Controller \u5220\u9664\u8be5 Namespace \u4e0b\u7684 ServiceAccount\u3001Deployment\u3001Pod \u7b49\u8d44\u6e90\u5bf9\u8c61\u3002 Service Account Controller\uff1a\u670d\u52a1\u8d26\u53f7\u63a7\u5236\u5668\u4e3b\u8981\u5728\u547d\u540d\u7a7a\u95f4\u5185\u7ba1\u7406 ServiceAccount\uff0c\u4ee5\u4fdd\u8bc1\u540d\u4e3a default \u7684 ServiceAccount \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u5b58\u5728\u3002 Token Controller\uff1a\u4ee4\u724c\u63a7\u5236\u5668\u4f5c\u4e3a Controller Manager \u7684\u4e00\u90e8\u5206\uff0c\u4e3b\u8981\u7528\u4f5c\uff1a\u76d1\u542c serviceAccount \u7684\u521b\u5efa\u548c\u5220\u9664\u52a8\u4f5c\u4ee5\u53ca\u76d1\u542c secret \u7684\u6dfb\u52a0\u3001\u5220\u9664\u52a8\u4f5c\u3002 Service Controller\uff1a\u670d\u52a1\u63a7\u5236\u5668\u4e3b\u8981\u7528\u4f5c\u76d1\u542c Service \u7684\u53d8\u5316\u3002\u6bd4\u5982\uff1a\u521b\u5efa\u7684\u662f\u4e00\u4e2a LoadBalancer \u7c7b\u578b\u7684 Service\uff0cService Controller \u5219\u8981\u786e\u4fdd\u5916\u90e8\u7684\u4e91\u5e73\u53f0\u4e0a\u5bf9\u8be5 Service \u5bf9\u5e94\u7684 LoadBalancer \u5b9e\u4f8b\u88ab\u521b\u5efa\u3001\u5220\u9664\u4ee5\u53ca\u76f8\u5e94\u7684\u8def\u7531\u8f6c\u53d1\u8868\u88ab\u66f4\u65b0\u3002 Endpoint Controller\uff1aEndpoints \u8868\u793a\u4e86\u4e00\u4e2a Service \u5bf9\u5e94\u7684\u6240\u6709 Pod \u526f\u672c\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u800c Endpoints Controller \u662f\u8d1f\u8d23\u751f\u6210\u548c\u7ef4\u62a4\u6240\u6709 Endpoints \u5bf9\u8c61\u7684\u63a7\u5236\u5668\u3002Endpoint Controller \u8d1f\u8d23\u76d1\u542c Service \u548c\u5bf9\u5e94\u7684 Pod \u526f\u672c\u7684\u53d8\u5316\u3002\u5b9a\u671f\u5173\u8054 Service \u548c Pod (\u5173\u8054\u4fe1\u606f\u7531 Endpoint \u5bf9\u8c61\u7ef4\u62a4)\uff0c\u4ee5\u4fdd\u8bc1 Service \u5230 Pod \u7684\u6620\u5c04\u603b\u662f\u6700\u65b0\u7684\u3002 kube-scheduler \u00b6 Scheduler \u662f\u8d1f\u8d23\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90\u8c03\u5ea6\u7684\uff0c\u4e3b\u8981\u7684\u804c\u8d23\u5982\u4e0b\u6240\u793a\uff1a \u4e3b\u8981\u7528\u4e8e\u6536\u96c6\u548c\u5206\u6790\u5f53\u524d Kubernetes \u96c6\u7fa4\u4e2d\u6240\u6709 Node \u8282\u70b9\u7684\u8d44\u6e90 (\u5305\u62ec\u5185\u5b58\u3001CPU \u7b49) \u8d1f\u8f7d\u60c5\u51b5\uff0c\u7136\u540e\u4f9d\u636e\u8d44\u6e90\u5360\u7528\u60c5\u51b5\u5206\u53d1\u65b0\u5efa\u7684 Pod \u5230 Kubernetes \u96c6\u7fa4\u4e2d\u53ef\u7528\u7684\u8282\u70b9 \u5b9e\u65f6\u76d1\u6d4b Kubernetes \u96c6\u7fa4\u4e2d\u672a\u5206\u53d1\u548c\u5df2\u5206\u53d1\u7684\u6240\u6709\u8fd0\u884c\u7684 Pod \u5b9e\u65f6\u76d1\u6d4b Node \u8282\u70b9\u4fe1\u606f\uff0c\u7531\u4e8e\u4f1a\u9891\u7e41\u67e5\u627e Node \u8282\u70b9\uff0c\u6240\u4ee5 Scheduler \u540c\u65f6\u4f1a\u7f13\u5b58\u4e00\u4efd\u6700\u65b0\u7684\u4fe1\u606f\u5728\u672c\u5730 \u5728\u5206\u53d1 Pod \u5230\u6307\u5b9a\u7684 Node \u8282\u70b9\u540e\uff0c\u4f1a\u628a Pod \u76f8\u5173\u7684 Binding \u4fe1\u606f\u5199\u56de API Server\uff0c\u4ee5\u65b9\u4fbf\u5176\u5b83\u7ec4\u4ef6\u4f7f\u7528 kubelet \u00b6 kubelet \u662f\u8d1f\u8d23\u5bb9\u5668\u771f\u6b63\u8fd0\u884c\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u7684\u804c\u8d23\u5982\u4e0b\u6240\u793a\uff1a \u8d1f\u8d23 Node \u8282\u70b9\u4e0a Pod \u7684\u521b\u5efa\u3001\u4fee\u6539\u3001\u76d1\u63a7\u3001\u5220\u9664\u7b49\u5168\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406 \u5b9a\u65f6\u4e0a\u62a5\u672c\u5730 Node \u7684\u72b6\u6001\u4fe1\u606f\u7ed9 API Server kubelet \u662f Master \u548c Node \u4e4b\u95f4\u7684\u6865\u6881\uff0c\u63a5\u6536 API Server \u5206\u914d\u7ed9\u5b83\u7684\u4efb\u52a1\u5e76\u6267\u884c kubelet \u901a\u8fc7 API Server \u95f4\u63a5\u4e0e Etcd \u96c6\u7fa4\u4ea4\u4e92\u6765\u8bfb\u53d6\u96c6\u7fa4\u914d\u7f6e\u4fe1\u606f kubelet \u5728 Node \u4e0a\u505a\u7684\u4e3b\u8981\u5de5\u4f5c\u5177\u4f53\u5982\u4e0b\uff1a \u8bbe\u7f6e\u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf\u3001\u7ed9\u5bb9\u5668\u7ed1\u5b9a Volume\u3001\u7ed9\u5bb9\u5668\u7ed1\u5b9a Port\u3001\u6839\u636e\u6307\u5b9a\u7684 Pod \u8fd0\u884c\u4e00\u4e2a\u5355\u4e00\u5bb9\u5668\u3001\u7ed9\u6307\u5b9a\u7684 Pod \u521b\u5efa Network \u5bb9\u5668 \u540c\u6b65 Pod \u7684\u72b6\u6001 \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\u3001\u6740\u6b7b\u5bb9\u5668\u3001\u5220\u9664 Pod \u7684\u6240\u6709\u5bb9\u5668 kube-proxy \u00b6 kube-proxy \u662f\u4e3a\u4e86\u89e3\u51b3\u5916\u90e8\u7f51\u7edc\u80fd\u591f\u8bbf\u95ee\u96c6\u7fa4\u4e2d\u5bb9\u5668\u63d0\u4f9b\u7684\u5e94\u7528\u670d\u52a1\u800c\u8bbe\u8ba1\u7684\uff0cProxy \u8fd0\u884c\u5728\u6bcf\u4e2aNode \u4e0a\u3002 \u6bcf\u521b\u5efa\u4e00\u4e2a Service\uff0ckube-proxy \u5c31\u4f1a\u4ece API Server \u83b7\u53d6 Services \u548c Endpoints \u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u6839\u636e\u5176\u914d\u7f6e\u4fe1\u606f\u5728 Node \u4e0a\u542f\u52a8\u4e00\u4e2a Proxy \u7684\u8fdb\u7a0b\u5e76\u76d1\u542c\u76f8\u5e94\u7684\u670d\u52a1\u7aef\u53e3\u3002 \u5f53\u63a5\u6536\u5230\u5916\u90e8\u8bf7\u6c42\u65f6\uff0ckube-proxy \u4f1a\u6839\u636e Load Balancer \u5c06\u8bf7\u6c42\u5206\u53d1\u5230\u540e\u7aef\u6b63\u786e\u7684\u5bb9\u5668\u5904\u7406\u3002 kube-proxy \u4e0d\u4f46\u89e3\u51b3\u4e86\u540c\u4e00\u5bbf\u4e3b\u673a\u76f8\u540c\u670d\u52a1\u7aef\u53e3\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u8fd8\u63d0\u4f9b\u4e86 Service \u8f6c\u53d1\u670d\u52a1\u7aef\u53e3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u7684\u80fd\u529b\u3002 kube-proxy \u540e\u7aef\u4f7f\u7528 \u968f\u673a\u3001\u8f6e\u5faa \u7b49\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u8fdb\u884c\u8c03\u5ea6\u3002 kubectl \u00b6 Kubectl \u662f Kubernetes \u7684\u96c6\u7fa4\u7ba1\u7406\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5de5\u5177\u96c6\u3002\u901a\u8fc7 Kubectl \u547d\u4ee4\u5bf9 API Server \u8fdb\u884c\u64cd\u4f5c\uff0cAPI Server \u54cd\u5e94\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u547d\u4ee4\u7ed3\u679c\uff0c\u4ece\u800c\u8fbe\u5230\u5bf9 Kubernetes \u96c6\u7fa4\u7684\u7ba1\u7406 \u6838\u5fc3\u8d44\u6e90\u5bf9\u8c61 \u00b6 \u4e0a\u9762\u6211\u4eec\u90fd\u662f\u5728\u67b6\u6784\u5c42\u9762\u4e86\u89e3 Kubernetes\uff0c\u4f46\u662f\u4f3c\u4e4e\u6ca1\u6709\u53d1\u73b0\u5173\u4e8e\u5bb9\u5668\u7684\u8bf4\u660e\uff0cKubernetes \u4f5c\u4e3a\u5bb9\u5668\u7f16\u6392\u5f15\u64ce\uff0c\u90a3\u4e48\u4ed6\u662f\u600e\u4e48\u53bb\u5bf9\u5bb9\u5668\u8fdb\u884c\u7f16\u6392\u7684\u5462\uff1f\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u62bd\u8c61\u4e86\u5f88\u591a\u96c6\u7fa4\u5185\u90e8\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u53bb\u64cd\u4f5c\u5bb9\u5668\u7684\u7f16\u6392\u5de5\u4f5c\u3002 Pod \u00b6 Pod \u662f\u4e00\u7ec4\u7d27\u5bc6\u5173\u8054\u7684 \u5bb9\u5668\u96c6\u5408 \uff0c\u5b83\u4eec\u5171\u4eab PID\u3001IPC\u3001Network \u548c UTS namespace\uff0c\u662fKubernetes \u8c03\u5ea6\u7684 \u57fa\u672c\u5355\u4f4d \u3002Pod \u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u652f\u6301\u591a\u4e2a\u5bb9\u5668\u5728\u4e00\u4e2a Pod \u4e2d\u5171\u4eab\u7f51\u7edc\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u6587\u4ef6\u5171\u4eab\u8fd9\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u65b9\u5f0f\u7ec4\u5408\u5b8c\u6210\u670d\u52a1\u3002\u6211\u4eec\u77e5\u9053\u5bb9\u5668\u672c\u8d28\u4e0a\u5c31\u662f\u8fdb\u7a0b\uff0c\u90a3\u4e48 Pod \u5b9e\u9645\u4e0a\u5c31\u662f\u8fdb\u7a0b\u7ec4\u4e86\uff0c\u53ea\u662f\u8fd9\u4e00\u7ec4\u8fdb\u7a0b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\u3002 \u5728 Kubernetes \u4e2d\uff0c\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u90fd\u4f7f\u7528\u8d44\u6e90\u6e05\u5355\uff08yaml\u6216json\uff09\u6765\u5b9a\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684 nginx \u670d\u52a1\uff0c\u5b83\u5305\u542b\u4e00\u4e2a\u955c\u50cf\u4e3a nginx \u7684\u5bb9\u5668\uff1a(nginx-pod.yaml) apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u5b9a\u4e49\u4e86\u8fd9\u6837\u4e00\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684 Kubectl \u5de5\u5177\u5c06\u8fd9\u4e2a Pod \u521b\u5efa\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff1a kubectl apply -f nginx-pod.yaml Pod \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u88ab\u521b\u5efa\u7684\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a \u7528\u6237\u901a\u8fc7 REST API \u521b\u5efa\u4e00\u4e2a Pod apiserver \u5c06\u5176\u5199\u5165 etcd scheduluer \u68c0\u6d4b\u5230\u672a\u7ed1\u5b9a Node \u7684 Pod\uff0c\u5f00\u59cb\u8c03\u5ea6\u5e76\u66f4\u65b0 Pod \u7684 Node \u7ed1\u5b9a kubelet \u68c0\u6d4b\u5230\u6709\u65b0\u7684 Pod \u8c03\u5ea6\u8fc7\u6765\uff0c\u901a\u8fc7 container runtime \u8fd0\u884c\u8be5 Pod kubelet \u901a\u8fc7 container runtime \u53d6\u5230 Pod \u72b6\u6001\uff0c\u5e76\u66f4\u65b0\u5230 apiserver \u4e2d Label \u00b6 Label \u6807\u7b7e\u5728 Kubernetes \u8d44\u6e90\u5bf9\u8c61\u4e2d\u4f7f\u7528\u5f88\u591a\uff0c\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027\uff0cLabel \u662f\u8bc6\u522b Kubernetes \u5bf9\u8c61\u7684\u6807\u7b7e\uff0c\u4ee5 key/value \u7684\u65b9\u5f0f\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\uff08key\u6700\u957f\u4e0d\u80fd\u8d85\u8fc763\u5b57\u8282\uff0cvalue \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8d85\u8fc7253\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff09\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u7684 Nginx \u7684 Pod \u5c31\u6dfb\u52a0\u4e86\u4e00\u4e2a app=nginx \u7684 Label \u6807\u7b7e\u3002Label \u4e0d\u63d0\u4f9b\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u7ecf\u5e38\u662f\u5f88\u591a\u5bf9\u8c61\uff08\u5982Pods\uff09\u90fd\u4f7f\u7528\u76f8\u540c\u7684 Label \u6765\u6807\u5fd7\u5177\u4f53\u7684\u5e94\u7528\u3002Label \u5b9a\u4e49\u597d\u540e\u5176\u4ed6\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 Label Selector \u6765\u9009\u62e9\u4e00\u7ec4\u76f8\u540c Label \u7684\u5bf9\u8c61\uff08\u6bd4\u5982 Service \u7528 Label \u6765\u9009\u62e9\u4e00\u7ec4 Pod\uff09\u3002Label Selector \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u7b49\u5f0f\uff0c\u5982 app=nginx \u548c env!=production \u96c6\u5408\uff0c\u5982 env in (production, qa) \u591a\u4e2a Label\uff08\u5b83\u4eec\u4e4b\u95f4\u662f AND \u5173\u7cfb\uff09\uff0c\u5982 app=nginx,env=test Namespace \u00b6 Namespace\uff08\u547d\u540d\u7a7a\u95f4\uff09\u662f\u5bf9\u4e00\u7ec4\u8d44\u6e90\u548c\u5bf9\u8c61\u7684\u62bd\u8c61\u96c6\u5408\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u6765\u5c06\u7cfb\u7edf\u5185\u90e8\u7684\u5bf9\u8c61\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u6216\u7528\u6237\u7ec4\u3002\u5e38\u89c1\u7684 Pods\u3001Services\u3001Deployments \u7b49\u90fd\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff08\u9ed8\u8ba4\u662fdefault\uff09\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684 Nginx Pod \u6ca1\u6709\u6307\u5b9a namespace\uff0c\u5219\u9ed8\u8ba4\u5c31\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u800c Node, PersistentVolumes \u7b49\u8d44\u6e90\u5219\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\uff0c\u662f\u5168\u5c40\u7684\u3002 Warning \u6ce8\u610f\u5b83\u5e76\u4e0d\u662f Linux Namespace\uff0c\u4e8c\u8005\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5b83\u53ea\u662f Kubernetes \u5212\u5206\u4e0d\u540c\u5de5\u4f5c\u7a7a\u95f4\u7684\u4e00\u4e2a\u903b\u8f91\u5355\u4f4d\u3002 Deployment \u00b6 \u6211\u4eec\u8bf4\u4e86 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u4f46\u662f\u5982\u679c\u60f3\u8981\u521b\u5efa\u540c\u4e00\u4e2a\u5bb9\u5668\u7684\u591a\u4efd\u62f7\u8d1d\uff0c\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u5206\u522b\u521b\u5efa\u51fa\u6765\u4e48\uff0c\u90a3\u4e48\u80fd\u5426\u5c06 Pods \u5212\u5230\u4e00\u4e2a\u903b\u8f91\u7ec4\u91cc\u9762\u5462\uff1fDeployment \u5c31\u662f\u6765\u7ba1\u7406 Pod \u7684\u8d44\u6e90\u5bf9\u8c61\u3002 Deployment \u786e\u4fdd\u4efb\u610f\u65f6\u95f4\u90fd\u6709\u6307\u5b9a\u6570\u91cf\u7684 Pod\u201c\u526f\u672c\u201d\u5728\u8fd0\u884c\u3002\u5982\u679c\u4e3a\u67d0\u4e2a Pod \u521b\u5efa\u4e86 Deployment \u5e76\u4e14\u6307\u5b9a3\u4e2a\u526f\u672c\uff0c\u5b83\u4f1a\u521b\u5efa3\u4e2a Pod\uff0c\u5e76\u4e14\u6301\u7eed\u76d1\u63a7\u5b83\u4eec\u3002\u5982\u679c\u67d0\u4e2a Pod \u4e0d\u54cd\u5e94\uff0c\u90a3\u4e48 Deployment \u4f1a\u66ff\u6362\u5b83\uff0c\u59cb\u7ec8\u4fdd\u6301\u603b\u6570\u4e3a3\u3002 \u5982\u679c\u4e4b\u524d\u4e0d\u54cd\u5e94\u7684 Pod \u6062\u590d\u4e86\uff0c\u73b0\u5728\u5c31\u67094\u4e2a Pod \u4e86\uff0c\u90a3\u4e48 Deployment \u4f1a\u5c06\u5176\u4e2d\u4e00\u4e2a\u7ec8\u6b62\u4fdd\u6301\u603b\u6570\u4e3a3\u3002\u5982\u679c\u5728\u8fd0\u884c\u4e2d\u5c06\u526f\u672c\u603b\u6570\u6539\u4e3a5\uff0cDeployment \u4f1a\u7acb\u523b\u542f\u52a82\u4e2a\u65b0 Pod\uff0c\u4fdd\u8bc1\u603b\u6570\u4e3a5\u3002\u6301\u56de\u6eda\u548c\u6eda\u52a8\u5347\u7ea7\u3002 \u5f53\u521b\u5efa Deployment \u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u4e1c\u897f\uff1a Pod \u6a21\u677f\uff1a\u7528\u6765\u521b\u5efa Pod \u526f\u672c\u7684\u6a21\u677f Label \u6807\u7b7e\uff1aDeployment \u9700\u8981\u76d1\u63a7\u7684 Pod \u7684\u6807\u7b7e\u3002 \u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u4e86 Pod \u7684\u4e00\u4e9b\u526f\u672c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u526f\u672c\u4e0a\u5982\u4f55\u8fdb\u884c\u8d1f\u8f7d\u5462\uff1f\u5982\u4f55\u628a\u8fd9\u4e9b Pod \u66b4\u9732\u51fa\u53bb\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 Service \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002 Service \u00b6 Service \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 Labels \u4e3a\u5e94\u7528\u63d0\u4f9b \u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0 \u3002\u5339\u914d Labels \u7684 Pod IP \u548c\u7aef\u53e3\u5217\u8868\u7ec4\u6210 Endpoints\uff0c\u7531 kube-proxy \u8d1f\u8d23\u5c06\u670d\u52a1 IP \u8d1f\u8f7d\u5747\u8861\u5230\u8fd9\u4e9b Endpoints \u4e0a\u3002 \u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP\uff08\u4ec5\u5728\u96c6\u7fa4\u5185\u90e8\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\uff09\u548c DNS \u540d\uff0c\u5176\u4ed6\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216 DNS \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u540e\u7aef\u5bb9\u5668\u7684\u8fd0\u884c\u3002 \u8fc1\u79fb \u4e86\u89e3\u4e86\u4e0a\u9762\u7684\u51e0\u4e2a\u57fa\u672c\u6982\u5ff5\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u628a\u6211\u4eec\u7684\u5bb9\u5668\u670d\u52a1\u8fc1\u79fb\u5230 Kubernetes \u96c6\u7fa4\u4e0a\u4e86\u3002\u5f53\u7136\u6211\u4eec\u8fd8\u5f97\u5148\u642d\u5efa\u597d\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u73af\u5883\u3002","title":"K8S\u7b80\u4ecb"},{"location":"Foundation/K8s%20Introduction/#k8s","text":"Kubernetes \u57fa\u672c\u6982\u5ff5\u4e0e\u7ec4\u4ef6 Kubernetes\uff08\u7b80\u79f0 K8S\uff09 \u7684\u51fa\u73b0\u662f\u5bb9\u5668\u5316\u6280\u672f\u53d1\u5c55\u7684\u5fc5\u7136\u7ed3\u679c\uff0c\u5bb9\u5668\u5316\u662f\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u865a\u62df\u5316\uff0c\u8fd0\u884c\u5355\u4e2a\u5185\u6838\u4e0a\u6709\u591a\u4e2a\u72ec\u7acb\u7684\u7528\u6237\u7a7a\u95f4\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5c31\u662f\u5bb9\u5668\uff1b\u5bb9\u5668\u63d0\u4f9b\u4e86\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u8fd0\u884c\u65f6\u3001\u7cfb\u7edf\u5de5\u5177\u3001\u7cfb\u7edf\u5e93\u548c\u914d\u7f6e\u6253\u5305\u5230\u4e00\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u800c\u4e14\u5bb9\u5668\u662f\u5171\u4eab\u4e00\u4e2a\u5185\u6838\u7684\uff1b\u7531\u4e8e\u5bb9\u5668\u6280\u672f\u7684\u5174\u8d77\uff0c\u5bfc\u81f4\u5927\u91cf\u7684\u5bb9\u5668\u5e94\u7528\u51fa\u73b0\uff0c\u6240\u4ee5\u5c31\u51fa\u73b0\u4e86\u4e00\u4e9b\u7528\u6765\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\u5316\u90e8\u7f72\u548c\u7ec4\u7ec7\u7684\u5bb9\u5668\u7f16\u6392\u6280\u672f\uff0c\u4e00\u4e9b\u6d41\u884c\u7684\u5f00\u6e90\u5bb9\u5668\u7f16\u6392\u5de5\u5177\u6709 Docker Swarm\u3001Kubernetes \u7b49\uff0c\u4f46\u662f\u5728\u53d1\u5c55\u8fc7\u7a0b\u4e2d Kubernetes \u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u4e86\u5bb9\u5668\u7f16\u6392\u9886\u57df\u4e8b\u5b9e\u4e0a\u7684\u4e00\u4e2a\u6807\u51c6\u4e86\u3002 Kubernetes \u662f Google \u56e2\u961f\u53d1\u8d77\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u7684\u76ee\u6807\u662f\u7ba1\u7406\u8de8\u591a\u4e2a\u4e3b\u673a\u7684\u5bb9\u5668\uff0c\u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u5bb9\u5668\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e3b\u8981\u5b9e\u73b0\u8bed\u8a00\u4e3a Go \u8bed\u8a00\uff0c\u4ed6\u7684\u7406\u8bba\u57fa\u7840\u6765\u6e90\u4e0e Google \u5185\u90e8\u7684 Borg \u9879\u76ee\uff0c\u6240\u4ee5 Kubernetes \u9879\u76ee\u7684\u7406\u8bba\u57fa\u7840\u5c31\u6bd4\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u8981\u201c\u5148\u8fdb\u201d\u5f88\u591a\uff0c\u56e0\u4e3a Borg \u7cfb\u7edf\u4e00\u76f4\u4f9d\u8d56\u5c31\u88ab\u79f0\u4e3a Google \u516c\u53f8\u5185\u90e8\u6700\u5f3a\u5927\u7684\u201c\u79c1\u5bc6\u6b66\u5668\u201d\u3002","title":"K8S\u7b80\u4ecb"},{"location":"Foundation/K8s%20Introduction/#_1","text":"Kubernetes \u9879\u76ee\u4f9d\u6258\u7740 Borg \u9879\u76ee\u7684\u7406\u8bba\u4f18\u52bf\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u5982\u4e0b\u56fe\u6240\u793a\u7684\u5168\u5c40\u67b6\u6784\u56fe\uff1a \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u51fa Kubernetes \u7531 Master \u548c Node \u4e24\u79cd\u8282\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e24\u79cd\u89d2\u8272\u5206\u522b\u5bf9\u5e94\u7740\u63a7\u5236\u8282\u70b9\u548c\u5de5\u4f5c\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u8001\u677f\u548c\u5458\u5de5\uff09\u3002 \u5176\u4e2d Master \u8282\u70b9\u7531\u4e09\u4e2a\u72ec\u7acb\u7684\u7ec4\u4ef6\u7ec4\u6210\uff0c\u5b83\u4eec\u5206\u522b\u662f\u8d1f\u8d23\u6574\u4e2a\u96c6\u7fa4\u901a\u4fe1\u7684 API \u670d\u52a1\u7684 kube-apiserver \u3001\u8d1f\u8d23\u5bb9\u5668\u8c03\u5ea6\u7684 kube-scheduler \u4ee5\u53ca\u8d1f\u8d23\u7ef4\u62a4\u96c6\u7fa4\u72b6\u6001\u7684 kube-controller-manager \u7ec4\u4ef6\u3002\u6574\u4e2a\u96c6\u7fa4\u7684\u6570\u636e\u90fd\u662f\u901a\u8fc7 kube-apiserver \u4fdd\u5b58\u5230 etcd \u6570\u636e\u5e93\u4e2d\u7684\uff0c\u800c\u5176\u4ed6\u6240\u6709\u7ec4\u4ef6\u7684\u901a\u4fe1\u4e5f\u90fd\u662f\u901a\u8fc7 kube-apiserver \u548c etcd \u6570\u636e\u5e93\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u90fd\u4e0d\u4f1a\u76f4\u63a5\u548c etcd \u8fdb\u884c\u901a\u4fe1\u3002 \u5de5\u4f5c\u8282\u70b9\u4e0a\u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\u5c31\u662f kubelet \uff0c\u5f53\u7136\u8fd8\u6709\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u6bd4\u5982 Docker\uff0c\u5176\u4e2d kubelet \u5c31\u662f\u4e3b\u8981\u6765\u5b9e\u73b0\u548c\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u8fd9\u4e2a\u901a\u4fe1\u7684\u8fc7\u7a0b\u4e5f\u88ab Kubernetes \u62bd\u8c61\u6210\u4e86\u4e00\u4e2a CRI\uff08Container Runtime Interface\uff09 \u7684\u8fdc\u7a0b\u8c03\u7528\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u91cc\u9762\u5b9a\u4e49\u4e86\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u6240\u6709\u6807\u51c6\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u5bb9\u5668\u3001\u5220\u9664\u5bb9\u5668\u7b49\u7b49\u3002\u6240\u4ee5\u5bf9\u4e8e Kubernetes \u6765\u8bf4\u4ed6\u6839\u672c\u4e0d\u5173\u5fc3\u4f60\u90e8\u7f72\u7684\u5230\u5e95\u662f\u4ec0\u4e48\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u53ea\u8981\u4f60\u8fd9\u4e2a\u5bb9\u5668\u8fd0\u884c\u65f6\u53ef\u4ee5\u5b9e\u73b0 CRI \u63a5\u53e3\u5c31\u53ef\u4ee5\u88ab Kubernetes \u6765\u7ba1\u7406\u3002 kubelet \u7684\u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u5c31\u662f\u8c03\u7528\u7f51\u7edc\u63d2\u4ef6\uff08 CNI \uff09\u548c\u5b58\u50a8\u63d2\u4ef6\uff08 CSI \uff09\u4e3a\u5bb9\u5668\u914d\u7f6e\u7f51\u7edc\u548c\u5b58\u50a8\u529f\u80fd\uff0c\u540c\u6837\u7684 kubelet \u4e5f\u662f\u628a\u8fd9\u4e24\u4e2a\u91cd\u8981\u529f\u80fd\u901a\u8fc7\u63a5\u53e3\u66b4\u9732\u7ed9\u5916\u90e8\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u53ea\u9700\u8981\u4f7f\u7528 CNI \u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5bf9\u63a5\u5230 Kubernetes \u96c6\u7fa4\u5f53\u4e2d\u53bb\u3002 \u53ef\u80fd\u4e0b\u9762\u7684\u67b6\u6784\u56fe\u770b\u4e0a\u53bb\u66f4\u6e05\u6670\u4e00\u4e9b\uff1a","title":"\u67b6\u6784"},{"location":"Foundation/K8s%20Introduction/#_2","text":"\u4e0a\u9762\u6211\u4ecb\u7ecd\u4e86 Kubernetes \u96c6\u7fa4\u7684\u6574\u4f53\u67b6\u6784\uff0c\u4e0b\u9762\u6211\u4eec\u518d\u6765\u66f4\u52a0\u8be6\u7ec6\u7684\u4e86\u89e3\u4e0b\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u529f\u80fd\u3002","title":"\u7ec4\u4ef6"},{"location":"Foundation/K8s%20Introduction/#kube-apiserver","text":"API Server \u63d0\u4f9b\u4e86\u8d44\u6e90\u5bf9\u8c61\u7684\u552f\u4e00\u64cd\u4f5c\u5165\u53e3\uff0c\u5176\u5b83\u6240\u6709\u7ec4\u4ef6\u90fd\u5fc5\u987b\u901a\u8fc7\u5b83\u63d0\u4f9b\u7684 API \u6765\u64cd\u4f5c\u8d44\u6e90\u6570\u636e\u3002 \u53ea\u6709 API Server \u4f1a\u4e0e etcd \u8fdb\u884c\u901a\u4fe1\uff0c\u5176\u5b83\u6a21\u5757\u90fd\u5fc5\u987b\u901a\u8fc7 API Server \u8bbf\u95ee\u96c6\u7fa4\u72b6\u6001 \u3002API Server \u4f5c\u4e3a Kubernetes \u7cfb\u7edf\u7684\u5165\u53e3\uff0c\u5c01\u88c5\u4e86 \u6838\u5fc3\u5bf9\u8c61\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c \u3002API Server \u4ee5 RESTFul \u63a5\u53e3\u65b9\u5f0f\u63d0\u4f9b\u7ed9\u5916\u90e8\u5ba2\u6237\u7aef\u548c\u5185\u90e8\u7ec4\u4ef6\u8c03\u7528\uff0cAPI Server \u518d\u5bf9\u76f8\u5173\u7684\u8d44\u6e90\u6570\u636e\uff08 \u5168\u91cf\u67e5\u8be2 + \u53d8\u5316\u76d1\u542c \uff09\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u8fbe\u5230\u5b9e\u65f6\u5b8c\u6210\u76f8\u5173\u7684\u4e1a\u52a1\u529f\u80fd\u3002\u4ee5 API Server \u4e3a Kubernetes \u5165\u53e3\u7684\u8bbe\u8ba1 \u4e3b\u8981\u6709\u4ee5\u4e0b\u597d\u5904 \uff1a \u4fdd\u8bc1\u4e86\u96c6\u7fa4\u72b6\u6001\u8bbf\u95ee\u7684\u5b89\u5168 API Server \u9694\u79bb\u4e86\u96c6\u7fa4\u72b6\u6001\u8bbf\u95ee\u548c\u540e\u7aef\u5b58\u50a8\u5b9e\u73b0\uff0c\u8fd9\u6837 API Server \u72b6\u6001\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e0d\u4f1a\u56e0\u4e3a\u540e\u7aef\u5b58\u50a8\u6280\u672f Etcd \u7684\u6539\u53d8\u800c\u6539\u53d8\uff0c\u8ba9\u540e\u7aef\u5b58\u50a8\u65b9\u5f0f\u9009\u62e9\u66f4\u52a0\u7075\u6d3b\uff0c\u65b9\u4fbf\u4e86\u6574\u4e2a\u67b6\u6784\u7684\u6269\u5c55","title":"kube-apiserver"},{"location":"Foundation/K8s%20Introduction/#kube-controller-manager","text":"Controller Manager \u7528\u4e8e\u5b9e\u73b0 Kubernetes \u96c6\u7fa4\u6545\u969c\u68c0\u6d4b\u548c\u6062\u590d\u7684\u81ea\u52a8\u5316\u5de5\u4f5c\u3002\u4e3b\u8981\u8d1f\u8d23\u6267\u884c\u5404\u79cd\u63a7\u5236\u5668\uff1a Replication Controller\uff1a\u4e3b\u8981\u662f\u5b9a\u671f\u5173\u8054 Replication Controller (RC) \u548c Pod\uff0c\u4ee5\u4fdd\u8bc1\u96c6\u7fa4\u4e2d\u4e00\u4e2a RC (\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61) \u6240\u5173\u8054\u7684 Pod \u526f\u672c\u6570\u59cb\u7ec8\u4fdd\u6301\u4e3a\u4e0e\u9884\u8bbe\u503c\u4e00\u81f4\u3002 Node Controller\uff1aKubelet \u5728\u542f\u52a8\u65f6\u4f1a\u901a\u8fc7 API Server \u6ce8\u518c\u81ea\u8eab\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u5e76\u5b9a\u65f6\u5411 API Server \u6c47\u62a5\u72b6\u6001\u4fe1\u606f\u3002API Server \u5728\u63a5\u6536\u5230\u4fe1\u606f\u540e\u5c06\u4fe1\u606f\u66f4\u65b0\u5230 Etcd \u4e2d\u3002Node Controller \u901a\u8fc7 API Server \u5b9e\u65f6\u83b7\u53d6 Node \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5b9e\u73b0\u7ba1\u7406\u548c\u76d1\u63a7\u96c6\u7fa4\u4e2d\u7684\u5404\u4e2a Node \u8282\u70b9\u7684\u76f8\u5173\u63a7\u5236\u529f\u80fd\u3002 ResourceQuota Controller\uff1a\u8d44\u6e90\u914d\u989d\u7ba1\u7406\u63a7\u5236\u5668\u7528\u4e8e\u786e\u4fdd\u6307\u5b9a\u7684\u8d44\u6e90\u5bf9\u8c61\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u4f1a\u8d85\u91cf\u5360\u7528\u7cfb\u7edf\u4e0a\u7269\u7406\u8d44\u6e90\u3002 Namespace Controller\uff1a\u7528\u6237\u901a\u8fc7 API Server \u53ef\u4ee5\u521b\u5efa\u65b0\u7684 Namespace \u5e76\u4fdd\u5b58\u5728 Etcd \u4e2d\uff0cNamespace Controller \u5b9a\u65f6\u901a\u8fc7 API Server \u8bfb\u53d6\u8fd9\u4e9b Namespace \u4fe1\u606f\u6765\u64cd\u4f5c Namespace\u3002\u6bd4\u5982\uff1aNamespace \u88ab API \u6807\u8bb0\u4e3a\u4f18\u96c5\u5220\u9664\uff0c\u5219\u5c06\u8be5 Namespace \u72b6\u6001\u8bbe\u7f6e\u4e3a Terminating \u5e76\u4fdd\u5b58\u5230 Etcd \u4e2d\u3002\u540c\u65f6 Namespace Controller \u5220\u9664\u8be5 Namespace \u4e0b\u7684 ServiceAccount\u3001Deployment\u3001Pod \u7b49\u8d44\u6e90\u5bf9\u8c61\u3002 Service Account Controller\uff1a\u670d\u52a1\u8d26\u53f7\u63a7\u5236\u5668\u4e3b\u8981\u5728\u547d\u540d\u7a7a\u95f4\u5185\u7ba1\u7406 ServiceAccount\uff0c\u4ee5\u4fdd\u8bc1\u540d\u4e3a default \u7684 ServiceAccount \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u5b58\u5728\u3002 Token Controller\uff1a\u4ee4\u724c\u63a7\u5236\u5668\u4f5c\u4e3a Controller Manager \u7684\u4e00\u90e8\u5206\uff0c\u4e3b\u8981\u7528\u4f5c\uff1a\u76d1\u542c serviceAccount \u7684\u521b\u5efa\u548c\u5220\u9664\u52a8\u4f5c\u4ee5\u53ca\u76d1\u542c secret \u7684\u6dfb\u52a0\u3001\u5220\u9664\u52a8\u4f5c\u3002 Service Controller\uff1a\u670d\u52a1\u63a7\u5236\u5668\u4e3b\u8981\u7528\u4f5c\u76d1\u542c Service \u7684\u53d8\u5316\u3002\u6bd4\u5982\uff1a\u521b\u5efa\u7684\u662f\u4e00\u4e2a LoadBalancer \u7c7b\u578b\u7684 Service\uff0cService Controller \u5219\u8981\u786e\u4fdd\u5916\u90e8\u7684\u4e91\u5e73\u53f0\u4e0a\u5bf9\u8be5 Service \u5bf9\u5e94\u7684 LoadBalancer \u5b9e\u4f8b\u88ab\u521b\u5efa\u3001\u5220\u9664\u4ee5\u53ca\u76f8\u5e94\u7684\u8def\u7531\u8f6c\u53d1\u8868\u88ab\u66f4\u65b0\u3002 Endpoint Controller\uff1aEndpoints \u8868\u793a\u4e86\u4e00\u4e2a Service \u5bf9\u5e94\u7684\u6240\u6709 Pod \u526f\u672c\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u800c Endpoints Controller \u662f\u8d1f\u8d23\u751f\u6210\u548c\u7ef4\u62a4\u6240\u6709 Endpoints \u5bf9\u8c61\u7684\u63a7\u5236\u5668\u3002Endpoint Controller \u8d1f\u8d23\u76d1\u542c Service \u548c\u5bf9\u5e94\u7684 Pod \u526f\u672c\u7684\u53d8\u5316\u3002\u5b9a\u671f\u5173\u8054 Service \u548c Pod (\u5173\u8054\u4fe1\u606f\u7531 Endpoint \u5bf9\u8c61\u7ef4\u62a4)\uff0c\u4ee5\u4fdd\u8bc1 Service \u5230 Pod \u7684\u6620\u5c04\u603b\u662f\u6700\u65b0\u7684\u3002","title":"kube-controller-manager"},{"location":"Foundation/K8s%20Introduction/#kube-scheduler","text":"Scheduler \u662f\u8d1f\u8d23\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90\u8c03\u5ea6\u7684\uff0c\u4e3b\u8981\u7684\u804c\u8d23\u5982\u4e0b\u6240\u793a\uff1a \u4e3b\u8981\u7528\u4e8e\u6536\u96c6\u548c\u5206\u6790\u5f53\u524d Kubernetes \u96c6\u7fa4\u4e2d\u6240\u6709 Node \u8282\u70b9\u7684\u8d44\u6e90 (\u5305\u62ec\u5185\u5b58\u3001CPU \u7b49) \u8d1f\u8f7d\u60c5\u51b5\uff0c\u7136\u540e\u4f9d\u636e\u8d44\u6e90\u5360\u7528\u60c5\u51b5\u5206\u53d1\u65b0\u5efa\u7684 Pod \u5230 Kubernetes \u96c6\u7fa4\u4e2d\u53ef\u7528\u7684\u8282\u70b9 \u5b9e\u65f6\u76d1\u6d4b Kubernetes \u96c6\u7fa4\u4e2d\u672a\u5206\u53d1\u548c\u5df2\u5206\u53d1\u7684\u6240\u6709\u8fd0\u884c\u7684 Pod \u5b9e\u65f6\u76d1\u6d4b Node \u8282\u70b9\u4fe1\u606f\uff0c\u7531\u4e8e\u4f1a\u9891\u7e41\u67e5\u627e Node \u8282\u70b9\uff0c\u6240\u4ee5 Scheduler \u540c\u65f6\u4f1a\u7f13\u5b58\u4e00\u4efd\u6700\u65b0\u7684\u4fe1\u606f\u5728\u672c\u5730 \u5728\u5206\u53d1 Pod \u5230\u6307\u5b9a\u7684 Node \u8282\u70b9\u540e\uff0c\u4f1a\u628a Pod \u76f8\u5173\u7684 Binding \u4fe1\u606f\u5199\u56de API Server\uff0c\u4ee5\u65b9\u4fbf\u5176\u5b83\u7ec4\u4ef6\u4f7f\u7528","title":"kube-scheduler"},{"location":"Foundation/K8s%20Introduction/#kubelet","text":"kubelet \u662f\u8d1f\u8d23\u5bb9\u5668\u771f\u6b63\u8fd0\u884c\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u7684\u804c\u8d23\u5982\u4e0b\u6240\u793a\uff1a \u8d1f\u8d23 Node \u8282\u70b9\u4e0a Pod \u7684\u521b\u5efa\u3001\u4fee\u6539\u3001\u76d1\u63a7\u3001\u5220\u9664\u7b49\u5168\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406 \u5b9a\u65f6\u4e0a\u62a5\u672c\u5730 Node \u7684\u72b6\u6001\u4fe1\u606f\u7ed9 API Server kubelet \u662f Master \u548c Node \u4e4b\u95f4\u7684\u6865\u6881\uff0c\u63a5\u6536 API Server \u5206\u914d\u7ed9\u5b83\u7684\u4efb\u52a1\u5e76\u6267\u884c kubelet \u901a\u8fc7 API Server \u95f4\u63a5\u4e0e Etcd \u96c6\u7fa4\u4ea4\u4e92\u6765\u8bfb\u53d6\u96c6\u7fa4\u914d\u7f6e\u4fe1\u606f kubelet \u5728 Node \u4e0a\u505a\u7684\u4e3b\u8981\u5de5\u4f5c\u5177\u4f53\u5982\u4e0b\uff1a \u8bbe\u7f6e\u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf\u3001\u7ed9\u5bb9\u5668\u7ed1\u5b9a Volume\u3001\u7ed9\u5bb9\u5668\u7ed1\u5b9a Port\u3001\u6839\u636e\u6307\u5b9a\u7684 Pod \u8fd0\u884c\u4e00\u4e2a\u5355\u4e00\u5bb9\u5668\u3001\u7ed9\u6307\u5b9a\u7684 Pod \u521b\u5efa Network \u5bb9\u5668 \u540c\u6b65 Pod \u7684\u72b6\u6001 \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\u3001\u6740\u6b7b\u5bb9\u5668\u3001\u5220\u9664 Pod \u7684\u6240\u6709\u5bb9\u5668","title":"kubelet"},{"location":"Foundation/K8s%20Introduction/#kube-proxy","text":"kube-proxy \u662f\u4e3a\u4e86\u89e3\u51b3\u5916\u90e8\u7f51\u7edc\u80fd\u591f\u8bbf\u95ee\u96c6\u7fa4\u4e2d\u5bb9\u5668\u63d0\u4f9b\u7684\u5e94\u7528\u670d\u52a1\u800c\u8bbe\u8ba1\u7684\uff0cProxy \u8fd0\u884c\u5728\u6bcf\u4e2aNode \u4e0a\u3002 \u6bcf\u521b\u5efa\u4e00\u4e2a Service\uff0ckube-proxy \u5c31\u4f1a\u4ece API Server \u83b7\u53d6 Services \u548c Endpoints \u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u6839\u636e\u5176\u914d\u7f6e\u4fe1\u606f\u5728 Node \u4e0a\u542f\u52a8\u4e00\u4e2a Proxy \u7684\u8fdb\u7a0b\u5e76\u76d1\u542c\u76f8\u5e94\u7684\u670d\u52a1\u7aef\u53e3\u3002 \u5f53\u63a5\u6536\u5230\u5916\u90e8\u8bf7\u6c42\u65f6\uff0ckube-proxy \u4f1a\u6839\u636e Load Balancer \u5c06\u8bf7\u6c42\u5206\u53d1\u5230\u540e\u7aef\u6b63\u786e\u7684\u5bb9\u5668\u5904\u7406\u3002 kube-proxy \u4e0d\u4f46\u89e3\u51b3\u4e86\u540c\u4e00\u5bbf\u4e3b\u673a\u76f8\u540c\u670d\u52a1\u7aef\u53e3\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u8fd8\u63d0\u4f9b\u4e86 Service \u8f6c\u53d1\u670d\u52a1\u7aef\u53e3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u7684\u80fd\u529b\u3002 kube-proxy \u540e\u7aef\u4f7f\u7528 \u968f\u673a\u3001\u8f6e\u5faa \u7b49\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u8fdb\u884c\u8c03\u5ea6\u3002","title":"kube-proxy"},{"location":"Foundation/K8s%20Introduction/#kubectl","text":"Kubectl \u662f Kubernetes \u7684\u96c6\u7fa4\u7ba1\u7406\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5de5\u5177\u96c6\u3002\u901a\u8fc7 Kubectl \u547d\u4ee4\u5bf9 API Server \u8fdb\u884c\u64cd\u4f5c\uff0cAPI Server \u54cd\u5e94\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u547d\u4ee4\u7ed3\u679c\uff0c\u4ece\u800c\u8fbe\u5230\u5bf9 Kubernetes \u96c6\u7fa4\u7684\u7ba1\u7406","title":"kubectl"},{"location":"Foundation/K8s%20Introduction/#_3","text":"\u4e0a\u9762\u6211\u4eec\u90fd\u662f\u5728\u67b6\u6784\u5c42\u9762\u4e86\u89e3 Kubernetes\uff0c\u4f46\u662f\u4f3c\u4e4e\u6ca1\u6709\u53d1\u73b0\u5173\u4e8e\u5bb9\u5668\u7684\u8bf4\u660e\uff0cKubernetes \u4f5c\u4e3a\u5bb9\u5668\u7f16\u6392\u5f15\u64ce\uff0c\u90a3\u4e48\u4ed6\u662f\u600e\u4e48\u53bb\u5bf9\u5bb9\u5668\u8fdb\u884c\u7f16\u6392\u7684\u5462\uff1f\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u62bd\u8c61\u4e86\u5f88\u591a\u96c6\u7fa4\u5185\u90e8\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u53bb\u64cd\u4f5c\u5bb9\u5668\u7684\u7f16\u6392\u5de5\u4f5c\u3002","title":"\u6838\u5fc3\u8d44\u6e90\u5bf9\u8c61"},{"location":"Foundation/K8s%20Introduction/#pod","text":"Pod \u662f\u4e00\u7ec4\u7d27\u5bc6\u5173\u8054\u7684 \u5bb9\u5668\u96c6\u5408 \uff0c\u5b83\u4eec\u5171\u4eab PID\u3001IPC\u3001Network \u548c UTS namespace\uff0c\u662fKubernetes \u8c03\u5ea6\u7684 \u57fa\u672c\u5355\u4f4d \u3002Pod \u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u652f\u6301\u591a\u4e2a\u5bb9\u5668\u5728\u4e00\u4e2a Pod \u4e2d\u5171\u4eab\u7f51\u7edc\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u6587\u4ef6\u5171\u4eab\u8fd9\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u65b9\u5f0f\u7ec4\u5408\u5b8c\u6210\u670d\u52a1\u3002\u6211\u4eec\u77e5\u9053\u5bb9\u5668\u672c\u8d28\u4e0a\u5c31\u662f\u8fdb\u7a0b\uff0c\u90a3\u4e48 Pod \u5b9e\u9645\u4e0a\u5c31\u662f\u8fdb\u7a0b\u7ec4\u4e86\uff0c\u53ea\u662f\u8fd9\u4e00\u7ec4\u8fdb\u7a0b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\u3002 \u5728 Kubernetes \u4e2d\uff0c\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u90fd\u4f7f\u7528\u8d44\u6e90\u6e05\u5355\uff08yaml\u6216json\uff09\u6765\u5b9a\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684 nginx \u670d\u52a1\uff0c\u5b83\u5305\u542b\u4e00\u4e2a\u955c\u50cf\u4e3a nginx \u7684\u5bb9\u5668\uff1a(nginx-pod.yaml) apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 \u5b9a\u4e49\u4e86\u8fd9\u6837\u4e00\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684 Kubectl \u5de5\u5177\u5c06\u8fd9\u4e2a Pod \u521b\u5efa\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff1a kubectl apply -f nginx-pod.yaml Pod \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u88ab\u521b\u5efa\u7684\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a \u7528\u6237\u901a\u8fc7 REST API \u521b\u5efa\u4e00\u4e2a Pod apiserver \u5c06\u5176\u5199\u5165 etcd scheduluer \u68c0\u6d4b\u5230\u672a\u7ed1\u5b9a Node \u7684 Pod\uff0c\u5f00\u59cb\u8c03\u5ea6\u5e76\u66f4\u65b0 Pod \u7684 Node \u7ed1\u5b9a kubelet \u68c0\u6d4b\u5230\u6709\u65b0\u7684 Pod \u8c03\u5ea6\u8fc7\u6765\uff0c\u901a\u8fc7 container runtime \u8fd0\u884c\u8be5 Pod kubelet \u901a\u8fc7 container runtime \u53d6\u5230 Pod \u72b6\u6001\uff0c\u5e76\u66f4\u65b0\u5230 apiserver \u4e2d","title":"Pod"},{"location":"Foundation/K8s%20Introduction/#label","text":"Label \u6807\u7b7e\u5728 Kubernetes \u8d44\u6e90\u5bf9\u8c61\u4e2d\u4f7f\u7528\u5f88\u591a\uff0c\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027\uff0cLabel \u662f\u8bc6\u522b Kubernetes \u5bf9\u8c61\u7684\u6807\u7b7e\uff0c\u4ee5 key/value \u7684\u65b9\u5f0f\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\uff08key\u6700\u957f\u4e0d\u80fd\u8d85\u8fc763\u5b57\u8282\uff0cvalue \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8d85\u8fc7253\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff09\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u7684 Nginx \u7684 Pod \u5c31\u6dfb\u52a0\u4e86\u4e00\u4e2a app=nginx \u7684 Label \u6807\u7b7e\u3002Label \u4e0d\u63d0\u4f9b\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u7ecf\u5e38\u662f\u5f88\u591a\u5bf9\u8c61\uff08\u5982Pods\uff09\u90fd\u4f7f\u7528\u76f8\u540c\u7684 Label \u6765\u6807\u5fd7\u5177\u4f53\u7684\u5e94\u7528\u3002Label \u5b9a\u4e49\u597d\u540e\u5176\u4ed6\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 Label Selector \u6765\u9009\u62e9\u4e00\u7ec4\u76f8\u540c Label \u7684\u5bf9\u8c61\uff08\u6bd4\u5982 Service \u7528 Label \u6765\u9009\u62e9\u4e00\u7ec4 Pod\uff09\u3002Label Selector \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u7b49\u5f0f\uff0c\u5982 app=nginx \u548c env!=production \u96c6\u5408\uff0c\u5982 env in (production, qa) \u591a\u4e2a Label\uff08\u5b83\u4eec\u4e4b\u95f4\u662f AND \u5173\u7cfb\uff09\uff0c\u5982 app=nginx,env=test","title":"Label"},{"location":"Foundation/K8s%20Introduction/#namespace","text":"Namespace\uff08\u547d\u540d\u7a7a\u95f4\uff09\u662f\u5bf9\u4e00\u7ec4\u8d44\u6e90\u548c\u5bf9\u8c61\u7684\u62bd\u8c61\u96c6\u5408\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u6765\u5c06\u7cfb\u7edf\u5185\u90e8\u7684\u5bf9\u8c61\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u6216\u7528\u6237\u7ec4\u3002\u5e38\u89c1\u7684 Pods\u3001Services\u3001Deployments \u7b49\u90fd\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff08\u9ed8\u8ba4\u662fdefault\uff09\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684 Nginx Pod \u6ca1\u6709\u6307\u5b9a namespace\uff0c\u5219\u9ed8\u8ba4\u5c31\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u800c Node, PersistentVolumes \u7b49\u8d44\u6e90\u5219\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\uff0c\u662f\u5168\u5c40\u7684\u3002 Warning \u6ce8\u610f\u5b83\u5e76\u4e0d\u662f Linux Namespace\uff0c\u4e8c\u8005\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5b83\u53ea\u662f Kubernetes \u5212\u5206\u4e0d\u540c\u5de5\u4f5c\u7a7a\u95f4\u7684\u4e00\u4e2a\u903b\u8f91\u5355\u4f4d\u3002","title":"Namespace"},{"location":"Foundation/K8s%20Introduction/#deployment","text":"\u6211\u4eec\u8bf4\u4e86 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u4f46\u662f\u5982\u679c\u60f3\u8981\u521b\u5efa\u540c\u4e00\u4e2a\u5bb9\u5668\u7684\u591a\u4efd\u62f7\u8d1d\uff0c\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u5206\u522b\u521b\u5efa\u51fa\u6765\u4e48\uff0c\u90a3\u4e48\u80fd\u5426\u5c06 Pods \u5212\u5230\u4e00\u4e2a\u903b\u8f91\u7ec4\u91cc\u9762\u5462\uff1fDeployment \u5c31\u662f\u6765\u7ba1\u7406 Pod \u7684\u8d44\u6e90\u5bf9\u8c61\u3002 Deployment \u786e\u4fdd\u4efb\u610f\u65f6\u95f4\u90fd\u6709\u6307\u5b9a\u6570\u91cf\u7684 Pod\u201c\u526f\u672c\u201d\u5728\u8fd0\u884c\u3002\u5982\u679c\u4e3a\u67d0\u4e2a Pod \u521b\u5efa\u4e86 Deployment \u5e76\u4e14\u6307\u5b9a3\u4e2a\u526f\u672c\uff0c\u5b83\u4f1a\u521b\u5efa3\u4e2a Pod\uff0c\u5e76\u4e14\u6301\u7eed\u76d1\u63a7\u5b83\u4eec\u3002\u5982\u679c\u67d0\u4e2a Pod \u4e0d\u54cd\u5e94\uff0c\u90a3\u4e48 Deployment \u4f1a\u66ff\u6362\u5b83\uff0c\u59cb\u7ec8\u4fdd\u6301\u603b\u6570\u4e3a3\u3002 \u5982\u679c\u4e4b\u524d\u4e0d\u54cd\u5e94\u7684 Pod \u6062\u590d\u4e86\uff0c\u73b0\u5728\u5c31\u67094\u4e2a Pod \u4e86\uff0c\u90a3\u4e48 Deployment \u4f1a\u5c06\u5176\u4e2d\u4e00\u4e2a\u7ec8\u6b62\u4fdd\u6301\u603b\u6570\u4e3a3\u3002\u5982\u679c\u5728\u8fd0\u884c\u4e2d\u5c06\u526f\u672c\u603b\u6570\u6539\u4e3a5\uff0cDeployment \u4f1a\u7acb\u523b\u542f\u52a82\u4e2a\u65b0 Pod\uff0c\u4fdd\u8bc1\u603b\u6570\u4e3a5\u3002\u6301\u56de\u6eda\u548c\u6eda\u52a8\u5347\u7ea7\u3002 \u5f53\u521b\u5efa Deployment \u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u4e1c\u897f\uff1a Pod \u6a21\u677f\uff1a\u7528\u6765\u521b\u5efa Pod \u526f\u672c\u7684\u6a21\u677f Label \u6807\u7b7e\uff1aDeployment \u9700\u8981\u76d1\u63a7\u7684 Pod \u7684\u6807\u7b7e\u3002 \u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u4e86 Pod \u7684\u4e00\u4e9b\u526f\u672c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u526f\u672c\u4e0a\u5982\u4f55\u8fdb\u884c\u8d1f\u8f7d\u5462\uff1f\u5982\u4f55\u628a\u8fd9\u4e9b Pod \u66b4\u9732\u51fa\u53bb\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 Service \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002","title":"Deployment"},{"location":"Foundation/K8s%20Introduction/#service","text":"Service \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 Labels \u4e3a\u5e94\u7528\u63d0\u4f9b \u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0 \u3002\u5339\u914d Labels \u7684 Pod IP \u548c\u7aef\u53e3\u5217\u8868\u7ec4\u6210 Endpoints\uff0c\u7531 kube-proxy \u8d1f\u8d23\u5c06\u670d\u52a1 IP \u8d1f\u8f7d\u5747\u8861\u5230\u8fd9\u4e9b Endpoints \u4e0a\u3002 \u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP\uff08\u4ec5\u5728\u96c6\u7fa4\u5185\u90e8\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\uff09\u548c DNS \u540d\uff0c\u5176\u4ed6\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216 DNS \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u540e\u7aef\u5bb9\u5668\u7684\u8fd0\u884c\u3002 \u8fc1\u79fb \u4e86\u89e3\u4e86\u4e0a\u9762\u7684\u51e0\u4e2a\u57fa\u672c\u6982\u5ff5\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u628a\u6211\u4eec\u7684\u5bb9\u5668\u670d\u52a1\u8fc1\u79fb\u5230 Kubernetes \u96c6\u7fa4\u4e0a\u4e86\u3002\u5f53\u7136\u6211\u4eec\u8fd8\u5f97\u5148\u642d\u5efa\u597d\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u73af\u5883\u3002","title":"Service"},{"location":"Foundation/Pod%20inAdvance/","text":"Pod \u4f7f\u7528\u8fdb\u9636 \u00b6 \u6df1\u5165\u7406\u89e3 Pod \u5bf9\u8c61 Pod \u8d44\u6e90\u914d\u7f6e \u00b6 \u5b9e\u9645\u4e0a\u4e0a\u9762\u51e0\u4e2a\u6b65\u9aa4\u5c31\u662f\u5f71\u54cd\u4e00\u4e2a Pod \u751f\u547d\u5468\u671f\u7684\u5927\u7684\u90e8\u5206\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u4e5f\u4f1a\u5728 Pod \u7684\u542f\u52a8\u8fc7\u7a0b\u8fdb\u884c\u8bbe\u7f6e\uff0c\u6bd4\u5982\u5728\u5bb9\u5668\u542f\u52a8\u4e4b\u524d\u8fd8\u4f1a\u4e3a\u5f53\u524d\u7684\u5bb9\u5668\u8bbe\u7f6e\u5206\u914d\u7684 CPU\u3001\u5185\u5b58\u7b49\u8d44\u6e90\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 CGroup \u6765\u5bf9\u5bb9\u5668\u7684\u8d44\u6e90\u8fdb\u884c\u9650\u5236\uff0c\u540c\u6837\u7684\uff0c\u5728 Pod \u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u67d0\u4e2a\u5bb9\u5668\u7684\u4f7f\u7528\u7684 CPU \u6216\u8005\u5185\u5b58\u7684\u4e0a\u9650\u3002\u90a3\u4e48 Pod \u662f\u5982\u4f55\u6765\u4f7f\u7528\u548c\u63a7\u5236\u8fd9\u4e9b\u8d44\u6e90\u7684\u5206\u914d\u7684\u5462\uff1f \u9996\u5148\u5bf9\u4e8e CPU\uff0c\u6211\u4eec\u77e5\u9053\u8ba1\u7b97\u673a\u91cc CPU \u7684\u8d44\u6e90\u662f\u6309 \u201c\u65f6\u95f4\u7247\u201d \u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5206\u914d\u7684\uff0c\u7cfb\u7edf\u91cc\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u90fd\u9700\u8981 CPU \u7684\u5904\u7406\uff0c\u6240\u4ee5\uff0c\u54ea\u4e2a\u4efb\u52a1\u8981\u662f\u7533\u8bf7\u7684 CPU \u65f6\u95f4\u7247\u8d8a\u591a\uff0c\u90a3\u4e48\u5b83\u5f97\u5230\u7684 CPU \u8d44\u6e90\u5c31\u8d8a\u591a\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u5668\u7406\u89e3\u3002 \u7136\u540e\u8fd8\u9700\u8981\u4e86\u89e3\u4e0b CGroup \u91cc\u9762\u5bf9\u4e8e CPU \u8d44\u6e90\u7684\u5355\u4f4d\u6362\u7b97\uff1a 1 CPU = 1000 millicpu\uff081 Core = 1000m\uff09 0 .5 CPU = 500 millicpu \uff080.5 Core = 500m\uff09 \u8fd9\u91cc\u7684 m \u5c31\u662f\u6beb\u3001\u6beb\u6838\u7684\u610f\u601d\uff0cKubernetes \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u547d\u4ee4\u6765\u786e\u8ba4\u672c\u8282\u70b9\u7684 CPU \u5185\u6838\u6570\u91cf\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6570\u91cf\u4e58\u4ee51000\uff0c\u5f97\u5230\u7684\u5c31\u662f\u8282\u70b9\u603b CPU \u603b\u6beb\u6570\u3002\u6bd4\u5982\u4e00\u4e2a\u8282\u70b9\u6709\u56db\u6838\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u7684 CPU \u603b\u6beb\u91cf\u4e3a 4000m\uff0c\u5982\u679c\u4f60\u8981\u4f7f\u75280.5 core\uff0c\u5219\u4f60\u8981\u6c42\u7684\u662f 4000*0.5 = 2000m\u3002\u5728 Pod \u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u6765\u9650\u5236\u548c\u8bf7\u6c42 CPU \u8d44\u6e90\uff1a - spec.containers[].resources.limits.cpu \uff1aCPU \u4e0a\u9650\u503c\uff0c\u53ef\u4ee5\u77ed\u6682\u8d85\u8fc7\uff0c\u5bb9\u5668\u4e5f\u4e0d\u4f1a\u88ab\u505c\u6b62 - spec.containers[].resources.requests.cpu \uff1aCPU\u8bf7\u6c42\u503c\uff0cKubernetes \u8c03\u5ea6\u7b97\u6cd5\u91cc\u7684\u4f9d\u636e\u503c\uff0c\u53ef\u4ee5\u8d85\u8fc7 \u8fd9\u91cc\u9700\u8981\u660e\u767d\u7684\u662f\uff0c\u5982\u679c resources.requests.cpu \u8bbe\u7f6e\u7684\u503c\u5927\u4e8e\u96c6\u7fa4\u91cc\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927 CPU \u6838\u5fc3\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a Pod \u5c06\u65e0\u6cd5\u8c03\u5ea6\uff0c\u56e0\u4e3a\u6ca1\u6709\u8282\u70b9\u80fd\u6ee1\u8db3\u5b83\u3002 \u5230\u8fd9\u91cc\u5e94\u8be5\u660e\u767d\u4e86\uff0c requests \u662f\u7528\u4e8e\u96c6\u7fa4\u8c03\u5ea6\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u800c limits \u624d\u662f\u771f\u6b63\u7684\u7528\u4e8e\u8d44\u6e90\u9650\u5236\u7684\u914d\u7f6e\uff0c\u5982\u679c\u4f60\u9700\u8981\u4fdd\u8bc1\u7684\u4f60\u5e94\u7528\u4f18\u5148\u7ea7\u5f88\u9ad8\uff0c\u4e5f\u5c31\u662f\u8d44\u6e90\u5403\u7d27\u7684\u60c5\u51b5\u4e0b\u6700\u540e\u518d\u6740\u6389\u4f60\u7684 Pod\uff0c\u90a3\u4e48\u4f60\u5c31\u628a\u4f60\u7684 requests \u548c limits \u7684\u503c\u8bbe\u7f6e\u6210\u4e00\u81f4\uff0c\u5728\u540e\u9762\u5e94\u7528\u7684 Qos \u4e2d\u4f1a\u5177\u4f53\u8bb2\u89e3\u3002 \u6bd4\u5982\uff0c\u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a Pod\uff0c\u7ed9\u5bb9\u5668\u7684\u914d\u7f6e\u5982\u4e0b\u7684\u8d44\u6e90: # pod-resource-demo1.yaml apiVersion : v1 kind : Pod metadata : name : resource-demo1 spec : containers : - name : resource-demo1 image : nginx ports : - containerPort : 80 resources : requests : memory : 50Mi cpu : 50m limits : memory : 100Mi cpu : 100m \u8fd9\u91cc\uff0cCPU \u6211\u4eec\u7ed9\u7684\u662f 50m\uff0c\u4e5f\u5c31\u662f 0.05core \uff0c\u8fd9 0.05core \u4e5f\u5c31\u662f\u5360\u4e86 1 CPU \u91cc\u7684 5% \u7684\u8d44\u6e90\u65f6\u95f4\u3002\u800c\u9650\u5236\u8d44\u6e90\u662f\u7ed9\u7684\u662f 100m\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f CPU \u8d44\u6e90\u662f\u53ef\u538b\u7f29\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u5bb9\u5668\u8fbe\u5230\u4e86\u8fd9\u4e2a\u8bbe\u5b9a\u7684\u4e0a\u9650\u540e\uff0c\u5bb9\u5668\u6027\u80fd\u4f1a\u4e0b\u964d\uff0c\u4f46\u662f\u4e0d\u4f1a\u7ec8\u6b62\u6216\u9000\u51fa\u3002\u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u8fd9\u4e2a Pod\uff1a \u279c ~ kubectl apply -f pod-resource-demo1.yaml \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u88ab\u8c03\u5ea6\u5230 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\uff1a \u279c ~ kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES resource-demo1 1 /1 Running 0 24s 10 .244.1.27 node1 <none> <none> \u7136\u540e\u6211\u4eec\u5230 node1 \u8282\u70b9\u4e0a\u53bb\u67e5\u770b Pod \u91cc\u9762\u542f\u52a8\u7684 resource-demo1 \u8fd9\u4e2a\u5bb9\u5668\uff1a \u279c ~ crictl ps CONTAINER IMAGE CREATED STATE NAME ATTEMPT POD ID 1e4ef680a5a88 87a94228f133e 41 seconds ago Running resource-demo1 0 a00af47f2a12e ...... \u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b\u4e3b\u5bb9\u5668\u7684\u4fe1\u606f\uff1a \u279c ~ crictl inspect 1e4ef680a5a88 { \"status\" : { \"id\" : \"1e4ef680a5a88af7eae88a6901f12eb103dc3f8e1807f26337cd9bfb3704ca05\" , \"metadata\" : { \"attempt\" : 0 , \"name\" : \"resource-demo1\" } , ...... \"linux\" : { \"resources\" : { \"devices\" : [ { \"allow\" : false, \"access\" : \"rwm\" } ] , \"memory\" : { \"limit\" : 104857600 } , \"cpu\" : { \"shares\" : 51 , \"quota\" : 10000 , \"period\" : 100000 } } , \"cgroupsPath\" : \"kubepods-burstable-poda194c43a_9551_494b_bd72_ab898afdcc0c.slice:cri-containerd:1e4ef680a5a88af7eae88a6901f12eb103dc3f8e1807f26337cd9bfb3704ca05\" , ...... \u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5bb9\u5668\u7684\u4e00\u4e9b\u8d44\u6e90\u60c5\u51b5\uff0cPod \u4e0a\u7684\u8d44\u6e90\u914d\u7f6e\u6700\u7ec8\u4e5f\u8fd8\u662f\u901a\u8fc7\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u53bb\u63a7\u5236 CGroup \u6765\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u5982\u4e0b\u76ee\u5f55\u67e5\u770b CGroup \u7684\u914d\u7f6e\uff0c\u8be5\u76ee\u5f55\u5c31\u662f CGroup \u7236\u7ea7\u76ee\u5f55\uff0c\u800c CGroup \u662f\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u6765\u8fdb\u884c\u8d44\u6e90\u9650\u5236\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0a\u9762\u9650\u5236\u5bb9\u5668\u7684\u8d44\u6e90\u5c31\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u53cd\u6620\u51fa\u6765\uff1a \u279c ~ cd /sys/fs/cgroup/cpu/kubepods.slice/kubepods-burstable.slice/kubepods-burstable-poda194c43a_9551_494b_bd72_ab898afdcc0c.slice \u279c ~ ls cgroup.clone_children cpuacct.stat cpu.cfs_period_us cpu.rt_runtime_us notify_on_release cgroup.event_control cpuacct.usage cpu.cfs_quota_us cpu.shares tasks cgroup.procs cpuacct.usage_percpu cpu.rt_period_us cpu.stat \u279c ~ cat cpu.cfs_quota_us 10000 \u5176\u4e2d cpu.cfs_quota_us \u5c31\u662f CPU \u7684\u9650\u5236\u503c\uff0c\u5982\u679c\u8981\u67e5\u770b\u5177\u4f53\u7684\u5bb9\u5668\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u76ee\u5f55\u4e0b\u9762\u53bb\u67e5\u770b\u5373\u53ef\u3002 \u6700\u540e\u6211\u4eec\u4e86\u89e3\u4e0b\u5185\u5b58\u8fd9\u5757\u7684\u8d44\u6e90\u63a7\u5236\uff0c\u5185\u5b58\u7684\u5355\u4f4d\u6362\u7b97\u6bd4\u8f83\u7b80\u5355\uff1a 1 MiB = 1024 KiB \uff0c\u5185\u5b58\u8fd9\u5757\u5728 Kubernetes \u91cc\u4e00\u822c\u7528\u7684\u662f Mi \u5355\u4f4d\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Ki\u3001Gi \u751a\u81f3 Pi \uff0c\u770b\u5177\u4f53\u7684\u4e1a\u52a1\u9700\u6c42\u548c\u8d44\u6e90\u5bb9\u91cf\u3002 \u5355\u4f4d\u6362\u7b97 \u8fd9\u91cc\u6ce8\u610f\u7684\u662f MiB \u2260 MB \uff0cMB \u662f\u5341\u8fdb\u5236\u5355\u4f4d\uff0cMiB \u662f\u4e8c\u8fdb\u5236\uff0c\u5e73\u65f6\u6211\u4eec\u4ee5\u4e3a MB \u7b49\u4e8e 1024KB\uff0c\u5176\u5b9e 1MB=1000KB \uff0c 1MiB \u624d\u7b49\u4e8e 1024KiB \u3002\u4e2d\u95f4\u5e26\u5b57\u6bcd i \u7684\u662f\u56fd\u9645\u7535\u5de5\u534f\u4f1a\uff08IEC\uff09\u5b9a\u7684\uff0c\u8d701024\u4e58\u79ef\uff1bKB\u3001MB\u3001GB \u662f\u56fd\u9645\u5355\u4f4d\u5236\uff0c\u8d701000\u4e58\u79ef\u3002 \u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5185\u5b58\u662f\u4e0d\u53ef\u538b\u7f29\u6027\u8d44\u6e90\uff0c\u5982\u679c\u5bb9\u5668\u4f7f\u7528\u5185\u5b58\u8d44\u6e90\u5230\u8fbe\u4e86\u4e0a\u9650\uff0c\u90a3\u4e48\u4f1a OOM \uff0c\u9020\u6210\u5185\u5b58\u6ea2\u51fa\uff0c\u5bb9\u5668\u5c31\u4f1a\u7ec8\u6b62\u548c\u9000\u51fa\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u5f0f\u53bb\u901a\u8fc7\u67e5\u770b CGroup \u6587\u4ef6\u7684\u503c\u6765\u9a8c\u8bc1\u8d44\u6e90\u9650\u5236\u3002 \u9759\u6001 Pod \u00b6 \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u9664\u4e86\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u5230\u7684\u666e\u901a\u7684 Pod \u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684 Pod\uff0c\u53eb\u505aStatic Pod\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u9759\u6001 Pod\uff0c\u9759\u6001 Pod \u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u5730\u65b9\u5462\uff1f \u9759\u6001 Pod \u76f4\u63a5\u7531\u8282\u70b9\u4e0a\u7684 kubelet \u8fdb\u7a0b\u6765\u7ba1\u7406\uff0c\u4e0d\u901a\u8fc7 master \u8282\u70b9\u4e0a\u7684 apiserver\u3002\u65e0\u6cd5\u4e0e\u6211\u4eec\u5e38\u7528\u7684\u63a7\u5236\u5668 Deployment \u6216\u8005 DaemonSet \u8fdb\u884c\u5173\u8054\uff0c\u5b83\u7531 kubelet \u8fdb\u7a0b\u81ea\u5df1\u6765\u76d1\u63a7\uff0c\u5f53 pod \u5d29\u6e83\u65f6\u4f1a\u91cd\u542f\u8be5 pod\uff0ckubelet \u4e5f\u65e0\u6cd5\u5bf9\u4ed6\u4eec\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5\u3002\u9759\u6001 pod \u59cb\u7ec8\u7ed1\u5b9a\u5728\u67d0\u4e00\u4e2a kubelet \u4e0a\uff0c\u5e76\u4e14\u59cb\u7ec8\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002kubelet \u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e00\u4e2a\u9759\u6001 pod \u5728 Kubernetes \u7684 apiserver \u4e0a\u521b\u5efa\u4e00\u4e2a\u955c\u50cf Pod\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728 apiserver \u4e2d\u67e5\u8be2\u5230\u8be5 pod\uff0c\u4f46\u662f\u4e0d\u80fd\u901a\u8fc7 apiserver \u8fdb\u884c\u63a7\u5236\uff08\u4f8b\u5982\u4e0d\u80fd\u5220\u9664\uff09\u3002 \u521b\u5efa\u9759\u6001 Pod \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u914d\u7f6e\u6587\u4ef6 \u548c HTTP \u4e24\u79cd\u65b9\u5f0f \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u653e\u5728\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6807\u51c6\u7684 JSON \u6216 YAML \u683c\u5f0f\u7684 pod \u5b9a\u4e49\u6587\u4ef6\u3002\u7528 kubelet --pod-manifest-path=<the directory> \u6765\u542f\u52a8 kubelet \u8fdb\u7a0b\uff0ckubelet \u5b9a\u671f\u7684\u53bb\u626b\u63cf\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6839\u636e\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u51fa\u73b0\u6216\u6d88\u5931\u7684 YAML/JSON \u6587\u4ef6\u6765\u521b\u5efa\u6216\u5220\u9664\u9759\u6001 pod\u3002 \u6bd4\u5982\u6211\u4eec\u5728 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\u7528\u9759\u6001 pod \u7684\u65b9\u5f0f\u6765\u542f\u52a8\u4e00\u4e2a nginx \u7684\u670d\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a \u279c ~ cat /var/lib/kubelet/config.yaml ...... staticPodPath: /etc/kubernetes/manifests # \u548c\u547d\u4ee4\u884c\u7684 pod-manifest-path \u53c2\u6570\u4e00\u81f4 ...... \u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027\u4e3a staticPodPath \u7684\u914d\u7f6e\uff0c\u5176\u5b9e\u548c\u547d\u4ee4\u884c\u7684 --pod-manifest-path \u914d\u7f6e\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u901a\u8fc7 kubeadm \u7684\u65b9\u5f0f\u6765\u5b89\u88c5\u7684\u96c6\u7fa4\u73af\u5883\uff0c\u5bf9\u5e94\u7684 kubelet \u5df2\u7ecf\u914d\u7f6e\u4e86\u6211\u4eec\u7684\u9759\u6001 Pod \u6587\u4ef6\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u5730\u5740\u4e3a /etc/kubernetes/manifests \uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u7684 Pod \u7684 JSON \u6216\u8005 YAML \u6587\u4ef6\u5373\u53ef\uff0c\u5982\u679c\u4f60\u7684 kubelet \u542f\u52a8\u53c2\u6570\u4e2d\u6ca1\u6709\u914d\u7f6e\u4e0a\u9762\u7684 --pod-manifest-path \u53c2\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u6dfb\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\u7136\u540e\u91cd\u542f kubelet \u5373\u53ef\uff1a \u279c ~ cat <<EOF >/etc/kubernetes/manifests/static-web.yaml apiVersion : v1 kind : Pod metadata : name : static-web labels : app : static spec : containers : - name : web image : nginx ports : - name : web containerPort : 80 EOF \u901a\u8fc7 HTTP \u521b\u5efa\u9759\u6001 Pods kubelet \u5468\u671f\u5730\u4ece \u2013manifest-url= \u53c2\u6570\u6307\u5b9a\u7684\u5730\u5740\u4e0b\u8f7d\u6587\u4ef6\uff0c\u5e76\u4e14\u628a\u5b83\u7ffb\u8bd1\u6210 JSON/YAML \u683c\u5f0f\u7684 pod \u5b9a\u4e49\u3002\u6b64\u540e\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e0e \u2013pod-manifest-path= \u76f8\u540c\uff0ckubelet \u4f1a\u4e0d\u65f6\u5730\u91cd\u65b0\u4e0b\u8f7d\u8be5\u6587\u4ef6\uff0c\u5f53\u6587\u4ef6\u53d8\u5316\u65f6\u5bf9\u5e94\u5730\u7ec8\u6b62\u6216\u542f\u52a8\u9759\u6001 pod\u3002 kubelet \u542f\u52a8\u65f6\uff0c\u7531 --pod-manifest-path= \u6216 --manifest-url= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u5b9a\u4e49\u7684\u6240\u6709 pod \u90fd\u4f1a\u81ea\u52a8\u521b\u5efa\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u793a\u4f8b\u4e2d\u7684 static-web \uff1a \u279c ~ nerdctl -n k8s.io ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6add7aa53969 docker.io/library/nginx:latest \"/docker-entrypoint.\u2026\" 43 seconds ago Up ...... \u73b0\u5728\u6211\u4eec\u901a\u8fc7kubectl\u5de5\u5177\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u955c\u50cf Pod\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE static-web-node1 1 /1 Running 0 109s \u9759\u6001 pod \u7684\u6807\u7b7e\u4f1a\u4f20\u9012\u7ed9\u955c\u50cf Pod\uff0c\u53ef\u4ee5\u7528\u6765\u8fc7\u6ee4\u6216\u7b5b\u9009\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u5220\u9664\u9759\u6001 pod\uff08\u4f8b\u5982\uff0c\u901a\u8fc7kubectl\u547d\u4ee4\uff09\uff0ckubelet \u4e0d\u4f1a\u5220\u9664\u5b83\u3002 \u279c ~ kubectl delete pod static-web-node1 pod \"static-web-node1\" deleted \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE static-web-node1 1 /1 Running 0 4s \u9759\u6001 Pod \u7684\u52a8\u6001\u589e\u52a0\u548c\u5220\u9664 \u8fd0\u884c\u4e2d\u7684 kubelet \u5468\u671f\u626b\u63cf\u914d\u7f6e\u7684\u76ee\u5f55\uff08\u6211\u4eec\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5c31\u662f /etc/kubernetes/manifests \uff09\u4e0b\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u5f53\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6709\u6587\u4ef6\u51fa\u73b0\u6216\u6d88\u5931\u65f6\u521b\u5efa\u6216\u5220\u9664 pods\uff1a \u279c ~ mv /etc/kubernetes/manifests/static-web.yaml /tmp # sleep 20 \u279c ~ nerdctl -n k8s.io ps // no nginx container is running \u279c ~ mv /tmp/static-web.yaml /etc/kubernetes/manifests # sleep 20 \u279c ~ nerdctl -n k8s.io ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 902be9190538 docker.io/library/nginx:latest \"/docker-entrypoint.\u2026\" 14 seconds ago Up ...... \u5176\u5b9e\u6211\u4eec\u7528 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\uff0cmaster \u8282\u70b9\u4e0a\u9762\u7684\u51e0\u4e2a\u91cd\u8981\u7ec4\u4ef6\u90fd\u662f\u7528\u9759\u6001 Pod \u7684\u65b9\u5f0f\u8fd0\u884c\u7684\uff0c\u6211\u4eec\u767b\u5f55\u5230 master \u8282\u70b9\u4e0a\u67e5\u770b /etc/kubernetes/manifests \u76ee\u5f55\uff1a \u279c ~ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml \u73b0\u5728\u660e\u767d\u4e86\u5427\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u4e3a\u6211\u4eec\u5c06\u96c6\u7fa4\u7684\u4e00\u4e9b\u7ec4\u4ef6\u5bb9\u5668\u5316\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u8fd9\u4e9b Pod \u90fd\u4e0d\u4f1a\u53d7\u5230 apiserver \u7684\u63a7\u5236\uff0c\u4e0d\u7136\u6211\u4eec\u8fd9\u91cckube-apiserver\u600e\u4e48\u81ea\u5df1\u53bb\u63a7\u5236\u81ea\u5df1\u5462\uff1f\u4e07\u4e00\u4e0d\u5c0f\u5fc3\u628a\u8fd9\u4e2a Pod \u5220\u6389\u4e86\u5462\uff1f\u6240\u4ee5\u53ea\u80fd\u6709kubelet\u81ea\u5df1\u6765\u8fdb\u884c\u63a7\u5236\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u9759\u6001 Pod\u3002 Downward API \u00b6 \u524d\u9762\u6211\u4eec\u4ece Pod \u7684\u539f\u7406\u5230\u751f\u547d\u5468\u671f\u4ecb\u7ecd\u4e86 Pod \u7684\u4e00\u4e9b\u4f7f\u7528\uff0c\u4f5c\u4e3a Kubernetes \u4e2d\u6700\u6838\u5fc3\u7684\u8d44\u6e90\u5bf9\u8c61\u3001\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u7684\u5c5e\u6027\u8fd8\u662f\u975e\u5e38\u7e41\u591a\u7684\uff0c\u524d\u9762\u6211\u4eec\u4f7f\u7528\u8fc7\u4e00\u4e2a volumes \u7684\u5c5e\u6027\uff0c\u8868\u793a\u58f0\u660e\u4e00\u4e2a\u6570\u636e\u5377\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 kubectl explain pod.spec.volumes \u53bb\u67e5\u770b\u8be5\u5bf9\u8c61\u4e0b\u9762\u7684\u5c5e\u6027\u975e\u5e38\u591a\uff0c\u524d\u9762\u6211\u4eec\u53ea\u662f\u7b80\u5355\u4f7f\u7528\u4e86 hostPath \u548c emptyDir{} \u8fd9\u4e24\u79cd\u6a21\u5f0f\uff0c\u5176\u4e2d\u8fd8\u6709\u4e00\u79cd\u6a21\u5f0f\u53eb\u505a downwardAPI \uff0c\u8fd9\u4e2a\u6a21\u5f0f\u548c\u5176\u4ed6\u6a21\u5f0f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u4e0d\u662f\u4e3a\u4e86\u5b58\u653e\u5bb9\u5668\u7684\u6570\u636e\u4e5f\u4e0d\u662f\u7528\u6765\u8fdb\u884c\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7684\u6570\u636e\u4ea4\u6362\u7684\uff0c\u800c\u662f\u8ba9 Pod \u91cc\u7684\u5bb9\u5668\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u8fd9\u4e2a Pod \u5bf9\u8c61\u672c\u8eab\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u76ee\u524d Downward API \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u7528\u4e8e\u5c06 Pod \u7684\u4fe1\u606f\u6ce8\u5165\u5230\u5bb9\u5668\u5185\u90e8\uff1a \u73af\u5883\u53d8\u91cf\uff1a\u7528\u4e8e\u5355\u4e2a\u53d8\u91cf\uff0c\u53ef\u4ee5\u5c06 Pod \u4fe1\u606f\u548c\u5bb9\u5668\u4fe1\u606f\u76f4\u63a5\u6ce8\u5165\u5bb9\u5668\u5185\u90e8 Volume \u6302\u8f7d\uff1a\u5c06 Pod \u4fe1\u606f\u751f\u6210\u4e3a\u6587\u4ef6\uff0c\u76f4\u63a5\u6302\u8f7d\u5230\u5bb9\u5668\u5185\u90e8\u4e2d\u53bb \u73af\u5883\u53d8\u91cf \u00b6 \u6211\u4eec\u901a\u8fc7 Downward API \u6765\u5c06 Pod \u7684 IP\u3001\u540d\u79f0\u4ee5\u53ca\u6240\u5bf9\u5e94\u7684 namespace \u6ce8\u5165\u5230\u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u5bb9\u5668\u4e2d\u6253\u5370\u5168\u90e8\u7684\u73af\u5883\u53d8\u91cf\u6765\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5bf9\u5e94\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\uff1a # env-pod.yaml apiVersion : v1 kind : Pod metadata : name : env-pod namespace : kube-system spec : containers : - name : env-pod image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : POD_NAME valueFrom : fieldRef : fieldPath : metadata.name - name : POD_NAMESPACE valueFrom : fieldRef : fieldPath : metadata.namespace - name : POD_IP valueFrom : fieldRef : fieldPath : status.podIP \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6e env \u7684\u503c\uff1a valueFrom \uff0c\u7531\u4e8e Pod \u7684 name \u548c namespace \u5c5e\u4e8e\u5143\u6570\u636e\uff0c\u662f\u5728 Pod \u521b\u5efa\u4e4b\u524d\u5c31\u5df2\u7ecf\u5b9a\u4e0b\u6765\u4e86\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 metata \u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e Pod \u7684 IP \u5219\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053 Pod IP \u662f\u4e0d\u56fa\u5b9a\u7684\uff0cPod \u91cd\u5efa\u4e86\u5c31\u53d8\u4e86\uff0c\u5b83\u5c5e\u4e8e\u72b6\u6001\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 status \u8fd9\u4e2a\u5c5e\u6027\u53bb\u83b7\u53d6\u3002\u53e6\u5916\u9664\u4e86\u4f7f\u7528 fieldRef \u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 resourceFieldRef \u53bb\u83b7\u53d6\u5bb9\u5668\u7684\u8d44\u6e90\u8bf7\u6c42\u548c\u8d44\u6e90\u9650\u5236\u4fe1\u606f\u3002 \u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f env-pod.yaml pod \"env-pod\" created Pod \u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs env-pod -n kube-system | grep POD kubectl logs -f env-pod -n kube-system POD_IP = 10 .244.1.121 KUBERNETES_SERVICE_PORT = 443 KUBERNETES_PORT = tcp://10.96.0.1:443 KUBE_DNS_SERVICE_PORT_DNS_TCP = 53 HOSTNAME = env-pod SHLVL = 1 HOME = /root KUBE_DNS_SERVICE_HOST = 10 .96.0.10 KUBE_DNS_PORT_9153_TCP_ADDR = 10 .96.0.10 KUBE_DNS_PORT_9153_TCP_PORT = 9153 KUBE_DNS_PORT_9153_TCP_PROTO = tcp KUBE_DNS_SERVICE_PORT = 53 KUBE_DNS_PORT = udp://10.96.0.10:53 POD_NAME = env-pod KUBERNETES_PORT_443_TCP_ADDR = 10 .96.0.1 PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin KUBE_DNS_PORT_53_TCP_ADDR = 10 .96.0.10 KUBERNETES_PORT_443_TCP_PORT = 443 KUBE_DNS_SERVICE_PORT_METRICS = 9153 KUBERNETES_PORT_443_TCP_PROTO = tcp KUBE_DNS_PORT_9153_TCP = tcp://10.96.0.10:9153 KUBE_DNS_PORT_53_UDP_ADDR = 10 .96.0.10 KUBE_DNS_PORT_53_TCP_PORT = 53 KUBE_DNS_PORT_53_TCP_PROTO = tcp KUBE_DNS_PORT_53_UDP_PORT = 53 KUBE_DNS_SERVICE_PORT_DNS = 53 KUBE_DNS_PORT_53_UDP_PROTO = udp KUBERNETES_SERVICE_PORT_HTTPS = 443 KUBERNETES_PORT_443_TCP = tcp://10.96.0.1:443 POD_NAMESPACE = kube-system KUBERNETES_SERVICE_HOST = 10 .96.0.1 PWD = / KUBE_DNS_PORT_53_TCP = tcp://10.96.0.10:53 KUBE_DNS_PORT_53_UDP = udp://10.96.0.10:53 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u7684 IP\u3001NAME\u3001NAMESPACE \u90fd\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6253\u5370\u51fa\u6765\u4e86\u3002 \u73af\u5883\u53d8\u91cf \u4e0a\u9762\u6253\u5370 Pod \u7684\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u770b\u5230\u6709\u5f88\u591a\u5185\u7f6e\u7684\u53d8\u91cf\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u6dfb\u52a0\u7684\uff0cKubernetes \u4f1a\u628a\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684 Service \u4fe1\u606f\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u5f62\u5f0f\u6ce8\u5165\u5230 Pod \u4e2d\u53bb\uff1a $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-dns ClusterIP 10 .96.0.10 <none> 53 /UDP,53/TCP,9153/TCP 4d21h Volume \u6302\u8f7d \u00b6 Downward API \u9664\u4e86\u63d0\u4f9b\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u901a\u8fc7 Volume \u6302\u8f7d\u7684\u65b9\u5f0f\u53bb\u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7 Downward API \u5c06 Pod \u7684 Label\u3001Annotation \u7b49\u4fe1\u606f\u901a\u8fc7 Volume \u6302\u8f7d\u5230\u5bb9\u5668\u7684\u67d0\u4e2a\u6587\u4ef6\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u5bb9\u5668\u4e2d\u6253\u5370\u51fa\u8be5\u6587\u4ef6\u7684\u503c\u6765\u9a8c\u8bc1\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # volume-pod.yaml apiVersion : v1 kind : Pod metadata : name : volume-pod namespace : kube-system labels : k8s-app : test-volume node-env : test annotations : own : youdianzhishi build : test spec : volumes : - name : podinfo downwardAPI : items : - path : labels fieldRef : fieldPath : metadata.labels - path : annotations fieldRef : fieldPath : metadata.annotations containers : - name : volume-pod image : busybox args : - sleep - \"3600\" volumeMounts : - name : podinfo mountPath : /etc/podinfo \u6211\u4eec\u5c06\u5143\u6570\u636e labels \u548c annotaions \u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u6302\u8f7d\u5230\u4e86 /etc/podinfo \u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl create -f volume-pod.yaml pod \"volume-pod\" created \u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u67e5\u770b\u5143\u4fe1\u606f\u662f\u4e0d\u662f\u5df2\u7ecf\u5b58\u5165\u5230\u6587\u4ef6\u4e2d\u4e86\uff1a \u279c ~ kubectl exec -it volume-pod /bin/sh -n kube-system / # ls /etc/podinfo/ ..2019_11_13_09_57_15.990445016/ annotations ..data/ labels / # cat /etc/podinfo/labels k8s-app = \"test-volume\" / # cat /etc/podinfo/annotations build = \"test\" kubectl.kubernetes.io/last-applied-configuration = \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Pod\\\",\\\"metadata\\\":{\\\"annotations\\\":{\\\"build\\\":\\\"test\\\",\\\"own\\\":\\\"youdianzhishi\\\"},\\\"labels\\\":{\\\"k8s-app\\\":\\\"test-volume\\\",\\\"node-env\\\":\\\"test\\\"},\\\"name\\\":\\\"volume-pod\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"args\\\":[\\\"sleep\\\",\\\"3600\\\"],\\\"image\\\":\\\"busybox\\\",\\\"name\\\":\\\"volume-pod\\\",\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/podinfo\\\",\\\"name\\\":\\\"podinfo\\\"}]}],\\\"volumes\\\":[{\\\"downwardAPI\\\":{\\\"items\\\":[{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.labels\\\"},\\\"path\\\":\\\"labels\\\"},{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.annotations\\\"},\\\"path\\\":\\\"annotations\\\"}]},\\\"name\\\":\\\"podinfo\\\"}]}}\\n\" kubernetes.io/config.seen = \"2019-11-13T17:57:15.320894744+08:00\" kubernetes.io/config.source = \"api\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u7684 Labels \u548c Annotations \u4fe1\u606f\u90fd\u88ab\u6302\u8f7d\u5230 /etc/podinfo \u76ee\u5f55\u4e0b\u9762\u7684 lables \u548c annotations \u6587\u4ef6\u4e86\u3002 \u76ee\u524d\uff0c Downward API \u652f\u6301\u7684\u5b57\u6bb5\u5df2\u7ecf\u975e\u5e38\u4e30\u5bcc\u4e86\uff0c\u6bd4\u5982\uff1a 1. \u4f7f\u7528 fieldRef \u53ef\u4ee5\u58f0\u660e\u4f7f\u7528 : spec.nodeName - \u5bbf\u4e3b\u673a\u540d\u5b57 status.hostIP - \u5bbf\u4e3b\u673aIP metadata.name - Pod\u7684\u540d\u5b57 metadata.namespace - Pod\u7684Namespace status.podIP - Pod\u7684IP spec.serviceAccountName - Pod\u7684Service Account\u7684\u540d\u5b57 metadata.uid - Pod\u7684UID metadata.labels['<KEY>'] - \u6307\u5b9a<KEY>\u7684Label\u503c metadata.annotations['<KEY>'] - \u6307\u5b9a<KEY>\u7684Annotation\u503c metadata.labels - Pod\u7684\u6240\u6709Label metadata.annotations - Pod\u7684\u6240\u6709Annotation 2. \u4f7f\u7528 resourceFieldRef \u53ef\u4ee5\u58f0\u660e\u4f7f\u7528 : \u5bb9\u5668\u7684 CPU limit \u5bb9\u5668\u7684 CPU request \u5bb9\u5668\u7684 memory limit \u5bb9\u5668\u7684 memory request \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c Downward API \u80fd\u591f\u83b7\u53d6\u5230\u7684\u4fe1\u606f\uff0c\u4e00\u5b9a\u662f Pod \u91cc\u7684\u5bb9\u5668\u8fdb\u7a0b\u542f\u52a8\u4e4b\u524d\u5c31\u80fd\u591f\u786e\u5b9a\u4e0b\u6765\u7684\u4fe1\u606f\u3002\u800c\u5982\u679c\u4f60\u60f3\u8981\u83b7\u53d6 Pod \u5bb9\u5668\u8fd0\u884c\u540e\u624d\u4f1a\u51fa\u73b0\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\uff0c\u5bb9\u5668\u8fdb\u7a0b\u7684 PID\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u80fd\u4f7f\u7528 Downward API \u4e86\uff0c\u800c\u5e94\u8be5\u8003\u8651\u5728 Pod \u91cc\u5b9a\u4e49\u4e00\u4e2a sidecar \u5bb9\u5668\u6765\u83b7\u53d6\u4e86\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u6709\u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u4e00\u822c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 Downward API \u6765\u83b7\u53d6\u57fa\u672c\u4fe1\u606f\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a\u542f\u52a8\u811a\u672c\u6216\u8005\u5229\u7528 initContainer \u5c06 Pod \u7684\u4fe1\u606f\u6ce8\u5165\u5230\u6211\u4eec\u5bb9\u5668\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u4e2d\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u5904\u7406\u76f8\u5173\u903b\u8f91\u4e86\u3002 \u9664\u4e86\u901a\u8fc7 Downward API \u53ef\u4ee5\u83b7\u53d6\u5230 Pod \u672c\u8eab\u7684\u4fe1\u606f\u4e4b\u5916\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6620\u5c04\u5176\u4ed6\u8d44\u6e90\u5bf9\u8c61\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u6bd4\u5982 Secret\u3001ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u548c\u6302\u8f7d Volume \u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u4ed6\u4eec\u7684\u4fe1\u606f\uff0c\u4f46\u662f\uff0c\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u4e0d\u5177\u5907\u81ea\u52a8\u66f4\u65b0\u7684\u80fd\u529b\u3002\u6240\u4ee5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u90fd\u5efa\u8bae\u4f7f\u7528 Volume \u6587\u4ef6\u7684\u65b9\u5f0f\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u4e3a\u901a\u8fc7 Volume \u7684\u65b9\u5f0f\u6302\u8f7d\u7684\u6587\u4ef6\u5728 Pod \u4e2d\u4f1a\u8fdb\u884c\u70ed\u66f4\u65b0\u3002","title":"Pod\u4f7f\u7528\u8fdb\u9636"},{"location":"Foundation/Pod%20inAdvance/#pod","text":"\u6df1\u5165\u7406\u89e3 Pod \u5bf9\u8c61","title":"Pod \u4f7f\u7528\u8fdb\u9636"},{"location":"Foundation/Pod%20inAdvance/#pod_1","text":"\u5b9e\u9645\u4e0a\u4e0a\u9762\u51e0\u4e2a\u6b65\u9aa4\u5c31\u662f\u5f71\u54cd\u4e00\u4e2a Pod \u751f\u547d\u5468\u671f\u7684\u5927\u7684\u90e8\u5206\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u4e5f\u4f1a\u5728 Pod \u7684\u542f\u52a8\u8fc7\u7a0b\u8fdb\u884c\u8bbe\u7f6e\uff0c\u6bd4\u5982\u5728\u5bb9\u5668\u542f\u52a8\u4e4b\u524d\u8fd8\u4f1a\u4e3a\u5f53\u524d\u7684\u5bb9\u5668\u8bbe\u7f6e\u5206\u914d\u7684 CPU\u3001\u5185\u5b58\u7b49\u8d44\u6e90\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 CGroup \u6765\u5bf9\u5bb9\u5668\u7684\u8d44\u6e90\u8fdb\u884c\u9650\u5236\uff0c\u540c\u6837\u7684\uff0c\u5728 Pod \u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u67d0\u4e2a\u5bb9\u5668\u7684\u4f7f\u7528\u7684 CPU \u6216\u8005\u5185\u5b58\u7684\u4e0a\u9650\u3002\u90a3\u4e48 Pod \u662f\u5982\u4f55\u6765\u4f7f\u7528\u548c\u63a7\u5236\u8fd9\u4e9b\u8d44\u6e90\u7684\u5206\u914d\u7684\u5462\uff1f \u9996\u5148\u5bf9\u4e8e CPU\uff0c\u6211\u4eec\u77e5\u9053\u8ba1\u7b97\u673a\u91cc CPU \u7684\u8d44\u6e90\u662f\u6309 \u201c\u65f6\u95f4\u7247\u201d \u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5206\u914d\u7684\uff0c\u7cfb\u7edf\u91cc\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u90fd\u9700\u8981 CPU \u7684\u5904\u7406\uff0c\u6240\u4ee5\uff0c\u54ea\u4e2a\u4efb\u52a1\u8981\u662f\u7533\u8bf7\u7684 CPU \u65f6\u95f4\u7247\u8d8a\u591a\uff0c\u90a3\u4e48\u5b83\u5f97\u5230\u7684 CPU \u8d44\u6e90\u5c31\u8d8a\u591a\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u5668\u7406\u89e3\u3002 \u7136\u540e\u8fd8\u9700\u8981\u4e86\u89e3\u4e0b CGroup \u91cc\u9762\u5bf9\u4e8e CPU \u8d44\u6e90\u7684\u5355\u4f4d\u6362\u7b97\uff1a 1 CPU = 1000 millicpu\uff081 Core = 1000m\uff09 0 .5 CPU = 500 millicpu \uff080.5 Core = 500m\uff09 \u8fd9\u91cc\u7684 m \u5c31\u662f\u6beb\u3001\u6beb\u6838\u7684\u610f\u601d\uff0cKubernetes \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u547d\u4ee4\u6765\u786e\u8ba4\u672c\u8282\u70b9\u7684 CPU \u5185\u6838\u6570\u91cf\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6570\u91cf\u4e58\u4ee51000\uff0c\u5f97\u5230\u7684\u5c31\u662f\u8282\u70b9\u603b CPU \u603b\u6beb\u6570\u3002\u6bd4\u5982\u4e00\u4e2a\u8282\u70b9\u6709\u56db\u6838\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u7684 CPU \u603b\u6beb\u91cf\u4e3a 4000m\uff0c\u5982\u679c\u4f60\u8981\u4f7f\u75280.5 core\uff0c\u5219\u4f60\u8981\u6c42\u7684\u662f 4000*0.5 = 2000m\u3002\u5728 Pod \u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u6765\u9650\u5236\u548c\u8bf7\u6c42 CPU \u8d44\u6e90\uff1a - spec.containers[].resources.limits.cpu \uff1aCPU \u4e0a\u9650\u503c\uff0c\u53ef\u4ee5\u77ed\u6682\u8d85\u8fc7\uff0c\u5bb9\u5668\u4e5f\u4e0d\u4f1a\u88ab\u505c\u6b62 - spec.containers[].resources.requests.cpu \uff1aCPU\u8bf7\u6c42\u503c\uff0cKubernetes \u8c03\u5ea6\u7b97\u6cd5\u91cc\u7684\u4f9d\u636e\u503c\uff0c\u53ef\u4ee5\u8d85\u8fc7 \u8fd9\u91cc\u9700\u8981\u660e\u767d\u7684\u662f\uff0c\u5982\u679c resources.requests.cpu \u8bbe\u7f6e\u7684\u503c\u5927\u4e8e\u96c6\u7fa4\u91cc\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927 CPU \u6838\u5fc3\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a Pod \u5c06\u65e0\u6cd5\u8c03\u5ea6\uff0c\u56e0\u4e3a\u6ca1\u6709\u8282\u70b9\u80fd\u6ee1\u8db3\u5b83\u3002 \u5230\u8fd9\u91cc\u5e94\u8be5\u660e\u767d\u4e86\uff0c requests \u662f\u7528\u4e8e\u96c6\u7fa4\u8c03\u5ea6\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u800c limits \u624d\u662f\u771f\u6b63\u7684\u7528\u4e8e\u8d44\u6e90\u9650\u5236\u7684\u914d\u7f6e\uff0c\u5982\u679c\u4f60\u9700\u8981\u4fdd\u8bc1\u7684\u4f60\u5e94\u7528\u4f18\u5148\u7ea7\u5f88\u9ad8\uff0c\u4e5f\u5c31\u662f\u8d44\u6e90\u5403\u7d27\u7684\u60c5\u51b5\u4e0b\u6700\u540e\u518d\u6740\u6389\u4f60\u7684 Pod\uff0c\u90a3\u4e48\u4f60\u5c31\u628a\u4f60\u7684 requests \u548c limits \u7684\u503c\u8bbe\u7f6e\u6210\u4e00\u81f4\uff0c\u5728\u540e\u9762\u5e94\u7528\u7684 Qos \u4e2d\u4f1a\u5177\u4f53\u8bb2\u89e3\u3002 \u6bd4\u5982\uff0c\u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a Pod\uff0c\u7ed9\u5bb9\u5668\u7684\u914d\u7f6e\u5982\u4e0b\u7684\u8d44\u6e90: # pod-resource-demo1.yaml apiVersion : v1 kind : Pod metadata : name : resource-demo1 spec : containers : - name : resource-demo1 image : nginx ports : - containerPort : 80 resources : requests : memory : 50Mi cpu : 50m limits : memory : 100Mi cpu : 100m \u8fd9\u91cc\uff0cCPU \u6211\u4eec\u7ed9\u7684\u662f 50m\uff0c\u4e5f\u5c31\u662f 0.05core \uff0c\u8fd9 0.05core \u4e5f\u5c31\u662f\u5360\u4e86 1 CPU \u91cc\u7684 5% \u7684\u8d44\u6e90\u65f6\u95f4\u3002\u800c\u9650\u5236\u8d44\u6e90\u662f\u7ed9\u7684\u662f 100m\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f CPU \u8d44\u6e90\u662f\u53ef\u538b\u7f29\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u5bb9\u5668\u8fbe\u5230\u4e86\u8fd9\u4e2a\u8bbe\u5b9a\u7684\u4e0a\u9650\u540e\uff0c\u5bb9\u5668\u6027\u80fd\u4f1a\u4e0b\u964d\uff0c\u4f46\u662f\u4e0d\u4f1a\u7ec8\u6b62\u6216\u9000\u51fa\u3002\u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u8fd9\u4e2a Pod\uff1a \u279c ~ kubectl apply -f pod-resource-demo1.yaml \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u88ab\u8c03\u5ea6\u5230 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\uff1a \u279c ~ kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES resource-demo1 1 /1 Running 0 24s 10 .244.1.27 node1 <none> <none> \u7136\u540e\u6211\u4eec\u5230 node1 \u8282\u70b9\u4e0a\u53bb\u67e5\u770b Pod \u91cc\u9762\u542f\u52a8\u7684 resource-demo1 \u8fd9\u4e2a\u5bb9\u5668\uff1a \u279c ~ crictl ps CONTAINER IMAGE CREATED STATE NAME ATTEMPT POD ID 1e4ef680a5a88 87a94228f133e 41 seconds ago Running resource-demo1 0 a00af47f2a12e ...... \u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b\u4e3b\u5bb9\u5668\u7684\u4fe1\u606f\uff1a \u279c ~ crictl inspect 1e4ef680a5a88 { \"status\" : { \"id\" : \"1e4ef680a5a88af7eae88a6901f12eb103dc3f8e1807f26337cd9bfb3704ca05\" , \"metadata\" : { \"attempt\" : 0 , \"name\" : \"resource-demo1\" } , ...... \"linux\" : { \"resources\" : { \"devices\" : [ { \"allow\" : false, \"access\" : \"rwm\" } ] , \"memory\" : { \"limit\" : 104857600 } , \"cpu\" : { \"shares\" : 51 , \"quota\" : 10000 , \"period\" : 100000 } } , \"cgroupsPath\" : \"kubepods-burstable-poda194c43a_9551_494b_bd72_ab898afdcc0c.slice:cri-containerd:1e4ef680a5a88af7eae88a6901f12eb103dc3f8e1807f26337cd9bfb3704ca05\" , ...... \u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5bb9\u5668\u7684\u4e00\u4e9b\u8d44\u6e90\u60c5\u51b5\uff0cPod \u4e0a\u7684\u8d44\u6e90\u914d\u7f6e\u6700\u7ec8\u4e5f\u8fd8\u662f\u901a\u8fc7\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u53bb\u63a7\u5236 CGroup \u6765\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u5982\u4e0b\u76ee\u5f55\u67e5\u770b CGroup \u7684\u914d\u7f6e\uff0c\u8be5\u76ee\u5f55\u5c31\u662f CGroup \u7236\u7ea7\u76ee\u5f55\uff0c\u800c CGroup \u662f\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u6765\u8fdb\u884c\u8d44\u6e90\u9650\u5236\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0a\u9762\u9650\u5236\u5bb9\u5668\u7684\u8d44\u6e90\u5c31\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u53cd\u6620\u51fa\u6765\uff1a \u279c ~ cd /sys/fs/cgroup/cpu/kubepods.slice/kubepods-burstable.slice/kubepods-burstable-poda194c43a_9551_494b_bd72_ab898afdcc0c.slice \u279c ~ ls cgroup.clone_children cpuacct.stat cpu.cfs_period_us cpu.rt_runtime_us notify_on_release cgroup.event_control cpuacct.usage cpu.cfs_quota_us cpu.shares tasks cgroup.procs cpuacct.usage_percpu cpu.rt_period_us cpu.stat \u279c ~ cat cpu.cfs_quota_us 10000 \u5176\u4e2d cpu.cfs_quota_us \u5c31\u662f CPU \u7684\u9650\u5236\u503c\uff0c\u5982\u679c\u8981\u67e5\u770b\u5177\u4f53\u7684\u5bb9\u5668\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u76ee\u5f55\u4e0b\u9762\u53bb\u67e5\u770b\u5373\u53ef\u3002 \u6700\u540e\u6211\u4eec\u4e86\u89e3\u4e0b\u5185\u5b58\u8fd9\u5757\u7684\u8d44\u6e90\u63a7\u5236\uff0c\u5185\u5b58\u7684\u5355\u4f4d\u6362\u7b97\u6bd4\u8f83\u7b80\u5355\uff1a 1 MiB = 1024 KiB \uff0c\u5185\u5b58\u8fd9\u5757\u5728 Kubernetes \u91cc\u4e00\u822c\u7528\u7684\u662f Mi \u5355\u4f4d\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Ki\u3001Gi \u751a\u81f3 Pi \uff0c\u770b\u5177\u4f53\u7684\u4e1a\u52a1\u9700\u6c42\u548c\u8d44\u6e90\u5bb9\u91cf\u3002 \u5355\u4f4d\u6362\u7b97 \u8fd9\u91cc\u6ce8\u610f\u7684\u662f MiB \u2260 MB \uff0cMB \u662f\u5341\u8fdb\u5236\u5355\u4f4d\uff0cMiB \u662f\u4e8c\u8fdb\u5236\uff0c\u5e73\u65f6\u6211\u4eec\u4ee5\u4e3a MB \u7b49\u4e8e 1024KB\uff0c\u5176\u5b9e 1MB=1000KB \uff0c 1MiB \u624d\u7b49\u4e8e 1024KiB \u3002\u4e2d\u95f4\u5e26\u5b57\u6bcd i \u7684\u662f\u56fd\u9645\u7535\u5de5\u534f\u4f1a\uff08IEC\uff09\u5b9a\u7684\uff0c\u8d701024\u4e58\u79ef\uff1bKB\u3001MB\u3001GB \u662f\u56fd\u9645\u5355\u4f4d\u5236\uff0c\u8d701000\u4e58\u79ef\u3002 \u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5185\u5b58\u662f\u4e0d\u53ef\u538b\u7f29\u6027\u8d44\u6e90\uff0c\u5982\u679c\u5bb9\u5668\u4f7f\u7528\u5185\u5b58\u8d44\u6e90\u5230\u8fbe\u4e86\u4e0a\u9650\uff0c\u90a3\u4e48\u4f1a OOM \uff0c\u9020\u6210\u5185\u5b58\u6ea2\u51fa\uff0c\u5bb9\u5668\u5c31\u4f1a\u7ec8\u6b62\u548c\u9000\u51fa\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u5f0f\u53bb\u901a\u8fc7\u67e5\u770b CGroup \u6587\u4ef6\u7684\u503c\u6765\u9a8c\u8bc1\u8d44\u6e90\u9650\u5236\u3002","title":"Pod \u8d44\u6e90\u914d\u7f6e"},{"location":"Foundation/Pod%20inAdvance/#pod_2","text":"\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u9664\u4e86\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u5230\u7684\u666e\u901a\u7684 Pod \u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684 Pod\uff0c\u53eb\u505aStatic Pod\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u9759\u6001 Pod\uff0c\u9759\u6001 Pod \u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u5730\u65b9\u5462\uff1f \u9759\u6001 Pod \u76f4\u63a5\u7531\u8282\u70b9\u4e0a\u7684 kubelet \u8fdb\u7a0b\u6765\u7ba1\u7406\uff0c\u4e0d\u901a\u8fc7 master \u8282\u70b9\u4e0a\u7684 apiserver\u3002\u65e0\u6cd5\u4e0e\u6211\u4eec\u5e38\u7528\u7684\u63a7\u5236\u5668 Deployment \u6216\u8005 DaemonSet \u8fdb\u884c\u5173\u8054\uff0c\u5b83\u7531 kubelet \u8fdb\u7a0b\u81ea\u5df1\u6765\u76d1\u63a7\uff0c\u5f53 pod \u5d29\u6e83\u65f6\u4f1a\u91cd\u542f\u8be5 pod\uff0ckubelet \u4e5f\u65e0\u6cd5\u5bf9\u4ed6\u4eec\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5\u3002\u9759\u6001 pod \u59cb\u7ec8\u7ed1\u5b9a\u5728\u67d0\u4e00\u4e2a kubelet \u4e0a\uff0c\u5e76\u4e14\u59cb\u7ec8\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002kubelet \u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e00\u4e2a\u9759\u6001 pod \u5728 Kubernetes \u7684 apiserver \u4e0a\u521b\u5efa\u4e00\u4e2a\u955c\u50cf Pod\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728 apiserver \u4e2d\u67e5\u8be2\u5230\u8be5 pod\uff0c\u4f46\u662f\u4e0d\u80fd\u901a\u8fc7 apiserver \u8fdb\u884c\u63a7\u5236\uff08\u4f8b\u5982\u4e0d\u80fd\u5220\u9664\uff09\u3002 \u521b\u5efa\u9759\u6001 Pod \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u914d\u7f6e\u6587\u4ef6 \u548c HTTP \u4e24\u79cd\u65b9\u5f0f \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u653e\u5728\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6807\u51c6\u7684 JSON \u6216 YAML \u683c\u5f0f\u7684 pod \u5b9a\u4e49\u6587\u4ef6\u3002\u7528 kubelet --pod-manifest-path=<the directory> \u6765\u542f\u52a8 kubelet \u8fdb\u7a0b\uff0ckubelet \u5b9a\u671f\u7684\u53bb\u626b\u63cf\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6839\u636e\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u51fa\u73b0\u6216\u6d88\u5931\u7684 YAML/JSON \u6587\u4ef6\u6765\u521b\u5efa\u6216\u5220\u9664\u9759\u6001 pod\u3002 \u6bd4\u5982\u6211\u4eec\u5728 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\u7528\u9759\u6001 pod \u7684\u65b9\u5f0f\u6765\u542f\u52a8\u4e00\u4e2a nginx \u7684\u670d\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a \u279c ~ cat /var/lib/kubelet/config.yaml ...... staticPodPath: /etc/kubernetes/manifests # \u548c\u547d\u4ee4\u884c\u7684 pod-manifest-path \u53c2\u6570\u4e00\u81f4 ...... \u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027\u4e3a staticPodPath \u7684\u914d\u7f6e\uff0c\u5176\u5b9e\u548c\u547d\u4ee4\u884c\u7684 --pod-manifest-path \u914d\u7f6e\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u901a\u8fc7 kubeadm \u7684\u65b9\u5f0f\u6765\u5b89\u88c5\u7684\u96c6\u7fa4\u73af\u5883\uff0c\u5bf9\u5e94\u7684 kubelet \u5df2\u7ecf\u914d\u7f6e\u4e86\u6211\u4eec\u7684\u9759\u6001 Pod \u6587\u4ef6\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u5730\u5740\u4e3a /etc/kubernetes/manifests \uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6807\u51c6\u7684 Pod \u7684 JSON \u6216\u8005 YAML \u6587\u4ef6\u5373\u53ef\uff0c\u5982\u679c\u4f60\u7684 kubelet \u542f\u52a8\u53c2\u6570\u4e2d\u6ca1\u6709\u914d\u7f6e\u4e0a\u9762\u7684 --pod-manifest-path \u53c2\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u6dfb\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\u7136\u540e\u91cd\u542f kubelet \u5373\u53ef\uff1a \u279c ~ cat <<EOF >/etc/kubernetes/manifests/static-web.yaml apiVersion : v1 kind : Pod metadata : name : static-web labels : app : static spec : containers : - name : web image : nginx ports : - name : web containerPort : 80 EOF \u901a\u8fc7 HTTP \u521b\u5efa\u9759\u6001 Pods kubelet \u5468\u671f\u5730\u4ece \u2013manifest-url= \u53c2\u6570\u6307\u5b9a\u7684\u5730\u5740\u4e0b\u8f7d\u6587\u4ef6\uff0c\u5e76\u4e14\u628a\u5b83\u7ffb\u8bd1\u6210 JSON/YAML \u683c\u5f0f\u7684 pod \u5b9a\u4e49\u3002\u6b64\u540e\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e0e \u2013pod-manifest-path= \u76f8\u540c\uff0ckubelet \u4f1a\u4e0d\u65f6\u5730\u91cd\u65b0\u4e0b\u8f7d\u8be5\u6587\u4ef6\uff0c\u5f53\u6587\u4ef6\u53d8\u5316\u65f6\u5bf9\u5e94\u5730\u7ec8\u6b62\u6216\u542f\u52a8\u9759\u6001 pod\u3002 kubelet \u542f\u52a8\u65f6\uff0c\u7531 --pod-manifest-path= \u6216 --manifest-url= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u5b9a\u4e49\u7684\u6240\u6709 pod \u90fd\u4f1a\u81ea\u52a8\u521b\u5efa\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u793a\u4f8b\u4e2d\u7684 static-web \uff1a \u279c ~ nerdctl -n k8s.io ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6add7aa53969 docker.io/library/nginx:latest \"/docker-entrypoint.\u2026\" 43 seconds ago Up ...... \u73b0\u5728\u6211\u4eec\u901a\u8fc7kubectl\u5de5\u5177\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u955c\u50cf Pod\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE static-web-node1 1 /1 Running 0 109s \u9759\u6001 pod \u7684\u6807\u7b7e\u4f1a\u4f20\u9012\u7ed9\u955c\u50cf Pod\uff0c\u53ef\u4ee5\u7528\u6765\u8fc7\u6ee4\u6216\u7b5b\u9009\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7 API \u670d\u52a1\u5668\u6765\u5220\u9664\u9759\u6001 pod\uff08\u4f8b\u5982\uff0c\u901a\u8fc7kubectl\u547d\u4ee4\uff09\uff0ckubelet \u4e0d\u4f1a\u5220\u9664\u5b83\u3002 \u279c ~ kubectl delete pod static-web-node1 pod \"static-web-node1\" deleted \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE static-web-node1 1 /1 Running 0 4s \u9759\u6001 Pod \u7684\u52a8\u6001\u589e\u52a0\u548c\u5220\u9664 \u8fd0\u884c\u4e2d\u7684 kubelet \u5468\u671f\u626b\u63cf\u914d\u7f6e\u7684\u76ee\u5f55\uff08\u6211\u4eec\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5c31\u662f /etc/kubernetes/manifests \uff09\u4e0b\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u5f53\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u6709\u6587\u4ef6\u51fa\u73b0\u6216\u6d88\u5931\u65f6\u521b\u5efa\u6216\u5220\u9664 pods\uff1a \u279c ~ mv /etc/kubernetes/manifests/static-web.yaml /tmp # sleep 20 \u279c ~ nerdctl -n k8s.io ps // no nginx container is running \u279c ~ mv /tmp/static-web.yaml /etc/kubernetes/manifests # sleep 20 \u279c ~ nerdctl -n k8s.io ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 902be9190538 docker.io/library/nginx:latest \"/docker-entrypoint.\u2026\" 14 seconds ago Up ...... \u5176\u5b9e\u6211\u4eec\u7528 kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\uff0cmaster \u8282\u70b9\u4e0a\u9762\u7684\u51e0\u4e2a\u91cd\u8981\u7ec4\u4ef6\u90fd\u662f\u7528\u9759\u6001 Pod \u7684\u65b9\u5f0f\u8fd0\u884c\u7684\uff0c\u6211\u4eec\u767b\u5f55\u5230 master \u8282\u70b9\u4e0a\u67e5\u770b /etc/kubernetes/manifests \u76ee\u5f55\uff1a \u279c ~ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml \u73b0\u5728\u660e\u767d\u4e86\u5427\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u4e3a\u6211\u4eec\u5c06\u96c6\u7fa4\u7684\u4e00\u4e9b\u7ec4\u4ef6\u5bb9\u5668\u5316\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u8fd9\u4e9b Pod \u90fd\u4e0d\u4f1a\u53d7\u5230 apiserver \u7684\u63a7\u5236\uff0c\u4e0d\u7136\u6211\u4eec\u8fd9\u91cckube-apiserver\u600e\u4e48\u81ea\u5df1\u53bb\u63a7\u5236\u81ea\u5df1\u5462\uff1f\u4e07\u4e00\u4e0d\u5c0f\u5fc3\u628a\u8fd9\u4e2a Pod \u5220\u6389\u4e86\u5462\uff1f\u6240\u4ee5\u53ea\u80fd\u6709kubelet\u81ea\u5df1\u6765\u8fdb\u884c\u63a7\u5236\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u9759\u6001 Pod\u3002","title":"\u9759\u6001 Pod"},{"location":"Foundation/Pod%20inAdvance/#downward-api","text":"\u524d\u9762\u6211\u4eec\u4ece Pod \u7684\u539f\u7406\u5230\u751f\u547d\u5468\u671f\u4ecb\u7ecd\u4e86 Pod \u7684\u4e00\u4e9b\u4f7f\u7528\uff0c\u4f5c\u4e3a Kubernetes \u4e2d\u6700\u6838\u5fc3\u7684\u8d44\u6e90\u5bf9\u8c61\u3001\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u7684\u5c5e\u6027\u8fd8\u662f\u975e\u5e38\u7e41\u591a\u7684\uff0c\u524d\u9762\u6211\u4eec\u4f7f\u7528\u8fc7\u4e00\u4e2a volumes \u7684\u5c5e\u6027\uff0c\u8868\u793a\u58f0\u660e\u4e00\u4e2a\u6570\u636e\u5377\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 kubectl explain pod.spec.volumes \u53bb\u67e5\u770b\u8be5\u5bf9\u8c61\u4e0b\u9762\u7684\u5c5e\u6027\u975e\u5e38\u591a\uff0c\u524d\u9762\u6211\u4eec\u53ea\u662f\u7b80\u5355\u4f7f\u7528\u4e86 hostPath \u548c emptyDir{} \u8fd9\u4e24\u79cd\u6a21\u5f0f\uff0c\u5176\u4e2d\u8fd8\u6709\u4e00\u79cd\u6a21\u5f0f\u53eb\u505a downwardAPI \uff0c\u8fd9\u4e2a\u6a21\u5f0f\u548c\u5176\u4ed6\u6a21\u5f0f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u4e0d\u662f\u4e3a\u4e86\u5b58\u653e\u5bb9\u5668\u7684\u6570\u636e\u4e5f\u4e0d\u662f\u7528\u6765\u8fdb\u884c\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7684\u6570\u636e\u4ea4\u6362\u7684\uff0c\u800c\u662f\u8ba9 Pod \u91cc\u7684\u5bb9\u5668\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u8fd9\u4e2a Pod \u5bf9\u8c61\u672c\u8eab\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 \u76ee\u524d Downward API \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u7528\u4e8e\u5c06 Pod \u7684\u4fe1\u606f\u6ce8\u5165\u5230\u5bb9\u5668\u5185\u90e8\uff1a \u73af\u5883\u53d8\u91cf\uff1a\u7528\u4e8e\u5355\u4e2a\u53d8\u91cf\uff0c\u53ef\u4ee5\u5c06 Pod \u4fe1\u606f\u548c\u5bb9\u5668\u4fe1\u606f\u76f4\u63a5\u6ce8\u5165\u5bb9\u5668\u5185\u90e8 Volume \u6302\u8f7d\uff1a\u5c06 Pod \u4fe1\u606f\u751f\u6210\u4e3a\u6587\u4ef6\uff0c\u76f4\u63a5\u6302\u8f7d\u5230\u5bb9\u5668\u5185\u90e8\u4e2d\u53bb","title":"Downward API"},{"location":"Foundation/Pod%20inAdvance/#_1","text":"\u6211\u4eec\u901a\u8fc7 Downward API \u6765\u5c06 Pod \u7684 IP\u3001\u540d\u79f0\u4ee5\u53ca\u6240\u5bf9\u5e94\u7684 namespace \u6ce8\u5165\u5230\u5bb9\u5668\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u5bb9\u5668\u4e2d\u6253\u5370\u5168\u90e8\u7684\u73af\u5883\u53d8\u91cf\u6765\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5bf9\u5e94\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\uff1a # env-pod.yaml apiVersion : v1 kind : Pod metadata : name : env-pod namespace : kube-system spec : containers : - name : env-pod image : busybox command : [ \"/bin/sh\" , \"-c\" , \"env\" ] env : - name : POD_NAME valueFrom : fieldRef : fieldPath : metadata.name - name : POD_NAMESPACE valueFrom : fieldRef : fieldPath : metadata.namespace - name : POD_IP valueFrom : fieldRef : fieldPath : status.podIP \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6e env \u7684\u503c\uff1a valueFrom \uff0c\u7531\u4e8e Pod \u7684 name \u548c namespace \u5c5e\u4e8e\u5143\u6570\u636e\uff0c\u662f\u5728 Pod \u521b\u5efa\u4e4b\u524d\u5c31\u5df2\u7ecf\u5b9a\u4e0b\u6765\u4e86\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 metata \u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e Pod \u7684 IP \u5219\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053 Pod IP \u662f\u4e0d\u56fa\u5b9a\u7684\uff0cPod \u91cd\u5efa\u4e86\u5c31\u53d8\u4e86\uff0c\u5b83\u5c5e\u4e8e\u72b6\u6001\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 status \u8fd9\u4e2a\u5c5e\u6027\u53bb\u83b7\u53d6\u3002\u53e6\u5916\u9664\u4e86\u4f7f\u7528 fieldRef \u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 resourceFieldRef \u53bb\u83b7\u53d6\u5bb9\u5668\u7684\u8d44\u6e90\u8bf7\u6c42\u548c\u8d44\u6e90\u9650\u5236\u4fe1\u606f\u3002 \u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f env-pod.yaml pod \"env-pod\" created Pod \u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u65e5\u5fd7\uff1a \u279c ~ kubectl logs env-pod -n kube-system | grep POD kubectl logs -f env-pod -n kube-system POD_IP = 10 .244.1.121 KUBERNETES_SERVICE_PORT = 443 KUBERNETES_PORT = tcp://10.96.0.1:443 KUBE_DNS_SERVICE_PORT_DNS_TCP = 53 HOSTNAME = env-pod SHLVL = 1 HOME = /root KUBE_DNS_SERVICE_HOST = 10 .96.0.10 KUBE_DNS_PORT_9153_TCP_ADDR = 10 .96.0.10 KUBE_DNS_PORT_9153_TCP_PORT = 9153 KUBE_DNS_PORT_9153_TCP_PROTO = tcp KUBE_DNS_SERVICE_PORT = 53 KUBE_DNS_PORT = udp://10.96.0.10:53 POD_NAME = env-pod KUBERNETES_PORT_443_TCP_ADDR = 10 .96.0.1 PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin KUBE_DNS_PORT_53_TCP_ADDR = 10 .96.0.10 KUBERNETES_PORT_443_TCP_PORT = 443 KUBE_DNS_SERVICE_PORT_METRICS = 9153 KUBERNETES_PORT_443_TCP_PROTO = tcp KUBE_DNS_PORT_9153_TCP = tcp://10.96.0.10:9153 KUBE_DNS_PORT_53_UDP_ADDR = 10 .96.0.10 KUBE_DNS_PORT_53_TCP_PORT = 53 KUBE_DNS_PORT_53_TCP_PROTO = tcp KUBE_DNS_PORT_53_UDP_PORT = 53 KUBE_DNS_SERVICE_PORT_DNS = 53 KUBE_DNS_PORT_53_UDP_PROTO = udp KUBERNETES_SERVICE_PORT_HTTPS = 443 KUBERNETES_PORT_443_TCP = tcp://10.96.0.1:443 POD_NAMESPACE = kube-system KUBERNETES_SERVICE_HOST = 10 .96.0.1 PWD = / KUBE_DNS_PORT_53_TCP = tcp://10.96.0.10:53 KUBE_DNS_PORT_53_UDP = udp://10.96.0.10:53 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u7684 IP\u3001NAME\u3001NAMESPACE \u90fd\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6253\u5370\u51fa\u6765\u4e86\u3002 \u73af\u5883\u53d8\u91cf \u4e0a\u9762\u6253\u5370 Pod \u7684\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u770b\u5230\u6709\u5f88\u591a\u5185\u7f6e\u7684\u53d8\u91cf\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u7cfb\u7edf\u81ea\u52a8\u4e3a\u6211\u4eec\u6dfb\u52a0\u7684\uff0cKubernetes \u4f1a\u628a\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684 Service \u4fe1\u606f\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u5f62\u5f0f\u6ce8\u5165\u5230 Pod \u4e2d\u53bb\uff1a $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE kube-dns ClusterIP 10 .96.0.10 <none> 53 /UDP,53/TCP,9153/TCP 4d21h","title":"\u73af\u5883\u53d8\u91cf"},{"location":"Foundation/Pod%20inAdvance/#volume","text":"Downward API \u9664\u4e86\u63d0\u4f9b\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u901a\u8fc7 Volume \u6302\u8f7d\u7684\u65b9\u5f0f\u53bb\u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7 Downward API \u5c06 Pod \u7684 Label\u3001Annotation \u7b49\u4fe1\u606f\u901a\u8fc7 Volume \u6302\u8f7d\u5230\u5bb9\u5668\u7684\u67d0\u4e2a\u6587\u4ef6\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u5bb9\u5668\u4e2d\u6253\u5370\u51fa\u8be5\u6587\u4ef6\u7684\u503c\u6765\u9a8c\u8bc1\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # volume-pod.yaml apiVersion : v1 kind : Pod metadata : name : volume-pod namespace : kube-system labels : k8s-app : test-volume node-env : test annotations : own : youdianzhishi build : test spec : volumes : - name : podinfo downwardAPI : items : - path : labels fieldRef : fieldPath : metadata.labels - path : annotations fieldRef : fieldPath : metadata.annotations containers : - name : volume-pod image : busybox args : - sleep - \"3600\" volumeMounts : - name : podinfo mountPath : /etc/podinfo \u6211\u4eec\u5c06\u5143\u6570\u636e labels \u548c annotaions \u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u6302\u8f7d\u5230\u4e86 /etc/podinfo \u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl create -f volume-pod.yaml pod \"volume-pod\" created \u521b\u5efa\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u67e5\u770b\u5143\u4fe1\u606f\u662f\u4e0d\u662f\u5df2\u7ecf\u5b58\u5165\u5230\u6587\u4ef6\u4e2d\u4e86\uff1a \u279c ~ kubectl exec -it volume-pod /bin/sh -n kube-system / # ls /etc/podinfo/ ..2019_11_13_09_57_15.990445016/ annotations ..data/ labels / # cat /etc/podinfo/labels k8s-app = \"test-volume\" / # cat /etc/podinfo/annotations build = \"test\" kubectl.kubernetes.io/last-applied-configuration = \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Pod\\\",\\\"metadata\\\":{\\\"annotations\\\":{\\\"build\\\":\\\"test\\\",\\\"own\\\":\\\"youdianzhishi\\\"},\\\"labels\\\":{\\\"k8s-app\\\":\\\"test-volume\\\",\\\"node-env\\\":\\\"test\\\"},\\\"name\\\":\\\"volume-pod\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"args\\\":[\\\"sleep\\\",\\\"3600\\\"],\\\"image\\\":\\\"busybox\\\",\\\"name\\\":\\\"volume-pod\\\",\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/podinfo\\\",\\\"name\\\":\\\"podinfo\\\"}]}],\\\"volumes\\\":[{\\\"downwardAPI\\\":{\\\"items\\\":[{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.labels\\\"},\\\"path\\\":\\\"labels\\\"},{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"metadata.annotations\\\"},\\\"path\\\":\\\"annotations\\\"}]},\\\"name\\\":\\\"podinfo\\\"}]}}\\n\" kubernetes.io/config.seen = \"2019-11-13T17:57:15.320894744+08:00\" kubernetes.io/config.source = \"api\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Pod \u7684 Labels \u548c Annotations \u4fe1\u606f\u90fd\u88ab\u6302\u8f7d\u5230 /etc/podinfo \u76ee\u5f55\u4e0b\u9762\u7684 lables \u548c annotations \u6587\u4ef6\u4e86\u3002 \u76ee\u524d\uff0c Downward API \u652f\u6301\u7684\u5b57\u6bb5\u5df2\u7ecf\u975e\u5e38\u4e30\u5bcc\u4e86\uff0c\u6bd4\u5982\uff1a 1. \u4f7f\u7528 fieldRef \u53ef\u4ee5\u58f0\u660e\u4f7f\u7528 : spec.nodeName - \u5bbf\u4e3b\u673a\u540d\u5b57 status.hostIP - \u5bbf\u4e3b\u673aIP metadata.name - Pod\u7684\u540d\u5b57 metadata.namespace - Pod\u7684Namespace status.podIP - Pod\u7684IP spec.serviceAccountName - Pod\u7684Service Account\u7684\u540d\u5b57 metadata.uid - Pod\u7684UID metadata.labels['<KEY>'] - \u6307\u5b9a<KEY>\u7684Label\u503c metadata.annotations['<KEY>'] - \u6307\u5b9a<KEY>\u7684Annotation\u503c metadata.labels - Pod\u7684\u6240\u6709Label metadata.annotations - Pod\u7684\u6240\u6709Annotation 2. \u4f7f\u7528 resourceFieldRef \u53ef\u4ee5\u58f0\u660e\u4f7f\u7528 : \u5bb9\u5668\u7684 CPU limit \u5bb9\u5668\u7684 CPU request \u5bb9\u5668\u7684 memory limit \u5bb9\u5668\u7684 memory request \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c Downward API \u80fd\u591f\u83b7\u53d6\u5230\u7684\u4fe1\u606f\uff0c\u4e00\u5b9a\u662f Pod \u91cc\u7684\u5bb9\u5668\u8fdb\u7a0b\u542f\u52a8\u4e4b\u524d\u5c31\u80fd\u591f\u786e\u5b9a\u4e0b\u6765\u7684\u4fe1\u606f\u3002\u800c\u5982\u679c\u4f60\u60f3\u8981\u83b7\u53d6 Pod \u5bb9\u5668\u8fd0\u884c\u540e\u624d\u4f1a\u51fa\u73b0\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\uff0c\u5bb9\u5668\u8fdb\u7a0b\u7684 PID\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u80fd\u4f7f\u7528 Downward API \u4e86\uff0c\u800c\u5e94\u8be5\u8003\u8651\u5728 Pod \u91cc\u5b9a\u4e49\u4e00\u4e2a sidecar \u5bb9\u5668\u6765\u83b7\u53d6\u4e86\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u6709\u83b7\u53d6 Pod \u7684\u57fa\u672c\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u4e00\u822c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 Downward API \u6765\u83b7\u53d6\u57fa\u672c\u4fe1\u606f\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a\u542f\u52a8\u811a\u672c\u6216\u8005\u5229\u7528 initContainer \u5c06 Pod \u7684\u4fe1\u606f\u6ce8\u5165\u5230\u6211\u4eec\u5bb9\u5668\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u4e2d\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u5904\u7406\u76f8\u5173\u903b\u8f91\u4e86\u3002 \u9664\u4e86\u901a\u8fc7 Downward API \u53ef\u4ee5\u83b7\u53d6\u5230 Pod \u672c\u8eab\u7684\u4fe1\u606f\u4e4b\u5916\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6620\u5c04\u5176\u4ed6\u8d44\u6e90\u5bf9\u8c61\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u6bd4\u5982 Secret\u3001ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u548c\u6302\u8f7d Volume \u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u4ed6\u4eec\u7684\u4fe1\u606f\uff0c\u4f46\u662f\uff0c\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u4e0d\u5177\u5907\u81ea\u52a8\u66f4\u65b0\u7684\u80fd\u529b\u3002\u6240\u4ee5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u90fd\u5efa\u8bae\u4f7f\u7528 Volume \u6587\u4ef6\u7684\u65b9\u5f0f\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u4e3a\u901a\u8fc7 Volume \u7684\u65b9\u5f0f\u6302\u8f7d\u7684\u6587\u4ef6\u5728 Pod \u4e2d\u4f1a\u8fdb\u884c\u70ed\u66f4\u65b0\u3002","title":"Volume \u6302\u8f7d"},{"location":"Foundation/Pod%20lifeCycle/","text":"Pod \u7684\u751f\u547d\u5468\u671f \u00b6 \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 Pod \u7684\u8bbe\u8ba1\u539f\u7406\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4e86\u89e3\u4e0b Pod \u7684\u751f\u547d\u5468\u671f\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a Pod \u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u8fc7\u7a0b\uff0c\u5176\u4e2d\u5305\u542b Init Container\u3001Pod Hook\u3001\u5065\u5eb7\u68c0\u67e5 \u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5206\u522b\u4ecb\u7ecd\u5f71\u54cd Pod \u751f\u547d\u5468\u671f\u7684\u90e8\u5206\uff1a \u9996\u5148\u5728\u4ecb\u7ecd Pod \u7684\u751f\u547d\u5468\u671f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Pod \u7684\u72b6\u6001\uff0c\u56e0\u4e3a Pod \u72b6\u6001\u53ef\u4ee5\u53cd\u5e94\u51fa\u5f53\u524d\u6211\u4eec\u7684 Pod \u7684\u5177\u4f53\u72b6\u6001\u4fe1\u606f\uff0c\u4e5f\u662f\u6211\u4eec\u5206\u6790\u6392\u9519\u7684\u4e00\u4e2a\u5fc5\u5907\u7684\u65b9\u5f0f\u3002 Pod \u72b6\u6001 \u00b6 \u9996\u5148\u5148\u4e86\u89e3\u4e0b Pod \u7684\u72b6\u6001\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain pod.status \u547d\u4ee4\u6765\u4e86\u89e3\u5173\u4e8e Pod \u72b6\u6001\u7684\u4e00\u4e9b\u4fe1\u606f\uff0cPod \u7684\u72b6\u6001\u5b9a\u4e49\u5728 PodStatus \u5bf9\u8c61\u4e2d\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a phase \u5b57\u6bb5\uff0c\u4e0b\u9762\u662f phase \u7684\u53ef\u80fd\u53d6\u503c\uff1a \u6302\u8d77\uff08Pending\uff09 \uff1aPod \u4fe1\u606f\u5df2\u7ecf\u63d0\u4ea4\u7ed9\u4e86\u96c6\u7fa4\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\u5230\u5408\u9002\u7684\u8282\u70b9\u6216\u8005 Pod \u91cc\u7684\u955c\u50cf\u6b63\u5728\u4e0b\u8f7d \u8fd0\u884c\u4e2d\uff08Running\uff09 \uff1a\u8be5 Pod \u5df2\u7ecf\u7ed1\u5b9a\u5230\u4e86\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0cPod - \u4e2d\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5df2\u88ab\u521b\u5efa\u3002\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u6216\u8005\u6b63\u5904\u4e8e\u542f\u52a8\u6216\u91cd\u542f\u72b6\u6001 \u6210\u529f\uff08Succeeded\uff09 \uff1aPod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u88ab\u6210\u529f\u7ec8\u6b62\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u91cd\u542f \u5931\u8d25\uff08Failed\uff09 \uff1aPod - \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u7ec8\u6b62\u4e86\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u662f\u56e0\u4e3a\u5931\u8d25\u7ec8\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u4ee5\u975e0\u72b6\u6001\u9000\u51fa\u6216\u8005\u88ab\u7cfb\u7edf\u7ec8\u6b62 \u672a\u77e5\uff08Unknown\uff09 \uff1a\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u53d6\u5f97 Pod \u7684\u72b6\u6001\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u4e0e Pod \u6240\u5728\u4e3b\u673a\u901a\u4fe1\u5931\u8d25\u5bfc\u81f4\u7684 \u9664\u6b64\u4e4b\u5916\uff0c PodStatus \u5bf9\u8c61\u4e2d\u8fd8\u5305\u542b\u4e00\u4e2a PodCondition \u7684\u6570\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u7684\u5c5e\u6027\u6709\uff1a lastProbeTime\uff1a\u6700\u540e\u4e00\u6b21\u63a2\u6d4b Pod Condition \u7684\u65f6\u95f4\u6233\u3002 lastTransitionTime\uff1a\u4e0a\u6b21 Condition \u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u65f6\u95f4\u3002 message\uff1a\u4e0a\u6b21 Condition \u72b6\u6001\u8f6c\u6362\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002 reason\uff1aCondition \u6700\u540e\u4e00\u6b21\u8f6c\u6362\u7684\u539f\u56e0\u3002 status\uff1aCondition \u72b6\u6001\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e3a \u201cTrue\u201d, \u201cFalse\u201d, and \u201cUnknown\u201d. type\uff1aCondition \u7c7b\u578b\uff0c\u5305\u62ec\u4ee5\u4e0b\u65b9\u9762\uff1a PodScheduled\uff08Pod \u5df2\u7ecf\u88ab\u8c03\u5ea6\u5230\u5176\u4ed6 node \u91cc\uff09 Ready\uff08Pod \u80fd\u591f\u63d0\u4f9b\u670d\u52a1\u8bf7\u6c42\uff0c\u53ef\u4ee5\u88ab\u6dfb\u52a0\u5230\u6240\u6709\u53ef\u5339\u914d\u670d\u52a1\u7684\u8d1f\u8f7d\u5e73\u8861\u6c60\u4e2d\uff09 Initialized\uff08\u6240\u6709\u7684 init containers \u5df2\u7ecf\u542f\u52a8\u6210\u529f\uff09 Unschedulable\uff08\u8c03\u5ea6\u7a0b\u5e8f\u73b0\u5728\u65e0\u6cd5\u8c03\u5ea6 Pod\uff0c\u4f8b\u5982\u7531\u4e8e\u7f3a\u4e4f\u8d44\u6e90\u6216\u5176\u4ed6\u9650\u5236\uff09 ContainersReady\uff08Pod \u91cc\u7684\u6240\u6709\u5bb9\u5668\u90fd\u662f ready \u72b6\u6001\uff09 \u91cd\u542f\u7b56\u7565 \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e restartPolicy \u5b57\u6bb5\u6765\u8bbe\u7f6e Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u91cd\u542f\u7b56\u7565\uff0c\u5176\u53ef\u80fd\u503c\u4e3a Always\u3001OnFailure \u548c Never \uff0c\u9ed8\u8ba4\u503c\u4e3a Always\uff0crestartPolicy \u6307\u901a\u8fc7 kubelet \u5728\u540c\u4e00\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u3002\u901a\u8fc7 kubelet \u91cd\u65b0\u542f\u52a8\u7684\u9000\u51fa\u5bb9\u5668\u5c06\u4ee5\u6307\u6570\u589e\u52a0\u5ef6\u8fdf\uff0810s\uff0c20s\uff0c40s\u2026\uff09\u91cd\u65b0\u542f\u52a8\uff0c\u4e0a\u9650\u4e3a 5 \u5206\u949f\uff0c\u5e76\u5728\u6210\u529f\u6267\u884c 10 \u5206\u949f\u540e\u91cd\u7f6e\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u63a7\u5236\u5668\u53ef\u4ee5\u63a7\u5236 Pod \u7684\u91cd\u542f\u7b56\u7565\uff1a Job \uff1a\u9002\u7528\u4e8e\u4e00\u6b21\u6027\u4efb\u52a1\u5982\u6279\u91cf\u8ba1\u7b97\uff0c\u4efb\u52a1\u7ed3\u675f\u540e Pod \u4f1a\u88ab\u6b64\u7c7b\u63a7\u5236\u5668\u6e05\u9664\u3002Job \u7684\u91cd\u542f\u7b56\u7565\u53ea\u80fd\u662f\"OnFailure\"\u6216\u8005\"Never\"\u3002 ReplicaSet\u3001Deployment \uff1a\u6b64\u7c7b\u63a7\u5236\u5668\u5e0c\u671b Pod \u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u5b83\u4eec\u7684\u91cd\u542f\u7b56\u7565\u53ea\u80fd\u662f\"Always\"\u3002 DaemonSet \uff1a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u5f88\u660e\u663e\u6b64\u7c7b\u63a7\u5236\u5668\u7684\u91cd\u542f\u7b56\u7565\u4e5f\u5e94\u8be5\u662f\"Always\"\u3002 \u521d\u59cb\u5316\u5bb9\u5668 \u00b6 \u4e86\u89e3\u4e86 Pod \u72b6\u6001\u540e\uff0c\u9996\u5148\u6765\u4e86\u89e3\u4e0b Pod \u4e2d\u6700\u65b0\u542f\u52a8\u7684 Init Container \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e73\u65f6\u5e38\u8bf4\u7684\u521d\u59cb\u5316\u5bb9\u5668\u3002 Init Container \u5c31\u662f\u7528\u6765\u505a\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff0c\u5982\u679c\u6709\u591a\u4e2a\u7684\u8bdd\uff0c\u8fd9\u4e9b\u5bb9\u5668\u4f1a\u6309\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002\u6211\u4eec\u77e5\u9053\u4e00\u4e2a Pod \u91cc\u9762\u7684\u6240\u6709\u5bb9\u5668\u662f\u5171\u4eab\u6570\u636e\u5377\u548c Network Namespace \u7684\uff0c\u6240\u4ee5 Init Container \u91cc\u9762\u4ea7\u751f\u7684\u6570\u636e\u53ef\u4ee5\u88ab\u4e3b\u5bb9\u5668\u4f7f\u7528\u5230\u3002\u4ece\u4e0a\u9762\u7684 Pod \u751f\u547d\u5468\u671f\u7684\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u521d\u59cb\u5316\u5bb9\u5668\u662f\u72ec\u7acb\u4e0e\u4e3b\u5bb9\u5668\u4e4b\u5916\u7684\uff0c\u53ea\u6709\u6240\u6709\u7684 \u521d\u59cb\u5316\u5bb9\u5668\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u4e3b\u5bb9\u5668\u624d\u4f1a\u88ab\u542f\u52a8\u3002\u90a3\u4e48\u521d\u59cb\u5316\u5bb9\u5668\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\u5462 \uff1a \u7b49\u5f85\u5176\u4ed6\u6a21\u5757 Ready\uff1a\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u670d\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a Web \u670d\u52a1\uff0c\u8be5\u670d\u52a1\u53c8\u4f9d\u8d56\u4e8e\u53e6\u5916\u4e00\u4e2a\u6570\u636e\u5e93\u670d\u52a1\uff0c\u4f46\u662f\u5728\u6211\u4eec\u542f\u52a8\u8fd9\u4e2a Web \u670d\u52a1\u7684\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4f9d\u8d56\u7684\u8fd9\u4e2a\u6570\u636e\u5e93\u670d\u52a1\u5c31\u5df2\u7ecf\u542f\u52a8\u8d77\u6765\u4e86\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u6bb5\u65f6\u95f4\u5185 Web \u670d\u52a1\u8fde\u63a5\u6570\u636e\u5e93\u5f02\u5e38\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Web \u670d\u52a1\u7684 Pod \u4e2d\u4f7f\u7528\u4e00\u4e2a InitContainer\uff0c\u5728\u8fd9\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u53bb\u68c0\u67e5\u6570\u636e\u5e93\u662f\u5426\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u51c6\u5907\u597d\u4e86\u8fc7\u540e\u521d\u59cb\u5316\u5bb9\u5668\u5c31\u7ed3\u675f\u9000\u51fa\uff0c\u7136\u540e\u6211\u4eec\u4e3b\u5bb9\u5668\u7684 Web \u670d\u52a1\u624d\u88ab\u542f\u52a8\u8d77\u6765\uff0c\u8fd9\u4e2a\u65f6\u5019\u53bb\u8fde\u63a5\u6570\u636e\u5e93\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u4e86\u3002 \u505a\u521d\u59cb\u5316\u914d\u7f6e\uff1a\u6bd4\u5982\u96c6\u7fa4\u91cc\u68c0\u6d4b\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u6210\u5458\u8282\u70b9\uff0c\u4e3a\u4e3b\u5bb9\u5668\u51c6\u5907\u597d\u96c6\u7fa4\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u6837\u4e3b\u5bb9\u5668\u8d77\u6765\u540e\u5c31\u80fd\u7528\u8fd9\u4e2a\u914d\u7f6e\u4fe1\u606f\u52a0\u5165\u96c6\u7fa4\u3002 \u5176\u5b83\u573a\u666f\uff1a\u5982\u5c06 Pod \u6ce8\u518c\u5230\u4e00\u4e2a\u4e2d\u592e\u6570\u636e\u5e93\u3001\u914d\u7f6e\u4e2d\u5fc3\u7b49\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u5728 Nginx Pod \u542f\u52a8\u4e4b\u524d\u53bb\u91cd\u65b0\u521d\u59cb\u5316\u9996\u9875\u5185\u5bb9\uff0c\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a\uff08init-pod.yaml\uff09 apiVersion : v1 kind : Pod metadata : name : init-demo spec : volumes : - name : workdir emptyDir : {} initContainers : - name : install image : busybox command : - wget - \"-O\" - \"/work-dir/index.html\" - http://www.baidu.com # https volumeMounts : - name : workdir mountPath : \"/work-dir\" containers : - name : web image : nginx ports : - containerPort : 80 volumeMounts : - name : workdir mountPath : /usr/share/nginx/html \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u6211\u4eec\u9996\u5148\u5728 Pod \u9876\u5c42\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a workdir \u7684 Volume \uff0c\u524d\u9762\u6211\u4eec\u7528\u4e86 hostPath \u7684\u6a21\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f emptyDir{} \uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u76ee\u5f55\uff0c\u6570\u636e\u4f1a\u4fdd\u5b58\u5728 kubelet \u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u9762\uff0c\u751f\u547d\u5468\u671f\u7b49\u540c\u4e8e Pod \u7684\u751f\u547d\u5468\u671f\u3002 \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\uff0c\u8be5\u5bb9\u5668\u4f1a\u4e0b\u8f7d\u4e00\u4e2a html \u6587\u4ef6\u5230 /work-dir \u76ee\u5f55\u4e0b\u9762\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u53c8\u5c06\u8be5\u76ee\u5f55\u58f0\u660e\u6302\u8f7d\u5230\u4e86\u5168\u5c40\u7684 Volume\uff0c\u540c\u6837\u7684\u4e3b\u5bb9\u5668 nginx \u4e5f\u5c06\u76ee\u5f55 /usr/share/nginx/html \u58f0\u660e\u6302\u8f7d\u5230\u4e86\u5168\u5c40\u7684 Volume\uff0c\u6240\u4ee5\u5728\u4e3b\u5bb9\u5668\u7684\u8be5\u76ee\u5f55\u4e0b\u9762\u4f1a\u540c\u6b65\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u521b\u5efa\u7684 index.html \u6587\u4ef6\u3002 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f init-pod.yaml \u521b\u5efa\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b\u8be5 Pod \u7684\u72b6\u6001\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE init-demo 0 /1 Init:0/1 0 4s \u53ef\u4ee5\u53d1\u73b0 Pod \u73b0\u5728\u7684\u72b6\u6001\u5904\u4e8e Init:0/1 \u72b6\u6001\uff0c\u610f\u601d\u5c31\u662f\u73b0\u5728\u7b2c\u4e00\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\u8fd8\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod init-demo Name: init-demo Namespace: default Priority: 0 Node: node1/192.168.31.108 Start Time: Mon, 01 Nov 2021 18 :58:40 +0800 Labels: <none> Annotations: <none> Status: Running IP: 10 .244.1.10 IPs: IP: 10 .244.1.10 Init Containers: install: Container ID: containerd://ca0020473b613729e4c853cd0c163023677a631432531ceacbb1aed1ae65bea9 Image: busybox Image ID: docker.io/library/busybox@sha256:15e927f78df2cc772b70713543d6b651e3cd8370abf86b2ea4644a9fba21107f Port: <none> Host Port: <none> Command: wget -O /work-dir/index.html http://www.baidu.com State: Terminated Reason: Completed Exit Code: 0 Started: Mon, 01 Nov 2021 18 :58:43 +0800 Finished: Mon, 01 Nov 2021 18 :58:43 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-htmjf ( ro ) /work-dir from workdir ( rw ) Containers: web: Container ID: containerd://18f08b312af9c464f8cc1313b82cfaf05d1910c8dc35d91dddd2810a184a0bfd Image: nginx Image ID: docker.io/library/nginx@sha256:644a70516a26004c97d0d85c7fe1d0c3a67ea8ab7ddf4aff193d9f301670cf36 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Mon, 01 Nov 2021 18 :58:59 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /usr/share/nginx/html from workdir ( rw ) /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-htmjf ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: workdir: Type: EmptyDir ( a temporary directory that shares a pod ' s lifetime ) Medium: SizeLimit: <unset> kube-api-access-htmjf: Type: Projected ( a volume that contains injected data from multiple sources ) TokenExpirationSeconds: 3607 ConfigMapName: kube-root-ca.crt ConfigMapOptional: <nil> DownwardAPI: true QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute op = Exists for 300s node.kubernetes.io/unreachable:NoExecute op = Exists for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 34s default-scheduler Successfully assigned default/init-demo to node1 Normal Pulling 35s kubelet Pulling image \"busybox\" Normal Pulled 32s kubelet Successfully pulled image \"busybox\" in 2 .655408135s Normal Created 32s kubelet Created container install Normal Started 32s kubelet Started container install Normal Pulling 31s kubelet Pulling image \"nginx\" Normal Pulled 16s kubelet Successfully pulled image \"nginx\" in 15 .385097955s Normal Created 16s kubelet Created container web Normal Started 16s kubelet Started container web \u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u4fe1\u606f\u91cc\u9762\u53ef\u4ee5\u770b\u5230\u521d\u59cb\u5316\u5bb9\u5668\u5df2\u7ecf\u542f\u52a8\u4e86\uff0c\u73b0\u5728\u5904\u4e8e Running \u72b6\u6001\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u7a0d\u7b49\uff0c\u5230\u521d\u59cb\u5316\u5bb9\u5668\u6267\u884c\u5b8c\u6210\u540e\u9000\u51fa\u521d\u59cb\u5316\u5bb9\u5668\u4f1a\u53d8\u6210 Completed \u72b6\u6001\uff0c\u7136\u540e\u624d\u4f1a\u542f\u52a8\u4e3b\u5bb9\u5668\u3002\u5f85\u5230\u4e3b\u5bb9\u5668\u4e5f\u542f\u52a8\u5b8c\u6210\u540e\uff0cPod \u5c31\u4f1a\u53d8\u6210 Running \u72b6\u6001\uff0c\u7136\u540e\u6211\u4eec\u53bb\u8bbf\u95ee\u4e0b Pod \u4e3b\u9875\uff0c\u9a8c\u8bc1\u4e0b\u662f\u5426\u6709\u6211\u4eec\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u4e0b\u8f7d\u7684\u9875\u9762\u4fe1\u606f\uff1a \u279c ~ kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES init-demo 1 /1 Running 0 70s 10 .244.1.10 node1 <none> <none> \u279c ~ curl 10 .244.1.10 <!DOCTYPE html> <!--STATUS OK--><html> <head><meta http-equiv = content-type content = text/html ; charset = utf-8><meta http-equiv = X-UA-Compatible content = IE = Edge><meta content = always name = referrer><link rel = stylesheet type = text/css href = http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css><title>\u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053</title></head> <body link = #0000cc> <div id=wrapper> <div id=head> <div class=head_wrapper> <div class=s_form> <div class=s_form_wrapper> <div id=lg> <img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129> </div> <form id=form name=f action=//www.baidu.com/s class=fm> <input type=hidden name=bdorz_come value=1> <input type=hidden name=ie value=utf-8> <input type=hidden name=f value=8> <input type=hidden name=rsv_bp value=1> <input type=hidden name=rsv_idx value=1> <input type=hidden name=tn value=baidu><span class=\"bg s_ipt_wr\"><input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus></span><span class=\"bg s_btn_wr\"><input type=submit id=su value=\u767e\u5ea6\u4e00\u4e0b class=\"bg s_btn\"></span> </form> </div> </div> <div id=u1> <a href=http://news.baidu.com name=tj_trnews class=mnav>\u65b0\u95fb</a> <a href=http://www.hao123.com name=tj_trhao123 class=mnav>hao123</a> <a href=http://map.baidu.com name=tj_trmap class=mnav>\u5730\u56fe</a> <a href=http://v.baidu.com name=tj_trvideo class=mnav>\u89c6\u9891</a> <a href=http://tieba.baidu.com name=tj_trtieba class=mnav>\u8d34\u5427</a> <noscript> <a href=http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb>\u767b\u5f55</a> </noscript> <script>document.write('<a href=\"http://www.baidu.com/bdorz/login.gif?login&tpl=mn&u='+ encodeURIComponent(window.location.href+ (window.location.search === \"\" ? \"?\" : \"&\")+ \"bdorz_come=1\")+ '\" name=\"tj_login\" class=\"lb\">\u767b\u5f55</a>');</script> <a href=//www.baidu.com/more/ name=tj_briicon class=bri style=\"display: block;\">\u66f4\u591a\u4ea7\u54c1</a> </div> </div> </div> <div id=ftCon> <div id=ftConw> <p id=lh> <a href=http://home.baidu.com>\u5173\u4e8e\u767e\u5ea6</a> <a href=http://ir.baidu.com>About Baidu</a> </p> <p id=cp>&copy;2017&nbsp;Baidu&nbsp;<a href=http://www.baidu.com/duty/>\u4f7f\u7528\u767e\u5ea6\u524d\u5fc5\u8bfb</a>&nbsp; <a href=http://jianyi.baidu.com/ class=cp-feedback>\u610f\u89c1\u53cd\u9988</a>&nbsp;\u4eacICP\u8bc1030173\u53f7&nbsp; <img src=//www.baidu.com/img/gs.gif> </p> </div> </div> </div> </body> </html> Pod Hook \u00b6 \u6211\u4eec\u77e5\u9053 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u800c Pod \u662f\u7531\u5bb9\u5668\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u5728\u8ba8\u8bba Pod \u7684\u751f\u547d\u5468\u671f\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u8ba8\u8bba\u4e0b\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u3002\u5b9e\u9645\u4e0a Kubernetes \u4e3a\u6211\u4eec\u7684\u5bb9\u5668\u63d0\u4f9b\u4e86\u751f\u547d\u5468\u671f\u7684\u94a9\u5b50\uff0c\u5c31\u662f\u6211\u4eec\u8bf4\u7684 Pod Hook \uff0cPod Hook \u662f\u7531 kubelet \u53d1\u8d77\u7684\uff0c\u5f53\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u542f\u52a8\u524d\u6216\u8005\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u7ec8\u6b62\u4e4b\u524d\u8fd0\u884c\uff0c\u8fd9\u662f\u5305\u542b\u5728\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u4e4b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4e3a Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u914d\u7f6e hook\u3002 Kubernetes \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u79cd\u94a9\u5b50\u51fd\u6570\uff1a PostStart \uff1a\u8fd9\u4e2a\u94a9\u5b50\u5728\u5bb9\u5668\u521b\u5efa\u540e\u7acb\u5373\u6267\u884c\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u94a9\u5b50\u5c06\u5728\u5bb9\u5668 ENTRYPOINT \u4e4b\u524d\u8fd0\u884c\uff0c\u56e0\u4e3a\u6ca1\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u3002\u4e3b\u8981\u7528\u4e8e\u8d44\u6e90\u90e8\u7f72\u3001\u73af\u5883\u51c6\u5907\u7b49\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u94a9\u5b50\u82b1\u8d39\u592a\u957f\u65f6\u95f4\u4ee5\u81f3\u4e8e\u4e0d\u80fd\u8fd0\u884c\u6216\u8005\u6302\u8d77\uff0c\u5bb9\u5668\u5c06\u4e0d\u80fd\u8fbe\u5230 running \u72b6\u6001\u3002 PreStop \uff1a\u8fd9\u4e2a\u94a9\u5b50\u5728\u5bb9\u5668\u7ec8\u6b62\u4e4b\u524d\u7acb\u5373\u88ab\u8c03\u7528\u3002\u5b83\u662f\u963b\u585e\u7684\uff0c\u610f\u5473\u7740\u5b83\u662f\u540c\u6b65\u7684\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u5728\u5220\u9664\u5bb9\u5668\u7684\u8c03\u7528\u53d1\u51fa\u4e4b\u524d\u5b8c\u6210\u3002\u4e3b\u8981\u7528\u4e8e\u4f18\u96c5\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u3001\u901a\u77e5\u5176\u4ed6\u7cfb\u7edf\u7b49\u3002\u5982\u679c\u94a9\u5b50\u5728\u6267\u884c\u671f\u95f4\u6302\u8d77\uff0cPod \u9636\u6bb5\u5c06\u505c\u7559\u5728 running \u72b6\u6001\u5e76\u4e14\u6c38\u4e0d\u4f1a\u8fbe\u5230 failed \u72b6\u6001\u3002 \u5982\u679c PostStart \u6216\u8005 PreStop \u94a9\u5b50\u5931\u8d25\uff0c \u5b83\u4f1a\u6740\u6b7b\u5bb9\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8ba9\u94a9\u5b50\u51fd\u6570\u5c3d\u53ef\u80fd\u7684\u8f7b\u91cf\u3002\u5f53\u7136\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u957f\u65f6\u95f4\u8fd0\u884c\u547d\u4ee4\u662f\u5408\u7406\u7684\uff0c \u6bd4\u5982\u5728\u505c\u6b62\u5bb9\u5668\u4e4b\u524d\u9884\u5148\u4fdd\u5b58\u72b6\u6001\u3002 \u53e6\u5916\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0a\u9762\u7684\u94a9\u5b50\u51fd\u6570\uff1a Exec - \u7528\u4e8e\u6267\u884c\u4e00\u6bb5\u7279\u5b9a\u7684\u547d\u4ee4\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\u8be5\u547d\u4ee4\u6d88\u8017\u7684\u8d44\u6e90\u4f1a\u88ab\u8ba1\u5165\u5bb9\u5668\u3002 HTTP - \u5bf9\u5bb9\u5668\u4e0a\u7684\u7279\u5b9a\u7684\u7aef\u70b9\u6267\u884c HTTP \u8bf7\u6c42\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Nginx Pod\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86 PostStart \u94a9\u5b50\u51fd\u6570\uff0c\u5373\u5728\u5bb9\u5668\u521b\u5efa\u6210\u529f\u540e\uff0c\u5199\u5165\u4e00\u53e5\u8bdd\u5230 /usr/share/message \u6587\u4ef6\u4e2d\uff1a # pod-poststart.yaml apiVersion : v1 kind : Pod metadata : name : hook-demo1 spec : containers : - name : hook-demo1 image : nginx lifecycle : postStart : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello from the postStart handler > /usr/share/message\" ] \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f pod-poststart.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE hook-demo1 1 /1 Running 0 26s \u521b\u5efa\u6210\u529f\u540e\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u4e2d /usr/share/message \u6587\u4ef6\u662f\u5426\u5185\u5bb9\u6b63\u786e\uff1a \u279c ~ kubectl exec -it hook-demo1 -- cat /usr/share/message Hello from the postStart handler \u5f53\u7528\u6237\u8bf7\u6c42\u5220\u9664\u542b\u6709 Pod \u7684\u8d44\u6e90\u5bf9\u8c61\u65f6\uff08\u5982 Deployment \u7b49\uff09\uff0cK8S \u4e3a\u4e86\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f18\u96c5\u5173\u95ed\uff08\u5373\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5b8c\u6210\u6b63\u5728\u5904\u7406\u7684\u8bf7\u6c42\u540e\uff0c\u518d\u5173\u95ed\u8f6f\u4ef6\uff09\uff0cK8S \u63d0\u4f9b\u4e24\u79cd\u4fe1\u606f\u901a\u77e5\uff1a \u9ed8\u8ba4\uff1aK8S \u901a\u77e5 node \u6267\u884c\u5bb9\u5668 stop \u547d\u4ee4\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5148\u5411\u5bb9\u5668\u4e2d PID \u4e3a 1 \u7684\u8fdb\u7a0b\u53d1\u9001\u7cfb\u7edf\u4fe1\u53f7 SIGTERM \uff0c\u7136\u540e\u7b49\u5f85\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7ec8\u6b62\u6267\u884c\uff0c\u5982\u679c\u7b49\u5f85\u65f6\u95f4\u8fbe\u5230\u8bbe\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u6216\u8005\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\uff0830s\uff09\uff0c\u4f1a\u7ee7\u7eed\u53d1\u9001 SIGKILL \u7684\u7cfb\u7edf\u4fe1\u53f7\u5f3a\u884c kill \u6389\u8fdb\u7a0b \u4f7f\u7528 Pod \u751f\u547d\u5468\u671f\uff08\u5229\u7528 PreStop \u56de\u8c03\u51fd\u6570\uff09\uff0c\u5b83\u5728\u53d1\u9001\u7ec8\u6b62\u4fe1\u53f7\u4e4b\u524d\u6267\u884c \u9ed8\u8ba4\u6240\u6709\u7684\u4f18\u96c5\u9000\u51fa\u65f6\u95f4\u90fd\u572830\u79d2\u5185\uff0c kubectl delete \u547d\u4ee4\u652f\u6301 --grace-period=<seconds> \u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u5141\u8bb8\u7528\u6237\u7528\u4ed6\u4eec\u81ea\u5df1\u6307\u5b9a\u7684\u503c\u8986\u76d6\u9ed8\u8ba4\u503c\uff0c\u503c0\u4ee3\u8868\u5f3a\u5236\u5220\u9664 pod\u3002 \u5728 kubectl 1.5 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u91cc\uff0c\u6267\u884c\u5f3a\u5236\u5220\u9664\u65f6\u5fc5\u987b\u540c\u65f6\u6307\u5b9a --force --grace-period=0 \u3002 \u5f3a\u5236\u5220\u9664\u4e00\u4e2a pod \u662f\u4ece\u96c6\u7fa4\u4e2d\u8fd8\u6709 etcd \u91cc\u7acb\u523b\u5220\u9664\u8fd9\u4e2a pod\uff0c\u53ea\u662f\u5f53 Pod \u88ab\u5f3a\u5236\u5220\u9664\u65f6\uff0c APIServer \u4e0d\u4f1a\u7b49\u5f85\u6765\u81ea Pod \u6240\u5728\u8282\u70b9\u4e0a\u7684 kubelet \u7684\u786e\u8ba4\u4fe1\u606f\uff1apod \u5df2\u7ecf\u88ab\u7ec8\u6b62\u3002\u5728 API \u91cc pod \u4f1a\u88ab\u7acb\u523b\u5220\u9664\uff0c\u5728\u8282\u70b9\u4e0a\uff0c pods \u88ab\u8bbe\u7f6e\u6210\u7acb\u523b\u7ec8\u6b62\u540e\uff0c\u5728\u5f3a\u884c\u6740\u6389\u524d\u8fd8\u4f1a\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u5bbd\u9650\u671f\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Nginx Pod\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86 PreStop \u94a9\u5b50\u51fd\u6570\uff0c\u5373\u5728\u5bb9\u5668\u9000\u51fa\u4e4b\u524d\uff0c\u4f18\u96c5\u7684\u5173\u95ed Nginx\uff1a # pod-prestop.yaml apiVersion : v1 kind : Pod metadata : name : hook-demo2 spec : containers : - name : hook-demo2 image : nginx lifecycle : preStop : exec : command : [ \"/usr/sbin/nginx\" , \"-s\" , \"quit\" ] # \u4f18\u96c5\u9000\u51fa --- apiVersion : v1 kind : Pod metadata : name : hook-demo3 spec : volumes : - name : message hostPath : path : /tmp containers : - name : hook-demo2 image : nginx ports : - containerPort : 80 volumeMounts : - name : message mountPath : /usr/share/ lifecycle : preStop : exec : command : [ '/bin/sh' , '-c' , 'echo Hello from the preStop Handler > /usr/share/message' ] \u4e0a\u9762\u5b9a\u4e49\u7684\u4e24\u4e2a Pod\uff0c\u4e00\u4e2a\u662f\u5229\u7528 preStop \u6765\u8fdb\u884c\u4f18\u96c5\u5220\u9664\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5229\u7528 preStop \u6765\u505a\u4e00\u4e9b\u4fe1\u606f\u8bb0\u5f55\u7684\u4e8b\u60c5\uff0c\u540c\u6837\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f pod-prestop.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE hook-demo2 1 /1 Running 0 20s hook-demo3 1 /1 Running 0 20s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5220\u9664 hook-demo2 \u8fd9\u4e2a Pod\uff0c\u5728\u5bb9\u5668\u5220\u9664\u4e4b\u524d\u4f1a\u6267\u884c preStop \u91cc\u9762\u7684\u4f18\u96c5\u5173\u95ed\u547d\u4ee4\uff0c\u8fd9\u4e2a\u7528\u6cd5\u5728\u540e\u9762\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u7684\u65f6\u5019\u7528\u6765\u4fdd\u8bc1\u6211\u4eec\u7684\u5e94\u7528\u96f6\u5b95\u673a\u975e\u5e38\u6709\u7528\u3002\u7b2c\u4e8c\u4e2a Pod \u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a hostPath \u7c7b\u578b\u7684 Volume\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u58f0\u660e\u6302\u8f7d\u5230\u4e86\u8fd9\u4e2a Volume\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5220\u9664 Pod\uff0c\u9000\u51fa\u5bb9\u5668\u4e4b\u524d\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u8f93\u51fa\u7684\u4fe1\u606f\u4e5f\u4f1a\u540c\u6837\u7684\u4fdd\u5b58\u5230\u5bbf\u4e3b\u673a\uff08\u4e00\u5b9a\u8981\u662f Pod \u88ab\u8c03\u5ea6\u5230\u7684\u76ee\u6807\u8282\u70b9\uff09\u7684 /tmp \u76ee\u5f55\u4e0b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b hook-demo3 \u8fd9\u4e2a Pod \u88ab\u8c03\u5ea6\u7684\u8282\u70b9\uff1a \u279c ~ kubectl describe pod hook-demo3 Name: hook-demo3 Namespace: default Priority: 0 Node: node1/192.168.31.108 ...... \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u88ab\u8c03\u5ea6\u5230\u4e86 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5230\u8be5\u8282\u70b9\u4e0a\u67e5\u770b /tmp \u76ee\u5f55\u4e0b\u9762\u76ee\u524d\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\uff1a \u279c ~ ls /tmp/ \u73b0\u5728\u6211\u4eec\u6765\u5220\u9664 hook-demo3 \u8fd9\u4e2a Pod\uff0c\u5b89\u88c5\u6211\u4eec\u7684\u8bbe\u5b9a\u5728\u5bb9\u5668\u9000\u51fa\u4e4b\u524d\u4f1a\u6267\u884c preStop \u91cc\u9762\u7684\u547d\u4ee4\uff0c\u4e5f\u5c31\u662f\u4f1a\u5f80 message \u6587\u4ef6\u4e2d\u8f93\u51fa\u4e00\u4e9b\u4fe1\u606f\uff1a \u279c ~ kubectl delete pod hook-demo3 pod \"hook-demo3\" deleted \u279c ~ ls /tmp/ message \u279c ~ cat /tmp/message Hello from the preStop Handler \u53e6\u5916 Hook \u8c03\u7528\u7684\u65e5\u5fd7\u6ca1\u6709\u66b4\u9732\u7ed9 Pod\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7 describe \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u5982\u679c\u6709\u9519\u8bef\u5c06\u53ef\u4ee5\u770b\u5230 FailedPostStartHook \u6216 FailedPreStopHook \u8fd9\u6837\u7684 event\u3002 Pod \u5065\u5eb7\u68c0\u67e5 \u00b6 \u73b0\u5728\u5728 Pod \u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\uff0c\u80fd\u5f71\u54cd\u5230 Pod \u7684\u5c31\u53ea\u5269\u4e0b\u5065\u5eb7\u68c0\u67e5\u8fd9\u4e00\u90e8\u5206\u4e86\u3002\u5728 Kubernetes \u96c6\u7fa4\u5f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e liveness probe\uff08\u5b58\u6d3b\u63a2\u9488\uff09 \u548c readiness probe\uff08\u53ef\u8bfb\u6027\u63a2\u9488\uff09 \u6765\u5f71\u54cd\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff1a kubelet \u901a\u8fc7\u4f7f\u7528 liveness probe \u6765\u786e\u5b9a\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u901a\u4fd7\u70b9\u5c06\u5c31\u662f\u662f\u5426\u8fd8\u6d3b\u7740\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u4e00\u65e6\u5d29\u6e83\u4e86\uff0c Kubernetes \u5c31\u4f1a\u7acb\u523b\u77e5\u9053\u8fd9\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u7ec8\u6b62\u4e86\uff0c\u7136\u540e\u5c31\u4f1a\u91cd\u542f\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u800c\u6211\u4eec\u7684 liveness probe \u7684\u76ee\u7684\u5c31\u662f\u6765\u6355\u83b7\u5230\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u7ec8\u6b62\uff0c\u8fd8\u6ca1\u6709\u5d29\u6e83\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u4e9b\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u91cd\u542f\u5904\u4e8e\u8be5\u72b6\u6001\u4e0b\u7684\u5bb9\u5668\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5728\u5b58\u5728 bug \u7684\u60c5\u51b5\u4e0b\u4f9d\u7136\u80fd\u591f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\u3002 kubelet \u4f7f\u7528 readiness probe \u6765\u786e\u5b9a\u5bb9\u5668\u662f\u5426\u5df2\u7ecf\u5c31\u7eea\u53ef\u4ee5\u63a5\u6536\u6d41\u91cf\u8fc7\u6765\u4e86\u3002\u8fd9\u4e2a\u63a2\u9488\u901a\u4fd7\u70b9\u8bb2\u5c31\u662f\u8bf4\u662f\u5426\u51c6\u5907\u597d\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002\u53ea\u6709\u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u90fd\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u7684\u65f6\u5019 kubelet \u624d\u4f1a\u8ba4\u5b9a\u8be5 Pod \u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u56e0\u4e3a\u4e00\u4e2a Pod \u4e0b\u9762\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5bb9\u5668\u3002\u5f53\u7136 Pod \u5982\u679c\u5904\u4e8e\u975e\u5c31\u7eea\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u5c06\u4ed6\u4ece Service \u7684 Endpoints \u5217\u8868\u4e2d\u79fb\u9664\u51fa\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u6d41\u91cf\u5c31\u4e0d\u4f1a\u88ab\u8def\u7531\u5230\u8fd9\u4e2a Pod \u91cc\u9762\u6765\u4e86\u3002 \u548c\u524d\u9762\u7684\u94a9\u5b50\u51fd\u6570\u4e00\u6837\u7684\uff0c\u6211\u4eec\u8fd9\u4e24\u4e2a\u63a2\u9488\u7684\u652f\u6301\u4e0b\u9762\u51e0\u79cd\u914d\u7f6e\u65b9\u5f0f\uff1a exec\uff1a\u6267\u884c\u4e00\u6bb5\u547d\u4ee4 http\uff1a\u68c0\u6d4b\u67d0\u4e2a http \u8bf7\u6c42 tcpSocket\uff1a\u4f7f\u7528\u6b64\u914d\u7f6e\uff0ckubelet \u5c06\u5c1d\u8bd5\u5728\u6307\u5b9a\u7aef\u53e3\u4e0a\u6253\u5f00\u5bb9\u5668\u7684\u5957\u63a5\u5b57\u3002\u5982\u679c\u53ef\u4ee5\u5efa\u7acb\u8fde\u63a5\uff0c\u5bb9\u5668\u88ab\u8ba4\u4e3a\u662f\u5065\u5eb7\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u5c31\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u68c0\u67e5\u7aef\u53e3\u3002 \u6211\u4eec\u5148\u6765\u7ed9\u5927\u5bb6\u6f14\u793a\u4e0b\u5b58\u6d3b\u63a2\u9488\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u7528 exec \u6267\u884c\u547d\u4ee4\u7684\u65b9\u5f0f\u6765\u68c0\u6d4b\u5bb9\u5668\u7684\u5b58\u6d3b\uff0c\u5982\u4e0b\uff1a # liveness-exec.yaml apiVersion : v1 kind : Pod metadata : name : liveness-exec spec : containers : - name : liveness image : busybox args : - /bin/sh - -c - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600 livenessProbe : exec : command : - cat - /tmp/healthy initialDelaySeconds : 5 periodSeconds : 5 \u6211\u4eec\u8fd9\u91cc\u9700\u8981\u7528\u5230\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027 livenessProbe \uff0c\u4e0b\u9762\u901a\u8fc7 exec \u6267\u884c\u4e00\u6bb5\u547d\u4ee4: periodSeconds \uff1a\u8868\u793a\u8ba9 kubelet \u6bcf\u96945\u79d2\u6267\u884c\u4e00\u6b21\u5b58\u6d3b\u63a2\u9488\uff0c\u4e5f\u5c31\u662f\u6bcf5\u79d2\u6267\u884c\u4e00\u6b21\u4e0a\u9762\u7684 cat /tmp/healthy \u547d\u4ee4\uff0c\u5982\u679c\u547d\u4ee4\u6267\u884c\u6210\u529f\u4e86\uff0c\u5c06\u8fd4\u56de0\uff0c\u90a3\u4e48 kubelet \u5c31\u4f1a\u8ba4\u4e3a\u5f53\u524d\u8fd9\u4e2a\u5bb9\u5668\u662f\u5b58\u6d3b\u7684\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662f\u975e0\u503c\uff0c\u90a3\u4e48 kubelet \u5c31\u4f1a\u628a\u8be5\u5bb9\u5668\u6740\u6389\u7136\u540e\u91cd\u542f\u5b83\u3002\u9ed8\u8ba4\u662f10\u79d2\uff0c\u6700\u5c0f1\u79d2\u3002 initialDelaySeconds \uff1a\u8868\u793a\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7684\u65f6\u5019\u8981\u7b49\u5f855\u79d2\uff0c\u8fd9\u6837\u80fd\u591f\u786e\u4fdd\u6211\u4eec\u7684\u5bb9\u5668\u80fd\u591f\u6709\u8db3\u591f\u7684\u65f6\u95f4\u542f\u52a8\u8d77\u6765\u3002\u5927\u5bb6\u53ef\u4ee5\u60f3\u8c61\u4e0b\uff0c\u5982\u679c\u4f60\u7684\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7b49\u5019\u7684\u65f6\u95f4\u592a\u77ed\uff0c\u662f\u4e0d\u662f\u5f88\u6709\u53ef\u80fd\u5bb9\u5668\u8fd8\u6ca1\u6b63\u5e38\u542f\u52a8\u8d77\u6765\uff0c\u6240\u4ee5\u5b58\u6d3b\u63a2\u9488\u5f88\u53ef\u80fd\u59cb\u7ec8\u90fd\u662f\u5931\u8d25\u7684\uff0c\u8fd9\u6837\u5c31\u4f1a\u65e0\u4f11\u6b62\u7684\u91cd\u542f\u4e0b\u53bb\u4e86\uff0c\u5bf9\u5427\uff1f \u6211\u4eec\u5728\u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\uff0c\u6267\u884c\u4e86\u5982\u4e0b\u547d\u4ee4\uff1a /bin/sh -c \"touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600\" \u610f\u601d\u662f\u8bf4\u5728\u5bb9\u5668\u6700\u5f00\u59cb\u768430\u79d2\u5185\u521b\u5efa\u4e86\u4e00\u4e2a /tmp/healthy \u6587\u4ef6\uff0c\u5728\u8fd930\u79d2\u5185\u6267\u884c cat /tmp/healthy \u547d\u4ee4\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u7684\u8fd4\u56de\u7801\u300230 \u79d2\u540e\uff0c\u6211\u4eec\u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\uff0c\u73b0\u5728\u6267\u884c cat /tmp/healthy \u662f\u4e0d\u662f\u5c31\u4f1a\u5931\u8d25\u4e86\uff08\u9ed8\u8ba4\u68c0\u6d4b\u5931\u8d253\u6b21\u624d\u8ba4\u4e3a\u5931\u8d25\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u91cd\u542f\u5bb9\u5668\u4e86\u3002 \u6211\u4eec\u6765\u521b\u5efa\u4e0b\u8be5 Pod\uff0c\u7136\u540e\u5728 30 \u79d2\u5185\uff0c\u67e5\u770b Pod \u7684 Event\uff1a \u279c ~ kubectl apply -f liveness-exec.yaml \u279c ~ kubectl describe pod liveness-exec Name: liveness-exec Namespace: default ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 68s default-scheduler Successfully assigned default/liveness-exec to node1 Normal Pulling 68s kubelet Pulling image \"busybox\" Normal Pulled 52s kubelet Successfully pulled image \"busybox\" in 15 .352808024s Normal Created 52s kubelet Created container liveness Normal Started 52s kubelet Started container liveness Warning Unhealthy 8s ( x3 over 18s ) kubelet Liveness probe failed: cat: can 't open ' /tmp/healthy ' : No such file or directory Normal Killing 8s kubelet Container liveness failed liveness probe, will be restarted \u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5bb9\u5668\u662f\u6b63\u5e38\u542f\u52a8\u7684\uff0c\u5728\u9694\u4e00\u4f1a\u513f\uff0c\u6bd4\u5982 40s \u540e\uff0c\u518d\u67e5\u770b\u4e0b Pod \u7684 Event\uff0c\u5728\u6700\u4e0b\u9762\u6709\u4e00\u6761\u4fe1\u606f\u663e\u793a liveness probe \u5931\u8d25\u4e86\uff0c\u5bb9\u5668\u5c06\u8981\u91cd\u542f\u3002\u7136\u540e\u53ef\u4ee5\u67e5\u770b\u5230 Pod \u7684 RESTARTS \u503c\u52a0 1 \u4e86\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE liveness-exec 1 /1 Running 1 ( 16s ago ) 106s \u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 HTTP GET \u8bf7\u6c42\u6765\u914d\u7f6e\u6211\u4eec\u7684\u5b58\u6d3b\u63a2\u9488\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a liveness \u955c\u50cf\u6765\u9a8c\u8bc1\u6f14\u793a\u4e0b\uff1a # liveness-http.yaml apiVersion : v1 kind : Pod metadata : name : liveness-http spec : containers : - name : liveness image : cnych/liveness args : - /server livenessProbe : httpGet : path : /healthz port : 8080 httpHeaders : - name : X-Custom-Header value : Awesome initialDelaySeconds : 3 periodSeconds : 3 \u540c\u6837\u7684\uff0c\u6839\u636e periodSeconds \u5c5e\u6027\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 kubelet \u9700\u8981\u6bcf\u96943\u79d2\u6267\u884c\u4e00\u6b21 liveness Probe \uff0c\u8be5\u63a2\u9488\u5c06\u5411\u5bb9\u5668\u4e2d\u7684 server \u7684 8080 \u7aef\u53e3\u53d1\u9001\u4e00\u4e2a HTTP GET \u8bf7\u6c42\u3002\u5982\u679c server \u7684 /healthz \u8def\u5f84\u7684 handler \u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u7684\u8fd4\u56de\u7801\uff0ckubelet \u5c31\u4f1a\u8ba4\u5b9a\u8be5\u5bb9\u5668\u662f\u6d3b\u7740\u7684\u5e76\u4e14\u5f88\u5065\u5eb7\uff0c\u5982\u679c\u8fd4\u56de\u5931\u8d25\u7684\u8fd4\u56de\u7801\uff0ckubelet \u5c06\u6740\u6389\u8be5\u5bb9\u5668\u5e76\u91cd\u542f\u5b83\u3002initialDelaySeconds \u6307\u5b9akubelet \u5728\u8be5\u6267\u884c\u7b2c\u4e00\u6b21\u63a2\u6d4b\u4e4b\u524d\u9700\u8981\u7b49\u5f853\u79d2\u949f\u3002 \u8fd4\u56de\u7801 \u901a\u5e38\u6765\u8bf4\uff0c\u4efb\u4f55\u5927\u4e8e 200 \u5c0f\u4e8e 400 \u7684\u72b6\u6001\u7801\u90fd\u4f1a\u8ba4\u5b9a\u662f\u6210\u529f\u7684\u8fd4\u56de\u7801\u3002\u5176\u4ed6\u8fd4\u56de\u7801\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u8fd4\u56de\u7801\u3002 \u6211\u4eec\u53ef\u4ee5\u6765\u67e5\u770b\u4e0b\u4e0a\u9762\u7684 healthz \u7684\u5b9e\u73b0\uff1a http . HandleFunc ( \"/healthz\" , func ( w http . ResponseWriter , r * http . Request ) { duration := time . Now (). Sub ( started ) if duration . Seconds () > 10 { w . WriteHeader ( 500 ) w . Write ([] byte ( fmt . Sprintf ( \"error: %v\" , duration . Seconds ()))) } else { w . WriteHeader ( 200 ) w . Write ([] byte ( \"ok\" )) } }) \u5927\u6982\u610f\u601d\u5c31\u662f\u6700\u5f00\u59cb\u524d 10s \u8fd4\u56de\u72b6\u6001\u7801200\uff0c10s \u8fc7\u540e\u5c31\u8fd4\u56de\u72b6\u6001\u7801500\u3002\u6240\u4ee5\u5f53\u5bb9\u5668\u542f\u52a83\u79d2\u540e\uff0ckubelet \u5f00\u59cb\u6267\u884c\u5065\u5eb7\u68c0\u67e5\u3002\u7b2c\u4e00\u6b21\u5065\u5eb7\u68c0\u67e5\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a\u662f\u5728 10s \u4e4b\u5185\uff0c\u4f46\u662f 10 \u79d2\u540e\uff0c\u5065\u5eb7\u68c0\u67e5\u5c06\u5931\u8d25\uff0c\u56e0\u4e3a\u73b0\u5728\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u72b6\u6001\u7801\u4e86\uff0c\u6240\u4ee5 kubelet \u5c06\u4f1a\u6740\u6389\u548c\u91cd\u542f\u5bb9\u5668\u3002 \u540c\u6837\u7684\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e0b\u8be5 Pod \u6d4b\u8bd5\u4e0b\u6548\u679c\uff0c10 \u79d2\u540e\uff0c\u67e5\u770b Pod \u7684 event\uff0c\u786e\u8ba4 liveness probe \u5931\u8d25\u5e76\u91cd\u542f\u4e86\u5bb9\u5668\uff1a \u279c ~ kubectl apply -f liveness-http.yaml \u279c ~ kubectl describe pod liveness-http Name: liveness-http Namespace: default ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 44s default-scheduler Successfully assigned default/liveness-http to node2 Normal Pulled 41s kubelet Successfully pulled image \"cnych/liveness\" in 3 .359937074s Normal Pulling 21s ( x2 over 45s ) kubelet Pulling image \"cnych/liveness\" Warning Unhealthy 21s ( x3 over 29s ) kubelet Liveness probe failed: HTTP probe failed with statuscode: 500 Normal Killing 21s kubelet Container liveness failed liveness probe, will be restarted Normal Created 6s ( x2 over 41s ) kubelet Created container liveness Normal Started 6s ( x2 over 41s ) kubelet Started container liveness Normal Pulled 6s kubelet Successfully pulled image \"cnych/liveness\" in 15 .300179047s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE liveness-http 1 /1 Running 2 ( 16s ago ) 76s \u9664\u4e86\u4e0a\u9762\u7684 exec \u548c httpGet \u4e24\u79cd\u68c0\u6d4b\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 tcpSocket \u65b9\u5f0f\u6765\u68c0\u6d4b\u7aef\u53e3\u662f\u5426\u6b63\u5e38\uff0c\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u7ed3\u5408 kubectl explain \u547d\u4ee4\u81ea\u5df1\u6765\u9a8c\u8bc1\u4e0b\u8fd9\u79cd\u65b9\u5f0f\u3002 \u53e6\u5916\u524d\u9762\u6211\u4eec\u63d0\u5230\u4e86\u63a2\u9488\u91cc\u9762\u6709\u4e00\u4e2a initialDelaySeconds \u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u6765\u914d\u7f6e\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u5bf9\u4e8e\u542f\u52a8\u975e\u5e38\u6162\u7684\u5e94\u7528\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982 Jenkins\u3001Gitlab \u8fd9\u7c7b\u5e94\u7528\uff0c\u4f46\u662f\u5982\u4f55\u8bbe\u7f6e\u4e00\u4e2a\u5408\u9002\u7684\u521d\u59cb\u5ef6\u8fdf\u65f6\u95f4\u5462\uff1f\u8fd9\u4e2a\u5c31\u548c\u5e94\u7528\u5177\u4f53\u7684\u73af\u5883\u6709\u5173\u7cfb\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u503c\u5f80\u5f80\u4e0d\u662f\u901a\u7528\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u80fd\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u5728\u522b\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u5c31\u4f1a\u5065\u5eb7\u68c0\u67e5\u5931\u8d25\u4e86\uff0c\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728 Kubernetes v1.16 \u7248\u672c\u5b98\u65b9\u7279\u5730\u65b0\u589e\u4e86\u4e00\u4e2a startupProbe\uff08\u542f\u52a8\u63a2\u9488\uff09 \uff0c\u8be5\u63a2\u9488\u5c06\u63a8\u8fdf\u6240\u6709\u5176\u4ed6\u63a2\u9488\uff0c\u76f4\u5230 Pod \u5b8c\u6210\u542f\u52a8\u4e3a\u6b62\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u5b58\u6d3b\u63a2\u9488\u4e00\u6837\uff1a startupProbe : httpGet : path : /healthz port : 8080 failureThreshold : 30 # \u5c3d\u91cf\u8bbe\u7f6e\u5927\u70b9 periodSeconds : 10 \u6bd4\u5982\u4e0a\u9762\u8fd9\u91cc\u7684\u914d\u7f6e\u8868\u793a\u6211\u4eec\u7684\u6162\u901f\u5bb9\u5668\u6700\u591a\u53ef\u4ee5\u67095\u5206\u949f\uff0830\u4e2a\u68c0\u67e5 * 10\u79d2= 300s\uff09\u6765\u5b8c\u6210\u542f\u52a8\u3002 \u6709\u7684\u65f6\u5019\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u6682\u65f6\u65e0\u6cd5\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u4f8b\u5982\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u5728\u542f\u52a8\u671f\u95f4\u52a0\u8f7d\u5927\u91cf\u6570\u636e\u6216\u914d\u7f6e\u6587\u4ef6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4e0d\u60f3\u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u4e0d\u60f3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 readiness probe \u6765\u68c0\u6d4b\u548c\u51cf\u8f7b\u8fd9\u4e9b\u60c5\u51b5\uff0cPod \u4e2d\u7684\u5bb9\u5668\u53ef\u4ee5\u62a5\u544a\u81ea\u5df1\u8fd8\u6ca1\u6709\u51c6\u5907\uff0c\u4e0d\u80fd\u5904\u7406 Kubernetes \u670d\u52a1\u53d1\u9001\u8fc7\u6765\u7684\u6d41\u91cf\u3002 readiness probe \u7684\u914d\u7f6e\u8ddf liveness probe \u57fa\u672c\u4e0a\u4e00\u81f4\u7684\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u662f\u4f7f\u7528 readinessProbe \u800c\u4e0d\u662f livenessProbe \uff0c\u4e24\u8005\u5982\u679c\u540c\u65f6\u4f7f\u7528\u7684\u8bdd\u5c31\u53ef\u4ee5\u786e\u4fdd\u6d41\u91cf\u4e0d\u4f1a\u5230\u8fbe\u8fd8\u672a\u51c6\u5907\u597d\u7684\u5bb9\u5668\uff0c\u51c6\u5907\u597d\u8fc7\u540e\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u5219\u4f1a\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u3002\u5bf9\u4e8e\u5c31\u7eea\u63a2\u9488\u6211\u4eec\u4f1a\u5728\u540e\u9762 Service \u7684\u7ae0\u8282\u548c\u5927\u5bb6\u7ee7\u7eed\u4ecb\u7ecd\u3002 \u53e6\u5916\u9664\u4e86\u4e0a\u9762\u7684 initialDelaySeconds \u548c periodSeconds \u5c5e\u6027\u5916\uff0c\u63a2\u9488\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5982\u4e0b\u51e0\u4e2a\u53c2\u6570\uff1a timeoutSeconds \uff1a\u63a2\u6d4b\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba41\u79d2\uff0c\u6700\u5c0f1\u79d2\u3002 successThreshold \uff1a\u63a2\u6d4b\u5931\u8d25\u540e\uff0c\u6700\u5c11\u8fde\u7eed\u63a2\u6d4b\u6210\u529f\u591a\u5c11\u6b21\u624d\u88ab\u8ba4\u5b9a\u4e3a\u6210\u529f\uff0c\u9ed8\u8ba4\u662f 1\uff0c\u4f46\u662f\u5982\u679c\u662f - liveness \u5219\u5fc5\u987b\u662f 1\u3002\u6700\u5c0f\u503c\u662f 1\u3002 failureThreshold \uff1a\u63a2\u6d4b\u6210\u529f\u540e\uff0c\u6700\u5c11\u8fde\u7eed\u63a2\u6d4b\u5931\u8d25\u591a\u5c11\u6b21\u624d\u88ab\u8ba4\u5b9a\u4e3a\u5931\u8d25\uff0c\u9ed8\u8ba4\u662f 3\uff0c\u6700\u5c0f\u503c\u662f 1\u3002","title":"Pod\u751f\u547d\u5468\u671f"},{"location":"Foundation/Pod%20lifeCycle/#pod","text":"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 Pod \u7684\u8bbe\u8ba1\u539f\u7406\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4e86\u89e3\u4e0b Pod \u7684\u751f\u547d\u5468\u671f\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a Pod \u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u8fc7\u7a0b\uff0c\u5176\u4e2d\u5305\u542b Init Container\u3001Pod Hook\u3001\u5065\u5eb7\u68c0\u67e5 \u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5206\u522b\u4ecb\u7ecd\u5f71\u54cd Pod \u751f\u547d\u5468\u671f\u7684\u90e8\u5206\uff1a \u9996\u5148\u5728\u4ecb\u7ecd Pod \u7684\u751f\u547d\u5468\u671f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Pod \u7684\u72b6\u6001\uff0c\u56e0\u4e3a Pod \u72b6\u6001\u53ef\u4ee5\u53cd\u5e94\u51fa\u5f53\u524d\u6211\u4eec\u7684 Pod \u7684\u5177\u4f53\u72b6\u6001\u4fe1\u606f\uff0c\u4e5f\u662f\u6211\u4eec\u5206\u6790\u6392\u9519\u7684\u4e00\u4e2a\u5fc5\u5907\u7684\u65b9\u5f0f\u3002","title":"Pod \u7684\u751f\u547d\u5468\u671f"},{"location":"Foundation/Pod%20lifeCycle/#pod_1","text":"\u9996\u5148\u5148\u4e86\u89e3\u4e0b Pod \u7684\u72b6\u6001\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain pod.status \u547d\u4ee4\u6765\u4e86\u89e3\u5173\u4e8e Pod \u72b6\u6001\u7684\u4e00\u4e9b\u4fe1\u606f\uff0cPod \u7684\u72b6\u6001\u5b9a\u4e49\u5728 PodStatus \u5bf9\u8c61\u4e2d\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a phase \u5b57\u6bb5\uff0c\u4e0b\u9762\u662f phase \u7684\u53ef\u80fd\u53d6\u503c\uff1a \u6302\u8d77\uff08Pending\uff09 \uff1aPod \u4fe1\u606f\u5df2\u7ecf\u63d0\u4ea4\u7ed9\u4e86\u96c6\u7fa4\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\u5230\u5408\u9002\u7684\u8282\u70b9\u6216\u8005 Pod \u91cc\u7684\u955c\u50cf\u6b63\u5728\u4e0b\u8f7d \u8fd0\u884c\u4e2d\uff08Running\uff09 \uff1a\u8be5 Pod \u5df2\u7ecf\u7ed1\u5b9a\u5230\u4e86\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0cPod - \u4e2d\u6240\u6709\u7684\u5bb9\u5668\u90fd\u5df2\u88ab\u521b\u5efa\u3002\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u6216\u8005\u6b63\u5904\u4e8e\u542f\u52a8\u6216\u91cd\u542f\u72b6\u6001 \u6210\u529f\uff08Succeeded\uff09 \uff1aPod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u88ab\u6210\u529f\u7ec8\u6b62\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u91cd\u542f \u5931\u8d25\uff08Failed\uff09 \uff1aPod - \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u5df2\u7ec8\u6b62\u4e86\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u662f\u56e0\u4e3a\u5931\u8d25\u7ec8\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u4ee5\u975e0\u72b6\u6001\u9000\u51fa\u6216\u8005\u88ab\u7cfb\u7edf\u7ec8\u6b62 \u672a\u77e5\uff08Unknown\uff09 \uff1a\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u53d6\u5f97 Pod \u7684\u72b6\u6001\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u4e0e Pod \u6240\u5728\u4e3b\u673a\u901a\u4fe1\u5931\u8d25\u5bfc\u81f4\u7684 \u9664\u6b64\u4e4b\u5916\uff0c PodStatus \u5bf9\u8c61\u4e2d\u8fd8\u5305\u542b\u4e00\u4e2a PodCondition \u7684\u6570\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u7684\u5c5e\u6027\u6709\uff1a lastProbeTime\uff1a\u6700\u540e\u4e00\u6b21\u63a2\u6d4b Pod Condition \u7684\u65f6\u95f4\u6233\u3002 lastTransitionTime\uff1a\u4e0a\u6b21 Condition \u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u65f6\u95f4\u3002 message\uff1a\u4e0a\u6b21 Condition \u72b6\u6001\u8f6c\u6362\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002 reason\uff1aCondition \u6700\u540e\u4e00\u6b21\u8f6c\u6362\u7684\u539f\u56e0\u3002 status\uff1aCondition \u72b6\u6001\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e3a \u201cTrue\u201d, \u201cFalse\u201d, and \u201cUnknown\u201d. type\uff1aCondition \u7c7b\u578b\uff0c\u5305\u62ec\u4ee5\u4e0b\u65b9\u9762\uff1a PodScheduled\uff08Pod \u5df2\u7ecf\u88ab\u8c03\u5ea6\u5230\u5176\u4ed6 node \u91cc\uff09 Ready\uff08Pod \u80fd\u591f\u63d0\u4f9b\u670d\u52a1\u8bf7\u6c42\uff0c\u53ef\u4ee5\u88ab\u6dfb\u52a0\u5230\u6240\u6709\u53ef\u5339\u914d\u670d\u52a1\u7684\u8d1f\u8f7d\u5e73\u8861\u6c60\u4e2d\uff09 Initialized\uff08\u6240\u6709\u7684 init containers \u5df2\u7ecf\u542f\u52a8\u6210\u529f\uff09 Unschedulable\uff08\u8c03\u5ea6\u7a0b\u5e8f\u73b0\u5728\u65e0\u6cd5\u8c03\u5ea6 Pod\uff0c\u4f8b\u5982\u7531\u4e8e\u7f3a\u4e4f\u8d44\u6e90\u6216\u5176\u4ed6\u9650\u5236\uff09 ContainersReady\uff08Pod \u91cc\u7684\u6240\u6709\u5bb9\u5668\u90fd\u662f ready \u72b6\u6001\uff09","title":"Pod \u72b6\u6001"},{"location":"Foundation/Pod%20lifeCycle/#_1","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e restartPolicy \u5b57\u6bb5\u6765\u8bbe\u7f6e Pod \u4e2d\u6240\u6709\u5bb9\u5668\u7684\u91cd\u542f\u7b56\u7565\uff0c\u5176\u53ef\u80fd\u503c\u4e3a Always\u3001OnFailure \u548c Never \uff0c\u9ed8\u8ba4\u503c\u4e3a Always\uff0crestartPolicy \u6307\u901a\u8fc7 kubelet \u5728\u540c\u4e00\u8282\u70b9\u4e0a\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u3002\u901a\u8fc7 kubelet \u91cd\u65b0\u542f\u52a8\u7684\u9000\u51fa\u5bb9\u5668\u5c06\u4ee5\u6307\u6570\u589e\u52a0\u5ef6\u8fdf\uff0810s\uff0c20s\uff0c40s\u2026\uff09\u91cd\u65b0\u542f\u52a8\uff0c\u4e0a\u9650\u4e3a 5 \u5206\u949f\uff0c\u5e76\u5728\u6210\u529f\u6267\u884c 10 \u5206\u949f\u540e\u91cd\u7f6e\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u63a7\u5236\u5668\u53ef\u4ee5\u63a7\u5236 Pod \u7684\u91cd\u542f\u7b56\u7565\uff1a Job \uff1a\u9002\u7528\u4e8e\u4e00\u6b21\u6027\u4efb\u52a1\u5982\u6279\u91cf\u8ba1\u7b97\uff0c\u4efb\u52a1\u7ed3\u675f\u540e Pod \u4f1a\u88ab\u6b64\u7c7b\u63a7\u5236\u5668\u6e05\u9664\u3002Job \u7684\u91cd\u542f\u7b56\u7565\u53ea\u80fd\u662f\"OnFailure\"\u6216\u8005\"Never\"\u3002 ReplicaSet\u3001Deployment \uff1a\u6b64\u7c7b\u63a7\u5236\u5668\u5e0c\u671b Pod \u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u5b83\u4eec\u7684\u91cd\u542f\u7b56\u7565\u53ea\u80fd\u662f\"Always\"\u3002 DaemonSet \uff1a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u542f\u52a8\u4e00\u4e2a Pod\uff0c\u5f88\u660e\u663e\u6b64\u7c7b\u63a7\u5236\u5668\u7684\u91cd\u542f\u7b56\u7565\u4e5f\u5e94\u8be5\u662f\"Always\"\u3002","title":"\u91cd\u542f\u7b56\u7565"},{"location":"Foundation/Pod%20lifeCycle/#_2","text":"\u4e86\u89e3\u4e86 Pod \u72b6\u6001\u540e\uff0c\u9996\u5148\u6765\u4e86\u89e3\u4e0b Pod \u4e2d\u6700\u65b0\u542f\u52a8\u7684 Init Container \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e73\u65f6\u5e38\u8bf4\u7684\u521d\u59cb\u5316\u5bb9\u5668\u3002 Init Container \u5c31\u662f\u7528\u6765\u505a\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\uff0c\u5982\u679c\u6709\u591a\u4e2a\u7684\u8bdd\uff0c\u8fd9\u4e9b\u5bb9\u5668\u4f1a\u6309\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002\u6211\u4eec\u77e5\u9053\u4e00\u4e2a Pod \u91cc\u9762\u7684\u6240\u6709\u5bb9\u5668\u662f\u5171\u4eab\u6570\u636e\u5377\u548c Network Namespace \u7684\uff0c\u6240\u4ee5 Init Container \u91cc\u9762\u4ea7\u751f\u7684\u6570\u636e\u53ef\u4ee5\u88ab\u4e3b\u5bb9\u5668\u4f7f\u7528\u5230\u3002\u4ece\u4e0a\u9762\u7684 Pod \u751f\u547d\u5468\u671f\u7684\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u521d\u59cb\u5316\u5bb9\u5668\u662f\u72ec\u7acb\u4e0e\u4e3b\u5bb9\u5668\u4e4b\u5916\u7684\uff0c\u53ea\u6709\u6240\u6709\u7684 \u521d\u59cb\u5316\u5bb9\u5668\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u4e3b\u5bb9\u5668\u624d\u4f1a\u88ab\u542f\u52a8\u3002\u90a3\u4e48\u521d\u59cb\u5316\u5bb9\u5668\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\u5462 \uff1a \u7b49\u5f85\u5176\u4ed6\u6a21\u5757 Ready\uff1a\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u670d\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a Web \u670d\u52a1\uff0c\u8be5\u670d\u52a1\u53c8\u4f9d\u8d56\u4e8e\u53e6\u5916\u4e00\u4e2a\u6570\u636e\u5e93\u670d\u52a1\uff0c\u4f46\u662f\u5728\u6211\u4eec\u542f\u52a8\u8fd9\u4e2a Web \u670d\u52a1\u7684\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4f9d\u8d56\u7684\u8fd9\u4e2a\u6570\u636e\u5e93\u670d\u52a1\u5c31\u5df2\u7ecf\u542f\u52a8\u8d77\u6765\u4e86\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u6bb5\u65f6\u95f4\u5185 Web \u670d\u52a1\u8fde\u63a5\u6570\u636e\u5e93\u5f02\u5e38\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Web \u670d\u52a1\u7684 Pod \u4e2d\u4f7f\u7528\u4e00\u4e2a InitContainer\uff0c\u5728\u8fd9\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u53bb\u68c0\u67e5\u6570\u636e\u5e93\u662f\u5426\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u51c6\u5907\u597d\u4e86\u8fc7\u540e\u521d\u59cb\u5316\u5bb9\u5668\u5c31\u7ed3\u675f\u9000\u51fa\uff0c\u7136\u540e\u6211\u4eec\u4e3b\u5bb9\u5668\u7684 Web \u670d\u52a1\u624d\u88ab\u542f\u52a8\u8d77\u6765\uff0c\u8fd9\u4e2a\u65f6\u5019\u53bb\u8fde\u63a5\u6570\u636e\u5e93\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u4e86\u3002 \u505a\u521d\u59cb\u5316\u914d\u7f6e\uff1a\u6bd4\u5982\u96c6\u7fa4\u91cc\u68c0\u6d4b\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u6210\u5458\u8282\u70b9\uff0c\u4e3a\u4e3b\u5bb9\u5668\u51c6\u5907\u597d\u96c6\u7fa4\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u6837\u4e3b\u5bb9\u5668\u8d77\u6765\u540e\u5c31\u80fd\u7528\u8fd9\u4e2a\u914d\u7f6e\u4fe1\u606f\u52a0\u5165\u96c6\u7fa4\u3002 \u5176\u5b83\u573a\u666f\uff1a\u5982\u5c06 Pod \u6ce8\u518c\u5230\u4e00\u4e2a\u4e2d\u592e\u6570\u636e\u5e93\u3001\u914d\u7f6e\u4e2d\u5fc3\u7b49\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u5728 Nginx Pod \u542f\u52a8\u4e4b\u524d\u53bb\u91cd\u65b0\u521d\u59cb\u5316\u9996\u9875\u5185\u5bb9\uff0c\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\uff1a\uff08init-pod.yaml\uff09 apiVersion : v1 kind : Pod metadata : name : init-demo spec : volumes : - name : workdir emptyDir : {} initContainers : - name : install image : busybox command : - wget - \"-O\" - \"/work-dir/index.html\" - http://www.baidu.com # https volumeMounts : - name : workdir mountPath : \"/work-dir\" containers : - name : web image : nginx ports : - containerPort : 80 volumeMounts : - name : workdir mountPath : /usr/share/nginx/html \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u6211\u4eec\u9996\u5148\u5728 Pod \u9876\u5c42\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a workdir \u7684 Volume \uff0c\u524d\u9762\u6211\u4eec\u7528\u4e86 hostPath \u7684\u6a21\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f emptyDir{} \uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u76ee\u5f55\uff0c\u6570\u636e\u4f1a\u4fdd\u5b58\u5728 kubelet \u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u9762\uff0c\u751f\u547d\u5468\u671f\u7b49\u540c\u4e8e Pod \u7684\u751f\u547d\u5468\u671f\u3002 \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\uff0c\u8be5\u5bb9\u5668\u4f1a\u4e0b\u8f7d\u4e00\u4e2a html \u6587\u4ef6\u5230 /work-dir \u76ee\u5f55\u4e0b\u9762\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u53c8\u5c06\u8be5\u76ee\u5f55\u58f0\u660e\u6302\u8f7d\u5230\u4e86\u5168\u5c40\u7684 Volume\uff0c\u540c\u6837\u7684\u4e3b\u5bb9\u5668 nginx \u4e5f\u5c06\u76ee\u5f55 /usr/share/nginx/html \u58f0\u660e\u6302\u8f7d\u5230\u4e86\u5168\u5c40\u7684 Volume\uff0c\u6240\u4ee5\u5728\u4e3b\u5bb9\u5668\u7684\u8be5\u76ee\u5f55\u4e0b\u9762\u4f1a\u540c\u6b65\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u521b\u5efa\u7684 index.html \u6587\u4ef6\u3002 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f init-pod.yaml \u521b\u5efa\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b\u8be5 Pod \u7684\u72b6\u6001\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE init-demo 0 /1 Init:0/1 0 4s \u53ef\u4ee5\u53d1\u73b0 Pod \u73b0\u5728\u7684\u72b6\u6001\u5904\u4e8e Init:0/1 \u72b6\u6001\uff0c\u610f\u601d\u5c31\u662f\u73b0\u5728\u7b2c\u4e00\u4e2a\u521d\u59cb\u5316\u5bb9\u5668\u8fd8\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u67e5\u770b Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a \u279c ~ kubectl describe pod init-demo Name: init-demo Namespace: default Priority: 0 Node: node1/192.168.31.108 Start Time: Mon, 01 Nov 2021 18 :58:40 +0800 Labels: <none> Annotations: <none> Status: Running IP: 10 .244.1.10 IPs: IP: 10 .244.1.10 Init Containers: install: Container ID: containerd://ca0020473b613729e4c853cd0c163023677a631432531ceacbb1aed1ae65bea9 Image: busybox Image ID: docker.io/library/busybox@sha256:15e927f78df2cc772b70713543d6b651e3cd8370abf86b2ea4644a9fba21107f Port: <none> Host Port: <none> Command: wget -O /work-dir/index.html http://www.baidu.com State: Terminated Reason: Completed Exit Code: 0 Started: Mon, 01 Nov 2021 18 :58:43 +0800 Finished: Mon, 01 Nov 2021 18 :58:43 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-htmjf ( ro ) /work-dir from workdir ( rw ) Containers: web: Container ID: containerd://18f08b312af9c464f8cc1313b82cfaf05d1910c8dc35d91dddd2810a184a0bfd Image: nginx Image ID: docker.io/library/nginx@sha256:644a70516a26004c97d0d85c7fe1d0c3a67ea8ab7ddf4aff193d9f301670cf36 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Mon, 01 Nov 2021 18 :58:59 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /usr/share/nginx/html from workdir ( rw ) /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-htmjf ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: workdir: Type: EmptyDir ( a temporary directory that shares a pod ' s lifetime ) Medium: SizeLimit: <unset> kube-api-access-htmjf: Type: Projected ( a volume that contains injected data from multiple sources ) TokenExpirationSeconds: 3607 ConfigMapName: kube-root-ca.crt ConfigMapOptional: <nil> DownwardAPI: true QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute op = Exists for 300s node.kubernetes.io/unreachable:NoExecute op = Exists for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 34s default-scheduler Successfully assigned default/init-demo to node1 Normal Pulling 35s kubelet Pulling image \"busybox\" Normal Pulled 32s kubelet Successfully pulled image \"busybox\" in 2 .655408135s Normal Created 32s kubelet Created container install Normal Started 32s kubelet Started container install Normal Pulling 31s kubelet Pulling image \"nginx\" Normal Pulled 16s kubelet Successfully pulled image \"nginx\" in 15 .385097955s Normal Created 16s kubelet Created container web Normal Started 16s kubelet Started container web \u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u4fe1\u606f\u91cc\u9762\u53ef\u4ee5\u770b\u5230\u521d\u59cb\u5316\u5bb9\u5668\u5df2\u7ecf\u542f\u52a8\u4e86\uff0c\u73b0\u5728\u5904\u4e8e Running \u72b6\u6001\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u7a0d\u7b49\uff0c\u5230\u521d\u59cb\u5316\u5bb9\u5668\u6267\u884c\u5b8c\u6210\u540e\u9000\u51fa\u521d\u59cb\u5316\u5bb9\u5668\u4f1a\u53d8\u6210 Completed \u72b6\u6001\uff0c\u7136\u540e\u624d\u4f1a\u542f\u52a8\u4e3b\u5bb9\u5668\u3002\u5f85\u5230\u4e3b\u5bb9\u5668\u4e5f\u542f\u52a8\u5b8c\u6210\u540e\uff0cPod \u5c31\u4f1a\u53d8\u6210 Running \u72b6\u6001\uff0c\u7136\u540e\u6211\u4eec\u53bb\u8bbf\u95ee\u4e0b Pod \u4e3b\u9875\uff0c\u9a8c\u8bc1\u4e0b\u662f\u5426\u6709\u6211\u4eec\u521d\u59cb\u5316\u5bb9\u5668\u4e2d\u4e0b\u8f7d\u7684\u9875\u9762\u4fe1\u606f\uff1a \u279c ~ kubectl get pods -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES init-demo 1 /1 Running 0 70s 10 .244.1.10 node1 <none> <none> \u279c ~ curl 10 .244.1.10 <!DOCTYPE html> <!--STATUS OK--><html> <head><meta http-equiv = content-type content = text/html ; charset = utf-8><meta http-equiv = X-UA-Compatible content = IE = Edge><meta content = always name = referrer><link rel = stylesheet type = text/css href = http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css><title>\u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053</title></head> <body link = #0000cc> <div id=wrapper> <div id=head> <div class=head_wrapper> <div class=s_form> <div class=s_form_wrapper> <div id=lg> <img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129> </div> <form id=form name=f action=//www.baidu.com/s class=fm> <input type=hidden name=bdorz_come value=1> <input type=hidden name=ie value=utf-8> <input type=hidden name=f value=8> <input type=hidden name=rsv_bp value=1> <input type=hidden name=rsv_idx value=1> <input type=hidden name=tn value=baidu><span class=\"bg s_ipt_wr\"><input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus></span><span class=\"bg s_btn_wr\"><input type=submit id=su value=\u767e\u5ea6\u4e00\u4e0b class=\"bg s_btn\"></span> </form> </div> </div> <div id=u1> <a href=http://news.baidu.com name=tj_trnews class=mnav>\u65b0\u95fb</a> <a href=http://www.hao123.com name=tj_trhao123 class=mnav>hao123</a> <a href=http://map.baidu.com name=tj_trmap class=mnav>\u5730\u56fe</a> <a href=http://v.baidu.com name=tj_trvideo class=mnav>\u89c6\u9891</a> <a href=http://tieba.baidu.com name=tj_trtieba class=mnav>\u8d34\u5427</a> <noscript> <a href=http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb>\u767b\u5f55</a> </noscript> <script>document.write('<a href=\"http://www.baidu.com/bdorz/login.gif?login&tpl=mn&u='+ encodeURIComponent(window.location.href+ (window.location.search === \"\" ? \"?\" : \"&\")+ \"bdorz_come=1\")+ '\" name=\"tj_login\" class=\"lb\">\u767b\u5f55</a>');</script> <a href=//www.baidu.com/more/ name=tj_briicon class=bri style=\"display: block;\">\u66f4\u591a\u4ea7\u54c1</a> </div> </div> </div> <div id=ftCon> <div id=ftConw> <p id=lh> <a href=http://home.baidu.com>\u5173\u4e8e\u767e\u5ea6</a> <a href=http://ir.baidu.com>About Baidu</a> </p> <p id=cp>&copy;2017&nbsp;Baidu&nbsp;<a href=http://www.baidu.com/duty/>\u4f7f\u7528\u767e\u5ea6\u524d\u5fc5\u8bfb</a>&nbsp; <a href=http://jianyi.baidu.com/ class=cp-feedback>\u610f\u89c1\u53cd\u9988</a>&nbsp;\u4eacICP\u8bc1030173\u53f7&nbsp; <img src=//www.baidu.com/img/gs.gif> </p> </div> </div> </div> </body> </html>","title":"\u521d\u59cb\u5316\u5bb9\u5668"},{"location":"Foundation/Pod%20lifeCycle/#pod-hook","text":"\u6211\u4eec\u77e5\u9053 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u800c Pod \u662f\u7531\u5bb9\u5668\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u5728\u8ba8\u8bba Pod \u7684\u751f\u547d\u5468\u671f\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u8ba8\u8bba\u4e0b\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u3002\u5b9e\u9645\u4e0a Kubernetes \u4e3a\u6211\u4eec\u7684\u5bb9\u5668\u63d0\u4f9b\u4e86\u751f\u547d\u5468\u671f\u7684\u94a9\u5b50\uff0c\u5c31\u662f\u6211\u4eec\u8bf4\u7684 Pod Hook \uff0cPod Hook \u662f\u7531 kubelet \u53d1\u8d77\u7684\uff0c\u5f53\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u542f\u52a8\u524d\u6216\u8005\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u7ec8\u6b62\u4e4b\u524d\u8fd0\u884c\uff0c\u8fd9\u662f\u5305\u542b\u5728\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u4e4b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4e3a Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u914d\u7f6e hook\u3002 Kubernetes \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u79cd\u94a9\u5b50\u51fd\u6570\uff1a PostStart \uff1a\u8fd9\u4e2a\u94a9\u5b50\u5728\u5bb9\u5668\u521b\u5efa\u540e\u7acb\u5373\u6267\u884c\u3002\u4f46\u662f\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u94a9\u5b50\u5c06\u5728\u5bb9\u5668 ENTRYPOINT \u4e4b\u524d\u8fd0\u884c\uff0c\u56e0\u4e3a\u6ca1\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u3002\u4e3b\u8981\u7528\u4e8e\u8d44\u6e90\u90e8\u7f72\u3001\u73af\u5883\u51c6\u5907\u7b49\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u94a9\u5b50\u82b1\u8d39\u592a\u957f\u65f6\u95f4\u4ee5\u81f3\u4e8e\u4e0d\u80fd\u8fd0\u884c\u6216\u8005\u6302\u8d77\uff0c\u5bb9\u5668\u5c06\u4e0d\u80fd\u8fbe\u5230 running \u72b6\u6001\u3002 PreStop \uff1a\u8fd9\u4e2a\u94a9\u5b50\u5728\u5bb9\u5668\u7ec8\u6b62\u4e4b\u524d\u7acb\u5373\u88ab\u8c03\u7528\u3002\u5b83\u662f\u963b\u585e\u7684\uff0c\u610f\u5473\u7740\u5b83\u662f\u540c\u6b65\u7684\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u5728\u5220\u9664\u5bb9\u5668\u7684\u8c03\u7528\u53d1\u51fa\u4e4b\u524d\u5b8c\u6210\u3002\u4e3b\u8981\u7528\u4e8e\u4f18\u96c5\u5173\u95ed\u5e94\u7528\u7a0b\u5e8f\u3001\u901a\u77e5\u5176\u4ed6\u7cfb\u7edf\u7b49\u3002\u5982\u679c\u94a9\u5b50\u5728\u6267\u884c\u671f\u95f4\u6302\u8d77\uff0cPod \u9636\u6bb5\u5c06\u505c\u7559\u5728 running \u72b6\u6001\u5e76\u4e14\u6c38\u4e0d\u4f1a\u8fbe\u5230 failed \u72b6\u6001\u3002 \u5982\u679c PostStart \u6216\u8005 PreStop \u94a9\u5b50\u5931\u8d25\uff0c \u5b83\u4f1a\u6740\u6b7b\u5bb9\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8ba9\u94a9\u5b50\u51fd\u6570\u5c3d\u53ef\u80fd\u7684\u8f7b\u91cf\u3002\u5f53\u7136\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u957f\u65f6\u95f4\u8fd0\u884c\u547d\u4ee4\u662f\u5408\u7406\u7684\uff0c \u6bd4\u5982\u5728\u505c\u6b62\u5bb9\u5668\u4e4b\u524d\u9884\u5148\u4fdd\u5b58\u72b6\u6001\u3002 \u53e6\u5916\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0a\u9762\u7684\u94a9\u5b50\u51fd\u6570\uff1a Exec - \u7528\u4e8e\u6267\u884c\u4e00\u6bb5\u7279\u5b9a\u7684\u547d\u4ee4\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\u8be5\u547d\u4ee4\u6d88\u8017\u7684\u8d44\u6e90\u4f1a\u88ab\u8ba1\u5165\u5bb9\u5668\u3002 HTTP - \u5bf9\u5bb9\u5668\u4e0a\u7684\u7279\u5b9a\u7684\u7aef\u70b9\u6267\u884c HTTP \u8bf7\u6c42\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Nginx Pod\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86 PostStart \u94a9\u5b50\u51fd\u6570\uff0c\u5373\u5728\u5bb9\u5668\u521b\u5efa\u6210\u529f\u540e\uff0c\u5199\u5165\u4e00\u53e5\u8bdd\u5230 /usr/share/message \u6587\u4ef6\u4e2d\uff1a # pod-poststart.yaml apiVersion : v1 kind : Pod metadata : name : hook-demo1 spec : containers : - name : hook-demo1 image : nginx lifecycle : postStart : exec : command : [ \"/bin/sh\" , \"-c\" , \"echo Hello from the postStart handler > /usr/share/message\" ] \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f pod-poststart.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE hook-demo1 1 /1 Running 0 26s \u521b\u5efa\u6210\u529f\u540e\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u4e2d /usr/share/message \u6587\u4ef6\u662f\u5426\u5185\u5bb9\u6b63\u786e\uff1a \u279c ~ kubectl exec -it hook-demo1 -- cat /usr/share/message Hello from the postStart handler \u5f53\u7528\u6237\u8bf7\u6c42\u5220\u9664\u542b\u6709 Pod \u7684\u8d44\u6e90\u5bf9\u8c61\u65f6\uff08\u5982 Deployment \u7b49\uff09\uff0cK8S \u4e3a\u4e86\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f18\u96c5\u5173\u95ed\uff08\u5373\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5b8c\u6210\u6b63\u5728\u5904\u7406\u7684\u8bf7\u6c42\u540e\uff0c\u518d\u5173\u95ed\u8f6f\u4ef6\uff09\uff0cK8S \u63d0\u4f9b\u4e24\u79cd\u4fe1\u606f\u901a\u77e5\uff1a \u9ed8\u8ba4\uff1aK8S \u901a\u77e5 node \u6267\u884c\u5bb9\u5668 stop \u547d\u4ee4\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f1a\u5148\u5411\u5bb9\u5668\u4e2d PID \u4e3a 1 \u7684\u8fdb\u7a0b\u53d1\u9001\u7cfb\u7edf\u4fe1\u53f7 SIGTERM \uff0c\u7136\u540e\u7b49\u5f85\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u7ec8\u6b62\u6267\u884c\uff0c\u5982\u679c\u7b49\u5f85\u65f6\u95f4\u8fbe\u5230\u8bbe\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u6216\u8005\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\uff0830s\uff09\uff0c\u4f1a\u7ee7\u7eed\u53d1\u9001 SIGKILL \u7684\u7cfb\u7edf\u4fe1\u53f7\u5f3a\u884c kill \u6389\u8fdb\u7a0b \u4f7f\u7528 Pod \u751f\u547d\u5468\u671f\uff08\u5229\u7528 PreStop \u56de\u8c03\u51fd\u6570\uff09\uff0c\u5b83\u5728\u53d1\u9001\u7ec8\u6b62\u4fe1\u53f7\u4e4b\u524d\u6267\u884c \u9ed8\u8ba4\u6240\u6709\u7684\u4f18\u96c5\u9000\u51fa\u65f6\u95f4\u90fd\u572830\u79d2\u5185\uff0c kubectl delete \u547d\u4ee4\u652f\u6301 --grace-period=<seconds> \u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u5141\u8bb8\u7528\u6237\u7528\u4ed6\u4eec\u81ea\u5df1\u6307\u5b9a\u7684\u503c\u8986\u76d6\u9ed8\u8ba4\u503c\uff0c\u503c0\u4ee3\u8868\u5f3a\u5236\u5220\u9664 pod\u3002 \u5728 kubectl 1.5 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u91cc\uff0c\u6267\u884c\u5f3a\u5236\u5220\u9664\u65f6\u5fc5\u987b\u540c\u65f6\u6307\u5b9a --force --grace-period=0 \u3002 \u5f3a\u5236\u5220\u9664\u4e00\u4e2a pod \u662f\u4ece\u96c6\u7fa4\u4e2d\u8fd8\u6709 etcd \u91cc\u7acb\u523b\u5220\u9664\u8fd9\u4e2a pod\uff0c\u53ea\u662f\u5f53 Pod \u88ab\u5f3a\u5236\u5220\u9664\u65f6\uff0c APIServer \u4e0d\u4f1a\u7b49\u5f85\u6765\u81ea Pod \u6240\u5728\u8282\u70b9\u4e0a\u7684 kubelet \u7684\u786e\u8ba4\u4fe1\u606f\uff1apod \u5df2\u7ecf\u88ab\u7ec8\u6b62\u3002\u5728 API \u91cc pod \u4f1a\u88ab\u7acb\u523b\u5220\u9664\uff0c\u5728\u8282\u70b9\u4e0a\uff0c pods \u88ab\u8bbe\u7f6e\u6210\u7acb\u523b\u7ec8\u6b62\u540e\uff0c\u5728\u5f3a\u884c\u6740\u6389\u524d\u8fd8\u4f1a\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u5bbd\u9650\u671f\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Nginx Pod\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86 PreStop \u94a9\u5b50\u51fd\u6570\uff0c\u5373\u5728\u5bb9\u5668\u9000\u51fa\u4e4b\u524d\uff0c\u4f18\u96c5\u7684\u5173\u95ed Nginx\uff1a # pod-prestop.yaml apiVersion : v1 kind : Pod metadata : name : hook-demo2 spec : containers : - name : hook-demo2 image : nginx lifecycle : preStop : exec : command : [ \"/usr/sbin/nginx\" , \"-s\" , \"quit\" ] # \u4f18\u96c5\u9000\u51fa --- apiVersion : v1 kind : Pod metadata : name : hook-demo3 spec : volumes : - name : message hostPath : path : /tmp containers : - name : hook-demo2 image : nginx ports : - containerPort : 80 volumeMounts : - name : message mountPath : /usr/share/ lifecycle : preStop : exec : command : [ '/bin/sh' , '-c' , 'echo Hello from the preStop Handler > /usr/share/message' ] \u4e0a\u9762\u5b9a\u4e49\u7684\u4e24\u4e2a Pod\uff0c\u4e00\u4e2a\u662f\u5229\u7528 preStop \u6765\u8fdb\u884c\u4f18\u96c5\u5220\u9664\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5229\u7528 preStop \u6765\u505a\u4e00\u4e9b\u4fe1\u606f\u8bb0\u5f55\u7684\u4e8b\u60c5\uff0c\u540c\u6837\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Pod\uff1a \u279c ~ kubectl apply -f pod-prestop.yaml \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE hook-demo2 1 /1 Running 0 20s hook-demo3 1 /1 Running 0 20s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5220\u9664 hook-demo2 \u8fd9\u4e2a Pod\uff0c\u5728\u5bb9\u5668\u5220\u9664\u4e4b\u524d\u4f1a\u6267\u884c preStop \u91cc\u9762\u7684\u4f18\u96c5\u5173\u95ed\u547d\u4ee4\uff0c\u8fd9\u4e2a\u7528\u6cd5\u5728\u540e\u9762\u6211\u4eec\u7684\u6eda\u52a8\u66f4\u65b0\u7684\u65f6\u5019\u7528\u6765\u4fdd\u8bc1\u6211\u4eec\u7684\u5e94\u7528\u96f6\u5b95\u673a\u975e\u5e38\u6709\u7528\u3002\u7b2c\u4e8c\u4e2a Pod \u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a hostPath \u7c7b\u578b\u7684 Volume\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u58f0\u660e\u6302\u8f7d\u5230\u4e86\u8fd9\u4e2a Volume\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5220\u9664 Pod\uff0c\u9000\u51fa\u5bb9\u5668\u4e4b\u524d\uff0c\u5728\u5bb9\u5668\u91cc\u9762\u8f93\u51fa\u7684\u4fe1\u606f\u4e5f\u4f1a\u540c\u6837\u7684\u4fdd\u5b58\u5230\u5bbf\u4e3b\u673a\uff08\u4e00\u5b9a\u8981\u662f Pod \u88ab\u8c03\u5ea6\u5230\u7684\u76ee\u6807\u8282\u70b9\uff09\u7684 /tmp \u76ee\u5f55\u4e0b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b hook-demo3 \u8fd9\u4e2a Pod \u88ab\u8c03\u5ea6\u7684\u8282\u70b9\uff1a \u279c ~ kubectl describe pod hook-demo3 Name: hook-demo3 Namespace: default Priority: 0 Node: node1/192.168.31.108 ...... \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u88ab\u8c03\u5ea6\u5230\u4e86 node1 \u8fd9\u4e2a\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5230\u8be5\u8282\u70b9\u4e0a\u67e5\u770b /tmp \u76ee\u5f55\u4e0b\u9762\u76ee\u524d\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\uff1a \u279c ~ ls /tmp/ \u73b0\u5728\u6211\u4eec\u6765\u5220\u9664 hook-demo3 \u8fd9\u4e2a Pod\uff0c\u5b89\u88c5\u6211\u4eec\u7684\u8bbe\u5b9a\u5728\u5bb9\u5668\u9000\u51fa\u4e4b\u524d\u4f1a\u6267\u884c preStop \u91cc\u9762\u7684\u547d\u4ee4\uff0c\u4e5f\u5c31\u662f\u4f1a\u5f80 message \u6587\u4ef6\u4e2d\u8f93\u51fa\u4e00\u4e9b\u4fe1\u606f\uff1a \u279c ~ kubectl delete pod hook-demo3 pod \"hook-demo3\" deleted \u279c ~ ls /tmp/ message \u279c ~ cat /tmp/message Hello from the preStop Handler \u53e6\u5916 Hook \u8c03\u7528\u7684\u65e5\u5fd7\u6ca1\u6709\u66b4\u9732\u7ed9 Pod\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7 describe \u547d\u4ee4\u6765\u83b7\u53d6\uff0c\u5982\u679c\u6709\u9519\u8bef\u5c06\u53ef\u4ee5\u770b\u5230 FailedPostStartHook \u6216 FailedPreStopHook \u8fd9\u6837\u7684 event\u3002","title":"Pod Hook"},{"location":"Foundation/Pod%20lifeCycle/#pod_2","text":"\u73b0\u5728\u5728 Pod \u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\uff0c\u80fd\u5f71\u54cd\u5230 Pod \u7684\u5c31\u53ea\u5269\u4e0b\u5065\u5eb7\u68c0\u67e5\u8fd9\u4e00\u90e8\u5206\u4e86\u3002\u5728 Kubernetes \u96c6\u7fa4\u5f53\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e liveness probe\uff08\u5b58\u6d3b\u63a2\u9488\uff09 \u548c readiness probe\uff08\u53ef\u8bfb\u6027\u63a2\u9488\uff09 \u6765\u5f71\u54cd\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff1a kubelet \u901a\u8fc7\u4f7f\u7528 liveness probe \u6765\u786e\u5b9a\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u901a\u4fd7\u70b9\u5c06\u5c31\u662f\u662f\u5426\u8fd8\u6d3b\u7740\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u4e00\u65e6\u5d29\u6e83\u4e86\uff0c Kubernetes \u5c31\u4f1a\u7acb\u523b\u77e5\u9053\u8fd9\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u7ec8\u6b62\u4e86\uff0c\u7136\u540e\u5c31\u4f1a\u91cd\u542f\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u800c\u6211\u4eec\u7684 liveness probe \u7684\u76ee\u7684\u5c31\u662f\u6765\u6355\u83b7\u5230\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u7ec8\u6b62\uff0c\u8fd8\u6ca1\u6709\u5d29\u6e83\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u4e9b\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u91cd\u542f\u5904\u4e8e\u8be5\u72b6\u6001\u4e0b\u7684\u5bb9\u5668\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5728\u5b58\u5728 bug \u7684\u60c5\u51b5\u4e0b\u4f9d\u7136\u80fd\u591f\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\u3002 kubelet \u4f7f\u7528 readiness probe \u6765\u786e\u5b9a\u5bb9\u5668\u662f\u5426\u5df2\u7ecf\u5c31\u7eea\u53ef\u4ee5\u63a5\u6536\u6d41\u91cf\u8fc7\u6765\u4e86\u3002\u8fd9\u4e2a\u63a2\u9488\u901a\u4fd7\u70b9\u8bb2\u5c31\u662f\u8bf4\u662f\u5426\u51c6\u5907\u597d\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002\u53ea\u6709\u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u90fd\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u7684\u65f6\u5019 kubelet \u624d\u4f1a\u8ba4\u5b9a\u8be5 Pod \u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u56e0\u4e3a\u4e00\u4e2a Pod \u4e0b\u9762\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5bb9\u5668\u3002\u5f53\u7136 Pod \u5982\u679c\u5904\u4e8e\u975e\u5c31\u7eea\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u5c06\u4ed6\u4ece Service \u7684 Endpoints \u5217\u8868\u4e2d\u79fb\u9664\u51fa\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u6d41\u91cf\u5c31\u4e0d\u4f1a\u88ab\u8def\u7531\u5230\u8fd9\u4e2a Pod \u91cc\u9762\u6765\u4e86\u3002 \u548c\u524d\u9762\u7684\u94a9\u5b50\u51fd\u6570\u4e00\u6837\u7684\uff0c\u6211\u4eec\u8fd9\u4e24\u4e2a\u63a2\u9488\u7684\u652f\u6301\u4e0b\u9762\u51e0\u79cd\u914d\u7f6e\u65b9\u5f0f\uff1a exec\uff1a\u6267\u884c\u4e00\u6bb5\u547d\u4ee4 http\uff1a\u68c0\u6d4b\u67d0\u4e2a http \u8bf7\u6c42 tcpSocket\uff1a\u4f7f\u7528\u6b64\u914d\u7f6e\uff0ckubelet \u5c06\u5c1d\u8bd5\u5728\u6307\u5b9a\u7aef\u53e3\u4e0a\u6253\u5f00\u5bb9\u5668\u7684\u5957\u63a5\u5b57\u3002\u5982\u679c\u53ef\u4ee5\u5efa\u7acb\u8fde\u63a5\uff0c\u5bb9\u5668\u88ab\u8ba4\u4e3a\u662f\u5065\u5eb7\u7684\uff0c\u5982\u679c\u4e0d\u80fd\u5c31\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u68c0\u67e5\u7aef\u53e3\u3002 \u6211\u4eec\u5148\u6765\u7ed9\u5927\u5bb6\u6f14\u793a\u4e0b\u5b58\u6d3b\u63a2\u9488\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u7528 exec \u6267\u884c\u547d\u4ee4\u7684\u65b9\u5f0f\u6765\u68c0\u6d4b\u5bb9\u5668\u7684\u5b58\u6d3b\uff0c\u5982\u4e0b\uff1a # liveness-exec.yaml apiVersion : v1 kind : Pod metadata : name : liveness-exec spec : containers : - name : liveness image : busybox args : - /bin/sh - -c - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600 livenessProbe : exec : command : - cat - /tmp/healthy initialDelaySeconds : 5 periodSeconds : 5 \u6211\u4eec\u8fd9\u91cc\u9700\u8981\u7528\u5230\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027 livenessProbe \uff0c\u4e0b\u9762\u901a\u8fc7 exec \u6267\u884c\u4e00\u6bb5\u547d\u4ee4: periodSeconds \uff1a\u8868\u793a\u8ba9 kubelet \u6bcf\u96945\u79d2\u6267\u884c\u4e00\u6b21\u5b58\u6d3b\u63a2\u9488\uff0c\u4e5f\u5c31\u662f\u6bcf5\u79d2\u6267\u884c\u4e00\u6b21\u4e0a\u9762\u7684 cat /tmp/healthy \u547d\u4ee4\uff0c\u5982\u679c\u547d\u4ee4\u6267\u884c\u6210\u529f\u4e86\uff0c\u5c06\u8fd4\u56de0\uff0c\u90a3\u4e48 kubelet \u5c31\u4f1a\u8ba4\u4e3a\u5f53\u524d\u8fd9\u4e2a\u5bb9\u5668\u662f\u5b58\u6d3b\u7684\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662f\u975e0\u503c\uff0c\u90a3\u4e48 kubelet \u5c31\u4f1a\u628a\u8be5\u5bb9\u5668\u6740\u6389\u7136\u540e\u91cd\u542f\u5b83\u3002\u9ed8\u8ba4\u662f10\u79d2\uff0c\u6700\u5c0f1\u79d2\u3002 initialDelaySeconds \uff1a\u8868\u793a\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7684\u65f6\u5019\u8981\u7b49\u5f855\u79d2\uff0c\u8fd9\u6837\u80fd\u591f\u786e\u4fdd\u6211\u4eec\u7684\u5bb9\u5668\u80fd\u591f\u6709\u8db3\u591f\u7684\u65f6\u95f4\u542f\u52a8\u8d77\u6765\u3002\u5927\u5bb6\u53ef\u4ee5\u60f3\u8c61\u4e0b\uff0c\u5982\u679c\u4f60\u7684\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7b49\u5019\u7684\u65f6\u95f4\u592a\u77ed\uff0c\u662f\u4e0d\u662f\u5f88\u6709\u53ef\u80fd\u5bb9\u5668\u8fd8\u6ca1\u6b63\u5e38\u542f\u52a8\u8d77\u6765\uff0c\u6240\u4ee5\u5b58\u6d3b\u63a2\u9488\u5f88\u53ef\u80fd\u59cb\u7ec8\u90fd\u662f\u5931\u8d25\u7684\uff0c\u8fd9\u6837\u5c31\u4f1a\u65e0\u4f11\u6b62\u7684\u91cd\u542f\u4e0b\u53bb\u4e86\uff0c\u5bf9\u5427\uff1f \u6211\u4eec\u5728\u5bb9\u5668\u542f\u52a8\u7684\u65f6\u5019\uff0c\u6267\u884c\u4e86\u5982\u4e0b\u547d\u4ee4\uff1a /bin/sh -c \"touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600\" \u610f\u601d\u662f\u8bf4\u5728\u5bb9\u5668\u6700\u5f00\u59cb\u768430\u79d2\u5185\u521b\u5efa\u4e86\u4e00\u4e2a /tmp/healthy \u6587\u4ef6\uff0c\u5728\u8fd930\u79d2\u5185\u6267\u884c cat /tmp/healthy \u547d\u4ee4\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u7684\u8fd4\u56de\u7801\u300230 \u79d2\u540e\uff0c\u6211\u4eec\u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\uff0c\u73b0\u5728\u6267\u884c cat /tmp/healthy \u662f\u4e0d\u662f\u5c31\u4f1a\u5931\u8d25\u4e86\uff08\u9ed8\u8ba4\u68c0\u6d4b\u5931\u8d253\u6b21\u624d\u8ba4\u4e3a\u5931\u8d25\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u91cd\u542f\u5bb9\u5668\u4e86\u3002 \u6211\u4eec\u6765\u521b\u5efa\u4e0b\u8be5 Pod\uff0c\u7136\u540e\u5728 30 \u79d2\u5185\uff0c\u67e5\u770b Pod \u7684 Event\uff1a \u279c ~ kubectl apply -f liveness-exec.yaml \u279c ~ kubectl describe pod liveness-exec Name: liveness-exec Namespace: default ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 68s default-scheduler Successfully assigned default/liveness-exec to node1 Normal Pulling 68s kubelet Pulling image \"busybox\" Normal Pulled 52s kubelet Successfully pulled image \"busybox\" in 15 .352808024s Normal Created 52s kubelet Created container liveness Normal Started 52s kubelet Started container liveness Warning Unhealthy 8s ( x3 over 18s ) kubelet Liveness probe failed: cat: can 't open ' /tmp/healthy ' : No such file or directory Normal Killing 8s kubelet Container liveness failed liveness probe, will be restarted \u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5bb9\u5668\u662f\u6b63\u5e38\u542f\u52a8\u7684\uff0c\u5728\u9694\u4e00\u4f1a\u513f\uff0c\u6bd4\u5982 40s \u540e\uff0c\u518d\u67e5\u770b\u4e0b Pod \u7684 Event\uff0c\u5728\u6700\u4e0b\u9762\u6709\u4e00\u6761\u4fe1\u606f\u663e\u793a liveness probe \u5931\u8d25\u4e86\uff0c\u5bb9\u5668\u5c06\u8981\u91cd\u542f\u3002\u7136\u540e\u53ef\u4ee5\u67e5\u770b\u5230 Pod \u7684 RESTARTS \u503c\u52a0 1 \u4e86\uff1a \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE liveness-exec 1 /1 Running 1 ( 16s ago ) 106s \u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 HTTP GET \u8bf7\u6c42\u6765\u914d\u7f6e\u6211\u4eec\u7684\u5b58\u6d3b\u63a2\u9488\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a liveness \u955c\u50cf\u6765\u9a8c\u8bc1\u6f14\u793a\u4e0b\uff1a # liveness-http.yaml apiVersion : v1 kind : Pod metadata : name : liveness-http spec : containers : - name : liveness image : cnych/liveness args : - /server livenessProbe : httpGet : path : /healthz port : 8080 httpHeaders : - name : X-Custom-Header value : Awesome initialDelaySeconds : 3 periodSeconds : 3 \u540c\u6837\u7684\uff0c\u6839\u636e periodSeconds \u5c5e\u6027\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 kubelet \u9700\u8981\u6bcf\u96943\u79d2\u6267\u884c\u4e00\u6b21 liveness Probe \uff0c\u8be5\u63a2\u9488\u5c06\u5411\u5bb9\u5668\u4e2d\u7684 server \u7684 8080 \u7aef\u53e3\u53d1\u9001\u4e00\u4e2a HTTP GET \u8bf7\u6c42\u3002\u5982\u679c server \u7684 /healthz \u8def\u5f84\u7684 handler \u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u7684\u8fd4\u56de\u7801\uff0ckubelet \u5c31\u4f1a\u8ba4\u5b9a\u8be5\u5bb9\u5668\u662f\u6d3b\u7740\u7684\u5e76\u4e14\u5f88\u5065\u5eb7\uff0c\u5982\u679c\u8fd4\u56de\u5931\u8d25\u7684\u8fd4\u56de\u7801\uff0ckubelet \u5c06\u6740\u6389\u8be5\u5bb9\u5668\u5e76\u91cd\u542f\u5b83\u3002initialDelaySeconds \u6307\u5b9akubelet \u5728\u8be5\u6267\u884c\u7b2c\u4e00\u6b21\u63a2\u6d4b\u4e4b\u524d\u9700\u8981\u7b49\u5f853\u79d2\u949f\u3002 \u8fd4\u56de\u7801 \u901a\u5e38\u6765\u8bf4\uff0c\u4efb\u4f55\u5927\u4e8e 200 \u5c0f\u4e8e 400 \u7684\u72b6\u6001\u7801\u90fd\u4f1a\u8ba4\u5b9a\u662f\u6210\u529f\u7684\u8fd4\u56de\u7801\u3002\u5176\u4ed6\u8fd4\u56de\u7801\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u8fd4\u56de\u7801\u3002 \u6211\u4eec\u53ef\u4ee5\u6765\u67e5\u770b\u4e0b\u4e0a\u9762\u7684 healthz \u7684\u5b9e\u73b0\uff1a http . HandleFunc ( \"/healthz\" , func ( w http . ResponseWriter , r * http . Request ) { duration := time . Now (). Sub ( started ) if duration . Seconds () > 10 { w . WriteHeader ( 500 ) w . Write ([] byte ( fmt . Sprintf ( \"error: %v\" , duration . Seconds ()))) } else { w . WriteHeader ( 200 ) w . Write ([] byte ( \"ok\" )) } }) \u5927\u6982\u610f\u601d\u5c31\u662f\u6700\u5f00\u59cb\u524d 10s \u8fd4\u56de\u72b6\u6001\u7801200\uff0c10s \u8fc7\u540e\u5c31\u8fd4\u56de\u72b6\u6001\u7801500\u3002\u6240\u4ee5\u5f53\u5bb9\u5668\u542f\u52a83\u79d2\u540e\uff0ckubelet \u5f00\u59cb\u6267\u884c\u5065\u5eb7\u68c0\u67e5\u3002\u7b2c\u4e00\u6b21\u5065\u5eb7\u68c0\u67e5\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a\u662f\u5728 10s \u4e4b\u5185\uff0c\u4f46\u662f 10 \u79d2\u540e\uff0c\u5065\u5eb7\u68c0\u67e5\u5c06\u5931\u8d25\uff0c\u56e0\u4e3a\u73b0\u5728\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u72b6\u6001\u7801\u4e86\uff0c\u6240\u4ee5 kubelet \u5c06\u4f1a\u6740\u6389\u548c\u91cd\u542f\u5bb9\u5668\u3002 \u540c\u6837\u7684\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e0b\u8be5 Pod \u6d4b\u8bd5\u4e0b\u6548\u679c\uff0c10 \u79d2\u540e\uff0c\u67e5\u770b Pod \u7684 event\uff0c\u786e\u8ba4 liveness probe \u5931\u8d25\u5e76\u91cd\u542f\u4e86\u5bb9\u5668\uff1a \u279c ~ kubectl apply -f liveness-http.yaml \u279c ~ kubectl describe pod liveness-http Name: liveness-http Namespace: default ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 44s default-scheduler Successfully assigned default/liveness-http to node2 Normal Pulled 41s kubelet Successfully pulled image \"cnych/liveness\" in 3 .359937074s Normal Pulling 21s ( x2 over 45s ) kubelet Pulling image \"cnych/liveness\" Warning Unhealthy 21s ( x3 over 29s ) kubelet Liveness probe failed: HTTP probe failed with statuscode: 500 Normal Killing 21s kubelet Container liveness failed liveness probe, will be restarted Normal Created 6s ( x2 over 41s ) kubelet Created container liveness Normal Started 6s ( x2 over 41s ) kubelet Started container liveness Normal Pulled 6s kubelet Successfully pulled image \"cnych/liveness\" in 15 .300179047s \u279c ~ kubectl get pods NAME READY STATUS RESTARTS AGE liveness-http 1 /1 Running 2 ( 16s ago ) 76s \u9664\u4e86\u4e0a\u9762\u7684 exec \u548c httpGet \u4e24\u79cd\u68c0\u6d4b\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 tcpSocket \u65b9\u5f0f\u6765\u68c0\u6d4b\u7aef\u53e3\u662f\u5426\u6b63\u5e38\uff0c\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u7ed3\u5408 kubectl explain \u547d\u4ee4\u81ea\u5df1\u6765\u9a8c\u8bc1\u4e0b\u8fd9\u79cd\u65b9\u5f0f\u3002 \u53e6\u5916\u524d\u9762\u6211\u4eec\u63d0\u5230\u4e86\u63a2\u9488\u91cc\u9762\u6709\u4e00\u4e2a initialDelaySeconds \u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u6765\u914d\u7f6e\u7b2c\u4e00\u6b21\u6267\u884c\u63a2\u9488\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u5bf9\u4e8e\u542f\u52a8\u975e\u5e38\u6162\u7684\u5e94\u7528\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982 Jenkins\u3001Gitlab \u8fd9\u7c7b\u5e94\u7528\uff0c\u4f46\u662f\u5982\u4f55\u8bbe\u7f6e\u4e00\u4e2a\u5408\u9002\u7684\u521d\u59cb\u5ef6\u8fdf\u65f6\u95f4\u5462\uff1f\u8fd9\u4e2a\u5c31\u548c\u5e94\u7528\u5177\u4f53\u7684\u73af\u5883\u6709\u5173\u7cfb\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u503c\u5f80\u5f80\u4e0d\u662f\u901a\u7528\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u80fd\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u5728\u522b\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u5c31\u4f1a\u5065\u5eb7\u68c0\u67e5\u5931\u8d25\u4e86\uff0c\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728 Kubernetes v1.16 \u7248\u672c\u5b98\u65b9\u7279\u5730\u65b0\u589e\u4e86\u4e00\u4e2a startupProbe\uff08\u542f\u52a8\u63a2\u9488\uff09 \uff0c\u8be5\u63a2\u9488\u5c06\u63a8\u8fdf\u6240\u6709\u5176\u4ed6\u63a2\u9488\uff0c\u76f4\u5230 Pod \u5b8c\u6210\u542f\u52a8\u4e3a\u6b62\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u5b58\u6d3b\u63a2\u9488\u4e00\u6837\uff1a startupProbe : httpGet : path : /healthz port : 8080 failureThreshold : 30 # \u5c3d\u91cf\u8bbe\u7f6e\u5927\u70b9 periodSeconds : 10 \u6bd4\u5982\u4e0a\u9762\u8fd9\u91cc\u7684\u914d\u7f6e\u8868\u793a\u6211\u4eec\u7684\u6162\u901f\u5bb9\u5668\u6700\u591a\u53ef\u4ee5\u67095\u5206\u949f\uff0830\u4e2a\u68c0\u67e5 * 10\u79d2= 300s\uff09\u6765\u5b8c\u6210\u542f\u52a8\u3002 \u6709\u7684\u65f6\u5019\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u6682\u65f6\u65e0\u6cd5\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u4f8b\u5982\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u5728\u542f\u52a8\u671f\u95f4\u52a0\u8f7d\u5927\u91cf\u6570\u636e\u6216\u914d\u7f6e\u6587\u4ef6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4e0d\u60f3\u6740\u6b7b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u4e0d\u60f3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 readiness probe \u6765\u68c0\u6d4b\u548c\u51cf\u8f7b\u8fd9\u4e9b\u60c5\u51b5\uff0cPod \u4e2d\u7684\u5bb9\u5668\u53ef\u4ee5\u62a5\u544a\u81ea\u5df1\u8fd8\u6ca1\u6709\u51c6\u5907\uff0c\u4e0d\u80fd\u5904\u7406 Kubernetes \u670d\u52a1\u53d1\u9001\u8fc7\u6765\u7684\u6d41\u91cf\u3002 readiness probe \u7684\u914d\u7f6e\u8ddf liveness probe \u57fa\u672c\u4e0a\u4e00\u81f4\u7684\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u662f\u4f7f\u7528 readinessProbe \u800c\u4e0d\u662f livenessProbe \uff0c\u4e24\u8005\u5982\u679c\u540c\u65f6\u4f7f\u7528\u7684\u8bdd\u5c31\u53ef\u4ee5\u786e\u4fdd\u6d41\u91cf\u4e0d\u4f1a\u5230\u8fbe\u8fd8\u672a\u51c6\u5907\u597d\u7684\u5bb9\u5668\uff0c\u51c6\u5907\u597d\u8fc7\u540e\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u5219\u4f1a\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u3002\u5bf9\u4e8e\u5c31\u7eea\u63a2\u9488\u6211\u4eec\u4f1a\u5728\u540e\u9762 Service \u7684\u7ae0\u8282\u548c\u5927\u5bb6\u7ee7\u7eed\u4ecb\u7ecd\u3002 \u53e6\u5916\u9664\u4e86\u4e0a\u9762\u7684 initialDelaySeconds \u548c periodSeconds \u5c5e\u6027\u5916\uff0c\u63a2\u9488\u8fd8\u53ef\u4ee5\u914d\u7f6e\u5982\u4e0b\u51e0\u4e2a\u53c2\u6570\uff1a timeoutSeconds \uff1a\u63a2\u6d4b\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba41\u79d2\uff0c\u6700\u5c0f1\u79d2\u3002 successThreshold \uff1a\u63a2\u6d4b\u5931\u8d25\u540e\uff0c\u6700\u5c11\u8fde\u7eed\u63a2\u6d4b\u6210\u529f\u591a\u5c11\u6b21\u624d\u88ab\u8ba4\u5b9a\u4e3a\u6210\u529f\uff0c\u9ed8\u8ba4\u662f 1\uff0c\u4f46\u662f\u5982\u679c\u662f - liveness \u5219\u5fc5\u987b\u662f 1\u3002\u6700\u5c0f\u503c\u662f 1\u3002 failureThreshold \uff1a\u63a2\u6d4b\u6210\u529f\u540e\uff0c\u6700\u5c11\u8fde\u7eed\u63a2\u6d4b\u5931\u8d25\u591a\u5c11\u6b21\u624d\u88ab\u8ba4\u5b9a\u4e3a\u5931\u8d25\uff0c\u9ed8\u8ba4\u662f 3\uff0c\u6700\u5c0f\u503c\u662f 1\u3002","title":"Pod \u5065\u5eb7\u68c0\u67e5"},{"location":"Foundation/Pod/","text":"Pod \u00b6 Kubernetes \u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143 \u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u4e86\u89e3\u4e86 Kubernetes \u7684\u57fa\u672c\u67b6\u6784\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8d44\u6e90\u6e05\u5355\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u4e00\u4e2a\u5e94\u7528\u3002\u6211\u4eec\u4e5f\u4e86\u89e3\u5230\u4e86 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u6211\u4eec\u5e73\u65f6\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7684\u5e94\u7528\u90fd\u662f\u4ee5 Pod \u4e3a\u5355\u4f4d\u7684\uff0c\u800c\u5e76\u4e0d\u662f\u6211\u4eec\u719f\u77e5\u7684\u5bb9\u5668\uff0c\u8fd9\u6837\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u4e3a\u4f55\u4e0d\u76f4\u63a5\u4f7f\u7528\u5bb9\u5668\u5462\uff1f \u4e3a\u4ec0\u4e48\u9700\u8981 Pod \u00b6 \u5047\u8bbe Kubernetes \u4e2d\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u5143\u5c31\u662f\u5bb9\u5668\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5e94\u7528\u53ef\u4ee5\u76f4\u63a5\u88ab\u8c03\u5ea6\u76f4\u63a5\u4f7f\u7528\uff0c\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5f80\u5f80\u8fd8\u6709\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u662f\u7531\u591a\u4e2a\u8fdb\u7a0b\u7ec4\u6210\u7684\uff0c\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u8bf4\u628a\u8fd9\u4e9b\u8fdb\u7a0b\u90fd\u6253\u5305\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d\u53bb\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u4e0d\u8981\u5fd8\u8bb0\u4e86\u5bb9\u5668\u8fd0\u884c\u65f6\u7ba1\u7406\u7684\u8fdb\u7a0b\u662f pid=1 \u7684\u4e3b\u8fdb\u7a0b\uff0c\u5176\u4ed6\u8fdb\u7a0b\u6b7b\u6389\u4e86\u5c31\u4f1a\u6210\u4e3a\u50f5\u5c38\u8fdb\u7a0b\uff0c\u6ca1\u529e\u6cd5\u8fdb\u884c\u7ba1\u7406\u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u672c\u8eab\u4e5f\u4e0d\u662f\u5bb9\u5668\u63a8\u8350\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u4e00\u4e2a\u5bb9\u5668\u6700\u597d \u53ea\u5e72\u4e00\u4ef6\u4e8b\u60c5 \uff0c\u6240\u4ee5\u5728\u771f\u5b9e\u7684\u73af\u5883\u4e2d\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5e94\u7528\u7684\u8fdb\u7a0b\u8fdb\u884c\u62c6\u5206\uff0c\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u5bb9\u5668\u603b\u53ef\u4ee5\u4e86\u5427\uff1f\u4f46\u662f\u4e0d\u8981\u5fd8\u8bb0\u4e00\u4e2a\u95ee\u9898\uff0c\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u5bb9\u5668\u540e\uff0c\u662f\u4e0d\u662f\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u5e94\u7528\u4e0b\u9762\u7684\u67d0\u4e2a\u8fdb\u7a0b\u5bb9\u5668\u88ab\u8c03\u5ea6\u5230\u4e86\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u5440\uff1f\u5f80\u5f80\u6211\u4eec\u5e94\u7528\u5185\u90e8\u7684\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08\u901a\u8fc7 IPC \u6216\u8005\u5171\u4eab\u672c\u5730\u6587\u4ef6\u4e4b\u7c7b\uff09\u90fd\u662f\u8981\u6c42\u5728\u672c\u5730\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u522b\u7684\u7ed3\u6784\u6765\u5c06\u8fd9\u4e9b\u5bb9\u5668\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5e76\u5c06\u4ed6\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\u8fdb\u884c\u7ba1\u7406\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e9b\u5bb9\u5668\u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u9762\uff0c\u8fd9\u4e5f\u5c31\u662f Pod \u8bbe\u8ba1\u7684\u521d\u8877\u3002 Pod \u539f\u7406 \u00b6 \u5728\u4e00\u4e2a Pod \u4e0b\u9762\u8fd0\u884c\u51e0\u4e2a\u5173\u7cfb\u975e\u5e38\u5bc6\u5207\u7684\u5bb9\u5668\u8fdb\u7a0b\uff0c\u8fd9\u6837\u4e00\u6765\u8fd9\u4e9b\u8fdb\u7a0b\u672c\u8eab\u53c8\u53ef\u4ee5\u53d7\u5230\u5bb9\u5668\u7684\u7ba1\u63a7\uff0c\u53c8\u5177\u6709\u51e0\u4e4e\u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u95ee\u9898\u3002 \u5176\u5b9e Pod \u4e5f\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u8fd8\u662f Linux \u5bb9\u5668\u7684 Namespace \u548c Cgroup \u8fd9\u4e24\u4e2a\u6700\u57fa\u672c\u7684\u6982\u5ff5\uff0cPod \u88ab\u521b\u5efa\u51fa\u6765\u5176\u5b9e\u662f\u4e00\u7ec4\u5171\u4eab\u4e86\u4e00\u4e9b\u8d44\u6e90\u7684\u5bb9\u5668\u800c\u5df2\u3002\u9996\u5148 Pod \u91cc\u9762\u7684\u6240\u6709\u5bb9\u5668\uff0c\u90fd\u662f\u5171\u4eab\u7684\u540c\u4e00\u4e2a Network Namespace\uff0c\u4f46\u662f\u6d89\u53ca\u5230\u6587\u4ef6\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Pod \u91cc\u9762\u7684\u5bb9\u5668\u4e4b\u95f4\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u5b8c\u5168\u9694\u79bb\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e\u6765\u5171\u4eab\u540c\u4e00\u4e2a Volume\u3002 \u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u65b0\u521b\u5efa\u7684\u5bb9\u5668\u548c\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bb9\u5668\u5171\u4eab\u4e00\u4e2a Network Namespace\uff0c\u5728\u8fd0\u884c\u5bb9\u5668\uff08docker \u5bb9\u5668\uff09\u7684\u65f6\u5019\u53ea\u9700\u8981\u6307\u5b9a --net=container:\u76ee\u6807\u5bb9\u5668\u540d \u8fd9\u4e2a\u53c2\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u6a21\u5f0f\u6709\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\u90a3\u5c31\u662f\u5bb9\u5668\u7684\u542f\u52a8\u6709\u5148\u540e\u987a\u5e8f\u95ee\u9898\uff0c\u90a3\u4e48 Pod \u662f\u600e\u4e48\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f\u90a3\u5c31\u662f\u52a0\u5165\u4e00\u4e2a\u4e2d\u95f4\u5bb9\u5668\uff08\u6ca1\u6709\u4ec0\u4e48\u67b6\u6784\u662f\u52a0\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u89e3\u51b3\u4e0d\u4e86\u7684\uff1f\uff09\uff0c\u8fd9\u4e2a\u5bb9\u5668\u53eb\u505a Infra \u5bb9\u5668\uff0c\u800c\u4e14\u8fd9\u4e2a\u5bb9\u5668\u5728 Pod \u4e2d\u6c38\u8fdc\u90fd\u662f\u7b2c\u4e00\u4e2a\u88ab\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u8fd9\u6837\u662f\u4e0d\u662f\u5176\u4ed6\u5bb9\u5668\u90fd\u52a0\u5165\u5230\u8fd9\u4e2a Infra \u5bb9\u5668\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u5c31\u5b8c\u5168\u5b9e\u73b0\u4e86 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u548c Infra \u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6240\u4ee5\u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u6210 Kubernetes \u96c6\u7fa4\u7684\u65f6\u5019\uff0c\u9996\u5148\u9700\u8981\u4fdd\u8bc1\u5728\u6240\u6709\u8282\u70b9\u4e0a\u53ef\u4ee5\u62c9\u53d6\u5230\u9ed8\u8ba4\u7684 Infra \u955c\u50cf\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Infra \u955c\u50cf\u5730\u5740\u4e3a k8s.gcr.io/pause:3.5 \uff0c\u8fd9\u4e2a\u5bb9\u5668\u5360\u7528\u7684\u8d44\u6e90\u975e\u5e38\u5c11\uff0c\u4f46\u662f\u8fd9\u4e2a\u955c\u50cf\u9ed8\u8ba4\u662f\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u7684\uff0c\u6240\u4ee5\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5728\u90e8\u7f72\u5e94\u7528\u7684\u65f6\u5019\u4e00\u76f4\u5904\u4e8e Pending \u72b6\u6001\u6216\u8005\u62a5 sandbox image \u76f8\u5173\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u5927\u90e8\u5206\u662f\u56e0\u4e3a\u6240\u6709 Pod \u6700\u5148\u542f\u52a8\u7684\u5bb9\u5668\u955c\u50cf\u90fd\u62c9\u4e0d\u4e0b\u6765\uff0c\u80af\u5b9a\u542f\u52a8\u4e0d\u4e86\uff0c\u542f\u52a8\u4e0d\u4e86\u5176\u4ed6\u5bb9\u5668\u80af\u5b9a\u4e5f\u5c31\u4e0d\u80fd\u542f\u52a8\u4e86\uff1a $ kubelet --help | grep infra --pod-infra-container-image string The image whose network/ipc namespaces containers in each pod will use. This docker-specific flag only works when container-runtime is set to docker. ( default \"k8s.gcr.io/pause:3.5\" ) \u4ece\u4e0a\u9762\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u666e\u901a\u7684\u5bb9\u5668\u52a0\u5165\u5230\u4e86 Infra \u5bb9\u5668\u7684 Network Namespace \u4e2d\uff0c\u6240\u4ee5\u8fd9\u4e2a Pod \u4e0b\u9762\u7684\u6240\u6709\u5bb9\u5668\u5c31\u662f\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u4e86\uff0c\u666e\u901a\u5bb9\u5668\u4e0d\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u7f51\u5361\uff0c\u914d\u7f6e\u81ea\u5df1\u7684 IP\uff0c\u800c\u662f\u548c Infra \u5bb9\u5668\u5171\u4eab IP\u3001\u7aef\u53e3\u8303\u56f4\u7b49\uff0c\u800c\u4e14\u5bb9\u5668\u4e4b\u95f4\u7684\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 lo \u7f51\u5361\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff1a \u4e5f\u5c31\u662f\u5bb9\u5668\u4e4b\u95f4\u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 localhost \u8fdb\u884c\u901a\u4fe1\u7684\uff1b \u770b\u5230\u7684\u7f51\u7edc\u8bbe\u5907\u4fe1\u606f\u90fd\u662f\u548c Infra \u5bb9\u5668\u5b8c\u5168\u4e00\u6837\u7684\uff1b \u4e5f\u5c31\u610f\u5473\u7740\u540c\u4e00\u4e2a Pod \u4e0b\u9762\u7684\u5bb9\u5668\u8fd0\u884c\u7684\u591a\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u7ed1\u5b9a\u76f8\u540c\u7684\u7aef\u53e3\uff1b \u800c\u4e14 Pod \u7684\u751f\u547d\u5468\u671f\u53ea\u8ddf Infra \u5bb9\u5668\u4e00\u81f4\uff0c\u800c\u4e0e\u5bb9\u5668 A \u548c B \u65e0\u5173\u3002 \u5bf9\u4e8e\u6587\u4ef6\u7cfb\u7edf Kubernetes \u662f\u600e\u4e48\u5b9e\u73b0\u8ba9\u4e00\u4e2a Pod \u4e2d\u7684\u5bb9\u5668\u5171\u4eab\u7684\u5462\uff1f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5bb9\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u4e92\u76f8\u9694\u79bb\u7684\uff0c\u8981\u5b9e\u73b0\u5171\u4eab\u53ea\u9700\u8981\u5728 Pod \u7684\u9876\u5c42\u58f0\u660e\u4e00\u4e2a Volume\uff0c\u7136\u540e\u5728\u9700\u8981\u5171\u4eab\u8fd9\u4e2a Volume \u7684\u5bb9\u5668\u4e2d\u58f0\u660e\u6302\u8f7d\u5373\u53ef\u3002 \u6bd4\u5982\u4e0b\u9762\u7684\u793a\u4f8b\uff1a apiVersion : v1 kind : Pod metadata : name : counter spec : volumes : - name : varlog hostPath : path : /var/log/counter containers : - name : count image : busybox args : - /bin/sh - -c - > i=0; while true; do echo \"$i: $(date)\" >> /var/log/1.log; i=$((i+1)); sleep 1; done volumeMounts : - name : varlog mountPath : /var/log - name : count-log image : busybox args : [ /bin/sh , -c , 'tail -n+1 -f /opt/log/1.log' ] volumeMounts : - name : varlog mountPath : /opt/log \u793a\u4f8b\u4e2d\u6211\u4eec\u5728 Pod \u7684\u9876\u5c42\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a varlog \u7684 Volume \uff0c\u800c\u8fd9\u4e2a Volume \u7684\u7c7b\u578b\u662f hostPath \uff0c\u4e5f\u5c31\u610f\u5473\u8fd9\u4e2a\u5bbf\u4e3b\u673a\u7684 /var/log/counter \u76ee\u5f55\u5c06\u88ab\u8fd9\u4e2a Pod \u5171\u4eab\uff0c\u5171\u4eab\u7ed9\u8c01\u5462\uff1f\u5728\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6570\u636e\u76ee\u5f55\u7684\u5bb9\u5668\u4e0a\u58f0\u660e\u6302\u8f7d\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 volumeMounts \u58f0\u660e\u6302\u8f7d\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u6211\u4eec\u8fd9\u4e2a Pod \u5c31\u5b9e\u73b0\u4e86\u5171\u4eab\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\uff0c\u800c\u4e14\u6570\u636e\u88ab\u6301\u4e45\u5316\u5230\u4e86\u5bbf\u4e3b\u673a\u76ee\u5f55\u4e0a\u3002 \u8fd9\u4e2a\u65b9\u5f0f\u4e5f\u662f Kubernetes \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1a sidecar \u6a21\u5f0f \u7684\u5e38\u7528\u65b9\u5f0f\u3002\u5178\u578b\u7684\u573a\u666f\u5c31\u662f\u5bb9\u5668\u65e5\u5fd7\u6536\u96c6\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684\u8fd9\u4e2a\u5e94\u7528\uff0c\u5176\u4e2d\u5e94\u7528\u7684\u65e5\u5fd7\u662f\u88ab\u8f93\u51fa\u5230\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\u4e0a\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u628a Pod \u58f0\u660e\u7684 Volume \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\u4e0a\uff0c\u7136\u540e\u5728\u8fd9\u4e2a Pod \u91cc\u9762\u540c\u65f6\u8fd0\u884c\u4e00\u4e2a sidecar \u5bb9\u5668\uff0c\u4ed6\u4e5f\u58f0\u660e\u6302\u8f7d\u76f8\u540c\u7684 Volume \u5230\u81ea\u5df1\u5bb9\u5668\u7684 /var/log \uff08\u6216\u5176\u4ed6\uff09\u76ee\u5f55\u4e0a\uff0c\u8fd9\u6837\u6211\u4eec\u8fd9\u4e2a sidecar \u5bb9\u5668\u5c31\u53ea\u9700\u8981\u4ece /var/log \u76ee\u5f55\u4e0b\u9762\u4e0d\u65ad\u6d88\u8d39\u65e5\u5fd7\u53d1\u9001\u5230 Elasticsearch \u4e2d\u5b58\u50a8\u8d77\u6765\u5c31\u5b8c\u6210\u4e86\u6700\u57fa\u672c\u7684\u5e94\u7528\u65e5\u5fd7\u7684\u57fa\u672c\u6536\u96c6\u5de5\u4f5c\u4e86\u3002 \u9664\u4e86\u8fd9\u4e2a\u5e94\u7528\u573a\u666f\u4e4b\u5916\u4f7f\u7528\u66f4\u591a\u7684\u8fd8\u662f\u5229\u7528 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u8fd9\u4e2a\u7279\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a Pod \u7f51\u7edc\u76f8\u5173\u7684\u914d\u7f6e\u548c\u7ba1\u7406\u4e5f\u53ef\u4ee5\u4ea4\u7ed9\u4e00\u4e2a sidecar \u5bb9\u5668\u6765\u5b8c\u6210\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u53bb\u5e72\u6d89\u7528\u6237\u5bb9\u5668\uff0c\u8fd9\u4e2a\u7279\u6027\u5728\u73b0\u5728\u975e\u5e38\u706b\u70ed\u7684 Service Mesh\uff08\u670d\u52a1\u7f51\u683c\uff09\u4e2d\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5178\u578b\u7684\u5e94\u7528\u5c31\u662f Istio \uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u7528\u7740\u6025\uff0c\u540e\u9762\u4e5f\u4f1a\u548c\u5927\u5bb6\u4e00\u8d77\u63a2\u8ba8\u7684\u3002 \u5982\u4f55\u5212\u5206 Pod \u00b6 \u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Pod \u7684\u5b9e\u73b0\u539f\u7406\uff0c\u4e86\u89e3\u5230\u4e86\u5e94\u8be5\u628a\u5173\u7cfb\u7d27\u5bc6\u7684\u5bb9\u5668\u5212\u5206\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u8fd0\u884c\uff0c\u90a3\u4e48\u600e\u4e48\u6765\u533a\u5206\u201c\u5173\u7cfb\u7d27\u5bc6\u201d\u5462\uff1f\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6bd4\u5982\u6211\u4eec\u7684 Wordpress \u5e94\u7528\uff0c\u662f\u4e00\u4e2a\u5178\u578b\u7684\u524d\u7aef\u670d\u52a1\u5668\u548c\u540e\u7aef\u6570\u636e\u670d\u52a1\u7684\u5e94\u7528\uff0c\u90a3\u4e48\u4f60\u8ba4\u4e3a\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a Pod \u8fd8\u662f\u4e24\u4e2a Pod \u5462\uff1f \u5982\u679c\u5728\u540c\u4e00\u4e2a Pod \u4e2d\u540c\u65f6\u8fd0\u884c\u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u540e\u7aef\u7684\u6570\u636e\u5e93\u670d\u52a1\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff0c\u7406\u8bba\u4e0a\u80af\u5b9a\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u6837\u4f7f\u7528\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u662f\u540c\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u8c03\u5ea6\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5e94\u7528 Wordpress \u548c MySQL \u6570\u636e\u5e93\u4e00\u5b9a\u9700\u8981\u8fd0\u884c\u5728\u4e00\u8d77\u5417\uff1f\u5f53\u7136\u4e0d\u9700\u8981\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5c06 MySQL \u90e8\u7f72\u5230\u96c6\u7fa4\u4e4b\u5916\u5bf9\u5427\uff1f\u6240\u4ee5 Wordpress \u548c MySQL \u5373\u4f7f\u4e0d\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u53ea\u8981\u80fd\u591f\u8bbf\u95ee\u5230\u5373\u53ef\u3002 \u4f46\u662f\u5982\u679c\u4f60\u975e\u8981\u5f3a\u884c\u90e8\u7f72\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u5462\uff1f\u4ece\u67d0\u4e2a\u89d2\u5ea6\u6765\u8bf4\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u8bbf\u95ee\u91cf\u975e\u5e38\u5927\uff0c\u4e00\u4e2a Pod \u5df2\u7ecf\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u7684\u9700\u6c42\u4e86\uff0c\u600e\u4e48\u529e\u5462\uff1f\u6269\u5bb9\u5bf9\u5427\uff0c\u4f46\u662f\u6269\u5bb9\u7684\u76ee\u6807\u4e5f\u662f Pod\uff0c\u5e76\u4e0d\u662f\u5bb9\u5668\uff0c\u6bd4\u5982\u6211\u4eec\u518d\u6dfb\u52a0\u4e00\u4e2a Pod\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u6709\u4e24\u4e2a Wordpress \u7684\u5e94\u7528\u548c\u4e24\u4e2a MySQL \u6570\u636e\u5e93\u4e86\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a Pod \u4e4b\u95f4\u7684\u6570\u636e\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u56e0\u4e3a MySQL \u6570\u636e\u5e93\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u589e\u52a0\u526f\u672c\u5c31\u53ef\u4ee5\u5171\u4eab\u6570\u636e\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u5c31\u5f97\u5206\u5f00\u90e8\u7f72\u4e86\uff0c\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u5355\u72ec\u6269\u5bb9 Wordpress \u7684\u8fd9\u4e2a Pod\uff0c\u540e\u7aef\u7684 MySQL \u6570\u636e\u5e93\u5e76\u4e0d\u4f1a\u53d7\u5230\u6269\u5bb9\u7684\u5f71\u54cd\u3002 \u5c06\u591a\u4e2a\u5bb9\u5668\u90e8\u7f72\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u7684\u6700\u4e3b\u8981\u53c2\u8003\u5c31\u662f\u5e94\u7528\u53ef\u80fd\u7531\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\u8f85\u52a9\u8fdb\u7a0b\u7ec4\u6210\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684\u65e5\u5fd7\u6536\u96c6\u7684 Pod\uff0c\u9700\u8981\u5176\u4ed6\u7684 sidecar \u5bb9\u5668\u6765\u652f\u6301\u65e5\u5fd7\u7684\u91c7\u96c6\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u5224\u65ad\u662f\u5426\u9700\u8981\u5728 Pod \u4e2d\u4f7f\u7528\u591a\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u7684\u51e0\u4e2a\u65b9\u5f0f\u6765\u5224\u65ad\uff1a \u8fd9\u4e9b\u5bb9\u5668\u662f\u5426\u4e00\u5b9a\u9700\u8981\u4e00\u8d77\u8fd0\u884c\uff0c\u662f\u5426\u53ef\u4ee5\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a \u8fd9\u4e9b\u5bb9\u5668\u662f\u4e00\u4e2a\u6574\u4f53\u8fd8\u662f\u72ec\u7acb\u7684\u7ec4\u4ef6 \u8fd9\u4e9b\u5bb9\u5668\u4e00\u8d77\u8fdb\u884c\u6269\u7f29\u5bb9\u4f1a\u5f71\u54cd\u5e94\u7528\u5417 \u57fa\u672c\u4e0a\u6211\u4eec\u80fd\u591f\u56de\u7b54\u4e0a\u9762\u7684\u51e0\u4e2a\u95ee\u9898\u5c31\u80fd\u591f\u5224\u65ad\u662f\u5426\u9700\u8981\u5728 Pod \u4e2d\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\u4e86\u3002 Pod \u7684\u8bbe\u8ba1 \u5176\u5b9e\u5728\u6211\u4eec\u7406\u89e3 Pod \u7684\u65f6\u5019\uff0c\u6709\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u7c7b\u6bd4\u7684\u65b9\u5f0f\u5c31\u662f\u628a Pod \u770b\u6210\u6211\u4eec\u4e4b\u524d\u7684 \u201c\u865a\u62df\u673a\u201d\uff0c\u800c\u5bb9\u5668\u5c31\u662f\u865a\u62df\u673a\u4e2d\u8fd0\u884c\u7684\u4e00\u4e2a\u7528\u6237\u7a0b\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u597d\u7684\u6765\u7406\u89e3 Pod \u7684\u8bbe\u8ba1\u3002","title":"Pod\u539f\u7406"},{"location":"Foundation/Pod/#pod","text":"Kubernetes \u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143 \u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u4e86\u89e3\u4e86 Kubernetes \u7684\u57fa\u672c\u67b6\u6784\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8d44\u6e90\u6e05\u5355\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u4e00\u4e2a\u5e94\u7528\u3002\u6211\u4eec\u4e5f\u4e86\u89e3\u5230\u4e86 Pod \u662f Kubernetes \u96c6\u7fa4\u4e2d\u6700\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u6211\u4eec\u5e73\u65f6\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u7684\u5e94\u7528\u90fd\u662f\u4ee5 Pod \u4e3a\u5355\u4f4d\u7684\uff0c\u800c\u5e76\u4e0d\u662f\u6211\u4eec\u719f\u77e5\u7684\u5bb9\u5668\uff0c\u8fd9\u6837\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u4e3a\u4f55\u4e0d\u76f4\u63a5\u4f7f\u7528\u5bb9\u5668\u5462\uff1f","title":"Pod"},{"location":"Foundation/Pod/#pod_1","text":"\u5047\u8bbe Kubernetes \u4e2d\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u5143\u5c31\u662f\u5bb9\u5668\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5e94\u7528\u53ef\u4ee5\u76f4\u63a5\u88ab\u8c03\u5ea6\u76f4\u63a5\u4f7f\u7528\uff0c\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5f80\u5f80\u8fd8\u6709\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u662f\u7531\u591a\u4e2a\u8fdb\u7a0b\u7ec4\u6210\u7684\uff0c\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u8bf4\u628a\u8fd9\u4e9b\u8fdb\u7a0b\u90fd\u6253\u5305\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d\u53bb\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u4e0d\u8981\u5fd8\u8bb0\u4e86\u5bb9\u5668\u8fd0\u884c\u65f6\u7ba1\u7406\u7684\u8fdb\u7a0b\u662f pid=1 \u7684\u4e3b\u8fdb\u7a0b\uff0c\u5176\u4ed6\u8fdb\u7a0b\u6b7b\u6389\u4e86\u5c31\u4f1a\u6210\u4e3a\u50f5\u5c38\u8fdb\u7a0b\uff0c\u6ca1\u529e\u6cd5\u8fdb\u884c\u7ba1\u7406\u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u672c\u8eab\u4e5f\u4e0d\u662f\u5bb9\u5668\u63a8\u8350\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u4e00\u4e2a\u5bb9\u5668\u6700\u597d \u53ea\u5e72\u4e00\u4ef6\u4e8b\u60c5 \uff0c\u6240\u4ee5\u5728\u771f\u5b9e\u7684\u73af\u5883\u4e2d\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5e94\u7528\u7684\u8fdb\u7a0b\u8fdb\u884c\u62c6\u5206\uff0c\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u5bb9\u5668\u603b\u53ef\u4ee5\u4e86\u5427\uff1f\u4f46\u662f\u4e0d\u8981\u5fd8\u8bb0\u4e00\u4e2a\u95ee\u9898\uff0c\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u5bb9\u5668\u540e\uff0c\u662f\u4e0d\u662f\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u5e94\u7528\u4e0b\u9762\u7684\u67d0\u4e2a\u8fdb\u7a0b\u5bb9\u5668\u88ab\u8c03\u5ea6\u5230\u4e86\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u5440\uff1f\u5f80\u5f80\u6211\u4eec\u5e94\u7528\u5185\u90e8\u7684\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08\u901a\u8fc7 IPC \u6216\u8005\u5171\u4eab\u672c\u5730\u6587\u4ef6\u4e4b\u7c7b\uff09\u90fd\u662f\u8981\u6c42\u5728\u672c\u5730\u8fdb\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u522b\u7684\u7ed3\u6784\u6765\u5c06\u8fd9\u4e9b\u5bb9\u5668\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5e76\u5c06\u4ed6\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u57fa\u672c\u7684\u8c03\u5ea6\u5355\u5143\u8fdb\u884c\u7ba1\u7406\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e9b\u5bb9\u5668\u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u9762\uff0c\u8fd9\u4e5f\u5c31\u662f Pod \u8bbe\u8ba1\u7684\u521d\u8877\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981 Pod"},{"location":"Foundation/Pod/#pod_2","text":"\u5728\u4e00\u4e2a Pod \u4e0b\u9762\u8fd0\u884c\u51e0\u4e2a\u5173\u7cfb\u975e\u5e38\u5bc6\u5207\u7684\u5bb9\u5668\u8fdb\u7a0b\uff0c\u8fd9\u6837\u4e00\u6765\u8fd9\u4e9b\u8fdb\u7a0b\u672c\u8eab\u53c8\u53ef\u4ee5\u53d7\u5230\u5bb9\u5668\u7684\u7ba1\u63a7\uff0c\u53c8\u5177\u6709\u51e0\u4e4e\u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u95ee\u9898\u3002 \u5176\u5b9e Pod \u4e5f\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u8fd8\u662f Linux \u5bb9\u5668\u7684 Namespace \u548c Cgroup \u8fd9\u4e24\u4e2a\u6700\u57fa\u672c\u7684\u6982\u5ff5\uff0cPod \u88ab\u521b\u5efa\u51fa\u6765\u5176\u5b9e\u662f\u4e00\u7ec4\u5171\u4eab\u4e86\u4e00\u4e9b\u8d44\u6e90\u7684\u5bb9\u5668\u800c\u5df2\u3002\u9996\u5148 Pod \u91cc\u9762\u7684\u6240\u6709\u5bb9\u5668\uff0c\u90fd\u662f\u5171\u4eab\u7684\u540c\u4e00\u4e2a Network Namespace\uff0c\u4f46\u662f\u6d89\u53ca\u5230\u6587\u4ef6\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Pod \u91cc\u9762\u7684\u5bb9\u5668\u4e4b\u95f4\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u5b8c\u5168\u9694\u79bb\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u58f0\u660e\u6765\u5171\u4eab\u540c\u4e00\u4e2a Volume\u3002 \u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u65b0\u521b\u5efa\u7684\u5bb9\u5668\u548c\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bb9\u5668\u5171\u4eab\u4e00\u4e2a Network Namespace\uff0c\u5728\u8fd0\u884c\u5bb9\u5668\uff08docker \u5bb9\u5668\uff09\u7684\u65f6\u5019\u53ea\u9700\u8981\u6307\u5b9a --net=container:\u76ee\u6807\u5bb9\u5668\u540d \u8fd9\u4e2a\u53c2\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u6a21\u5f0f\u6709\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\u90a3\u5c31\u662f\u5bb9\u5668\u7684\u542f\u52a8\u6709\u5148\u540e\u987a\u5e8f\u95ee\u9898\uff0c\u90a3\u4e48 Pod \u662f\u600e\u4e48\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f\u90a3\u5c31\u662f\u52a0\u5165\u4e00\u4e2a\u4e2d\u95f4\u5bb9\u5668\uff08\u6ca1\u6709\u4ec0\u4e48\u67b6\u6784\u662f\u52a0\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u89e3\u51b3\u4e0d\u4e86\u7684\uff1f\uff09\uff0c\u8fd9\u4e2a\u5bb9\u5668\u53eb\u505a Infra \u5bb9\u5668\uff0c\u800c\u4e14\u8fd9\u4e2a\u5bb9\u5668\u5728 Pod \u4e2d\u6c38\u8fdc\u90fd\u662f\u7b2c\u4e00\u4e2a\u88ab\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u8fd9\u6837\u662f\u4e0d\u662f\u5176\u4ed6\u5bb9\u5668\u90fd\u52a0\u5165\u5230\u8fd9\u4e2a Infra \u5bb9\u5668\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u5c31\u5b8c\u5168\u5b9e\u73b0\u4e86 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u548c Infra \u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6240\u4ee5\u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u6210 Kubernetes \u96c6\u7fa4\u7684\u65f6\u5019\uff0c\u9996\u5148\u9700\u8981\u4fdd\u8bc1\u5728\u6240\u6709\u8282\u70b9\u4e0a\u53ef\u4ee5\u62c9\u53d6\u5230\u9ed8\u8ba4\u7684 Infra \u955c\u50cf\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b Infra \u955c\u50cf\u5730\u5740\u4e3a k8s.gcr.io/pause:3.5 \uff0c\u8fd9\u4e2a\u5bb9\u5668\u5360\u7528\u7684\u8d44\u6e90\u975e\u5e38\u5c11\uff0c\u4f46\u662f\u8fd9\u4e2a\u955c\u50cf\u9ed8\u8ba4\u662f\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u7684\uff0c\u6240\u4ee5\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5728\u90e8\u7f72\u5e94\u7528\u7684\u65f6\u5019\u4e00\u76f4\u5904\u4e8e Pending \u72b6\u6001\u6216\u8005\u62a5 sandbox image \u76f8\u5173\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u5927\u90e8\u5206\u662f\u56e0\u4e3a\u6240\u6709 Pod \u6700\u5148\u542f\u52a8\u7684\u5bb9\u5668\u955c\u50cf\u90fd\u62c9\u4e0d\u4e0b\u6765\uff0c\u80af\u5b9a\u542f\u52a8\u4e0d\u4e86\uff0c\u542f\u52a8\u4e0d\u4e86\u5176\u4ed6\u5bb9\u5668\u80af\u5b9a\u4e5f\u5c31\u4e0d\u80fd\u542f\u52a8\u4e86\uff1a $ kubelet --help | grep infra --pod-infra-container-image string The image whose network/ipc namespaces containers in each pod will use. This docker-specific flag only works when container-runtime is set to docker. ( default \"k8s.gcr.io/pause:3.5\" ) \u4ece\u4e0a\u9762\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u666e\u901a\u7684\u5bb9\u5668\u52a0\u5165\u5230\u4e86 Infra \u5bb9\u5668\u7684 Network Namespace \u4e2d\uff0c\u6240\u4ee5\u8fd9\u4e2a Pod \u4e0b\u9762\u7684\u6240\u6709\u5bb9\u5668\u5c31\u662f\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u4e86\uff0c\u666e\u901a\u5bb9\u5668\u4e0d\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u7f51\u5361\uff0c\u914d\u7f6e\u81ea\u5df1\u7684 IP\uff0c\u800c\u662f\u548c Infra \u5bb9\u5668\u5171\u4eab IP\u3001\u7aef\u53e3\u8303\u56f4\u7b49\uff0c\u800c\u4e14\u5bb9\u5668\u4e4b\u95f4\u7684\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 lo \u7f51\u5361\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff1a \u4e5f\u5c31\u662f\u5bb9\u5668\u4e4b\u95f4\u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 localhost \u8fdb\u884c\u901a\u4fe1\u7684\uff1b \u770b\u5230\u7684\u7f51\u7edc\u8bbe\u5907\u4fe1\u606f\u90fd\u662f\u548c Infra \u5bb9\u5668\u5b8c\u5168\u4e00\u6837\u7684\uff1b \u4e5f\u5c31\u610f\u5473\u7740\u540c\u4e00\u4e2a Pod \u4e0b\u9762\u7684\u5bb9\u5668\u8fd0\u884c\u7684\u591a\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u7ed1\u5b9a\u76f8\u540c\u7684\u7aef\u53e3\uff1b \u800c\u4e14 Pod \u7684\u751f\u547d\u5468\u671f\u53ea\u8ddf Infra \u5bb9\u5668\u4e00\u81f4\uff0c\u800c\u4e0e\u5bb9\u5668 A \u548c B \u65e0\u5173\u3002 \u5bf9\u4e8e\u6587\u4ef6\u7cfb\u7edf Kubernetes \u662f\u600e\u4e48\u5b9e\u73b0\u8ba9\u4e00\u4e2a Pod \u4e2d\u7684\u5bb9\u5668\u5171\u4eab\u7684\u5462\uff1f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5bb9\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u4e92\u76f8\u9694\u79bb\u7684\uff0c\u8981\u5b9e\u73b0\u5171\u4eab\u53ea\u9700\u8981\u5728 Pod \u7684\u9876\u5c42\u58f0\u660e\u4e00\u4e2a Volume\uff0c\u7136\u540e\u5728\u9700\u8981\u5171\u4eab\u8fd9\u4e2a Volume \u7684\u5bb9\u5668\u4e2d\u58f0\u660e\u6302\u8f7d\u5373\u53ef\u3002 \u6bd4\u5982\u4e0b\u9762\u7684\u793a\u4f8b\uff1a apiVersion : v1 kind : Pod metadata : name : counter spec : volumes : - name : varlog hostPath : path : /var/log/counter containers : - name : count image : busybox args : - /bin/sh - -c - > i=0; while true; do echo \"$i: $(date)\" >> /var/log/1.log; i=$((i+1)); sleep 1; done volumeMounts : - name : varlog mountPath : /var/log - name : count-log image : busybox args : [ /bin/sh , -c , 'tail -n+1 -f /opt/log/1.log' ] volumeMounts : - name : varlog mountPath : /opt/log \u793a\u4f8b\u4e2d\u6211\u4eec\u5728 Pod \u7684\u9876\u5c42\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a varlog \u7684 Volume \uff0c\u800c\u8fd9\u4e2a Volume \u7684\u7c7b\u578b\u662f hostPath \uff0c\u4e5f\u5c31\u610f\u5473\u8fd9\u4e2a\u5bbf\u4e3b\u673a\u7684 /var/log/counter \u76ee\u5f55\u5c06\u88ab\u8fd9\u4e2a Pod \u5171\u4eab\uff0c\u5171\u4eab\u7ed9\u8c01\u5462\uff1f\u5728\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6570\u636e\u76ee\u5f55\u7684\u5bb9\u5668\u4e0a\u58f0\u660e\u6302\u8f7d\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 volumeMounts \u58f0\u660e\u6302\u8f7d\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u6211\u4eec\u8fd9\u4e2a Pod \u5c31\u5b9e\u73b0\u4e86\u5171\u4eab\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\uff0c\u800c\u4e14\u6570\u636e\u88ab\u6301\u4e45\u5316\u5230\u4e86\u5bbf\u4e3b\u673a\u76ee\u5f55\u4e0a\u3002 \u8fd9\u4e2a\u65b9\u5f0f\u4e5f\u662f Kubernetes \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1a sidecar \u6a21\u5f0f \u7684\u5e38\u7528\u65b9\u5f0f\u3002\u5178\u578b\u7684\u573a\u666f\u5c31\u662f\u5bb9\u5668\u65e5\u5fd7\u6536\u96c6\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684\u8fd9\u4e2a\u5e94\u7528\uff0c\u5176\u4e2d\u5e94\u7528\u7684\u65e5\u5fd7\u662f\u88ab\u8f93\u51fa\u5230\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\u4e0a\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u628a Pod \u58f0\u660e\u7684 Volume \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /var/log \u76ee\u5f55\u4e0a\uff0c\u7136\u540e\u5728\u8fd9\u4e2a Pod \u91cc\u9762\u540c\u65f6\u8fd0\u884c\u4e00\u4e2a sidecar \u5bb9\u5668\uff0c\u4ed6\u4e5f\u58f0\u660e\u6302\u8f7d\u76f8\u540c\u7684 Volume \u5230\u81ea\u5df1\u5bb9\u5668\u7684 /var/log \uff08\u6216\u5176\u4ed6\uff09\u76ee\u5f55\u4e0a\uff0c\u8fd9\u6837\u6211\u4eec\u8fd9\u4e2a sidecar \u5bb9\u5668\u5c31\u53ea\u9700\u8981\u4ece /var/log \u76ee\u5f55\u4e0b\u9762\u4e0d\u65ad\u6d88\u8d39\u65e5\u5fd7\u53d1\u9001\u5230 Elasticsearch \u4e2d\u5b58\u50a8\u8d77\u6765\u5c31\u5b8c\u6210\u4e86\u6700\u57fa\u672c\u7684\u5e94\u7528\u65e5\u5fd7\u7684\u57fa\u672c\u6536\u96c6\u5de5\u4f5c\u4e86\u3002 \u9664\u4e86\u8fd9\u4e2a\u5e94\u7528\u573a\u666f\u4e4b\u5916\u4f7f\u7528\u66f4\u591a\u7684\u8fd8\u662f\u5229\u7528 Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4e2a Network Namespace \u8fd9\u4e2a\u7279\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a Pod \u7f51\u7edc\u76f8\u5173\u7684\u914d\u7f6e\u548c\u7ba1\u7406\u4e5f\u53ef\u4ee5\u4ea4\u7ed9\u4e00\u4e2a sidecar \u5bb9\u5668\u6765\u5b8c\u6210\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u53bb\u5e72\u6d89\u7528\u6237\u5bb9\u5668\uff0c\u8fd9\u4e2a\u7279\u6027\u5728\u73b0\u5728\u975e\u5e38\u706b\u70ed\u7684 Service Mesh\uff08\u670d\u52a1\u7f51\u683c\uff09\u4e2d\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5178\u578b\u7684\u5e94\u7528\u5c31\u662f Istio \uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u7528\u7740\u6025\uff0c\u540e\u9762\u4e5f\u4f1a\u548c\u5927\u5bb6\u4e00\u8d77\u63a2\u8ba8\u7684\u3002","title":"Pod \u539f\u7406"},{"location":"Foundation/Pod/#pod_3","text":"\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 Pod \u7684\u5b9e\u73b0\u539f\u7406\uff0c\u4e86\u89e3\u5230\u4e86\u5e94\u8be5\u628a\u5173\u7cfb\u7d27\u5bc6\u7684\u5bb9\u5668\u5212\u5206\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u8fd0\u884c\uff0c\u90a3\u4e48\u600e\u4e48\u6765\u533a\u5206\u201c\u5173\u7cfb\u7d27\u5bc6\u201d\u5462\uff1f\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6bd4\u5982\u6211\u4eec\u7684 Wordpress \u5e94\u7528\uff0c\u662f\u4e00\u4e2a\u5178\u578b\u7684\u524d\u7aef\u670d\u52a1\u5668\u548c\u540e\u7aef\u6570\u636e\u670d\u52a1\u7684\u5e94\u7528\uff0c\u90a3\u4e48\u4f60\u8ba4\u4e3a\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a Pod \u8fd8\u662f\u4e24\u4e2a Pod \u5462\uff1f \u5982\u679c\u5728\u540c\u4e00\u4e2a Pod \u4e2d\u540c\u65f6\u8fd0\u884c\u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u540e\u7aef\u7684\u6570\u636e\u5e93\u670d\u52a1\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff0c\u7406\u8bba\u4e0a\u80af\u5b9a\u662f\u53ef\u884c\u7684\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u6837\u4f7f\u7528\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a Pod \u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u662f\u540c\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u8c03\u5ea6\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5e94\u7528 Wordpress \u548c MySQL \u6570\u636e\u5e93\u4e00\u5b9a\u9700\u8981\u8fd0\u884c\u5728\u4e00\u8d77\u5417\uff1f\u5f53\u7136\u4e0d\u9700\u8981\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5c06 MySQL \u90e8\u7f72\u5230\u96c6\u7fa4\u4e4b\u5916\u5bf9\u5427\uff1f\u6240\u4ee5 Wordpress \u548c MySQL \u5373\u4f7f\u4e0d\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u53ea\u8981\u80fd\u591f\u8bbf\u95ee\u5230\u5373\u53ef\u3002 \u4f46\u662f\u5982\u679c\u4f60\u975e\u8981\u5f3a\u884c\u90e8\u7f72\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u5462\uff1f\u4ece\u67d0\u4e2a\u89d2\u5ea6\u6765\u8bf4\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u8bbf\u95ee\u91cf\u975e\u5e38\u5927\uff0c\u4e00\u4e2a Pod \u5df2\u7ecf\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u7684\u9700\u6c42\u4e86\uff0c\u600e\u4e48\u529e\u5462\uff1f\u6269\u5bb9\u5bf9\u5427\uff0c\u4f46\u662f\u6269\u5bb9\u7684\u76ee\u6807\u4e5f\u662f Pod\uff0c\u5e76\u4e0d\u662f\u5bb9\u5668\uff0c\u6bd4\u5982\u6211\u4eec\u518d\u6dfb\u52a0\u4e00\u4e2a Pod\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u6709\u4e24\u4e2a Wordpress \u7684\u5e94\u7528\u548c\u4e24\u4e2a MySQL \u6570\u636e\u5e93\u4e86\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a Pod \u4e4b\u95f4\u7684\u6570\u636e\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u56e0\u4e3a MySQL \u6570\u636e\u5e93\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u589e\u52a0\u526f\u672c\u5c31\u53ef\u4ee5\u5171\u4eab\u6570\u636e\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u5c31\u5f97\u5206\u5f00\u90e8\u7f72\u4e86\uff0c\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u5355\u72ec\u6269\u5bb9 Wordpress \u7684\u8fd9\u4e2a Pod\uff0c\u540e\u7aef\u7684 MySQL \u6570\u636e\u5e93\u5e76\u4e0d\u4f1a\u53d7\u5230\u6269\u5bb9\u7684\u5f71\u54cd\u3002 \u5c06\u591a\u4e2a\u5bb9\u5668\u90e8\u7f72\u5230\u540c\u4e00\u4e2a Pod \u4e2d\u7684\u6700\u4e3b\u8981\u53c2\u8003\u5c31\u662f\u5e94\u7528\u53ef\u80fd\u7531\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\u8f85\u52a9\u8fdb\u7a0b\u7ec4\u6210\uff0c\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u7684\u65e5\u5fd7\u6536\u96c6\u7684 Pod\uff0c\u9700\u8981\u5176\u4ed6\u7684 sidecar \u5bb9\u5668\u6765\u652f\u6301\u65e5\u5fd7\u7684\u91c7\u96c6\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u5224\u65ad\u662f\u5426\u9700\u8981\u5728 Pod \u4e2d\u4f7f\u7528\u591a\u4e2a\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u7684\u51e0\u4e2a\u65b9\u5f0f\u6765\u5224\u65ad\uff1a \u8fd9\u4e9b\u5bb9\u5668\u662f\u5426\u4e00\u5b9a\u9700\u8981\u4e00\u8d77\u8fd0\u884c\uff0c\u662f\u5426\u53ef\u4ee5\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a \u8fd9\u4e9b\u5bb9\u5668\u662f\u4e00\u4e2a\u6574\u4f53\u8fd8\u662f\u72ec\u7acb\u7684\u7ec4\u4ef6 \u8fd9\u4e9b\u5bb9\u5668\u4e00\u8d77\u8fdb\u884c\u6269\u7f29\u5bb9\u4f1a\u5f71\u54cd\u5e94\u7528\u5417 \u57fa\u672c\u4e0a\u6211\u4eec\u80fd\u591f\u56de\u7b54\u4e0a\u9762\u7684\u51e0\u4e2a\u95ee\u9898\u5c31\u80fd\u591f\u5224\u65ad\u662f\u5426\u9700\u8981\u5728 Pod \u4e2d\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\u4e86\u3002 Pod \u7684\u8bbe\u8ba1 \u5176\u5b9e\u5728\u6211\u4eec\u7406\u89e3 Pod \u7684\u65f6\u5019\uff0c\u6709\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u7c7b\u6bd4\u7684\u65b9\u5f0f\u5c31\u662f\u628a Pod \u770b\u6210\u6211\u4eec\u4e4b\u524d\u7684 \u201c\u865a\u62df\u673a\u201d\uff0c\u800c\u5bb9\u5668\u5c31\u662f\u865a\u62df\u673a\u4e2d\u8fd0\u884c\u7684\u4e00\u4e2a\u7528\u6237\u7a0b\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u597d\u7684\u6765\u7406\u89e3 Pod \u7684\u8bbe\u8ba1\u3002","title":"\u5982\u4f55\u5212\u5206 Pod"},{"location":"Foundation/YAML/","text":"YAML \u6587\u4ef6 \u00b6 YAML \u6587\u4ef6\u57fa\u672c\u8bed\u6cd5\u683c\u5f0f \u524d\u9762\u6211\u4eec\u5f97 Kubernetes \u96c6\u7fa4\u5df2\u7ecf\u642d\u5efa\u6210\u529f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u96c6\u7fa4\u91cc\u9762\u6765\u8dd1\u6211\u4eec\u7684\u5e94\u7528\u4e86\u3002\u8981\u5728\u96c6\u7fa4\u91cc\u9762\u8fd0\u884c\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u51e0\u4e2a\u6982\u5ff5\u3002 \u7b2c\u4e00\u4e2a\u5f53\u7136\u5c31\u662f\u5e94\u7528\u7684\u955c\u50cf\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684\u662f\u5bb9\u5668\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u5c06\u6211\u4eec\u7684\u5e94\u7528\u6253\u5305\u6210\u955c\u50cf\u3002\u955c\u50cf\u51c6\u5907\u597d\u4e86\uff0cKubernetes \u96c6\u7fa4\u4e5f\u51c6\u5907\u597d\u4e86\uff0c\u5176\u5b9e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6211\u4eec\u7684\u5e94\u7528\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\u4e86\u3002\u4f46\u662f\u955c\u50cf\u5230\u96c6\u7fa4\u4e2d\u8fd0\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u5982\u4f55\u5b8c\u6210\u5462\uff1f\u5fc5\u7136\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u6765\u63cf\u8ff0\u6211\u4eec\u7684\u5e94\u7528\uff0c\u7136\u540e\u628a\u8fd9\u4efd\u63cf\u8ff0\u544a\u8bc9\u96c6\u7fa4\uff0c\u7136\u540e\u96c6\u7fa4\u6309\u7167\u8fd9\u4e2a\u63cf\u8ff0\u6765\u90e8\u7f72\u5e94\u7528\u3002 \u5728\u4e4b\u524d Docker \u73af\u5883\u4e0b\u9762\u6211\u4eec\u662f\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4 docker run \u6765\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\u7684\uff0c\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u6211\u4eec\u540c\u6837\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c kubectl run \u8fd9\u6837\u7684\u547d\u4ee4\u6765\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\uff0c\u4f46\u662f\u5728 Kubernetes \u4e2d\u5374\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u5e0c\u671b\u4f7f\u7528\u6211\u4eec\u79f0\u4e3a\u8d44\u6e90\u6e05\u5355\u7684\u4e1c\u897f\u6765\u63cf\u8ff0\u5e94\u7528\uff0c\u8d44\u6e90\u6e05\u5355\u53ef\u4ee5\u7528 YAML \u6216\u8005 JSON \u6587\u4ef6\u6765\u7f16\u5199\uff0c\u4e00\u822c\u6765\u8bf4 YAML \u6587\u4ef6\u66f4\u65b9\u4fbf\u9605\u8bfb\u548c\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u8bfe\u7a0b\u4e2d\u90fd\u4f1a\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u8fdb\u884c\u63cf\u8ff0\u3002 \u901a\u8fc7\u4e00\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u6765\u5b9a\u4e49\u597d\u4e00\u4e2a\u5e94\u7528\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 kubectl \u5de5\u5177\u6765\u76f4\u63a5\u8fd0\u884c\u5b83\uff1a kubectl create -f xxxx.yaml \u6211\u4eec\u77e5\u9053 kubectl \u662f\u76f4\u63a5\u64cd\u4f5c APIServer \u7684\uff0c\u6240\u4ee5\u5c31\u76f8\u5f53\u4e8e\u628a\u6211\u4eec\u7684\u6e05\u5355\u63d0\u4ea4\u7ed9\u4e86 APIServer\uff0c\u7136\u540e\u96c6\u7fa4\u83b7\u53d6\u5230\u6e05\u5355\u63cf\u8ff0\u7684\u5e94\u7528\u4fe1\u606f\u540e\u5b58\u5165\u5230 etcd \u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540e kube-scheduler \u7ec4\u4ef6\u53d1\u73b0\u8fd9\u4e2a\u65f6\u5019\u6709\u4e00\u4e2a Pod \u8fd8\u6ca1\u6709\u7ed1\u5b9a\u5230\u8282\u70b9\u4e0a\uff0c\u5c31\u4f1a\u5bf9\u8fd9\u4e2a Pod \u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8c03\u5ea6\uff0c\u628a\u5b83\u8c03\u5ea6\u5230\u4e00\u4e2a\u6700\u5408\u9002\u7684\u8282\u70b9\u4e0a\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u8282\u70b9\u548c Pod \u7ed1\u5b9a\u5230\u4e00\u8d77\uff08\u5199\u56de\u5230 etcd\uff09\uff0c\u7136\u540e\u8282\u70b9\u4e0a\u7684 kubelet \u7ec4\u4ef6\u8fd9\u4e2a\u65f6\u5019 watch \u5230\u6709\u4e00\u4e2a Pod \u88ab\u5206\u914d\u8fc7\u6765\u4e86\uff0c\u5c31\u53bb\u628a\u8fd9\u4e2a Pod \u7684\u4fe1\u606f\u62c9\u53d6\u4e0b\u6765\uff0c\u7136\u540e\u6839\u636e\u63cf\u8ff0\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\u628a\u5bb9\u5668\u521b\u5efa\u51fa\u6765\uff0c\u6700\u540e\u5f53\u7136\u540c\u6837\u628a Pod \u72b6\u6001\u518d\u5199\u56de\u5230 etcd \u4e2d\u53bb\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u6574\u4e2a\u7684\u521b\u5efa\u6d41\u7a0b\u3002 \u7b2c\u4e00\u4e2a\u5bb9\u5668\u5316\u5e94\u7528 \u00b6 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u901a\u8fc7 YAML \u6587\u4ef6\u7f16\u5199\u4e86\u4e00\u4e2a\u5982\u4e0b\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u547d\u540d\u4e3a nginx-deployment.yaml\uff1a apiVersion : apps/v1 # API\u7248\u672c kind : Deployment # API\u5bf9\u8c61\u7c7b\u578b metadata : name : nginx-deploy labels : chapter : first-app spec : selector : matchLabels : app : nginx replicas : 2 # Pod \u526f\u672c\u6570\u91cf template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 \u7136\u540e\u76f4\u63a5\u7528 kubectl \u547d\u4ee4\u6765\u521b\u5efa\u8fd9\u4e2a\u5e94\u7528\uff1a $ kubectl create -f nginx-deployment.yaml deployment.apps/nginx-deploy created $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Running 0 7s nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 7s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f1a\u5728\u96c6\u7fa4\u4e2d\u751f\u6210\u4e24\u4e2a Pod \u51fa\u6765\u3002\u800c\u6574\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5bf9\u5e94\u5230 Kubernetes \u4e2d\u5c31\u662f\u4e00\u4e2a API Object\uff08API \u5bf9\u8c61\uff09\uff0c\u6211\u4eec\u6309\u7167\u8fd9\u4e9b\u5bf9\u8c61\u7684\u8981\u6c42\u586b\u5145\u4e0a\u5bf9\u5e94\u7684\u5c5e\u6027\u540e\uff0c\u63d0\u4ea4\u7ed9 Kubernetes \u96c6\u7fa4\uff0c\u5c31\u53ef\u4ee5\u4e3a\u6211\u4eec\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u662f\u4e00\u4e2a Deployment \u7c7b\u578b\u7684 API \u5bf9\u8c61\uff0c\u6211\u4eec\u6309\u7167\u8fd9\u4e2a API \u5bf9\u8c61\u7684\u8981\u6c42\u586b\u5145\u4e86\u4e00\u4e9b\u5c5e\u6027\uff0c\u5c31\u4f1a\u4e3a\u6211\u4eec\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u83b7\u53d6\uff1a $ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 2 /2 2 2 12m Deployment \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u7528\u6765\u5b9a\u4e49\u591a\u526f\u672c\u5e94\u7528\u7684\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u652f\u6301\u5bf9\u6bcf\u4e2a\u526f\u672c\u8fdb\u884c\u6eda\u52a8\u66f4\u65b0\uff0c\u4e0a\u9762\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u7684\u63cf\u8ff0\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027 replicas: 2\uff0c\u6240\u4ee5\u6700\u540e\u751f\u6210\u4e24\u4e2a\u526f\u672c\u7684 Pod\u3002 \u800c\u8fd9\u4e2a Deployment \u5b9a\u4e49\u7684\u526f\u672c Pod \u5177\u4f53\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u662f\u901a\u8fc7\u4e0b\u9762\u7684 Pod \u6a21\u677f\u6765\u5b9a\u4e49\u7684\uff0c\u5c31\u662f template \u4e0b\u9762\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u6a21\u677f\u4e2d\u5b9a\u4e49\u4e86\u6211\u4eec\u7684 Pod \u4e2d\u53ea\u6709\u4e00\u4e2a\u540d\u4e3a nginx \u7684\u5bb9\u5668\uff0c\u5bb9\u5668\u4f7f\u7528\u7684\u955c\u50cf\u662f nginx:1.7.9 \uff08spec.containers[0].image\uff09\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5bb9\u5668\u76d1\u542c\u7684\u7aef\u53e3\u662f 80\uff08 spec.containers[0].ports[0].containerPort \uff09\uff0c\u53e6\u5916\u6211\u4eec\u8fd8\u4e3a Pod \u6dfb\u52a0\u4e86\u4e00\u4e2a app: nginx \u8fd9\u6837\u7684 Label \u6807\u7b7e\uff0c\u8fd9\u91cc\u9700\u8981\u975e\u5e38\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u7684 selector.matchLabels \u533a\u57df\u5c31\u662f\u6765\u8868\u793a\u6211\u4eec\u7684 Deployment \u6765\u7ba1\u7406\u54ea\u4e9b Pod \u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u548c Pod \u6a21\u677f\u4e2d\u7684 Label \u6807\u7b7e\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u4e2a Label \u6807\u7b7e\u4e4b\u524d\u6211\u4eec\u4e5f\u63d0\u5230\u8fc7\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u53e6\u5916\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a API \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a Metadata \u7684\u5b57\u6bb5\uff0c\u7528\u6765\u8868\u793a\u8be5\u5bf9\u8c61\u7684\u5143\u6570\u636e\u7684\uff0c\u6bd4\u5982\u5b9a\u4e49 name\u3001namespace \u7b49\uff0c\u6bd4\u5982\u4e0a\u9762 Deployment \u548c Pod \u6a21\u677f\u4e2d\u90fd\u6709\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48 Pod \u6a21\u677f\u4e2d\u6ca1\u6709 name \u8fd9\u4e2a\u5143\u4fe1\u606f\u5462\uff0c\u8fd9\u662f\u56e0\u4e3a Deployment \u8fd9\u4e2a\u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u5728\u4ed6\u81ea\u5df1\u7684 name \u57fa\u7840\u4e0a\u751f\u6210 Pod \u540d\uff0c\u4e0d\u8fc7 Deployment \u4e0b\u9762\u5b9a\u4e49\u7684 Label \u6807\u7b7e\u5c31\u6ca1\u6709 Pod \u4e2d\u5b9a\u4e49\u7684 Label \u6807\u7b7e\u90a3\u4e48\u91cd\u8981\u4e86\uff0c\u53ea\u662f\u8d77\u5230\u4e00\u4e2a\u5bf9\u8be5\u5bf9\u8c61\u6807\u8bc6\u548c\u8fc7\u6ee4\u7684\u4f5c\u7528\u3002\u6bd4\u5982\u6211\u4eec\u5728\u67e5\u8be2\u5bf9\u8c61\u7684\u65f6\u5019\u53ef\u4ee5\u5e26\u4e0a\u6807\u7b7e\u6765\u8fdb\u884c\u8fc7\u6ee4\uff1a $ kubectl get deployment -l chapter = first-app NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 2 /2 2 2 51m $ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Running 0 51m nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 51m \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528\u7684\u5bb9\u5668\u5316\u90e8\u7f72\uff0c\u4f46\u662f\u5f80\u5f80\u6211\u4eec\u5728\u90e8\u7f72\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u6216\u591a\u6216\u5c11\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a kubectl describe \u547d\u4ee4\u6765\u67e5\u770b\u8d44\u6e90\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6bd4\u5982\u6211\u4eec\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a $ kubectl describe pod nginx-deploy-54f57cf6bf-2fdjz Name: nginx-deploy-54f57cf6bf-2fdjz Namespace: default Priority: 0 Node: node2/10.151.30.23 Start Time: Sat, 09 Nov 2019 15 :20:32 +0800 Labels: app = nginx pod-template-hash = 54f57cf6bf Annotations: <none> Status: Running IP: 10 .244.2.199 IPs: IP: 10 .244.2.199 Controlled By: ReplicaSet/nginx-deploy-54f57cf6bf Containers: nginx: Container ID: docker://e40e78eee7a431b6e7277b414967cce936ac750e2a8ba30298302cdd89e54300 Image: nginx:1.7.9 Image ID: docker-pullable://nginx@sha256:e3456c851a152494c3e4ff5fcc26f240206abac0c9d794affb40e0714846c451 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Sat, 09 Nov 2019 15 :20:35 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-5tsh4 ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-5tsh4: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-5tsh4 Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled <unknown> default-scheduler Successfully assigned default/nginx-deploy-54f57cf6bf-2fdjz to node2 Normal Pulled 52m kubelet, node2 Container image \"nginx:1.7.9\" already present on machine Normal Created 52m kubelet, node2 Created container nginx Normal Started 52m kubelet, node2 Started container nginx \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u770b\u5230\u5f88\u591a\u8fd9\u4e2a Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6bd4\u5982\u8c03\u5ea6\u5230\u7684\u8282\u70b9\u3001\u72b6\u6001\u3001IP \u7b49\uff0c\u4e00\u822c\u6211\u4eec\u6bd4\u8f83\u5173\u5fc3\u7684\u662f\u4e0b\u9762\u7684 Events \u90e8\u5206\uff0c\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u4e8b\u4ef6\u3002 \u5728 Kubernetes \u521b\u5efa\u8d44\u6e90\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u8be5\u5bf9\u8c61\u7684\u4e00\u4e9b\u91cd\u8981\u64cd\u4f5c\uff0c\u90fd\u4f1a\u88ab\u8bb0\u5f55\u5728\u8fd9\u4e2a\u5bf9\u8c61\u7684 Events \u91cc\u9762\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl describe \u6307\u4ee4\u67e5\u770b\u5bf9\u5e94\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u8fd9\u4e2a\u6307\u4ee4\u4e5f\u4f1a\u662f\u4ee5\u540e\u6211\u4eec\u6392\u9519\u8fc7\u7a0b\u4e2d\u4f1a\u7ecf\u5e38\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u4e00\u5b9a\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u91cd\u8981\u7684\u547d\u4ee4\u3002\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u63cf\u8ff0\u7684\u8fd9\u4e2a Pod\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u88ab\u521b\u5efa\u4e4b\u540e\uff0c\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\uff08Successfully assigned\uff09\u5230\u4e86 node2 \u8282\u70b9\u4e0a\uff0c\u7136\u540e\u6307\u5b9a\u7684\u955c\u50cf\u5df2\u7ecf\u5728\u8be5\u8282\u70b9\u4e0a\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u518d\u53bb\u62c9\u53d6\u955c\u50cf\uff0c\u7136\u540e\u521b\u5efa\u6211\u4eec\u5b9a\u4e49\u7684 nginx \u5bb9\u5668\uff0c\u6700\u540e\u542f\u52a8\u5b9a\u4e49\u7684\u5bb9\u5668\u3002 \u53e6\u5916\u4e00\u4e2a\u65b9\u9762\u5982\u679c\u6211\u4eec\u76f8\u5bf9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u5347\u7ea7\u7684\u8bdd\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u8fd9\u4e2a\u64cd\u4f5c\u5728\u6211\u4eec\u65e5\u5e38\u5de5\u4f5c\u4e2d\u8fd8\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u800c\u5728 Kubernetes \u8fd9\u91cc\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5373\u53ef\uff0c\u6bd4\u5982\u6211\u4eec\u628a\u955c\u50cf\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c nginx:latest \uff1a ... spec : containers : - name : nginx image : nginx:latest # \u8fd9\u91cc\u88ab\u4ece 1.7.9 \u4fee\u6539\u4e3alatest ports : - containerPort : 80 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl apply \u547d\u4ee4\u6765\u76f4\u63a5\u66f4\u65b0\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u662f\u63a8\u8350\u6211\u4eec\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u4e0d\u5fc5\u5173\u5fc3\u5f53\u524d\u7684\u64cd\u4f5c\u662f\u521b\u5efa\uff0c\u8fd8\u662f\u66f4\u65b0\uff0c\u6267\u884c\u7684\u547d\u4ee4\u59cb\u7ec8\u662f kubectl apply \uff0cKubernetes \u5219\u4f1a\u6839\u636e YAML \u6587\u4ef6\u7684\u5185\u5bb9\u53d8\u5316\uff0c\u81ea\u52a8\u8fdb\u884c\u5177\u4f53\u7684\u5904\u7406\uff0c\u6240\u4ee5\u65e0\u8bba\u662f\u521b\u5efa\u8fd8\u662f\u66f4\u65b0\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff1a kubectl apply -f nginx-deployment.yaml \u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u5c31\u53ef\u4ee5\u6765\u66f4\u65b0\u6211\u4eec\u7684\u5e94\u7528\u4e86\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u4e00\u4e2a Deployment \u7684\u63a7\u5236\u5668\uff0c\u6240\u4ee5\u4f1a\u6eda\u52a8\u66f4\u65b0\u6211\u4eec\u7684\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u540e\u9762\u52a0\u4e0a --watch \u53c2\u6570\u6765\u67e5\u770b Pod \u7684\u66f4\u65b0\u8fc7\u7a0b\uff1a $ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 72m nginx-deploy-786b576769-69lrl 1 /1 Running 0 4s nginx-deploy-786b576769-wwmvz 0 /1 ContainerCreating 0 2s nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m nginx-deploy-786b576769-wwmvz 1 /1 Running 0 3s nginx-deploy-54f57cf6bf-57287 1 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m \u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u8fc7\u7a0b\u662f\u5148\u6740\u6389\u4e86\u4e00\u4e2a Pod\uff0c\u7136\u540e\u53c8\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u7136\u540e\u53c8\u6740\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u6837\u4ea4\u66ff\u66ff\u6362\u7684\uff0c\u6700\u540e\u5269\u4e0b\u4e24\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u6eda\u52a8\u66f4\u65b0\uff0c\u6eda\u52a8\u66f4\u65b0\u5bf9\u4e8e\u6211\u4eec\u7684\u5e94\u7528\u6301\u7eed\u63d0\u4f9b\u670d\u52a1\u662f\u975e\u5e38\u91cd\u8981\u7684\u624b\u6bb5\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u66f4\u65b0\u5e94\u7528\u80af\u5b9a\u4f1a\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u6700\u540e\uff0c\u5982\u679c\u9700\u8981\u628a\u6211\u4eec\u7684\u5e94\u7528\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664\u6389\uff0c\u53ef\u4ee5\u7528 kubectl delete \u547d\u4ee4\u6765\u6e05\u7406\uff1a kubectl delete -f nginx-deployment.yaml YAML \u6587\u4ef6 \u00b6 \u4e0a\u9762\u6211\u4eec\u5728 Kubernetes \u4e2d\u90e8\u7f72\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5bb9\u5668\u5316\u5e94\u7528\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u8981\u90e8\u7f72\u5e94\u7528\u6700\u91cd\u8981\u7684\u5c31\u662f\u7f16\u5199\u5e94\u7528\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5462\uff1f\u65e5\u5e38\u4f7f\u7528\u7684\u65f6\u5019\u6211\u4eec\u90fd\u662f\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u7f16\u5199\uff0c\u4f46\u662f\u73b0\u72b6\u5374\u662f\u5927\u90e8\u5206\u540c\u5b66\u5bf9 JSON \u66f4\u52a0\u719f\u6089\uff0c\u5bf9 YAML \u6587\u4ef6\u7684\u683c\u5f0f\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u6240\u4ee5\u4e5f\u5bfc\u81f4\u5f88\u591a\u540c\u5b66\u5728\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u7684\u65f6\u5019\u4f3c\u61c2\u975e\u61c2\u7684\u611f\u89c9\uff0c\u6240\u4ee5\u5728\u4e86\u89e3\u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u4e4b\u524d\u6211\u4eec\u975e\u5e38\u6709\u5fc5\u8981\u6765\u4e86\u89e3\u4e0b YAML \u6587\u4ef6\u7684\u7528\u6cd5\u3002 YAML \u662f\u4e13\u95e8\u7528\u6765\u5199\u914d\u7f6e\u6587\u4ef6\u7684\u8bed\u8a00\uff0c\u975e\u5e38\u7b80\u6d01\u548c\u5f3a\u5927\uff0c\u8fdc\u6bd4 JSON \u683c\u5f0f\u65b9\u4fbf\u3002 YAML \u8bed\u8a00\uff08\u53d1\u97f3 /\u02c8j\u00e6m\u0259l/\uff09\u7684\u8bbe\u8ba1\u76ee\u6807\uff0c\u5c31\u662f\u65b9\u4fbf\u4eba\u7c7b\u8bfb\u5199\u3002\u5b83\u5b9e\u8d28\u4e0a\u662f\u4e00\u79cd\u901a\u7528\u7684\u6570\u636e\u4e32\u884c\u5316\u683c\u5f0f\u3002 \u5b83\u7684\u57fa\u672c\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a \u5927\u5c0f\u5199\u654f\u611f \u4f7f\u7528\u7f29\u8fdb\u8868\u793a\u5c42\u7ea7\u5173\u7cfb \u7f29\u8fdb\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528Tab\u952e\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528\u7a7a\u683c \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u76ee\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u76f8\u540c\u5c42\u7ea7\u7684\u5143\u7d20\u5de6\u4fa7\u5bf9\u9f50\u5373\u53ef # \u8868\u793a\u6ce8\u91ca\uff0c\u4ece\u8fd9\u4e2a\u5b57\u7b26\u4e00\u76f4\u5230\u884c\u5c3e\uff0c\u90fd\u4f1a\u88ab\u89e3\u6790\u5668\u5ffd\u7565 \u5728 Kubernetes \u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e86\u89e3\u4e24\u79cd\u7ed3\u6784\u7c7b\u578b\u5c31\u884c\u4e86\uff1a Lists\uff08\u5217\u8868\uff09 Maps\uff08\u5b57\u5178\uff09 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u80fd\u4f1a\u9047\u5230 Lists \u7684 Maps \u548c Maps \u7684 Lists\uff0c\u7b49\u7b49\u3002\u4e0d\u8fc7\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f60\u53ea\u8981\u638c\u63e1\u4e86\u8fd9\u4e24\u79cd\u7ed3\u6784\u4e5f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u4ed6\u66f4\u52a0\u590d\u6742\u7684\u6211\u4eec\u6682\u4e0d\u8ba8\u8bba\u3002 Maps \u00b6 \u9996\u5148\u6211\u4eec\u6765\u770b\u770b Maps \uff0c\u6211\u4eec\u90fd\u77e5\u9053 Map \u662f\u5b57\u5178\uff0c\u5c31\u662f\u4e00\u4e2a key:value \u7684\u952e\u503c\u5bf9\uff0c Maps \u53ef\u4ee5\u8ba9\u6211\u4eec\u66f4\u52a0\u65b9\u4fbf\u7684\u53bb\u4e66\u5199\u914d\u7f6e\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a --- apiVersion : v1 kind : Pod \u7b2c\u4e00\u884c\u7684---\u662f\u5206\u9694\u7b26\uff0c\u662f\u53ef\u9009\u7684\uff0c\u5728\u5355\u4e00\u6587\u4ef6\u4e2d\uff0c\u53ef\u7528\u8fde\u7eed\u4e09\u4e2a\u8fde\u5b57\u53f7---\u533a\u5206\u591a\u4e2a\u6587\u4ef6\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u952e\uff1akind \u548c apiVersion\uff0c\u4ed6\u4eec\u5bf9\u5e94\u7684\u503c\u5206\u522b\u662f\uff1av1 \u548c Pod\u3002\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210 JSON \u683c\u5f0f\u7684\u8bdd\uff0c\u4f60\u80af\u5b9a\u5c31\u5bb9\u6613\u660e\u767d\u4e86\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"pod\" } \u6211\u4eec\u5728\u521b\u5efa\u4e00\u4e2a\u76f8\u5bf9\u590d\u6742\u4e00\u70b9\u7684 YAML \u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a KEY \u5bf9\u5e94\u7684\u503c\u4e0d\u662f\u5b57\u7b26\u4e32\u800c\u662f\u4e00\u4e2a Maps\uff1a --- apiVersion : v1 kind : Pod metadata : name : ydzs-site labels : app : web \u4e0a\u9762\u7684 YAML \u6587\u4ef6\uff0cmetadata \u8fd9\u4e2a KEY \u5bf9\u5e94\u7684\u503c\u5c31\u662f\u4e00\u4e2a Maps \u4e86\uff0c\u800c\u4e14\u5d4c\u5957\u7684 labels \u8fd9\u4e2a KEY \u7684\u503c\u53c8\u662f\u4e00\u4e2a Map\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u60c5\u51b5\u8fdb\u884c\u591a\u5c42\u5d4c\u5957\u3002 \u4e0a\u9762\u6211\u4eec\u4e5f\u63d0\u5230\u4e86 YAML \u6587\u4ef6\u7684\u8bed\u6cd5\u89c4\u5219\uff0cYAML \u5904\u7406\u5668\u662f\u6839\u636e\u884c\u7f29\u8fdb\u6765\u77e5\u9053\u5185\u5bb9\u4e4b\u95f4\u7684\u55ef\u5173\u8054\u6027\u7684\u3002\u6bd4\u5982\u6211\u4eec\u4e0a\u9762\u7684 YAML \u6587\u4ef6\uff0c \u6211\u7528\u4e86\u4e24\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\uff0c\u7a7a\u683c\u7684\u6570\u91cf\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u662f\u4f60\u5f97\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u81f3\u5c11\u8981\u6c42\u4e00\u4e2a\u7a7a\u683c \uff08\u4ec0\u4e48\u610f\u601d\uff1f\u5c31\u662f\u4f60\u522b\u4e00\u4f1a\u7f29\u8fdb\u4e24\u4e2a\u7a7a\u683c\uff0c\u4e00\u4f1a\u7f29\u8fdb4\u4e2a\u7a7a\u683c\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230 name \u548c labels \u662f\u76f8\u540c\u7ea7\u522b\u7684\u7f29\u8fdb\uff0c\u6240\u4ee5 YAML \u5904\u7406\u5668\u5c31\u77e5\u9053\u4e86\u4ed6\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a Map\uff0c\u800c app \u662f labels \u7684\u503c\u662f\u56e0\u4e3a app \u7684\u7f29\u8fdb\u66f4\u5927\u3002 \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 YAML \u6587\u4ef6\u4e2d\u7edd\u5bf9\u4e0d\u8981\u4f7f\u7528 tab \u952e\u6765\u8fdb\u884c\u7f29\u8fdb\u3002 \u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210 JSON \u6587\u4ef6\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"Pod\" , \"metadata\" : { \"name\" : \"kube100-site\" , \"labels\" : { \"app\" : \"web\" } } } \u6216\u8bb8\u4f60\u5bf9\u4e0a\u9762\u7684 JSON \u6587\u4ef6\u66f4\u719f\u6089\uff0c\u4f46\u662f\u4f60\u4e0d\u5f97\u4e0d\u627f\u8ba4 YAML \u6587\u4ef6\u7684\u8bed\u4e49\u5316\u7a0b\u5ea6\u66f4\u9ad8\u5427\uff1f Lists \u00b6 Lists\u5c31\u662f\u5217\u8868\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u6570\u7ec4\uff0c\u5728 YAML \u6587\u4ef6\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a args - Cat - Dog - Fish \u4f60\u53ef\u4ee5\u6709\u4efb\u4f55\u6570\u91cf\u7684\u9879\u5728\u5217\u8868\u4e2d\uff0c\u6bcf\u4e2a\u9879\u7684\u5b9a\u4e49\u4ee5\u7834\u6298\u53f7\uff08-\uff09\u5f00\u5934\u7684\uff0c\u4e0e\u7236\u5143\u7d20\u4e4b\u95f4\u53ef\u4ee5\u7f29\u8fdb\u4e5f\u53ef\u4ee5\u4e0d\u7f29\u8fdb\u3002\u5bf9\u5e94\u7684 JSON \u683c\u5f0f\u5982\u4e0b\uff1a { \"args\" : [ 'Ca t ' , 'Dog' , 'Fish' ] } \u5f53\u7136\uff0cLists \u7684\u5b50\u9879\u4e5f\u53ef\u4ee5\u662f Maps\uff0cMaps \u7684\u5b50\u9879\u4e5f\u53ef\u4ee5\u662f Lists \u5982\u4e0b\u6240\u793a\uff1a --- apiVersion : v1 kind : Pod metadata : name : ydzs-site labels : app : web spec : containers : - name : front-end image : nginx ports : - containerPort : 80 - name : flaskapp-demo image : cnych/flaskapp ports : - containerPort : 5000 \u6bd4\u5982\u8fd9\u4e2a YAML \u6587\u4ef6\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb containers \u7684 List \u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5b50\u9879\u90fd\u7531 name\u3001image\u3001ports \u7ec4\u6210\uff0c\u6bcf\u4e2a ports \u90fd\u6709\u4e00\u4e2a key \u4e3a containerPort \u7684 Map \u7ec4\u6210\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u6210\u5982\u4e0b JSON \u683c\u5f0f\u6587\u4ef6\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"Pod\" , \"metadata\" : { \"name\" : \"ydzs-site\" , \"labels\" : { \"app\" : \"web\" } }, \"spec\" : { \"containers\" : [{ \"name\" : \"front-end\" , \"image\" : \"nginx\" , \"ports\" : [{ \"containerPort\" : \"80\" }] }, { \"name\" : \"flaskapp-demo\" , \"image\" : \"cnych/flaskapp\" , \"ports\" : [{ \"containerPort\" : \"5000\" }] }] } } \u662f\u4e0d\u662f\u89c9\u5f97\u7528 JSON \u683c\u5f0f\u7684\u8bdd\u6587\u4ef6\u660e\u663e\u6bd4 YAML \u6587\u4ef6\u66f4\u590d\u6742\u4e86\u5462\uff1f \u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355 \u00b6 \u4e0a\u9762\u6211\u4eec\u4e86\u89e3\u4e86 YAML \u6587\u4ef6\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u73b0\u5728\u81f3\u5c11\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u7684\u7f16\u5199\u7684 YAML \u6587\u4ef6\u8bed\u6cd5\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u8981\u600e\u4e48\u7f16\u5199\u7b26\u5408 Kubernetes API \u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\u5462\uff1f\u6bd4\u5982\u6211\u4eec\u600e\u4e48\u77e5\u9053 Pod\u3001Deployment \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u6709\u54ea\u4e9b\u529f\u80fd\u3001\u6709\u54ea\u4e9b\u5b57\u6bb5\u5462\uff1f \u4e00\u4e9b\u7b80\u5355\u7684\u8d44\u6e90\u5bf9\u8c61\u6211\u4eec\u53ef\u80fd\u53ef\u4ee5\u51ed\u501f\u8bb0\u5fc6\u5199\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u4f46\u662f Kubernetes \u53d1\u5c55\u4e5f\u975e\u5e38\u5feb\uff0c\u7248\u672c\u8fed\u4ee3\u4e5f\u5f88\u5feb\uff0c\u6bcf\u4e2a\u7248\u672c\u4e2d\u8d44\u6e90\u5bf9\u8c61\u53ef\u80fd\u53c8\u6709\u5f88\u591a\u53d8\u5316\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u529e\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u5230\u6709\u7684\u653e\u77e2\u5462\uff1f \u5b9e\u9645\u4e0a\u662f\u6709\u7684\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u67e5\u627e Kubernetes API \u6587\u6863\uff0c\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u662f v1.22.2 \u7248\u672c\u7684\u96c6\u7fa4\uff0c\u53ef\u4ee5\u901a\u8fc7\u5730\u5740 https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/ \u67e5\u627e\u5230\u5bf9\u5e94\u7684 API \u6587\u6863\uff0c\u5728\u8fd9\u4e2a\u6587\u6863\u4e2d\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u7684\u4e00\u4e9b\u5b57\u6bb5\u3002 \u6bd4\u5982\u6211\u4eec\u8981\u4e86\u89e3\u521b\u5efa\u4e00\u4e2a Deployment \u8d44\u6e90\u5bf9\u8c61\u9700\u8981\u54ea\u4e9b\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u5f00\u4e0a\u9762\u7684 API \u6587\u6863\u9875\u9762\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f\u627e\u5230 Deployment v1 apps \uff0c\u70b9\u51fb\u4e0b\u9762\u7684 Write Operations \uff0c\u7136\u540e\u70b9\u51fb Create \uff0c\u7136\u540e\u6211\u4eec\u67e5\u627e\u5230\u521b\u5efa Deployment \u9700\u8981\u63d0\u4ea4\u7684 Body \u53c2\u6570 \u7136\u540e\u70b9\u51fb Body\uff0c\u8fdb\u5165\u5230\u53c2\u6570\u8be6\u60c5\u9875\uff1a \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa Deployment \u9700\u8981\u7684\u4e00\u4e9b\u5b57\u6bb5\u4e86\uff0c\u6bd4\u5982 apiVersion\u3001kind\u3001metadata\u3001spec \u7b49\uff0c\u800c\u4e14\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u5bf9\u5e94\u7684\u6587\u6863\u8bf4\u660e\uff0c\u6bd4\u5982\u6211\u4eec\u50cf\u8981\u4e86\u89e3 DeploymentSpec \u4e0b\u9762\u6709\u54ea\u4e9b\u5b57\u6bb5\uff0c\u7ee7\u7eed\u70b9\u51fb\u8fdb\u53bb\u67e5\u770b\u5c31\u884c\uff1a \u6bcf\u4e2a\u5b57\u6bb5\u5177\u4f53\u4ec0\u4e48\u542b\u4e49\u4ee5\u53ca\u6bcf\u4e2a\u5b57\u6bb5\u4e0b\u9762\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u5b57\u6bb5\u90fd\u53ef\u4ee5\u8fd9\u6837\u53bb\u8ffd\u6eaf\u3002 \u4f46\u662f\u5982\u679c\u5e73\u65f6\u6211\u4eec\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u7684\u65f6\u5019\u90fd\u8fd9\u6837\u53bb\u67e5\u627e\u6587\u6863\u52bf\u5fc5\u4f1a\u6548\u7387\u4f4e\u4e0b\uff0cKubernetes \u4e5f\u8003\u8651\u5230\u4e86\u8fd9\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 kubectl \u547d\u4ee4\u884c\u5de5\u5177\u6765\u83b7\u53d6\u8fd9\u4e9b\u5b57\u6bb5\u4fe1\u606f\uff0c\u540c\u6837\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u83b7\u53d6 Deployment \u7684\u5b57\u6bb5\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain \u547d\u4ee4\u6765\u4e86\u89e3\uff1a $ kubectl explain deployment KIND: Deployment VERSION: apps/v1 DESCRIPTION: Deployment enables declarative updates for Pods and ReplicaSets. FIELDS: apiVersion <string> APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources kind <string> Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds metadata <Object> Standard object metadata. spec <Object> Specification of the desired behavior of the Deployment. status <Object> Most recently observed status of the Deployment. \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4fe1\u606f\u548c\u6211\u4eec\u5728 API \u6587\u6863\u4e2d\u67e5\u770b\u5230\u7684\u57fa\u672c\u4e00\u81f4\uff0c\u6bd4\u5982\u6211\u4eec\u770b\u5230\u5176\u4e2d spec \u5b57\u6bb5\u662f\u4e00\u4e2a <Object> \u7c7b\u578b\u7684\uff0c\u8bc1\u660e\u8be5\u5b57\u6bb5\u4e0b\u9762\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u53bb\u67e5\u770b\u8fd9\u4e2a\u5b57\u6bb5\u4e0b\u9762\u7684\u8be6\u7ec6\u4fe1\u606f\uff1a $ kubectl explain deployment.spec KIND: Deployment VERSION: apps/v1 RESOURCE: spec <Object> DESCRIPTION: Specification of the desired behavior of the Deployment. DeploymentSpec is the specification of the desired behavior of the Deployment. FIELDS: minReadySeconds <integer> Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 ( pod will be considered available as soon as it is ready ) paused <boolean> Indicates that the deployment is paused. progressDeadlineSeconds <integer> The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s. replicas <integer> Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1 . revisionHistoryLimit <integer> The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10 . selector <Object> -required- Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template ' s labels. strategy <Object> The deployment strategy to use to replace existing pods with new ones. template <Object> -required- Template describes the pods that will be created. \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u663e\u793a\u7684\u662f required \uff0c\u8fd9\u5c31\u8bc1\u660e\u8be5\u81ea\u52a8\u662f\u5fc5\u586b\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u65f6\u5019\u5fc5\u987b\u58f0\u660e\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u4e5f\u90fd\u5b8c\u5168\u4e3a\u6211\u4eec\u8fdb\u884c\u4e86\u8bf4\u660e\uff0c\u6240\u4ee5\u6709\u4e86 kubectl explain \u8fd9\u4e2a\u547d\u4ee4\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u4e0d\u719f\u6089\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u6e05\u5355\u8bf4\u660e\u4e86\uff0c\u8fd9\u4e2a\u547d\u4ee4\u6211\u4eec\u4e5f\u662f\u5fc5\u987b\u8981\u8bb0\u4f4f\u7684\uff0c\u4f1a\u5728\u4ee5\u540e\u7684\u5de5\u4f5c\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u5f88\u5927\u7684\u5e2e\u52a9\u3002","title":"\u8d44\u6e90\u6e05\u5355"},{"location":"Foundation/YAML/#yaml","text":"YAML \u6587\u4ef6\u57fa\u672c\u8bed\u6cd5\u683c\u5f0f \u524d\u9762\u6211\u4eec\u5f97 Kubernetes \u96c6\u7fa4\u5df2\u7ecf\u642d\u5efa\u6210\u529f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u96c6\u7fa4\u91cc\u9762\u6765\u8dd1\u6211\u4eec\u7684\u5e94\u7528\u4e86\u3002\u8981\u5728\u96c6\u7fa4\u91cc\u9762\u8fd0\u884c\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u51e0\u4e2a\u6982\u5ff5\u3002 \u7b2c\u4e00\u4e2a\u5f53\u7136\u5c31\u662f\u5e94\u7528\u7684\u955c\u50cf\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684\u662f\u5bb9\u5668\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u5c06\u6211\u4eec\u7684\u5e94\u7528\u6253\u5305\u6210\u955c\u50cf\u3002\u955c\u50cf\u51c6\u5907\u597d\u4e86\uff0cKubernetes \u96c6\u7fa4\u4e5f\u51c6\u5907\u597d\u4e86\uff0c\u5176\u5b9e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6211\u4eec\u7684\u5e94\u7528\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\u4e86\u3002\u4f46\u662f\u955c\u50cf\u5230\u96c6\u7fa4\u4e2d\u8fd0\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u5982\u4f55\u5b8c\u6210\u5462\uff1f\u5fc5\u7136\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u6765\u63cf\u8ff0\u6211\u4eec\u7684\u5e94\u7528\uff0c\u7136\u540e\u628a\u8fd9\u4efd\u63cf\u8ff0\u544a\u8bc9\u96c6\u7fa4\uff0c\u7136\u540e\u96c6\u7fa4\u6309\u7167\u8fd9\u4e2a\u63cf\u8ff0\u6765\u90e8\u7f72\u5e94\u7528\u3002 \u5728\u4e4b\u524d Docker \u73af\u5883\u4e0b\u9762\u6211\u4eec\u662f\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4 docker run \u6765\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\u7684\uff0c\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u6211\u4eec\u540c\u6837\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c kubectl run \u8fd9\u6837\u7684\u547d\u4ee4\u6765\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\uff0c\u4f46\u662f\u5728 Kubernetes \u4e2d\u5374\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u5e0c\u671b\u4f7f\u7528\u6211\u4eec\u79f0\u4e3a\u8d44\u6e90\u6e05\u5355\u7684\u4e1c\u897f\u6765\u63cf\u8ff0\u5e94\u7528\uff0c\u8d44\u6e90\u6e05\u5355\u53ef\u4ee5\u7528 YAML \u6216\u8005 JSON \u6587\u4ef6\u6765\u7f16\u5199\uff0c\u4e00\u822c\u6765\u8bf4 YAML \u6587\u4ef6\u66f4\u65b9\u4fbf\u9605\u8bfb\u548c\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u8bfe\u7a0b\u4e2d\u90fd\u4f1a\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u8fdb\u884c\u63cf\u8ff0\u3002 \u901a\u8fc7\u4e00\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u6765\u5b9a\u4e49\u597d\u4e00\u4e2a\u5e94\u7528\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 kubectl \u5de5\u5177\u6765\u76f4\u63a5\u8fd0\u884c\u5b83\uff1a kubectl create -f xxxx.yaml \u6211\u4eec\u77e5\u9053 kubectl \u662f\u76f4\u63a5\u64cd\u4f5c APIServer \u7684\uff0c\u6240\u4ee5\u5c31\u76f8\u5f53\u4e8e\u628a\u6211\u4eec\u7684\u6e05\u5355\u63d0\u4ea4\u7ed9\u4e86 APIServer\uff0c\u7136\u540e\u96c6\u7fa4\u83b7\u53d6\u5230\u6e05\u5355\u63cf\u8ff0\u7684\u5e94\u7528\u4fe1\u606f\u540e\u5b58\u5165\u5230 etcd \u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540e kube-scheduler \u7ec4\u4ef6\u53d1\u73b0\u8fd9\u4e2a\u65f6\u5019\u6709\u4e00\u4e2a Pod \u8fd8\u6ca1\u6709\u7ed1\u5b9a\u5230\u8282\u70b9\u4e0a\uff0c\u5c31\u4f1a\u5bf9\u8fd9\u4e2a Pod \u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8c03\u5ea6\uff0c\u628a\u5b83\u8c03\u5ea6\u5230\u4e00\u4e2a\u6700\u5408\u9002\u7684\u8282\u70b9\u4e0a\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u8282\u70b9\u548c Pod \u7ed1\u5b9a\u5230\u4e00\u8d77\uff08\u5199\u56de\u5230 etcd\uff09\uff0c\u7136\u540e\u8282\u70b9\u4e0a\u7684 kubelet \u7ec4\u4ef6\u8fd9\u4e2a\u65f6\u5019 watch \u5230\u6709\u4e00\u4e2a Pod \u88ab\u5206\u914d\u8fc7\u6765\u4e86\uff0c\u5c31\u53bb\u628a\u8fd9\u4e2a Pod \u7684\u4fe1\u606f\u62c9\u53d6\u4e0b\u6765\uff0c\u7136\u540e\u6839\u636e\u63cf\u8ff0\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\u628a\u5bb9\u5668\u521b\u5efa\u51fa\u6765\uff0c\u6700\u540e\u5f53\u7136\u540c\u6837\u628a Pod \u72b6\u6001\u518d\u5199\u56de\u5230 etcd \u4e2d\u53bb\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u6574\u4e2a\u7684\u521b\u5efa\u6d41\u7a0b\u3002","title":"YAML \u6587\u4ef6"},{"location":"Foundation/YAML/#_1","text":"\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u901a\u8fc7 YAML \u6587\u4ef6\u7f16\u5199\u4e86\u4e00\u4e2a\u5982\u4e0b\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u547d\u540d\u4e3a nginx-deployment.yaml\uff1a apiVersion : apps/v1 # API\u7248\u672c kind : Deployment # API\u5bf9\u8c61\u7c7b\u578b metadata : name : nginx-deploy labels : chapter : first-app spec : selector : matchLabels : app : nginx replicas : 2 # Pod \u526f\u672c\u6570\u91cf template : # Pod \u6a21\u677f metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.7.9 ports : - containerPort : 80 \u7136\u540e\u76f4\u63a5\u7528 kubectl \u547d\u4ee4\u6765\u521b\u5efa\u8fd9\u4e2a\u5e94\u7528\uff1a $ kubectl create -f nginx-deployment.yaml deployment.apps/nginx-deploy created $ kubectl get pods NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Running 0 7s nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 7s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f1a\u5728\u96c6\u7fa4\u4e2d\u751f\u6210\u4e24\u4e2a Pod \u51fa\u6765\u3002\u800c\u6574\u4e2a\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5bf9\u5e94\u5230 Kubernetes \u4e2d\u5c31\u662f\u4e00\u4e2a API Object\uff08API \u5bf9\u8c61\uff09\uff0c\u6211\u4eec\u6309\u7167\u8fd9\u4e9b\u5bf9\u8c61\u7684\u8981\u6c42\u586b\u5145\u4e0a\u5bf9\u5e94\u7684\u5c5e\u6027\u540e\uff0c\u63d0\u4ea4\u7ed9 Kubernetes \u96c6\u7fa4\uff0c\u5c31\u53ef\u4ee5\u4e3a\u6211\u4eec\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u662f\u4e00\u4e2a Deployment \u7c7b\u578b\u7684 API \u5bf9\u8c61\uff0c\u6211\u4eec\u6309\u7167\u8fd9\u4e2a API \u5bf9\u8c61\u7684\u8981\u6c42\u586b\u5145\u4e86\u4e00\u4e9b\u5c5e\u6027\uff0c\u5c31\u4f1a\u4e3a\u6211\u4eec\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u83b7\u53d6\uff1a $ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 2 /2 2 2 12m Deployment \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u7528\u6765\u5b9a\u4e49\u591a\u526f\u672c\u5e94\u7528\u7684\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u652f\u6301\u5bf9\u6bcf\u4e2a\u526f\u672c\u8fdb\u884c\u6eda\u52a8\u66f4\u65b0\uff0c\u4e0a\u9762\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u7684\u63cf\u8ff0\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027 replicas: 2\uff0c\u6240\u4ee5\u6700\u540e\u751f\u6210\u4e24\u4e2a\u526f\u672c\u7684 Pod\u3002 \u800c\u8fd9\u4e2a Deployment \u5b9a\u4e49\u7684\u526f\u672c Pod \u5177\u4f53\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u662f\u901a\u8fc7\u4e0b\u9762\u7684 Pod \u6a21\u677f\u6765\u5b9a\u4e49\u7684\uff0c\u5c31\u662f template \u4e0b\u9762\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u6a21\u677f\u4e2d\u5b9a\u4e49\u4e86\u6211\u4eec\u7684 Pod \u4e2d\u53ea\u6709\u4e00\u4e2a\u540d\u4e3a nginx \u7684\u5bb9\u5668\uff0c\u5bb9\u5668\u4f7f\u7528\u7684\u955c\u50cf\u662f nginx:1.7.9 \uff08spec.containers[0].image\uff09\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5bb9\u5668\u76d1\u542c\u7684\u7aef\u53e3\u662f 80\uff08 spec.containers[0].ports[0].containerPort \uff09\uff0c\u53e6\u5916\u6211\u4eec\u8fd8\u4e3a Pod \u6dfb\u52a0\u4e86\u4e00\u4e2a app: nginx \u8fd9\u6837\u7684 Label \u6807\u7b7e\uff0c\u8fd9\u91cc\u9700\u8981\u975e\u5e38\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u7684 selector.matchLabels \u533a\u57df\u5c31\u662f\u6765\u8868\u793a\u6211\u4eec\u7684 Deployment \u6765\u7ba1\u7406\u54ea\u4e9b Pod \u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u548c Pod \u6a21\u677f\u4e2d\u7684 Label \u6807\u7b7e\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u4e2a Label \u6807\u7b7e\u4e4b\u524d\u6211\u4eec\u4e5f\u63d0\u5230\u8fc7\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u53e6\u5916\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a API \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a Metadata \u7684\u5b57\u6bb5\uff0c\u7528\u6765\u8868\u793a\u8be5\u5bf9\u8c61\u7684\u5143\u6570\u636e\u7684\uff0c\u6bd4\u5982\u5b9a\u4e49 name\u3001namespace \u7b49\uff0c\u6bd4\u5982\u4e0a\u9762 Deployment \u548c Pod \u6a21\u677f\u4e2d\u90fd\u6709\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48 Pod \u6a21\u677f\u4e2d\u6ca1\u6709 name \u8fd9\u4e2a\u5143\u4fe1\u606f\u5462\uff0c\u8fd9\u662f\u56e0\u4e3a Deployment \u8fd9\u4e2a\u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u5728\u4ed6\u81ea\u5df1\u7684 name \u57fa\u7840\u4e0a\u751f\u6210 Pod \u540d\uff0c\u4e0d\u8fc7 Deployment \u4e0b\u9762\u5b9a\u4e49\u7684 Label \u6807\u7b7e\u5c31\u6ca1\u6709 Pod \u4e2d\u5b9a\u4e49\u7684 Label \u6807\u7b7e\u90a3\u4e48\u91cd\u8981\u4e86\uff0c\u53ea\u662f\u8d77\u5230\u4e00\u4e2a\u5bf9\u8be5\u5bf9\u8c61\u6807\u8bc6\u548c\u8fc7\u6ee4\u7684\u4f5c\u7528\u3002\u6bd4\u5982\u6211\u4eec\u5728\u67e5\u8be2\u5bf9\u8c61\u7684\u65f6\u5019\u53ef\u4ee5\u5e26\u4e0a\u6807\u7b7e\u6765\u8fdb\u884c\u8fc7\u6ee4\uff1a $ kubectl get deployment -l chapter = first-app NAME READY UP-TO-DATE AVAILABLE AGE nginx-deploy 2 /2 2 2 51m $ kubectl get pods -l app = nginx NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Running 0 51m nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 51m \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5e94\u7528\u7684\u5bb9\u5668\u5316\u90e8\u7f72\uff0c\u4f46\u662f\u5f80\u5f80\u6211\u4eec\u5728\u90e8\u7f72\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u6216\u591a\u6216\u5c11\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a kubectl describe \u547d\u4ee4\u6765\u67e5\u770b\u8d44\u6e90\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6bd4\u5982\u6211\u4eec\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff1a $ kubectl describe pod nginx-deploy-54f57cf6bf-2fdjz Name: nginx-deploy-54f57cf6bf-2fdjz Namespace: default Priority: 0 Node: node2/10.151.30.23 Start Time: Sat, 09 Nov 2019 15 :20:32 +0800 Labels: app = nginx pod-template-hash = 54f57cf6bf Annotations: <none> Status: Running IP: 10 .244.2.199 IPs: IP: 10 .244.2.199 Controlled By: ReplicaSet/nginx-deploy-54f57cf6bf Containers: nginx: Container ID: docker://e40e78eee7a431b6e7277b414967cce936ac750e2a8ba30298302cdd89e54300 Image: nginx:1.7.9 Image ID: docker-pullable://nginx@sha256:e3456c851a152494c3e4ff5fcc26f240206abac0c9d794affb40e0714846c451 Port: 80 /TCP Host Port: 0 /TCP State: Running Started: Sat, 09 Nov 2019 15 :20:35 +0800 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-5tsh4 ( ro ) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-5tsh4: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-5tsh4 Optional: false QoS Class: BestEffort Node-Selectors: <none> Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled <unknown> default-scheduler Successfully assigned default/nginx-deploy-54f57cf6bf-2fdjz to node2 Normal Pulled 52m kubelet, node2 Container image \"nginx:1.7.9\" already present on machine Normal Created 52m kubelet, node2 Created container nginx Normal Started 52m kubelet, node2 Started container nginx \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u770b\u5230\u5f88\u591a\u8fd9\u4e2a Pod \u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6bd4\u5982\u8c03\u5ea6\u5230\u7684\u8282\u70b9\u3001\u72b6\u6001\u3001IP \u7b49\uff0c\u4e00\u822c\u6211\u4eec\u6bd4\u8f83\u5173\u5fc3\u7684\u662f\u4e0b\u9762\u7684 Events \u90e8\u5206\uff0c\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u4e8b\u4ef6\u3002 \u5728 Kubernetes \u521b\u5efa\u8d44\u6e90\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u8be5\u5bf9\u8c61\u7684\u4e00\u4e9b\u91cd\u8981\u64cd\u4f5c\uff0c\u90fd\u4f1a\u88ab\u8bb0\u5f55\u5728\u8fd9\u4e2a\u5bf9\u8c61\u7684 Events \u91cc\u9762\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl describe \u6307\u4ee4\u67e5\u770b\u5bf9\u5e94\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u8fd9\u4e2a\u6307\u4ee4\u4e5f\u4f1a\u662f\u4ee5\u540e\u6211\u4eec\u6392\u9519\u8fc7\u7a0b\u4e2d\u4f1a\u7ecf\u5e38\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u4e00\u5b9a\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u91cd\u8981\u7684\u547d\u4ee4\u3002\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u63cf\u8ff0\u7684\u8fd9\u4e2a Pod\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u88ab\u521b\u5efa\u4e4b\u540e\uff0c\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\uff08Successfully assigned\uff09\u5230\u4e86 node2 \u8282\u70b9\u4e0a\uff0c\u7136\u540e\u6307\u5b9a\u7684\u955c\u50cf\u5df2\u7ecf\u5728\u8be5\u8282\u70b9\u4e0a\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u518d\u53bb\u62c9\u53d6\u955c\u50cf\uff0c\u7136\u540e\u521b\u5efa\u6211\u4eec\u5b9a\u4e49\u7684 nginx \u5bb9\u5668\uff0c\u6700\u540e\u542f\u52a8\u5b9a\u4e49\u7684\u5bb9\u5668\u3002 \u53e6\u5916\u4e00\u4e2a\u65b9\u9762\u5982\u679c\u6211\u4eec\u76f8\u5bf9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u5347\u7ea7\u7684\u8bdd\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u8fd9\u4e2a\u64cd\u4f5c\u5728\u6211\u4eec\u65e5\u5e38\u5de5\u4f5c\u4e2d\u8fd8\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u800c\u5728 Kubernetes \u8fd9\u91cc\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5373\u53ef\uff0c\u6bd4\u5982\u6211\u4eec\u628a\u955c\u50cf\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c nginx:latest \uff1a ... spec : containers : - name : nginx image : nginx:latest # \u8fd9\u91cc\u88ab\u4ece 1.7.9 \u4fee\u6539\u4e3alatest ports : - containerPort : 80 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl apply \u547d\u4ee4\u6765\u76f4\u63a5\u66f4\u65b0\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u662f\u63a8\u8350\u6211\u4eec\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u4e0d\u5fc5\u5173\u5fc3\u5f53\u524d\u7684\u64cd\u4f5c\u662f\u521b\u5efa\uff0c\u8fd8\u662f\u66f4\u65b0\uff0c\u6267\u884c\u7684\u547d\u4ee4\u59cb\u7ec8\u662f kubectl apply \uff0cKubernetes \u5219\u4f1a\u6839\u636e YAML \u6587\u4ef6\u7684\u5185\u5bb9\u53d8\u5316\uff0c\u81ea\u52a8\u8fdb\u884c\u5177\u4f53\u7684\u5904\u7406\uff0c\u6240\u4ee5\u65e0\u8bba\u662f\u521b\u5efa\u8fd8\u662f\u66f4\u65b0\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff1a kubectl apply -f nginx-deployment.yaml \u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u5c31\u53ef\u4ee5\u6765\u66f4\u65b0\u6211\u4eec\u7684\u5e94\u7528\u4e86\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u4e00\u4e2a Deployment \u7684\u63a7\u5236\u5668\uff0c\u6240\u4ee5\u4f1a\u6eda\u52a8\u66f4\u65b0\u6211\u4eec\u7684\u5e94\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u540e\u9762\u52a0\u4e0a --watch \u53c2\u6570\u6765\u67e5\u770b Pod \u7684\u66f4\u65b0\u8fc7\u7a0b\uff1a $ kubectl get pods -l app = nginx --watch NAME READY STATUS RESTARTS AGE nginx-deploy-54f57cf6bf-2fdjz 1 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 1 /1 Running 0 72m nginx-deploy-786b576769-69lrl 1 /1 Running 0 4s nginx-deploy-786b576769-wwmvz 0 /1 ContainerCreating 0 2s nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m nginx-deploy-786b576769-wwmvz 1 /1 Running 0 3s nginx-deploy-54f57cf6bf-57287 1 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-57287 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m nginx-deploy-54f57cf6bf-2fdjz 0 /1 Terminating 0 72m \u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u8fc7\u7a0b\u662f\u5148\u6740\u6389\u4e86\u4e00\u4e2a Pod\uff0c\u7136\u540e\u53c8\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u7136\u540e\u53c8\u6740\u6389\u4e00\u4e2a\u65e7\u7684 Pod\uff0c\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u6837\u4ea4\u66ff\u66ff\u6362\u7684\uff0c\u6700\u540e\u5269\u4e0b\u4e24\u4e2a\u65b0\u7684 Pod\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u6eda\u52a8\u66f4\u65b0\uff0c\u6eda\u52a8\u66f4\u65b0\u5bf9\u4e8e\u6211\u4eec\u7684\u5e94\u7528\u6301\u7eed\u63d0\u4f9b\u670d\u52a1\u662f\u975e\u5e38\u91cd\u8981\u7684\u624b\u6bb5\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u66f4\u65b0\u5e94\u7528\u80af\u5b9a\u4f1a\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u6700\u540e\uff0c\u5982\u679c\u9700\u8981\u628a\u6211\u4eec\u7684\u5e94\u7528\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664\u6389\uff0c\u53ef\u4ee5\u7528 kubectl delete \u547d\u4ee4\u6765\u6e05\u7406\uff1a kubectl delete -f nginx-deployment.yaml","title":"\u7b2c\u4e00\u4e2a\u5bb9\u5668\u5316\u5e94\u7528"},{"location":"Foundation/YAML/#yaml_1","text":"\u4e0a\u9762\u6211\u4eec\u5728 Kubernetes \u4e2d\u90e8\u7f72\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5bb9\u5668\u5316\u5e94\u7528\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u8981\u90e8\u7f72\u5e94\u7528\u6700\u91cd\u8981\u7684\u5c31\u662f\u7f16\u5199\u5e94\u7528\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5462\uff1f\u65e5\u5e38\u4f7f\u7528\u7684\u65f6\u5019\u6211\u4eec\u90fd\u662f\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u7f16\u5199\uff0c\u4f46\u662f\u73b0\u72b6\u5374\u662f\u5927\u90e8\u5206\u540c\u5b66\u5bf9 JSON \u66f4\u52a0\u719f\u6089\uff0c\u5bf9 YAML \u6587\u4ef6\u7684\u683c\u5f0f\u4e0d\u662f\u5f88\u719f\u6089\uff0c\u6240\u4ee5\u4e5f\u5bfc\u81f4\u5f88\u591a\u540c\u5b66\u5728\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u7684\u65f6\u5019\u4f3c\u61c2\u975e\u61c2\u7684\u611f\u89c9\uff0c\u6240\u4ee5\u5728\u4e86\u89e3\u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u4e4b\u524d\u6211\u4eec\u975e\u5e38\u6709\u5fc5\u8981\u6765\u4e86\u89e3\u4e0b YAML \u6587\u4ef6\u7684\u7528\u6cd5\u3002 YAML \u662f\u4e13\u95e8\u7528\u6765\u5199\u914d\u7f6e\u6587\u4ef6\u7684\u8bed\u8a00\uff0c\u975e\u5e38\u7b80\u6d01\u548c\u5f3a\u5927\uff0c\u8fdc\u6bd4 JSON \u683c\u5f0f\u65b9\u4fbf\u3002 YAML \u8bed\u8a00\uff08\u53d1\u97f3 /\u02c8j\u00e6m\u0259l/\uff09\u7684\u8bbe\u8ba1\u76ee\u6807\uff0c\u5c31\u662f\u65b9\u4fbf\u4eba\u7c7b\u8bfb\u5199\u3002\u5b83\u5b9e\u8d28\u4e0a\u662f\u4e00\u79cd\u901a\u7528\u7684\u6570\u636e\u4e32\u884c\u5316\u683c\u5f0f\u3002 \u5b83\u7684\u57fa\u672c\u8bed\u6cd5\u89c4\u5219\u5982\u4e0b\uff1a \u5927\u5c0f\u5199\u654f\u611f \u4f7f\u7528\u7f29\u8fdb\u8868\u793a\u5c42\u7ea7\u5173\u7cfb \u7f29\u8fdb\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528Tab\u952e\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528\u7a7a\u683c \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u76ee\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u76f8\u540c\u5c42\u7ea7\u7684\u5143\u7d20\u5de6\u4fa7\u5bf9\u9f50\u5373\u53ef # \u8868\u793a\u6ce8\u91ca\uff0c\u4ece\u8fd9\u4e2a\u5b57\u7b26\u4e00\u76f4\u5230\u884c\u5c3e\uff0c\u90fd\u4f1a\u88ab\u89e3\u6790\u5668\u5ffd\u7565 \u5728 Kubernetes \u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e86\u89e3\u4e24\u79cd\u7ed3\u6784\u7c7b\u578b\u5c31\u884c\u4e86\uff1a Lists\uff08\u5217\u8868\uff09 Maps\uff08\u5b57\u5178\uff09 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u80fd\u4f1a\u9047\u5230 Lists \u7684 Maps \u548c Maps \u7684 Lists\uff0c\u7b49\u7b49\u3002\u4e0d\u8fc7\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f60\u53ea\u8981\u638c\u63e1\u4e86\u8fd9\u4e24\u79cd\u7ed3\u6784\u4e5f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u4ed6\u66f4\u52a0\u590d\u6742\u7684\u6211\u4eec\u6682\u4e0d\u8ba8\u8bba\u3002","title":"YAML \u6587\u4ef6"},{"location":"Foundation/YAML/#maps","text":"\u9996\u5148\u6211\u4eec\u6765\u770b\u770b Maps \uff0c\u6211\u4eec\u90fd\u77e5\u9053 Map \u662f\u5b57\u5178\uff0c\u5c31\u662f\u4e00\u4e2a key:value \u7684\u952e\u503c\u5bf9\uff0c Maps \u53ef\u4ee5\u8ba9\u6211\u4eec\u66f4\u52a0\u65b9\u4fbf\u7684\u53bb\u4e66\u5199\u914d\u7f6e\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a --- apiVersion : v1 kind : Pod \u7b2c\u4e00\u884c\u7684---\u662f\u5206\u9694\u7b26\uff0c\u662f\u53ef\u9009\u7684\uff0c\u5728\u5355\u4e00\u6587\u4ef6\u4e2d\uff0c\u53ef\u7528\u8fde\u7eed\u4e09\u4e2a\u8fde\u5b57\u53f7---\u533a\u5206\u591a\u4e2a\u6587\u4ef6\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u952e\uff1akind \u548c apiVersion\uff0c\u4ed6\u4eec\u5bf9\u5e94\u7684\u503c\u5206\u522b\u662f\uff1av1 \u548c Pod\u3002\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210 JSON \u683c\u5f0f\u7684\u8bdd\uff0c\u4f60\u80af\u5b9a\u5c31\u5bb9\u6613\u660e\u767d\u4e86\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"pod\" } \u6211\u4eec\u5728\u521b\u5efa\u4e00\u4e2a\u76f8\u5bf9\u590d\u6742\u4e00\u70b9\u7684 YAML \u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a KEY \u5bf9\u5e94\u7684\u503c\u4e0d\u662f\u5b57\u7b26\u4e32\u800c\u662f\u4e00\u4e2a Maps\uff1a --- apiVersion : v1 kind : Pod metadata : name : ydzs-site labels : app : web \u4e0a\u9762\u7684 YAML \u6587\u4ef6\uff0cmetadata \u8fd9\u4e2a KEY \u5bf9\u5e94\u7684\u503c\u5c31\u662f\u4e00\u4e2a Maps \u4e86\uff0c\u800c\u4e14\u5d4c\u5957\u7684 labels \u8fd9\u4e2a KEY \u7684\u503c\u53c8\u662f\u4e00\u4e2a Map\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u60c5\u51b5\u8fdb\u884c\u591a\u5c42\u5d4c\u5957\u3002 \u4e0a\u9762\u6211\u4eec\u4e5f\u63d0\u5230\u4e86 YAML \u6587\u4ef6\u7684\u8bed\u6cd5\u89c4\u5219\uff0cYAML \u5904\u7406\u5668\u662f\u6839\u636e\u884c\u7f29\u8fdb\u6765\u77e5\u9053\u5185\u5bb9\u4e4b\u95f4\u7684\u55ef\u5173\u8054\u6027\u7684\u3002\u6bd4\u5982\u6211\u4eec\u4e0a\u9762\u7684 YAML \u6587\u4ef6\uff0c \u6211\u7528\u4e86\u4e24\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\uff0c\u7a7a\u683c\u7684\u6570\u91cf\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u662f\u4f60\u5f97\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u81f3\u5c11\u8981\u6c42\u4e00\u4e2a\u7a7a\u683c \uff08\u4ec0\u4e48\u610f\u601d\uff1f\u5c31\u662f\u4f60\u522b\u4e00\u4f1a\u7f29\u8fdb\u4e24\u4e2a\u7a7a\u683c\uff0c\u4e00\u4f1a\u7f29\u8fdb4\u4e2a\u7a7a\u683c\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230 name \u548c labels \u662f\u76f8\u540c\u7ea7\u522b\u7684\u7f29\u8fdb\uff0c\u6240\u4ee5 YAML \u5904\u7406\u5668\u5c31\u77e5\u9053\u4e86\u4ed6\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a Map\uff0c\u800c app \u662f labels \u7684\u503c\u662f\u56e0\u4e3a app \u7684\u7f29\u8fdb\u66f4\u5927\u3002 \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 YAML \u6587\u4ef6\u4e2d\u7edd\u5bf9\u4e0d\u8981\u4f7f\u7528 tab \u952e\u6765\u8fdb\u884c\u7f29\u8fdb\u3002 \u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u8f6c\u6362\u6210 JSON \u6587\u4ef6\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"Pod\" , \"metadata\" : { \"name\" : \"kube100-site\" , \"labels\" : { \"app\" : \"web\" } } } \u6216\u8bb8\u4f60\u5bf9\u4e0a\u9762\u7684 JSON \u6587\u4ef6\u66f4\u719f\u6089\uff0c\u4f46\u662f\u4f60\u4e0d\u5f97\u4e0d\u627f\u8ba4 YAML \u6587\u4ef6\u7684\u8bed\u4e49\u5316\u7a0b\u5ea6\u66f4\u9ad8\u5427\uff1f","title":"Maps"},{"location":"Foundation/YAML/#lists","text":"Lists\u5c31\u662f\u5217\u8868\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u6570\u7ec4\uff0c\u5728 YAML \u6587\u4ef6\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a args - Cat - Dog - Fish \u4f60\u53ef\u4ee5\u6709\u4efb\u4f55\u6570\u91cf\u7684\u9879\u5728\u5217\u8868\u4e2d\uff0c\u6bcf\u4e2a\u9879\u7684\u5b9a\u4e49\u4ee5\u7834\u6298\u53f7\uff08-\uff09\u5f00\u5934\u7684\uff0c\u4e0e\u7236\u5143\u7d20\u4e4b\u95f4\u53ef\u4ee5\u7f29\u8fdb\u4e5f\u53ef\u4ee5\u4e0d\u7f29\u8fdb\u3002\u5bf9\u5e94\u7684 JSON \u683c\u5f0f\u5982\u4e0b\uff1a { \"args\" : [ 'Ca t ' , 'Dog' , 'Fish' ] } \u5f53\u7136\uff0cLists \u7684\u5b50\u9879\u4e5f\u53ef\u4ee5\u662f Maps\uff0cMaps \u7684\u5b50\u9879\u4e5f\u53ef\u4ee5\u662f Lists \u5982\u4e0b\u6240\u793a\uff1a --- apiVersion : v1 kind : Pod metadata : name : ydzs-site labels : app : web spec : containers : - name : front-end image : nginx ports : - containerPort : 80 - name : flaskapp-demo image : cnych/flaskapp ports : - containerPort : 5000 \u6bd4\u5982\u8fd9\u4e2a YAML \u6587\u4ef6\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb containers \u7684 List \u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5b50\u9879\u90fd\u7531 name\u3001image\u3001ports \u7ec4\u6210\uff0c\u6bcf\u4e2a ports \u90fd\u6709\u4e00\u4e2a key \u4e3a containerPort \u7684 Map \u7ec4\u6210\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u6210\u5982\u4e0b JSON \u683c\u5f0f\u6587\u4ef6\uff1a { \"apiVersion\" : \"v1\" , \"kind\" : \"Pod\" , \"metadata\" : { \"name\" : \"ydzs-site\" , \"labels\" : { \"app\" : \"web\" } }, \"spec\" : { \"containers\" : [{ \"name\" : \"front-end\" , \"image\" : \"nginx\" , \"ports\" : [{ \"containerPort\" : \"80\" }] }, { \"name\" : \"flaskapp-demo\" , \"image\" : \"cnych/flaskapp\" , \"ports\" : [{ \"containerPort\" : \"5000\" }] }] } } \u662f\u4e0d\u662f\u89c9\u5f97\u7528 JSON \u683c\u5f0f\u7684\u8bdd\u6587\u4ef6\u660e\u663e\u6bd4 YAML \u6587\u4ef6\u66f4\u590d\u6742\u4e86\u5462\uff1f","title":"Lists"},{"location":"Foundation/YAML/#_2","text":"\u4e0a\u9762\u6211\u4eec\u4e86\u89e3\u4e86 YAML \u6587\u4ef6\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u73b0\u5728\u81f3\u5c11\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u7684\u7f16\u5199\u7684 YAML \u6587\u4ef6\u8bed\u6cd5\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u8981\u600e\u4e48\u7f16\u5199\u7b26\u5408 Kubernetes API \u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\u5462\uff1f\u6bd4\u5982\u6211\u4eec\u600e\u4e48\u77e5\u9053 Pod\u3001Deployment \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u6709\u54ea\u4e9b\u529f\u80fd\u3001\u6709\u54ea\u4e9b\u5b57\u6bb5\u5462\uff1f \u4e00\u4e9b\u7b80\u5355\u7684\u8d44\u6e90\u5bf9\u8c61\u6211\u4eec\u53ef\u80fd\u53ef\u4ee5\u51ed\u501f\u8bb0\u5fc6\u5199\u51fa\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u4f46\u662f Kubernetes \u53d1\u5c55\u4e5f\u975e\u5e38\u5feb\uff0c\u7248\u672c\u8fed\u4ee3\u4e5f\u5f88\u5feb\uff0c\u6bcf\u4e2a\u7248\u672c\u4e2d\u8d44\u6e90\u5bf9\u8c61\u53ef\u80fd\u53c8\u6709\u5f88\u591a\u53d8\u5316\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u529e\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u5230\u6709\u7684\u653e\u77e2\u5462\uff1f \u5b9e\u9645\u4e0a\u662f\u6709\u7684\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u67e5\u627e Kubernetes API \u6587\u6863\uff0c\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u662f v1.22.2 \u7248\u672c\u7684\u96c6\u7fa4\uff0c\u53ef\u4ee5\u901a\u8fc7\u5730\u5740 https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/ \u67e5\u627e\u5230\u5bf9\u5e94\u7684 API \u6587\u6863\uff0c\u5728\u8fd9\u4e2a\u6587\u6863\u4e2d\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u7684\u4e00\u4e9b\u5b57\u6bb5\u3002 \u6bd4\u5982\u6211\u4eec\u8981\u4e86\u89e3\u521b\u5efa\u4e00\u4e2a Deployment \u8d44\u6e90\u5bf9\u8c61\u9700\u8981\u54ea\u4e9b\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u5f00\u4e0a\u9762\u7684 API \u6587\u6863\u9875\u9762\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f\u627e\u5230 Deployment v1 apps \uff0c\u70b9\u51fb\u4e0b\u9762\u7684 Write Operations \uff0c\u7136\u540e\u70b9\u51fb Create \uff0c\u7136\u540e\u6211\u4eec\u67e5\u627e\u5230\u521b\u5efa Deployment \u9700\u8981\u63d0\u4ea4\u7684 Body \u53c2\u6570 \u7136\u540e\u70b9\u51fb Body\uff0c\u8fdb\u5165\u5230\u53c2\u6570\u8be6\u60c5\u9875\uff1a \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa Deployment \u9700\u8981\u7684\u4e00\u4e9b\u5b57\u6bb5\u4e86\uff0c\u6bd4\u5982 apiVersion\u3001kind\u3001metadata\u3001spec \u7b49\uff0c\u800c\u4e14\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u5bf9\u5e94\u7684\u6587\u6863\u8bf4\u660e\uff0c\u6bd4\u5982\u6211\u4eec\u50cf\u8981\u4e86\u89e3 DeploymentSpec \u4e0b\u9762\u6709\u54ea\u4e9b\u5b57\u6bb5\uff0c\u7ee7\u7eed\u70b9\u51fb\u8fdb\u53bb\u67e5\u770b\u5c31\u884c\uff1a \u6bcf\u4e2a\u5b57\u6bb5\u5177\u4f53\u4ec0\u4e48\u542b\u4e49\u4ee5\u53ca\u6bcf\u4e2a\u5b57\u6bb5\u4e0b\u9762\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u5b57\u6bb5\u90fd\u53ef\u4ee5\u8fd9\u6837\u53bb\u8ffd\u6eaf\u3002 \u4f46\u662f\u5982\u679c\u5e73\u65f6\u6211\u4eec\u7f16\u5199\u8d44\u6e90\u6e05\u5355\u7684\u65f6\u5019\u90fd\u8fd9\u6837\u53bb\u67e5\u627e\u6587\u6863\u52bf\u5fc5\u4f1a\u6548\u7387\u4f4e\u4e0b\uff0cKubernetes \u4e5f\u8003\u8651\u5230\u4e86\u8fd9\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 kubectl \u547d\u4ee4\u884c\u5de5\u5177\u6765\u83b7\u53d6\u8fd9\u4e9b\u5b57\u6bb5\u4fe1\u606f\uff0c\u540c\u6837\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u83b7\u53d6 Deployment \u7684\u5b57\u6bb5\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain \u547d\u4ee4\u6765\u4e86\u89e3\uff1a $ kubectl explain deployment KIND: Deployment VERSION: apps/v1 DESCRIPTION: Deployment enables declarative updates for Pods and ReplicaSets. FIELDS: apiVersion <string> APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources kind <string> Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds metadata <Object> Standard object metadata. spec <Object> Specification of the desired behavior of the Deployment. status <Object> Most recently observed status of the Deployment. \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4fe1\u606f\u548c\u6211\u4eec\u5728 API \u6587\u6863\u4e2d\u67e5\u770b\u5230\u7684\u57fa\u672c\u4e00\u81f4\uff0c\u6bd4\u5982\u6211\u4eec\u770b\u5230\u5176\u4e2d spec \u5b57\u6bb5\u662f\u4e00\u4e2a <Object> \u7c7b\u578b\u7684\uff0c\u8bc1\u660e\u8be5\u5b57\u6bb5\u4e0b\u9762\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u53bb\u67e5\u770b\u8fd9\u4e2a\u5b57\u6bb5\u4e0b\u9762\u7684\u8be6\u7ec6\u4fe1\u606f\uff1a $ kubectl explain deployment.spec KIND: Deployment VERSION: apps/v1 RESOURCE: spec <Object> DESCRIPTION: Specification of the desired behavior of the Deployment. DeploymentSpec is the specification of the desired behavior of the Deployment. FIELDS: minReadySeconds <integer> Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 ( pod will be considered available as soon as it is ready ) paused <boolean> Indicates that the deployment is paused. progressDeadlineSeconds <integer> The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s. replicas <integer> Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1 . revisionHistoryLimit <integer> The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10 . selector <Object> -required- Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template ' s labels. strategy <Object> The deployment strategy to use to replace existing pods with new ones. template <Object> -required- Template describes the pods that will be created. \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u663e\u793a\u7684\u662f required \uff0c\u8fd9\u5c31\u8bc1\u660e\u8be5\u81ea\u52a8\u662f\u5fc5\u586b\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u65f6\u5019\u5fc5\u987b\u58f0\u660e\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u4e5f\u90fd\u5b8c\u5168\u4e3a\u6211\u4eec\u8fdb\u884c\u4e86\u8bf4\u660e\uff0c\u6240\u4ee5\u6709\u4e86 kubectl explain \u8fd9\u4e2a\u547d\u4ee4\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u4e0d\u719f\u6089\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u6e05\u5355\u8bf4\u660e\u4e86\uff0c\u8fd9\u4e2a\u547d\u4ee4\u6211\u4eec\u4e5f\u662f\u5fc5\u987b\u8981\u8bb0\u4f4f\u7684\uff0c\u4f1a\u5728\u4ee5\u540e\u7684\u5de5\u4f5c\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u5f88\u5927\u7684\u5e2e\u52a9\u3002","title":"\u5982\u4f55\u7f16\u5199\u8d44\u6e90\u6e05\u5355"},{"location":"Foundation/kubernetes/","text":"Abstract \u00b6 Kubernetes \u2013 A container orchestrator that works with multiple container runtimes, including containerd. Kubernetes is focused on deploying containers in aggregate across one or more physical \u201cnodes.\u201d Historically, Kubernetes was tied to Docker. Architecture \u00b6 The Control plane \u00b6 On the left, you\u2019ve got the control plane , which lives across multiple nodes. \u201cControl plane\u201d is a pretty broad term to describe the components that manage the cluster. It includes things like the Kubernetes API Server (which you interact with when you use kubectl ), and Etcd (which is the data store that holds the desired state of the cluster). The nodes \u00b6 The nodes are the worker machines which run your Pods and their containers. On each node, the Kubelet is a clever daemon that manages the containers running on that node, and reports back their status to the control plane. You want to learn more about Kubernetes, check out the components page on the official Kubernetes on the website.","title":"k8s"},{"location":"Foundation/kubernetes/#abstract","text":"Kubernetes \u2013 A container orchestrator that works with multiple container runtimes, including containerd. Kubernetes is focused on deploying containers in aggregate across one or more physical \u201cnodes.\u201d Historically, Kubernetes was tied to Docker.","title":"Abstract"},{"location":"Foundation/kubernetes/#architecture","text":"","title":"Architecture"},{"location":"Foundation/kubernetes/#the-control-plane","text":"On the left, you\u2019ve got the control plane , which lives across multiple nodes. \u201cControl plane\u201d is a pretty broad term to describe the components that manage the cluster. It includes things like the Kubernetes API Server (which you interact with when you use kubectl ), and Etcd (which is the data store that holds the desired state of the cluster).","title":"The Control plane"},{"location":"Foundation/kubernetes/#the-nodes","text":"The nodes are the worker machines which run your Pods and their containers. On each node, the Kubelet is a clever daemon that manages the containers running on that node, and reports back their status to the control plane. You want to learn more about Kubernetes, check out the components page on the official Kubernetes on the website.","title":"The nodes"}]}